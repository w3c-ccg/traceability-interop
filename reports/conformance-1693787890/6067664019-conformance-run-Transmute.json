{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "696b49c1-0d52-4269-a8ee-7d18018a5a40",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c83e7204-5f10-41d2-bf27-bd36aa551294",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e83abff-95aa-4f78-a71e-7db2a0daf4db",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c9fe75c4-8573-4cae-a49d-5fc62e056ad4"
                }
              }
            ]
          },
          {
            "id": "26ff1242-6719-4730-b8f2-41588e359ae4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fd1eb685-1ea1-4df7-8491-62df70c71a9c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "11372624-5ad0-4a15-94a6-aff3ba95f17a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bbc4ed69-53e4-4ac8-b20c-87da034c8c75",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e20909de-56ea-4579-a2c6-d544b469b5e8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5a653279-ddf3-41f6-8edd-5089bb808131",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e92da9f-d979-444c-b14c-dba16e9a2898",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adf81825-564e-44a2-b01d-fc7adfb39b07"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1efe337-e85e-42fa-a758-aeb5d2c9d6a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf2feb08-199e-40d5-b551-20dc1745e13a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e34407f8-3173-4d11-a090-3d5a3eb0d5a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab8c2387-5a75-44c9-aadb-d1057fd36b72"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "967c3ba5-737c-4044-aa82-4f5f1d64384c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "df7c53da-a9a5-4d92-9b34-2278517b8679"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95c6bc67-b20a-48fc-8e49-418397f597f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c87bb999-6649-433f-b851-586ff7b5ce32"
            }
          }
        ]
      },
      {
        "id": "aa9b2e56-8f31-40dc-b1f1-2880ea2213f8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "47f03185-8bca-4db7-a3d1-100b749ebd65",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61ea997d-a10d-4aa4-b342-51d5af1bf200",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eef70635-ae38-499a-b343-99ce43dfaefb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c8ce83-722d-4bf9-8c38-0cf1d0d31bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edce3868-6a7e-4cb2-aec0-75e422ac9917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3a5f42-d589-4141-8655-26ed79444783",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f6f0e5-f066-43dc-b59a-71b378f60077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b1757f8-2b98-46eb-94ac-28de87f6f932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de73613-5d42-44aa-bb37-df626d83dd12",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ac981a-3320-4834-b34f-ef68640fa3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4530429d-2247-4e43-830e-cb92b40e31bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22629804-2aa7-4d28-8f9f-6ef7fc36ff2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b524786-c549-4b13-ae00-9a0702896aab",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c296975e-5866-437a-8eb1-8ed6ec871e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c79aba1-c2e1-4fc3-8eaf-d8905b009556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6d8c92-e97e-4697-b8cd-bf8f183ae1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c835d1a-f592-48ac-9047-56dcaa9668a1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "304ab61c-683a-453e-9b7c-470d4a80bb3d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73d3cdd3-2cc8-49dd-906d-8a406f69b6ba",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd77314f-c681-446b-ae4f-5211c5a4db02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "37204956-71e0-45e6-9a43-55816103c492"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1e4babe-5d32-49e5-9f0a-93b0c5471904",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "63c23145-8c58-4518-810f-8ed53ffe826b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "771ae7c1-6b31-4c94-ad9c-9b183f916f79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae5bf5c9-2162-451a-b179-5843e779b325"
            }
          }
        ]
      },
      {
        "id": "fb675938-8cc3-4281-941d-b2d933c0e753",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "53ae49b9-628e-4640-adc9-fadee5b19d5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c968e7c5-65b6-420a-bf3f-93a12d9398e4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c64a7a77-cb41-4330-b8e3-18f0c9d2222b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3abe5b5-aacc-41df-ac26-7a6093482505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef27e49-2046-4175-8443-b936b81f36bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fce7da-d6b8-41f0-905a-baada3eed3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33cf0b05-6d32-4604-a0f6-d2465e72449c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de64dfd-a5b8-4158-b098-3f073226df25",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfd59d7-0f8f-42da-a973-80b9bda7b4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eeb4255-327b-4b68-9a07-9437c56c6bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c7a965-be8b-4a0f-b8bb-6bedf0a43c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f6788fd-ba5e-49be-a3b8-d5970ca1cd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e68ffd-73b6-4340-be38-c0c9670f97f7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3978a3-851b-43c6-91b1-76a2b4427252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e933daf8-cb3a-4eb1-8a4b-ecdfbeff37ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4600a397-aa5a-4693-8336-18404a51d952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cfdb615-8aec-4663-891b-fceaf0711e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bef8eb9-1f59-49a2-8f51-fa7d9bc01439",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073abcd4-7e10-48ad-ac4f-dcde71d56921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7c8527-f1ad-4fca-9b70-1ac0cd986fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d354d03d-a5c1-4a2d-8f3b-4bd86b668087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84975c0c-19c2-4fe3-ba94-6a57c2d02bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a85e99-0407-4435-8435-8a179c30590c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a420a47-b83e-4f80-b955-f91bab59d7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0581ea-2fd6-490d-bcfb-68786c5f99b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9b815e-121b-432f-9668-468455434ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8683298-2700-4fde-a6fd-dc48d252e909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9922d897-5b8a-4231-81a2-701efab99c14",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d328c74-8e58-4df8-9202-a0a8023f26dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2396d42-019f-4e02-a3c5-1c61680acb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae58189-57b0-49b5-9db0-059725930754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1de21a55-6f01-49b0-86ae-ed5346f43c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e360458-a1c0-4730-aeed-ebd879825e71",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacb4448-c334-4f76-9023-443158c8e390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a5b859-57e3-4524-9e63-6d709ad298c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec4b19a-81b2-482a-982b-5e3b2a3d4781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e435c17e-9b06-4ebd-b8ab-2477185dc86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20baabb-396c-44a8-a389-b94a4a22f27b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d130ac8-9997-4c1a-860c-4785e62a7dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff47c8ec-14ef-404a-aecf-e0539ed1f78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b81656-d081-494f-9c7e-f17a48b12403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7245213-5e67-4357-a1f6-6e548d87c3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27f9fbe-08ef-4966-aeb9-65c52eb945d2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d073b78a-9b76-4c98-b9d6-2ae98e01acaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8ffceb-9d49-4817-8f4b-609317c1518b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b691e73-4088-44d0-ba32-471fc0fe0cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6146b860-6d23-4b3f-82d6-294fa891f921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a43d407-44f1-47f1-911a-99b74b23c3de",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630577b1-a28b-4f4b-b63d-159522527456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9e639f-8d8b-4097-a13b-f67f9f1d19a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d912a4a-64ed-4684-baa3-eddbb1730f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a786629-bdf1-4fa5-ab0e-1109beb57913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2a3beb-0776-44ae-9fb9-38d765214064",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711047ad-1ad0-4ecc-90f1-b23d502e21b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19314011-c6f7-4ae4-bb2d-1c02f96fc5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806176ba-e8c9-42ef-ba71-5bfa0686d41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df874bba-b079-4810-ac07-12c12900f34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6234b93-ab8c-4822-ac74-42a507b0a0ab",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2546044d-f2b6-4796-a1db-31a507f3db21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5fae4d-c36a-4dc9-a8d2-9bd53fc73166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbedee09-8dd7-4b6c-a6bf-51d8fea03035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2510d2f4-4ce7-4612-8c00-52884b2c01dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10499ea-db39-435c-8c95-e86c3b572141",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe8d02e-258a-42b9-8ca8-a2865dd257ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9930179-a347-4f96-b6e0-3783b9845ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1870d06-e01c-4d33-b91e-a2d9fbc8cde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80e6c94d-c2ec-4a9c-b4a1-0353426f7638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f53f375-b1b0-4f4f-b77f-4c6389540fd1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9335248-851b-4e63-b7ab-eb7381e29718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586b4793-2211-4953-91ac-f67c8e8cec5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd7547a-5158-4993-9245-4d55a363f0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "371cba4c-df84-4c8d-b6be-b9c2b21af0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eaf9790-b054-485b-9aa2-094a217b73f7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a51a3d-b261-40a9-8eaa-c02e0b26622a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1b6781-d72a-4f54-b395-ce58d6f77e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5364a1c4-0cd5-4077-a64a-47cce4224d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f2bf72a-9a9c-4921-a18e-5310a68468e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a06e0d-f795-44b9-a544-2819142733b2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1de0cc8-d9e9-4b5b-9e82-9e4b2a7e3fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c513072-d4a8-473a-8662-d05ccfd0c111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c054fd-1b57-4bfa-a653-5c0ba348db72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5eed4d06-0c88-4982-86e8-6a797e2b894c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f64e08-2bcf-44ff-8b6f-992bec9f8797",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5c30f9-33f3-432e-99f2-6cd2e5e3a384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64df4cf-790b-4050-9369-68bd6ed96a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055fa8e8-7dcd-42a5-9b2a-97a9bc021c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4c00882-d583-49ce-bc2a-e3dceb2813a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95babb9c-5af2-439b-933c-b3c5b379a7ed",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce2de8d-0905-40c2-a876-48e795fc0c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d6ced4-48d1-41e3-971c-f079d0e8bbb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500d34eb-9259-4e65-971d-d3923dd9c03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d321f5-6e3e-41cb-bae4-e9c118423b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d344436d-1cc3-4827-a38e-347d8cb316a9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e628547f-b021-4de5-9d09-aa9aed4771ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b67666-9277-437d-bf51-4d0d0719edd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72f4c13-824a-46df-b3b2-4cac94189324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40ff09e9-1516-4238-8879-913cd178c0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf28950-d08a-4b55-a726-de34d6dbedd9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870ef3a0-9310-405b-b79f-472482a54e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd45e04-e7ab-41bd-a247-26004d9990c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16a0e8f-cacd-4245-8fcd-9e62015df5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40a44e21-de30-457c-8f29-eea7b75b1f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067ff311-02f2-4831-a7bb-ead3de8b0069",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d3a5b9-f7b7-4771-be43-f29fdacfdbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0ea209-a065-40de-b900-ac9d393d6bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd05fb0-4156-407d-9ce5-d3490e3cb6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e7f48b-ca0e-4402-8cfb-7e1bf5be8e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6e742f-703d-407d-8b4c-7b7d6ec47c1f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b520a37-90c9-4323-b916-216cb3dd72c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1e16ed-5dbd-4126-9006-b9132ce5ece2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7419997-f93e-48b9-9b68-e80912688095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d740386c-94ac-4b3b-959d-7f6e88630f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d682141d-b0b4-4db7-bb51-e813544dd337",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354175fc-edd0-4e1e-a4a0-319c1eb978c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b79cb5-e0d9-49da-9cc7-784f8bc93547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19ed572-b4d9-4790-96df-2926708455b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28b40d32-1e4f-4fa8-8605-f6a2027a46fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf577fc-466e-4eba-b5f4-a62317e314f3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b386e600-9193-4629-bca2-1164bf541812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c091163b-34af-475e-bd10-33afbbd313d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9449ddb-6d80-4cbd-852a-93908b1f14a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dadc508-a763-4445-9532-b21a4d2a3c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e1edcd-15f2-4e84-bee2-1c5d5293de43",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365f6a9a-d11e-4738-89f4-b17bf61b47cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd174d2b-501f-4d8c-9fa7-f9493c95379c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f7a7a5-4a49-44a7-b2eb-cfb9625032f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d91547a-8fd2-47bf-a505-0f13aecef936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268ac68f-9ace-4ab0-95ab-f96b45e37075",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b67bb51-9f52-40d7-92a9-60e125292843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2891460e-2915-418d-b625-8a13086b2be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a42e61d-3d05-4bab-bc9f-e5cba6413759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "179ab2ac-6895-4395-9e65-fe6cc3e11e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6325e7d4-4b20-4ce3-8fe9-9136f3f9a813",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f5dfaf-368c-45db-8abc-6e74d785827a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7eaada7-af2e-48af-bf1f-c38401d0eac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02082ed-32e6-48f2-858a-26399a5e4863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce02d34b-a4d7-458d-9243-b3e663aa871b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e769ef-4a92-48af-8325-737e52da9f55",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a3fece-607a-45b2-8b91-8b3730ff7a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39906342-aa3d-4f3e-a047-918050764ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b186dc90-f232-4bf1-8124-5a01a628844c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc872738-382d-4b5f-afc6-3c0891c1f188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c0b8d2-66c1-40c1-9cc9-0b9c986f0988",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3002af-24a9-451a-9642-0917d729c759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3707e6-0174-4012-94d4-55a7d0c9d21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05ac4d5-7c92-4575-a2ae-edb23895c5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ce15ff-dfe7-4cec-ba43-fcf76407ec2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd8a594-fea6-4483-b3b6-78c9b22c69ce",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f09743-780c-4810-9dd3-7628aabe7d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a28e34-5b1f-4400-89e5-1748537b4ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a750f561-206c-4535-bc2b-d6842523c14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e22dc9a9-b981-48f9-bbfe-ec2cc2dfa0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026e8acb-5c4d-4119-b6e8-9d77be8f4b5f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd283491-20e8-40f8-a2d9-1443eeb693e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656ad573-1204-4df4-9dd4-e80d2062377c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87949f94-eb86-43d1-90b1-6d13a1b1ad83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45d6d4a3-206a-4de4-adaa-40cbbfadab0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a55dc20-2781-4ffd-9eba-121ed557e42d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2b4a22-6e4c-4872-a498-9c93a176c2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45a14d1-cb62-4b15-bcc3-21f39e79fab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4167ed88-ff12-488c-a99f-16d2e0912757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4192c3-6d56-407a-8d17-297bae091d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49cdb12-5647-46e8-ad25-622afd1f1d95",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485384f1-8600-42ce-963e-8313924ec7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fddd6b1-ed4c-4bf5-9cc0-38d595e75b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7120b8-c9b6-426d-af68-385ebc7eb8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e302f67e-b8a0-451c-a074-844929c63eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8946311e-bb64-490c-9d92-a55d47e49ee7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea285777-1a0d-48e5-ac80-9e28311a571c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d74e86d-f359-4ea7-95cf-4cce179d3b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45516e7-1886-47b4-af8c-78a26ec9649f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a66cffa9-1203-4e28-83d0-b040ea7d9eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b8474f-7d90-4063-a105-e12b5637986e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bc4d6f-6b61-4309-a5f5-52951a90f5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19edbcce-4eb4-400f-b5e9-eaaf51188d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b12327-9b56-4aa4-95e2-71929168f34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8096762f-191b-4145-aaff-8aa40b232d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c3a9ff-acd4-4154-b9fa-7f54323bb1ff",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cc352b-9cc2-4643-82ad-4ac045fff7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89f616d0-1bd9-4d15-9062-aa9154ff466c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2039d29-cb73-4f4e-bce4-01ca4c43d5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee7ceb2-d291-4543-ba14-e3bf1cc4e697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215ddf19-6189-4661-bf4a-9e9a6b07788f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f598c7-6c0f-4402-af68-53671785e294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2383fd-cdb1-4f82-a8ed-5be1084fd45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe6a0fb-2c82-4aa8-a7f1-f6f3ddb7a060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eea30815-d9db-4ab1-8f47-c006810ba7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a26073-0651-4370-9348-70c3e2571da4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceaba7c0-6dfb-451d-b618-c093276a59bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf91f0d-e64f-43f7-8498-43f9cf3b166d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555fd836-f173-4174-82ff-7ac1b19b6ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2eeb5760-13ae-4416-9f73-5414a999e1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff8384b-a174-4573-b922-b221127e5e99",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dd2dee-837c-44e0-950d-de3254fca3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095e5887-73ef-4a9a-aa8d-effacf8446fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f04b52-e7ff-4727-9daa-f6948b889e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e52b09-67b5-4a5b-99fc-2768bd56a7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f1ca29-a16d-4ee9-97e0-fc834d5f412a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6418db-5e1a-4a9a-81b2-903cd8f65d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40222857-34ae-4960-a610-f12ab91d82de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5531b1-9b42-4351-beeb-c6caa7c9d5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfee49fd-ec3b-4ae3-b87d-f67b810bf4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d16692-516c-49af-8564-7158bae00213",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71c2707-e811-4d65-b14d-8217bce368ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60559b5b-c253-4edc-9576-4bf6f6c84856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4f576d-1294-4930-b559-2c1bc12baa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb281cff-1646-4c80-a4ba-8ef860953e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53601ccb-61fb-48c3-8011-e6324503d871",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf254e27-3ca8-463e-98fb-15751a3e6828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65cdfbe-9ae1-4b39-897b-24ce6e760a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3d472d-f719-45ef-9f0c-a77c86941baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c3657413-a380-499c-80a6-3a7a05b9dd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af51fb0-cbd7-4578-81d4-33ac80cc8b7e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8797f988-5616-4cf2-a31f-0eeab0a0f5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc0985e-dd3e-44aa-a971-61f2b6167d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f57a48c-779d-4d08-86a6-f6ceedc06fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "932a4189-ea13-4084-8589-a26cd1fe5baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b57687e-99ea-4ae9-a22f-321fb0a921cd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeff6081-062b-474d-8885-d22612e46a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b37dfb-5ffd-4bae-9304-e4e8c579effa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1748133f-29b0-4833-98e0-c1a9d5e9ae85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a46daf7-8316-4996-9ef1-cb21452d7a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef5feea-04f2-4bd4-a6db-552a95e0c3fc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d34b10f-14ab-49a7-8d21-f947955c510d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b79a465-5154-4385-a8c6-8b1f1a111cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458d01d0-3f45-466f-bdb9-3da10975800e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49494f08-8929-4ed5-890d-57c6c4352a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6843fc83-751d-446e-9da3-e7d6355807ca",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f1747c-140b-430b-858f-d87b13cb6997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c21d82b-7033-492f-95ba-4d1d7ed9a704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bf0674-c406-4da3-8e5e-ebe12ec9cda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "157372a7-e189-447a-9c3b-e49c4ff0d7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bf23f0-ef45-4e87-8f42-bbf96f89f6cf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd5e239-370b-478f-a95b-4a3679b1a752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1d257e-9972-480c-a71d-090326732fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3754cf75-ff26-4fe5-8719-963750a466d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd2516c-002c-4739-9142-18077cfca2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e5ae05-032b-4e1a-9f3a-02db995956dc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80a4aa9-74d7-4605-bb16-881a9e6e24d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1fe6ae-5f11-4071-b432-5579412281e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c945c8-c90d-4cfa-a956-e8347d0309b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc33f293-d974-403d-90a0-fb296dab27ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d236b9-efd2-401e-af84-6f643c12972c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2bfaae-0d5d-4ba2-9333-70eb6b5039d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35dc0939-507c-4375-a9df-18fb6868d84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdea95ec-a742-48f0-8307-13194abd2d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1ee59e-bd3f-43c0-bfe6-8715950e4b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c4192a-468f-4c33-84aa-6183a18ac262",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03870d83-bc2d-47dc-99cf-c3739aeecbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4383e9-eb26-4ac6-826b-7c0739230550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a04504-6b59-4825-9f11-1c8163442236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15ac90a4-1c0b-45ea-830c-6dbbd057c0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdf5445-ceb8-40c2-ac65-ebc1c8811b71",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ae548d-bc2e-42a9-8a8c-ecad59debf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e43fef6-ed53-40b7-b306-56a6ea74b2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632fe70d-c332-42da-9eb1-647d83ca8c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d42c7d0-7b6c-4a1c-9419-13499fd6275d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfea1a40-2b03-4e50-95a1-9638fc8b2e9e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff71f13e-978e-4eec-bcb0-3a9aa7b0ea55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870aada8-7569-46cc-9bd7-fd99feef199b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f9fa99-527d-4262-ad19-76bb83276728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "86abc891-4c93-4bd4-b985-9d96e1a4a515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fce908c-c0fd-42b3-abb4-fd1eaa99ad0a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26389973-5cd7-4025-be82-75a47e234d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c5ada7-2686-4a13-9e4d-b7baa1c11b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6076d1f-20ce-4443-9767-7f084236905f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "945edd64-5750-4480-8541-89e333c57c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afad5366-3cd0-4530-8ab0-33f87e87f4c5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef988a1-4a66-4ac0-8578-e696b2feaabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d8691c-3682-4e8a-919c-8a76942fb5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8e7ba5-2906-418d-90fa-299b77bf0021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca3553c-d90f-47f3-9b83-5530d5a2a958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51d14b0-1d2a-4871-8836-a64aff4e7ace",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ef16c9-768f-4f02-bfcc-18adba7e96a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60175227-3a9d-47bb-86fb-9fbab99291fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ea4ff9-c6f7-4ba0-bd32-7c91787ca1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "813e1007-77db-4154-928f-b3ff7c5c8d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956d0238-977b-4e74-a54f-c8f62d3c37cd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1784529d-677c-4fd8-b19c-2603184c4f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1a90c7-bafa-4761-afd6-dbd6a94199df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63276be0-7458-4c2b-9cf7-abcfa06b7268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6075f676-5e6e-4dfa-961d-c6fce399b20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5043e255-24f3-475f-a24b-03b6ca11bc8c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a49aad-9999-44b0-b6a3-891d2a41cbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1555d9a6-1e40-4bac-9399-0b40785ff2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956f9815-fddc-4621-84b8-87f3b28dd429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf5e4ed-1a33-4183-9c94-d14d44e43949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b8b917-4e48-4b08-80b2-046b826c857f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad10c42b-bc23-41d6-9d11-613fdb630bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8b587b-957b-4e52-95df-61be8e7b10ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bd0907-3aea-43ff-a9f2-e8ff142e7f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3c2430-e46b-4816-b62f-4332b41e810e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06025a5f-9086-4cbd-ae55-7eba059967dd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190c79cc-5c55-4a9a-b5d3-f5d71ce89eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9282b0ba-c966-4efe-a523-d166cb8842b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d865a7fd-8edf-4211-a4bc-b60218666ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "efb3b273-09b8-4dec-bcf4-d121806d5516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a765c82-8660-469d-a6dd-893761b32ba8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8a6633-892b-49d2-afb5-d039d5c98063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b84f0f-5bb1-4506-8099-46fe80670c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fd49cc-44bb-4a5c-8e63-ecf675e16d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a7437b-7ae3-48f0-8c23-c15c04d9049b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62acb717-d54e-4e12-890c-6b3f89f9e07c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef0e5aa-b535-4f7e-9e03-b9cd63bb4857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67bf256-4030-401e-a1bb-e7f957bf7dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99d5e94-7557-407c-bd5c-0aa9b03f0dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5acefb-1d62-4ba2-8cdc-1ce42442391c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d57db2-f154-4c49-843e-ebbfeaeae6d3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e25a0a8-cd0e-4c7a-b924-c61e436338f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55b6490-fc2e-4108-b4cf-b19ee881a9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37dd11e-8a90-4b5c-8187-ff7fb073e78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cca53d02-4ae7-43f0-822d-e9258fc80d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499c973d-b948-4ba9-b9e3-96202e76955e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d81830f-2ea6-4469-8708-9d0fe0b14325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d1b0bd-bffa-4965-a5b0-6d8550a9db6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bcf671-4a4e-48fe-88e9-dc04232a2417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3374ae3a-c254-4708-a3fa-1dcfe8a791d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29125cf4-da0a-4af0-83c4-2e19195cbb1f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c9e4e9-1b21-4354-85be-47cfd8e48b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e8f884-4cb5-4a68-a829-741f74ce14c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7559f912-252c-4ba7-afc5-cff7617ab00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d00aa7d-48a3-4a88-b210-ef01fb5bed67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede0fc5c-b02f-4432-a900-d6a66a10abdf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f903a2d-0090-40c0-bf51-e5190af857ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27752c72-4b9f-4ae5-b9f0-28f47c5f1016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751fefa4-066b-41a3-b30f-d35e9a2e83eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9661ff0f-d2ee-47a3-8f86-7bc826b31a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963abd26-3f88-4251-9261-6ecf69bf8af8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab87e8c1-3f17-482b-b7d4-9adb54b06e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3dbc864-b043-426f-8d89-0b1c3dadaaf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0c957f-390c-450e-b194-d9f109f02c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1443a46-3523-4d48-8e0e-d7c18f6bc91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93124b49-64b7-44b6-91bd-f487643a78fb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c264a0-69d3-46ba-a790-8f7d7504b58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ad1520-29bd-412d-a0ec-828422f9499b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8dc8b2-2ad0-400b-9abe-6970d7f1c8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bad45477-d214-4230-bd15-bf6b91a49cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91927b48-6271-4b23-bfd5-5fdcf83e8bbb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a101f61f-ec0b-4497-84df-36902d04d5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e42fde3-7c99-4763-8623-bf596aaaafe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5032c0-1635-423d-8ff8-a75466dcc245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "58c9e8e2-09ca-4bae-a603-3da436013c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06893f8f-5666-4fdf-93c0-6edcb9b73f5d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0143dc25-cf35-4aa2-bcde-61e4b1a9fc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2feb176-5d79-4928-9b5a-3a20225e451d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5539f2-3c67-4c32-ab87-edae6f77c1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c534e778-aed2-439e-b37c-67b99978a9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ffadae-b4c4-4fc9-87cd-89e2f87b553e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f07fb43-836d-4168-838e-5dc073702103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb997fb-1c45-4132-a35b-660ba5b0fba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3a0886-d98e-483c-8e99-9ee3f6a606f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9831e0-8900-40f9-aa81-7f24fbb36522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f088f49-5d04-4bc4-8705-657ad180ee20",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ed94f6-fc83-4a2d-81ef-9dbab44b728e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b42909-df66-49c5-9e88-1177ba687f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248063d9-240a-4dbf-a499-bd23f9dcce4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc9707f-4c89-48e5-84bb-91f20829fbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd33c78d-98f8-4bf1-82dc-665c5678ab45",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c16b10-b2ac-4273-84fd-6a423eef8836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798f412f-605c-44af-84b6-ab03f3926083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbe0697-de7e-4e69-a846-41239bcb4cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb69fdd-aa06-4904-ad6c-9a7dcc87c293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebad913-7660-4558-9fb0-006dc6595eae",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de926ca6-e138-40cc-9ad4-b4c177d34069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed17a402-e6b0-4882-bef7-bd65de2cdcd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319a4dd8-f465-4233-822e-d8c580e4a7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "953330cb-7692-4f7b-99d4-2c0e8871f6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7ff8bd-b75b-4697-8eed-6c76338d46bc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b775e06-9611-447b-9e37-9f03b67aba32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b0f54a-6790-4af1-bd27-dd162c96e240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5021b02e-1ae2-4e63-bbee-07e318a4eeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85438ae2-0c7d-40df-b624-7b27227825ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3730f431-1ee6-4afd-9707-9c7903f9820f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc17109-e67c-49de-984d-4477d545548a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12dc2538-642b-4a80-ae64-2ff501e86814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3653ca9-4b71-4df6-a115-698c000c5dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e961258-74b9-4a67-8ea5-e67604869527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c078c9d-b2e9-4a07-8e57-73f2b202bf22",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5587103b-5046-4f88-a062-08a46e45e497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be22036-5089-487a-9e0c-02902b006539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cbd4b4-d04f-4843-965f-d88532cd32c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf4a1a2-9d0a-462f-9b0a-835875c3e15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45f9561-ba05-4c30-90a8-50ab98a0178e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51442fe2-e8e2-4479-b5de-ae2b5c533806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4965717a-7a78-4f12-a421-d3d1031e6b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b894108-0ffd-4f49-badd-ad53bb9d71fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10a8d63a-0d4e-4088-8e0a-0f02dae68aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e2f0a9-dacd-4542-8f04-a614b2d7fd7c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3e6b58-964e-4fa4-9b55-6e3182e2d817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed763690-512f-4ab9-9621-7eeab60a1fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c1e6c4-f709-4a3d-9943-8b5526b9a07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74cf7ef5-358a-4a41-bb14-5c08b16de617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5305af4e-a096-4ea4-a108-7f7e5af0c1c2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a80657-f4cc-48a1-bc37-779605bd639d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db64dbb-dd73-41d1-97c3-6503082cb3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f407cd-ae8f-4304-b8dc-2e5a10853929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc00d45-10c9-4c05-b99e-6eff19b8a5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce6cc4c-40a1-4394-a18d-c806470ba4a7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9364bfdd-fc7b-4e71-a40e-07466dbc0280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c769c025-9851-4c9e-9ea3-e7bb314ebb22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081de85b-44dd-4cab-86ac-913c046c8c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b13d7997-50f5-4a37-998d-bdfce23e0a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3d7c94-7dec-42e3-9b0c-7df421e0fc9e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cc5818-96a2-4174-affa-128b26f3cd36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02092ce-e990-4ed1-b1b7-7f03accfb725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8844ae1-e786-40b0-a98c-a046ceb20784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1354f39b-b4d5-4660-91d9-3e428bf54409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d802c28-841d-40f9-ada6-8674129b7e98",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930fa188-2481-4226-a436-c853984eddd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9a7d4a-1aa7-47fa-b0f8-eefceb1f6743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bf5c26-000a-4f73-971d-a1068fba9597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "590c3d0a-c4ef-44ce-9275-09f7b9f5c2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1aab2e-6ac7-458b-b029-e91beab63c1f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fc2164-af6a-439b-9de1-ce32055a3cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4721c9-9145-420a-8a94-8d9cc4e07350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff06ba2-adf6-4fe6-9310-d329cd384cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcac5683-fd43-49e0-b36f-4e54ae3b4975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abafe465-20bd-4678-ac18-13ca24e8ae6c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912f3ae5-841b-49df-9c42-f8e479afb6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2246839f-37c5-4d0e-8721-742835019f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c683c4de-64cd-4aeb-b846-82ac79477e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14f4c61e-094e-43e6-bfde-d307f4114599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f24ae46-6358-42ba-a513-aef7b7aa7b27",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338ddb2f-a3b7-4f64-9491-fa826e4af278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8582c5e3-db89-4cad-959d-4706c5803c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a933102-ab8e-487a-b47d-86978e84ea46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36c4ff39-ce83-4587-937e-c2377284f571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0875048-346b-46cc-97d0-5a6a8371f66c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c363120-322e-4d06-93bb-d4895512f9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a2a703-7ccf-450e-893a-4a73a110a205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cb7501-42a8-4017-bd9a-f7d0c0cc6927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f51e87a-095c-4cbc-b7e4-025f849a3dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d78b40-2dba-489c-b748-0d6d9e331cf4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fc827d-272c-4d62-b207-8af69eb7a050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f211cf8-60e0-41a5-b638-88b830605604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f382357a-ef3e-481c-9843-ad1122d12336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e96b4db-03a9-4385-9384-1a876f07f2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04b6eb5-8dad-499e-bba5-f77825da252f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc07d1bc-a1ef-4307-b682-93be36f3bc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48486b7a-b20a-4fae-a262-71cf793b5917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e288fb4-aa0a-426f-b381-2214ba9d0309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "30b9805a-e29c-458e-884f-2ef73b931265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0742a4-3b03-4fc8-8433-f45373d3252c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7b5e8f-f06c-4c38-849f-b80186299330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d599e871-1d27-4ecd-b47b-50b29cc5928a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5402ba-50c4-4887-a4e1-8f808a79fd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9572635-730d-46be-9e21-e5e8e1db7401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c8e3aa-550f-4217-8c32-c4130dcb88c7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e198a78-3aea-42e1-bb69-bfaff357988f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80f256d-bd68-459f-900c-59e1fc1c9403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e09ea72-3a10-460f-8716-7673c3bd1c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "07ee683c-74da-404d-a4db-04dc7ab73441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4a639e-8ff0-4cec-ab8d-6312651a112f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0e80b5-9f84-4d9a-b7b4-2e4835c8de91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc350c40-524c-4d29-9b51-eccd4f79ae60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5909c94f-108b-44db-96be-7151727ab409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7d05a2-8cdb-4a5f-b0fe-fa2d02edf785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d45bdbe-f08c-4e18-a822-d71e13781367",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e28e84-700c-4bc1-a3ec-5c5e886d73ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "df07289a-65ee-4480-9aa0-5c9eb0163c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831f971c-29eb-4a60-9032-fbaab792ecd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8649f8a3-e543-4705-8f2c-16521ff1b95e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7700b0ac-d942-4fcf-a146-38a9cabd149d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c00fa98-ee44-4f4d-88ac-fd73f3f89125",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52f2672-cbbb-4a54-b8ff-68df3a34f4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b26aa31-fc01-4e71-93c6-6aac1dc059bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a39d867-a4ef-4999-b8bb-5295ce19b9d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33bc464e-1c81-4a6b-8484-94b39697491d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea1d3af1-51fd-43c6-9a87-6e15f32abcdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "056999df-c049-4c4d-bcc2-24da264ec330"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "187a55ed-a03e-48f2-8caa-c616e8d8e1f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6a21dcd-0e4c-42d1-9f0b-94cf063134f4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e106a6b-9174-47ce-b3fd-84345feba060",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "040c8bcc-1aea-4dce-a82e-081059aef2ae"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0dae2852-41a5-4cef-bc49-6f1456a82b12",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a6567bb-be43-4428-9147-49f93b528874"
                }
              }
            ]
          },
          {
            "id": "fa438442-a64b-40dc-b117-ede5eea3aef4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5df05e42-addd-440b-bc28-13a72daa07f0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1d4ebb6-fd00-49ae-bcf6-42b14ddd3146",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c1f9f33-8e03-4bfb-a967-5af3bdb3c56e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3e81618-bcfb-4902-8b85-a80e89b4c73a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67d99b9f-6fde-47ee-9c8c-3a9a1cd0e32d"
                    }
                  }
                ]
              },
              {
                "id": "34fa8a84-7781-4406-b39e-421438ffbd2b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26837bd3-30ad-4997-a4bc-cd296872348d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1d0de18-6975-4ca7-9661-5af2af70565b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bd49370-b709-4ba1-9ca1-88dde2ca03d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "674799c5-fac9-4ed2-9bdb-abcbbd774aba"
                    }
                  }
                ]
              },
              {
                "id": "c67fb67a-8dad-4530-8427-b196fd094c29",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ae07b07-add5-4967-ba7e-32e02f3243b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cab00815-f1d0-49f3-9a03-5988c1565612"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2ac628b-3d6f-48a7-a5a6-acc2df813fee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1875d165-563c-4674-aff3-5eca9f6289bd"
                    }
                  }
                ]
              },
              {
                "id": "09d3db55-2abd-409f-9974-857683efc37d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44bf4c08-44d0-419e-acb6-d6848fdd52a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f8acea5-fb14-4235-a666-7c76fb81c73b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30b19835-0715-4a53-85b1-71da58cf3f7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d6bb57b6-6f84-46db-900c-7338ef47ca38"
                    }
                  }
                ]
              },
              {
                "id": "82e8de79-4947-4e7d-9e62-f269fbb847d1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac9e4236-0b58-46d3-8c23-b7d2ada8b830",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49696891-35f2-481d-9330-71eb6c7a9e0d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc4261ed-03af-43cb-bb60-1a7bb7837052",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a23a1e50-d823-4997-a4b5-040b52ffe1fe"
                    }
                  }
                ]
              },
              {
                "id": "1dbc85a2-2eeb-4b53-bf62-431c67e8ecc7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52a9ce87-295a-4142-8308-52ccb053d924",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5616406d-b78c-4665-8968-4ee4c0163a3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb19d16a-7ba3-45ec-85d6-31b200207e8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c7f94d51-3d65-46e1-9902-43159adbf4c5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7eb040d-b63d-4c72-9a11-3411d7136cad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56b57dba-53b0-452a-a3d5-27ad2799f74a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e4244c4-44fa-4540-9c8a-dfd53d331112",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9d5530bf-7ee9-4bdb-b4e4-ae0e968ddcbf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9886bc9f-f5cd-4f63-83fd-6471a5c423ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5a3baca5-6e7a-4698-9cdf-16a7983edba2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cd5c9b6-3c46-47ae-b531-96c89997df7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf009f50-7c6a-455f-82e6-c542249aee29"
            }
          }
        ]
      },
      {
        "id": "4f4a22ee-80d0-45e5-a14e-476047bf4c73",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f4aa59e2-d8dd-475b-914f-30cfdae41953",
            "name": "Negative Testing",
            "item": [
              {
                "id": "482cda60-9d50-4e02-94c5-2da7725d68ba",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "72d84049-93da-4d7e-b206-a0587ef38717",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03207efd-f4dc-4c8a-8329-481dc4a6bea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aac7456-feec-4d7d-86c8-d3c69ab022fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abefe16-5d12-4700-9844-d7978bdce703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf003752-90e7-4810-ad54-1015830c115d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92f59d9-58f0-49ff-b1f5-9e1796765329",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f051a9-2ea5-44dd-baeb-7a5e39755273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f35cfe-0cd2-42bd-830b-114a476ca849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaaca9ce-d660-4f25-824c-60c0ceb1caf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "092bc4d3-667d-4d6c-a73b-585c756da540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df22c4e-cc0d-474c-bc1f-7cc1bd5e96c3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5991496c-3d5a-4d2d-bb13-33a200163a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb656fc-d7cd-4649-ad93-61689ee966e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb09c2c-9afa-4aa0-84a2-cf1c3ff53e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "edbf7e19-fb7d-4b45-aaaf-bb7cecc495ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208b9bbc-05e2-4d86-93a8-b98f3f3b1fbf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc559865-4a7a-4cf7-9a94-0638184073fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2807a3d4-df09-4bad-9718-699ff04cfd21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb668d6-535f-4e2d-bbc7-fec5bb171be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67e36480-27f9-4691-9fa1-22f25dd64f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf41677d-51fd-4565-962a-0cfea5bfc54b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed513af8-5a59-4d55-a889-d425924cecf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1d0a85-26a0-497c-b4db-65913d3a3478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33065d8-b03f-474f-95f7-855ff62712fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21b862e9-bdac-4f88-8921-ba003b2e32dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f0f2ce-8666-431d-b33b-b56478476e63",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031b193a-e573-4dce-9f9c-7fbe63a8125e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98519a23-2f86-4cfc-963f-fbeecddc75cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdb41cc-7364-4d54-b124-c1c7397fcbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af658341-aa42-4f29-8006-c59770884850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885e81cc-5bee-44fe-b37d-e6be5d2a0208",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb07243c-7e31-4f24-b466-0306a30e2624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3681ee0f-5634-42b8-bc9a-f44e896e7958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1677a816-9a95-4711-963b-1c7f444550d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "88222000-ed23-49aa-a9a8-5e2a887b3740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd45b981-9b48-4f4c-89a4-7832a150464d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e065d0ba-ab1d-47ad-aac7-2091f2f9fd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97107652-ad49-4d0e-8135-f8e37deea2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c0af0e-26e3-4c80-9686-6df8b16b72ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51cde6d5-a25e-4bf9-88fe-ada93df9f9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb7f0d9-99dd-494f-90ac-46238ed9c0c1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8342f8b-5889-40ff-8a01-3520af74bd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f71545-a824-4aa9-b1b4-880a9008ad6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b004154-0be2-42af-a8c5-d8102cd2e2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69397969-f0ea-4dfb-86ac-b3466dfc5ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1e73ea-c206-41cf-9818-8c1f35cd0195",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11ee7cd-55f4-4078-8dd4-3ed2385f5173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e71d84-c1e3-4ea0-83e2-6a294f412e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa5b469-ec82-408c-a0f0-af506f33ab77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "956ee1ec-24ff-44f0-ae79-e75485bdbd89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a217d943-1673-4f5c-ba7f-c4d2f294e76d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baef7900-3c6d-47bc-865c-a893c29e9bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01489728-ac66-458b-bc93-47b3d9abecc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39df5fd-aaaa-4e84-bb7b-6ac11207d5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "40b26654-2691-4a77-834e-7b1736691ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e81047-1349-4d07-88fb-339cf0d4c55d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2d029f-1416-4ec8-93c3-3ebfb823daa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c0a9b4-e815-4682-a01c-845297922714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5d9284-8380-4b04-893d-2a564c762237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95d24234-ce2f-43b8-826c-fd7446fdc781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcb6222-674e-4381-a075-a8a8327c0727",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbb6e9a-4e56-4e27-9afb-e7c39f12ed10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b79162-867b-4b47-80c5-541b89c64947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f00004-a332-4768-b8b8-fc2eb37493e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a9317c-ff4e-44a9-8d28-990f04e635b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bae4da-bd36-42b4-8e09-7a9fccef6e4b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73975196-152a-4b0c-8057-e52fd0b39c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08ac32d-30bf-4502-9ee8-db3628682ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530d4509-9c19-4c73-94b8-d32ea7fe7895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "944e230a-76b3-469c-a278-921fb3eab124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ae9caa-79ba-4616-a1d3-b0583baa93f8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ba47da-db4e-495c-bc10-68bdfb96a7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58978439-0547-4d64-a6b5-85da81280a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d46947-618b-49b9-8cb9-5da453d43a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc02019-9364-424c-81f8-682ee18aa332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be074233-e05f-4e14-936f-9008cfd7f380",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abc26cd-152c-4254-9a74-445c8a3b421f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ba8a95-ec49-4af0-86ff-52e7ca5ceb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd841a5d-da4f-4e95-b4d2-ca1c864e46c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d31e97-0deb-4f73-8bcd-37c3414b282e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055a0f4d-928c-48cb-8dfa-6a2b2f0a7c00",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2923b39f-dfed-49ae-bb87-8f55209b8af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000724d4-d879-40d9-bb97-9245f3249a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ac10ab-ebfd-487e-a855-afb2c4a2f3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e987526-a331-44af-8ca3-e4b0cf219d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a2e0f7-f352-417c-ac7a-171dd0b16f16",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439ca9c1-0869-45bb-b61c-095390ee9f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ddde546-f58b-41ff-9726-bdb9992e4142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16967abe-f9bc-4404-ba30-4078a932022f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac448a5f-f978-47b0-ac59-400ca6d03899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786fbde8-1b17-411d-a955-f44e5f2ea7de",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6944c45c-ba90-4ec9-8c83-3d9f6e6266cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8341b2-df6c-4c0a-b2d7-b86caaaabc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2535108a-1dd2-454d-a795-a7babde6b3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7831a84a-5e45-484c-b06e-32386403f345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a296ba7-1ae5-4efc-b4b8-a9ad17b56931",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a977dc0-68ce-44b8-9da1-7518737dc6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9384138-d014-4344-817a-9c96d619a542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a251c4be-57bd-4dac-83b9-ce662b238c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e65bad2-5977-4f7c-a085-e659e734c1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c6009b-659e-4e19-a58b-0a168766e76c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c39f0b-d448-4025-99a2-71c1423d0f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954a15b3-3eb4-4e27-a828-d14fc391ab18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504fe1f2-d387-48e1-b537-09bb91823121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd25557-806f-4cb3-abfc-aec413c12f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689b3d1f-87be-41b9-9c46-6e3a2a8a34b8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae8b955-942f-4a79-8986-a30294fc8b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de5986e-1979-442f-bd79-f70093ba685d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc82ba2-19bd-4ba1-b303-7b297b51621c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d703f30b-ddae-4398-85ca-c3869e66664a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0bb21b-bbc7-4aa4-b33c-126c9dbe4771",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc5e441-4f43-4724-ab9f-622a35f16566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5366914b-a09d-4019-ba3e-1f3532c73b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d2ea39-081b-4d76-8b82-dace92ea2f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11733a4f-658c-4590-8834-61f013fd2af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadba4a5-aa4b-440d-a037-33842895eabb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa23e816-d2f5-4ca2-a5d8-73bfd2fc62ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdd877a-d099-412a-bcab-0c978e79ac02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5b3b52-617c-47e0-a92a-68173b14c7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f52b09-e8c8-486b-bf9a-a0b85b9bdd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f335b2-8a23-4160-b9e5-615aa53768a5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b3dbd9-d6c5-476e-9392-df90534660b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5283a28c-d293-46ee-8cfe-082f0230790c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdb6dc8-4236-4eeb-a311-57bab77a3e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2bdf76-0a32-4e3c-9a4b-db83a8811e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7c7eea-39d0-4b81-8414-cb4ce423a4cb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8b44b8-35e4-4678-a5b5-1a9e8d496dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303bd3ae-ffd4-469c-8d72-3debf904e1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23eea397-e92b-4dd1-9dc8-aaa2fdfee246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebfcbbef-a50f-425a-b0ff-358152387b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cb28b0-9b64-474d-9013-b59e804a3d6c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52eda6a-516e-4a19-895b-0a4ec9053a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da12a28e-e4af-44ea-ad73-d7760ce94f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1968b9cc-553f-4f08-8b58-6bae44a5d72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc89c2da-9815-41eb-8d62-208f27de726e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d030b7-9b2c-4be1-8faf-7a73519f33d8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50a7a1e-338a-4498-8be3-c483ea113fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164bf1f3-06e4-40bd-abce-f0eadb0a652e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048a6d1f-4f03-4628-bad7-bdca26ebc751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a169737-f4f4-4a95-be37-03e00939aba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e3d2a2-df2e-4f78-855f-124b73ba5e1f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3057854f-b50b-4105-bfd4-ba143030ff6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fef8a18-02dc-4869-a2b6-adddc13ab3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdc2f4b-d1eb-4ee9-af35-2406cd50512e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dda43930-a622-48c8-8d56-0f0f93599605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef849ea-f7f2-49e2-819c-f2a3b830ef42",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb07040-a309-4d4b-9462-71edba683906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5f9f1c-494d-4eef-ad95-c3e579b60eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d7af59-ed4b-4700-802f-200429902c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f596f5c-75d4-4500-ad2d-6d262b266d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19dad67-50d0-48c2-a1b6-aeeb510682e7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02774fc6-4036-4c88-9ba4-140ff06ac116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92176be-cf1f-47cd-904a-e9e74151a750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af40346-be06-4480-8b5f-524b16ce72d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "286c96ac-35e5-4400-97f8-86f59f10658c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c39910-3dec-4bcb-bb65-bceef17a5503",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcc9bb0-0608-472e-8a69-4387f0e189eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f50e358-3cb8-49c7-b2da-0a87aa113d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c53034-2ef3-4780-aa7f-fb12213b7530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d96359-45f5-4d83-951b-5639e1eacafe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d9643fa6-5a85-4e80-85df-f0c359b9c962",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9e1c249-3c22-47cd-a574-7285ecc1aa51",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa04375-ade4-481f-9e08-3fc42824709f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "976dd05c-b965-4124-93f1-a87e671f4d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329c68f4-58eb-4c4f-8aa9-5050b5fedeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f30e71a9-f9ff-4ff1-bd59-0f5d7a73152c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d39ed00a-5f1d-4d35-b2b7-072ebbb20266",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "630faa3a-9852-4924-996c-5b8b9a645017"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50a72646-6dfc-4b76-8661-4e7c1887d448",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fabd896-9099-49fd-bc7e-76c436a9a0b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99814e75-0b27-4734-ab82-d2bcd009186c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7346a85e-f231-41cd-9615-339ab0971bd4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e8d900e-02d1-4aa6-8250-225ffc7be543",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2599403e-547b-4de7-92e3-86fb55df206f"
            }
          }
        ]
      },
      {
        "id": "8a80fa24-f7f7-452b-b45d-cbebe48fa10e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "afe7b60c-c26b-4d4d-968c-29d77e402c55",
            "name": "Negative Testing",
            "item": [
              {
                "id": "874ca1dc-ba2d-4433-82d0-93c200bba978",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a2410c4-3b9f-45f5-b2e7-94eab19b4527",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8517965f-eb84-4a9f-9b8f-89e99e7a579a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47290aad-d04e-4e5a-a3f9-5ed18a6cfae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4c3377-bc04-457f-807e-b8cee8864f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ca962a-1d78-4fdd-afcc-b72ecf01bd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25f738d-a900-4ff5-a207-cc2700e423b5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557e7d40-a0fb-4e61-be86-9f5dec42123b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc7b94e-3ba3-44e9-94de-224b3981631c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5112679d-128b-4936-8b4c-bb6903cb88e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "607b0753-ab8c-41f6-b40f-0d8e12e92232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c40928-6c3c-4125-a59d-d88679d5d632",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f4476f-256b-481a-a136-dfbc78fc9b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775bb58f-8626-4c6a-a7f7-410fb93a9f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fbd861-01a0-46a2-af9d-3e1368ecadfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f929a1e5-2902-4e05-bcd1-57448e41e53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2b31cf-3317-458e-be77-873294b8eb1b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3170954-71a7-4bf1-b9fa-a18fa6fdf507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68dcfa1-923b-4d00-ad4d-055ceec075f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b769cc98-cbe0-4a26-a998-5342dd25f9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a68c452-d269-4791-b611-e2838e0b9463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823ad8a8-d5f8-4aaa-ba04-344043995300",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b180d76-ba46-423b-8c15-7875a5a2799c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936418c0-cff2-49ed-bff0-81c5ab9cdbaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91dc687-57c3-4b59-89fc-528230eefaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28a08d6d-7924-47c5-b3da-28d271e5a982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5614d62-f680-4916-a932-77365985e154",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5c87d9-b8ef-49e8-8dd4-15f71e3fe1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8d35fd-5c8c-4040-a4b1-ff1a5de7cb0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7499431-2e5d-4239-91f0-8d50d3c97828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d89193b4-1b95-47d9-ae7e-541d2f549d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e790a2-66eb-435e-a6da-430a44e68159",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69e8a9f-b303-4b1a-afe8-8177c01bf9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ead9443-7d67-4e62-a140-289f467d8654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e3ec4f-326c-4434-ba0c-c8243a702658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f110d0d0-6153-42c5-b31a-7a59950bef53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8440b454-06fb-435b-a990-e2b0ce2dcd7e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a428345e-9307-4e56-8773-18a15dd9125f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a155b8d-f577-4516-b9df-67ecff2cbcd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c06210-65b5-420a-8bec-067cdb2bf516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0af9a93-afac-4d05-85df-929641674369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e41629f-d759-4dcb-8dd3-e0636cd875e1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c998df72-42cd-4c51-b310-be1a19d61f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aef1938-13da-40b6-85ac-5616de647624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b7b992-a825-4662-a296-ab80aa49ab0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2de2d61-e3bd-4709-89a9-658c5a000310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049a1bf7-0dde-4b04-91f4-2c4fa6e085c9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1143a5d-b54b-4e1c-9ca0-e517a4d2b893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94968be-0cf4-4ed0-8ff5-a1ed5f9c15b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e13c8d-6cc0-453b-8371-bde151f35be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ecbb984-6c0c-4e45-a70a-13e7fe67f466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3480284-38c4-464f-b957-0dde91429203",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f324997f-ee72-42fd-a21a-5cc7cc38cd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f07b187-a5b0-4602-b71e-9b16f60639ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bd9225-41f0-4035-8f04-183ad317757a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "aff3671b-fcea-475c-9ee1-72ad7aa35586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ef6fa3-fb44-4778-919f-6c9b8b4a5c02",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb13fba-94fb-4729-bbc9-1f72cf3a831d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131eee34-1dd2-4266-aa22-6880dab310bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce41e39f-5d6e-45f7-8022-632c332e1953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "682f9b0e-4eeb-4c79-8a68-ffd5b34786cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74dedac-8c32-451c-8baf-b02f6911fd61",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b26dc4-de23-4aa4-9bfc-d59cc7293766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41ec482-be34-4e03-b74b-790313274d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a79ccd-0738-4cfd-92f1-b51a39c6e052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2c8f09-b19e-42cc-9b45-8f88a918106b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01e0fb2-05cc-40a0-9642-c99501038708",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44251bc-c08f-4495-80ed-f9f999a78ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9ab6d5-8a1a-4ce4-a2db-92b0a0f5ca76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7dafb8-a2ca-469d-80ab-f4079baa0a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bab39ca-fb75-4407-ab3f-68187681eb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3597ff-9f25-4ee8-bb7f-f366d6100c92",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac7cf13-6159-4fa7-adfc-e73cb1e5ae7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f88cd5-5e1a-425e-b45b-c0c1a41cee92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe58de7-83b8-4283-89a5-8482ba76eba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e0cec6-74ab-4984-9399-afcbcae47dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24f41e8-61d4-4bae-91e7-eecd7780ebed",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be93f57-00cc-4665-9b65-578c455265ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32d2f45-d43b-4bd2-95cc-76ea81ee359f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a9ef06-bed4-4368-bfb9-61f013bb2f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "22549eb8-83b1-4fc4-b138-3d7adbb22577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480f37ae-b5ed-4a2b-94f4-e3c2f7e410e2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5f7db7-4e2c-4b2a-8fa7-a7d4c002b7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9c3ada-b42e-4957-a1ac-f40cca98d719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c5fdf2-f2a9-4f5c-9c91-3a3b6f94197a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8a9b94-5faf-4a80-92cb-96b13378e65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6163e476-e05c-4496-b088-25064ad43598",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1838044a-7998-49d7-a848-148802bc83bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a9d5e6-66b3-4627-9c14-1c7e3dace459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062b2071-da4a-4df5-868b-0a702377d53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "27c8b507-20d7-46a1-ae27-0e471c41f4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bb8b29-3ecd-4f58-8ee7-76cf4d07dea6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae04ba7-a712-43d5-84b4-b8987b302bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b372e723-874a-45b6-9dfd-7e656ada3eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3f732b-9bbb-4029-8b26-66a6ef50daee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c524c7c-7dff-43af-b877-8b1bacf8af45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b4ccdb-fcf1-445d-bdb5-9118c6ede35a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab925c0-f808-4f60-8f44-00bc3ae1e918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d1aa9d-8a5f-4b20-b01c-c1294d9fe916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bee119-1853-48d4-8bcd-98ae28b9c883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "434e85d6-62ca-4766-b99c-11aa8bb73dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b173d1-08bb-4c83-9673-73e80d10f1d0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90efde19-f66b-4637-bf74-644b37113350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20ef31c-6956-43dd-b2eb-5740067f606f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bb25c5-462f-4855-a417-47880bace582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d319bcc9-0b97-41e3-a4eb-acb0a8ab704c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b1c8b8-f49f-42d0-acb8-4da26e26647b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679790c7-f805-4d9a-b020-b53a49d5c512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f46588-1f65-4a97-937c-418556dceaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadffbb4-b633-4332-bead-ec6a4c9e6b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3967936a-a36a-42ec-9e3c-1a242284be3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d33b0bb-d744-45db-ad75-4e184f60513a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b650c234-5b91-469d-95e7-c6295973e614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2b3d2b-b24a-4127-b980-5e1e52bdf77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d707d9f7-b01d-4c13-b500-e5de2b7bb93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7f3bc1-0dc8-41fb-bb45-0cfb6ab8e885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8b156b-361b-4fd9-9040-2a22779c774e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4487f34a-dfc5-4632-9956-81c0afdc2305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5f98bc-efa2-4feb-8224-08d5ab198180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bfbcd3-f010-47cb-8b2d-a23b14f38f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1fc17ca-c80a-436f-8e2f-f6e7338897bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8ff9bd-f269-4302-9077-df80cfd307fa",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a15b24-7290-4a82-a5b0-5632bf590a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547c0041-acee-466d-8c7f-7425fc2a0226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868782cb-0df2-41a9-b880-b80a77aa32c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87779b61-bac3-44b5-bdcb-cd778226a968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c92a149-9279-40e1-bd24-8acf96772130",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78035f7-1b83-4a02-9f1f-035d4f5468eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cebde9a-cbee-4b9b-8392-2d480c42f57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b270d521-2dd9-4840-a008-df5c391f35f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee64a555-5909-453e-87df-c6b3b6fb17d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0ada17-7482-48ed-b79f-fea3bdfd6bf5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a6b4c2-9ebe-4e4e-b460-d06e7aa78dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26b42ba-bad6-47c2-8f42-9fa49e61b254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a63009d-5fd9-45f6-b0a7-e17cd4306ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d45bd7c2-eedb-4968-8f65-d696e480d0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5288a59-48c0-4e57-b36d-d97ac9980d28",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77084f81-39d2-40aa-a594-48f298d1a57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19786032-85c8-4720-af0e-76620b51908c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7458b66-aea7-4fbb-bc19-ffbed7b553c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "279ff7cb-3301-4421-a376-b5f0de8ab6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c6e881-0c4d-4a7a-8e52-092012b00a78",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29b0a7d-3c54-4701-a775-927d755c618c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3872941a-41b9-4c96-b96f-2e42e9e813e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acba4865-b9cd-4dfd-87dd-93a657ed3fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9ef017-a7fb-409a-a2b8-85abd39e16a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15f373e-23fe-40d1-a5f9-c64a48f19888",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebfdad9-0301-49c4-b7c9-eec7f4272412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcaf17f-c566-4424-b3dc-c8e5782562fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f69e09-1f9d-4f5d-b9c5-4a30b7a82b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0081e019-98f7-477e-9c1d-46c304381b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1e8020-77a3-459f-b4c7-5e8af3449b76",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efcacd3-165e-44b2-9dae-1ea867978ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd8390e-b097-4b34-9feb-f355b37e82cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931df4e6-dcda-4bbf-a944-981d9a4a5837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "736374c7-d113-4c2c-a597-78425213fc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de309499-482f-4a7f-8ce1-52b88b78669f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cfe765-b323-4195-9aca-e517d65ad629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0653b3a-7c97-45d7-b53d-c7a34561ce55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddf3e6a-80d3-44c9-94ee-7528167f4a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17040ce4-db04-4e7e-ab43-41dad555bf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f668c89-f562-4374-b681-7691c9cee625",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0e0041-ecd6-40dc-919b-cf0125a1702a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451e588b-3e42-4b84-97fa-c038d1e9bfea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2230542a-6b2c-4f10-9172-1529989d9477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b109db-213e-4e87-ae88-392f47f80167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401fe777-e845-4a08-be99-1a8ee30f07d9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b9ea7b-6626-465c-83c6-d8d05c4911d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4627770e-743e-408d-859b-1a0a71a90565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11aab7e7-531c-4afb-9c96-db24d5fb9989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d20d63f6-b3bf-454b-96a1-794d09eb0576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eeec278-18a3-45d6-a3a3-660a8dd09496",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2debf98-9df1-4179-a380-9241a6beda58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58725480-28d7-4753-88c8-ce2d1d9d4cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23605059-26a3-4847-9090-d263a1a43196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "306b02c1-2d5f-45c8-87fc-5689ac206ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a75c7e7-2a51-4b3f-a8c2-f72033c736e0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d22441-561b-444c-8f82-e37f25698720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d03d537-333a-48ac-abd7-ec13abebe53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2594381-e421-441e-8533-8b0dd8b37dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b5485d-7036-46da-b930-59ce3249bdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754faa3f-8621-4ef5-aae5-553ff3cf605a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e04b6bf-93ad-4bc9-a6b5-9bd1cd35bc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05101d13-8d3e-4079-94c5-0ae5237c1d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b2af3a-26c1-40d8-9759-dc2f22ee704c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7365ffc6-0f17-4288-89ae-95d69bea56fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f48883b-4f44-48de-8e03-3ab565ad27be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "698beab8-e36d-4bd0-89c6-15fd51883d6f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b0f99a-b6f2-4348-8aa8-38806ec2938e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7a49da07-4967-4294-a982-3e9966813add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faebc95-9f15-400f-9ebb-d4ec930bb17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb5e3d9a-4b40-48b4-b797-921a730bacb7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a34a4f6-7587-4b37-8877-4d8f98f24084",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76692d3d-e55f-42d6-bb32-9e0af2738130"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8753a694-0dce-4b9a-8985-c4e715159ffc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43c27d47-fe8a-4b10-94ec-6007d092f8b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ddfc1a1-1172-4e0e-bfee-3a0589971252",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "03f7d6d2-6b21-4af1-b003-001ecbfe46e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3400bfb6-cdcc-478b-a19b-5ef9caead992",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b601276c-286b-47a5-ab83-d66c0e69193b"
            }
          }
        ]
      },
      {
        "id": "f534ebae-84d2-4338-b94d-3c11d77d580f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c3c2cbc1-fee0-4a32-824f-44cc85525ee9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85e191d6-22d4-4195-8108-b5b765c9b0f5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2bd1a5b1-3995-4132-93c9-e6ac98236aca",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbab4b9-5ae7-4d04-a3c5-3bfae8a95240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e15669e-3942-45e5-80ca-e5a5bec7b67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ceb5e4-e846-4e58-81db-cb626d27ecbe",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22ef913-5bee-42b2-896e-a03608c0f604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afca7461-931e-4317-ae54-d37d64e903ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f302696d-4ec3-4b64-b61d-f07a11e04ebb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f35d8e-82dd-4f3d-a2e1-72729833fad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbc179b-1ded-4eff-b490-83b8c0057392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5bb091-18f2-4f81-81d0-920d0b059d3c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b7726a-3194-4c1e-9f36-333e623e6f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a243c84-f142-497c-85ce-ee6244195d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de309bb-0c2a-4e81-abb3-af96e9eb3d0d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4146a9ee-ca7d-41f8-8ae7-bf50bbd89834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a4409d-8dd6-49b0-b5e4-a5fa38e7e42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bcacdf-1a7d-46c3-be6d-f90ef7719c02",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4831e836-1457-4e84-9e83-fb0de473cce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f9c84a-8f08-4cca-bf51-30882fa22895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd09ab3e-3ced-4d2c-a8b4-3ea49f19cdd8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4de791-ee0d-472e-bdd4-2604f2ec9dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf359e83-485d-47f9-ade1-08413dd41af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4422b48-9cd3-44f4-9579-ce39fe413e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311ad90c-6194-4c43-80bd-837d901aa146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0034fad5-c524-4164-8866-a451efb175a4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1509626b-b2b7-41f7-b17c-d32097381ff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b91f3045-17fb-4608-a9b5-df0e538876be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b91c70-9a3a-43fc-bbb9-05438fc7a761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8ff0af-d47d-48b1-95a5-bfe135aca31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d206d46b-c53e-4897-91f6-1ced9876ab0e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bae06c3-f37e-4a22-8b9f-057218a0e880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2331d13-5f1f-4c11-a2de-332ff01963fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7332045f-96b7-4fad-b675-2c7d09e3be64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306d03f8-0fb6-4bfe-ada3-3c96a8d0127e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2c33c9-881a-48da-ad7f-ceded5be50bf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828dc974-84a9-4e19-9089-02e276c21e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71aa454b-3a9f-4b4c-a0bb-cbe974cba2ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b7f9b5-1b62-4a41-93ce-d20e3ee73ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6457db3-3a51-4d42-808e-ec5ef902234f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f57e011-1bd2-4a4d-bffd-b993d3f1c683",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35cc58a-4a25-45aa-b7f9-cc981568572b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45938ba6-d4c3-449a-ae83-3bda98b707cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b4fb54-0019-4658-b7b5-ba09708f5b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f041f0-e4e7-45e6-b641-c42908c2cff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b322197a-d277-4326-b104-fa438f21b434",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03d967f-9766-41fc-ae7e-b8fba199921a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92bc6a74-ceb4-4b02-8956-a0b84ef01105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fab7720-e88e-4150-970b-69e0cfc190b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d2cb65-05a3-4cf9-9758-00cc6dbc7a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9293d4bf-1ccb-4850-a1a5-22194b8eca48",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc50473-4b14-4ad1-9d92-37c5098ea001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a225845d-5ced-4851-8164-48a8dafe5c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae00ecc-9229-466d-96f5-e62cc67c9dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90074548-e723-4e9d-b664-255e54ed6f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789808dc-488c-4ab4-9f21-9001ab1b9d31",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a201565f-ed5a-435f-9e49-81372fda0d4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dad1302-632d-4770-a098-c4a40ad8420f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21e6d37-c6bb-4721-a9a3-d3c65a9294c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2019f510-c27f-48fb-9c1e-7ba1f2f3b0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb68715a-b508-480a-83d5-b6112b48837d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76258bef-8f70-4176-b421-3de1c2bf397b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "697f87fe-1cb7-4f2b-a6a7-c9e2e9f62107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f614575-4fe1-424b-9135-fd671c75daa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec38c90-8c20-44b2-b111-ea0b55b29654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d25487a-8f53-46b4-b9e1-fbb446b0b033",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1add9b8-b652-411b-8d93-7a73a035cfb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d0fd060-74ef-4d56-8ce0-4e4a630012ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b5bfdb-6a61-4dfe-9060-4f8b35b2f159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9da7c8-9343-4140-bd32-a03b188b1aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2197bfc3-7ac2-4dee-9f85-f65cc7763a86",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d9e847-8ead-49f9-8e13-528b604fc383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edefe221-e072-4010-950a-0d2f5fcec9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8aa7c2-a613-4c87-9fbf-4bc92d4dc42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d3fabe-967a-4c9a-b93a-469e860b40d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc168db0-b910-400b-96e7-11073ee0ddde",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecc5429-78dd-42fa-9edc-e814931ac282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd663c5-c731-4284-a27b-5fb34d260fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fcad95-e721-4c11-9950-0f3efffc8683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30f0da3-97af-42c6-b196-3e10c1105775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f34ef0-8293-4332-802f-9e491bd7746a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adf6996-3b04-4dbf-9443-d271d0d31ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c7a55b-d41a-4ddb-82a7-b4a374761c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2790d037-fc2a-46d9-be32-a3be9c1f9d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0665fe84-c6fc-448b-9b11-96a5f18867f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c69c0aa-07f5-4e1a-b742-3bf8e942a387",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d070542a-6297-47dd-bc6b-99ccd0d13f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4283fc64-d17b-412d-88d6-7faa1714f73d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374b2632-aaa3-4fed-8d08-355484fb4fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ccb1cc-25ea-48cc-899b-390de71cc399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddf9e43-79ee-42c8-82a7-89cd3744c3d6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e013654a-8c03-4a8d-821d-8f2e57f85a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335b7deb-08dc-481e-af23-e860d991c3fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e2f429-1271-46f4-a9f5-7bc69b923675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a269e29c-2d6a-47d1-bf77-4e483c76eb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95883909-4890-4f61-ae32-7d4d43f44513",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a110a313-5790-4c0c-af5c-38c913fde539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d81a2e2-3ba6-4c39-b174-9859b546d45e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfc05fd-4135-415f-b8b2-9e5285f52fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad289a0a-5853-42a9-9282-14a6af94c527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cbdf79-7f51-419a-8e4d-677830f33172",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c24d5a-1f36-437d-86f6-156004ad23f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c06422-9d21-4ec3-b752-eb3f6b383891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff097ba-62b9-43db-86ca-1a87ed4dacd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25eb610-6667-407d-a7fe-ef3100336974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1770b6d-1fdb-48c5-96b9-b7c8df469b39",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c73ca3-2c86-4b25-9211-92f2ab7a8156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aafb9553-156c-43fe-ae09-bfce72463c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bfa215-e4f3-40a2-a059-cafcda4e4f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbaafa9-7eca-4e36-9944-912809c982bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c6b81c-13e3-430b-a87c-7134f89cb206",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d38580f-8b9c-4b5b-af8c-d8eaa2ee2a3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a0c6ce6-3371-485e-9f33-742a8ee9dbe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f5b01b-ff27-4df9-a664-c3e42a699c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e16542b-3f50-4b31-8bc8-92d09af3104e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6fccb1-5702-4fbc-8ea9-7dc4367024ae",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cc190f-b796-441e-926d-242c8e554eaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "638e8ed2-e585-4f36-8e5e-ad56a96db06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7291bc77-465f-4786-b4a7-b8fa8d56d8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120c2b35-6d8a-4a9d-94a3-72d3d5cfe204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f454a8-361d-44a7-8648-36b4616985f8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9f4c2d-1f92-4eca-81e2-fb3050e8c7b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a11541e-cdd3-4627-97b8-75538e7d02f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa9739b-6f1a-4ed4-a4aa-9245dc4f9975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f980603-ef0c-4b3c-86a9-77abe9144dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f94c1b6-c103-4a72-b313-fa1c7f8ff9d9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72bccea-6ba4-4bc8-a7ea-305cb4d25e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd27614e-1d93-44c3-b676-f9b50b87afb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689c4738-7623-4432-87d5-1c30aec91a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ba788d-c9b4-4508-88ed-eeb2c56e2a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b63ae9-40ab-4a7f-b3ff-f35e8a8d2547",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9611f677-0980-432d-be4b-d3cab2c96871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c642542-b193-47ec-9045-a0e4b9951d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32017b57-d501-459c-8e85-0fbe7147cfa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d982a8d-076d-4d9c-926b-783162e3a756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e7b918-bec5-40b8-9186-195f2ff5710f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76c194a-47f4-44a9-94ca-aecee11c7c47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e191b01-d9eb-4466-8b57-d4ef10d324b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f61ecc9-dcc3-49e0-95a8-59388043c974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88210395-bbd4-4f57-96dd-b53524f70091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ce0a27-3ccc-4772-9c1d-be05bd9fbac1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7243e749-d94a-4a02-9906-9f2d7b7a07ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "992895d2-9199-4210-ae6a-a41dcbc06d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9407682-89ca-465d-a594-94a96cde610e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2de0606-30f6-4503-8153-9de43fbe85ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ccc239-053b-4b9f-ae93-430ad0ee7159",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44044a02-a19c-4a95-b8e1-6331c1ac3358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2355e5ba-302e-489a-be16-f2c702a77799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bbad3c-41d6-4374-a7f6-851d7d142611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27b5d2c-70b9-4df2-96f9-32418628eb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11b0ab5-fa8c-4f83-8523-49721fc4d643",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f619ca8c-3774-4ea1-8c9b-d5c2651c50ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "221f21ab-30da-4b8d-b6a5-4207a17bff0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda1a5e9-fd42-4f30-91a4-9db18adfd566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef685caf-88fe-477d-8c6b-b1f2066f6c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d79d725-4efd-49fa-8e7e-2a3b6486974a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9df0207-40bf-4c23-ad9e-efab36192ca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5ad730-8e4c-426b-b47d-350cdde382ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fd5493-63ab-499f-800a-f6c1ae7d238f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7618c50a-089e-4582-a190-3d8031c01387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03c3daf-4b1a-4b18-93fc-f1c62475bb7f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d5134d-49fc-4e99-8873-4f514e51795e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e370655-050b-4b3b-8f3f-f375b71562a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d83d0a-0f78-43c2-8295-b8b761d249e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6dbd58-f4aa-4cbe-ada0-23189170a50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a431938c-1960-4800-91cc-4ae40009f2d3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef23b5c-2693-4282-a0f2-9b1bab028ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c262a88-5554-4aeb-ba00-18cc6c4ce1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bd7510-ddff-4000-a978-a773848e1045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f229a8-2639-403e-875b-79ea66416db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7f2ca0-1c87-4c3c-bbc5-3eddb66b75aa",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9484f8a-d48d-451c-b7ae-87420b7e51dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630bfa47-08ec-4de1-bdce-e5978d159255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adc47f2-6f75-434a-982e-eb4885c2824a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d8f433-47ca-48fb-9606-182cf3fa7f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb36d88-abe4-474e-ad07-aed6b4f8d855",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440d4830-006a-4842-a889-99a56a5acebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc52caf-3d7d-4d53-89e4-cffef455f922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763395f8-493e-446e-936a-381c056917b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c880d62-f36a-4f24-8408-69d1b97a5d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a0ab71-95b9-404a-bff6-7b6660716f37",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83af42ec-f014-4315-83d4-05719b6027cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3345f94b-a438-4527-bf03-9f91945e4af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c27b6cd-9549-417b-a97e-403922bf22c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ebf1f4-3fab-4080-b3e5-9cffee27575d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4684c172-e251-4569-a81c-3d3b345718ab",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e644a07-59a8-49ef-aba6-1b3355c069d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4c9377-3c69-4513-821d-19e519c864a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f822f080-9f4c-4313-ad90-60da2be59ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d4f25b-ba2b-4d86-93c2-383c29912d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526f6d25-1b4b-4e64-9a98-71816ed855fc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cf2914-9d93-4b7d-9d15-2e62378697c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22c1793-f376-4b34-a7a8-d6c62c9f68cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cf2282-3abd-4bf4-a903-e7a9110c21d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b728af-13d2-467f-8447-456805e3e545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058559de-98bf-4848-b3f3-0636f9e9dc6f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ade8746-8773-446e-9408-e0766ba1ccf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9432d8-204c-4f7b-b6b4-986bb7e7b92b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954f430d-8b82-418d-aac2-b830b05ccfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24278de-bc80-4d6b-aa5c-4ea9646f9204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee48fe5-23fd-449c-8218-cbf7a03c374b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d718dc38-b8ec-4674-bf0b-8ef6efac786f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f07bb1d-ea02-4615-9777-a1f7c5dc576e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42a8188-018c-41fe-b11f-a5d0a2eda61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee32cf61-daa8-42ae-8c17-6e86aa8bdc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae2587f-1ceb-417b-ac8d-a359cc7b94ac",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35109b8e-ffc5-4f76-b025-b5fbf6cc4b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f95764-6b80-42cf-8c04-2db18800f2eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13c6e0b-c101-42ff-8d05-33e419f12b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f27ef7-f5f4-4e3e-b184-2b611961d364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83f3c37-1a0d-4126-87b2-a6b2cb26fcdb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30628b96-dc00-4b24-9f7d-588074038a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b5a804-e332-42e7-94f7-07dcfef7aad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8613e94d-95e2-4326-a546-b371b9551519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b80025-8a7a-4bfb-adb1-7fb9f76cb5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24d742e-1f01-47d4-a8b7-8f338edeffe9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abe2a9b-8cbc-485a-b241-369b37d8cd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373ccbeb-94a9-4cdf-bd15-855e38b2b271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2825e4d-f886-45b0-982e-5392e7aaf271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5039f93c-36d4-43ff-aa93-99dcfafd249e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0294a3cc-3673-4899-9402-15446afa81e8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6849a5b-e0ea-4947-b892-0c9777a6d887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc47cdc-dfd1-445a-9ed8-2c9c2059e327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7652a09b-9fa8-404c-95bd-f0a6cb01f3a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5076b22b-b61a-4d67-b23a-af64fb8a06a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff1b1ad-bf68-4259-ada7-153a376030dd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb2beee-3412-47e7-a26d-e780f32d77ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28b9404-3a68-47c3-9dd1-419c0f1f06a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea539e62-e38e-4cc2-a27f-2b741a91962d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126f3e3e-6fc1-4391-a118-81140a5c00be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1f1d05-09fc-4e84-a6b2-bcea5acc9390",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56409f0-3b79-4584-a855-df096edda80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a045d2-cf90-4605-a6a7-151762187502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b7eb84-8751-475f-8281-e409af571b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46101422-1646-4e7b-b193-4bbb814c8024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e31e7c-6554-4a03-99c9-a393d518bda7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496d2ba6-c4b6-46a5-a11f-c446d2f1911d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b948006b-e21c-46bb-8988-27935b2e6482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c907b9f-b4af-4b3d-8a0b-375f7dfbed65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b96377c-6572-4d46-bfd4-13be4b67e841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c335326-76f6-49db-a952-3d68ac7e8e78",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f5ca57-b4e8-41f1-9f31-915418b09c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0686decf-07ed-4859-a07f-564e8b10a41c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7fe52a-23f2-4ac8-9c89-b43843699c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259ef265-4439-4f15-a6f9-efef9a832108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a723560a-44e6-44ae-adf9-bb0f37a937e7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbba89a-9f7c-4aae-8a9e-311e199f0a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b96fa0e-f2fb-4902-b3fb-4352b104d9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b5f29e-7081-4e10-8623-b080b9cb66da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2510730-0031-42e5-97a5-678207c0ef2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71842288-5730-4a61-b19b-3adf0f7a588f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3831fa-dc62-4802-a6ed-eb07617499a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50178e1c-27ba-4f54-b879-cc41c7ee54c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbe0bdb-103d-47f2-ad2d-49b22a39f4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1fb319-fd69-42c4-aff1-68c0f6abd47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699c8660-9755-4462-b178-d6c85e4de64d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efaf6653-efd7-4ff8-b5e1-7fe096651950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92125f0c-a98b-4b0a-b149-aa2b157bd2c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36da1bba-ee9d-453b-8adb-6df228945edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57d3561-f88d-4a50-a73e-8a95fe182955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c113ba1-d61e-4cd6-adf4-82a221e1106d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b712ce8d-d95e-4b1e-bc74-4f5ca4b47844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822ce5c4-f8b4-42ec-8d64-19ec5695a7e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5160e79c-331f-4ead-a31e-7da6034d8221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a259b182-1226-48d8-b91f-da0d8b24aa88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934261a1-520f-465b-a8c6-a28f72a69c52",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4db3aa-1224-4bce-8769-3212168ef500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216324eb-eadf-4a28-8e31-58e3d230fd70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbb712b-7b42-44b4-be99-adbe892da4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff45765f-b41f-4b4d-a0b5-47d06118b133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b37995-ada2-4b81-8dae-3610d8c1edaa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0508aee-e1c7-4adb-b305-8f85f21c9995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ce9320-2807-4621-b22f-6b77d784a0ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f04f8a5-d3a8-4e8f-899d-da4a1c836de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6447ec-4b74-43f5-b7ff-8ad1c2210f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e373e02-b62d-49bb-ac21-3f24e8487e22",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2af233-c098-4310-9a63-01d86cee006e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7537ba9e-9e5d-44b0-9238-22701c9de780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da95c06-d1b9-4797-93b6-86cf0a483465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479392f5-b8e0-486b-be03-8dd66025cfe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3801d92-007c-4e6e-858a-e1943def5339",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b6dfa6-a81d-460d-b68c-ff0e8fecd4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf0726b-fad4-4321-86cc-27b4734ebc40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b687608d-e9e5-43a2-b0bc-b271c62dd042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2188869-dcb3-4b8c-84d6-5e1d0cdfe7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5483159-89ee-491c-8ee4-f28e88e3b717",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5595bd-69c0-42cc-bfe0-990e2a05e63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c0c57c-8d6b-45ca-9eb2-4f6d6d7cd997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46c5875-936c-4e28-a831-bea862f2fb91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe6a83d-c4b1-49cc-ab8d-097bf21c2ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602f3304-1aad-40c7-9d19-97e63b434694",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f564697-ccf2-4cbd-b53e-b5fb23da64c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3cd3359-3168-4c5f-8249-fe1967546de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5330e5a3-2fce-46e4-bc7b-43f1beb526e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eafcbc3-7d20-487b-b8ae-21576d1fa237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5be18b-7b95-45e5-b36b-3c54e3eb504a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127abf38-5e8a-4f99-8f61-674c068294a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d423d71b-0094-4c24-bb07-55ec5bd1345a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60539e9f-ac7c-462c-ae3b-f5b807b1d96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a581df6e-4feb-4360-932a-e97be668c471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ad5519-68f3-4e32-8c91-a245ac3aa5cb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b066b0f-1786-4633-85ff-50f77bae6370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a891b94c-2554-4317-8fcf-d72e3915ef1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e922e5-557a-47be-8773-8d8c34380834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283897e8-b3cc-47ac-9f18-6ddf7a5f3c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a74013f-3655-4c8f-a15c-e9c575792529",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a6488d-775e-4385-ad27-83c134bb78bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f7b678b-04ba-469c-962a-70ae91a74e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f870055-de6e-4d10-b030-7b38b807eea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef2c438-0b6c-4bbe-a06b-7b5625666e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36563f2-b875-4a56-bd1f-3c91aeb5364b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84625117-3727-480a-bf93-a15666d29aec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b45e469-99b9-48d3-8da1-ac8c71313dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6634ef2b-299f-4108-af5e-65e5c9b95231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c8f82d-8f55-4b99-ab69-3f2813b3d162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b36a8dc-592f-4328-a721-15f3ee3bca1e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc154273-0f38-4bfe-a13d-0e9299ef7612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1777e0b8-aace-4091-84bd-4ede11ceeecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ac616c-bb16-4138-8269-848d24b4c5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e1c6bd-77d1-49e4-ae9f-e3ad1d867893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5c1750-47b0-4381-a1a5-776b6219a3e4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8735e81a-f944-42e5-b716-131d7b8eae56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0938453-1d75-4821-93d9-8679264f531d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02b937e-01fd-44c9-b67d-9df98ac5cee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe756da-7cc1-4e99-9442-1b5b02700cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2762cd3-0f4f-42fa-89f9-f720cba00743",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a0d740-4027-42a8-a057-000fccf04e66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "897cbe1a-76c9-457b-91ca-5e897361fed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5db85c-3fd2-46a8-a9bb-bf240cb97521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64a7c36-2356-4ce2-9319-40faec80cbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7f6207-b83b-4938-b9c8-99a389cbf9d5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5275c9b8-017b-458d-b1d3-ba675d9dfe96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5238cac1-a165-4d07-8e65-89b6529dac12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b582a9d1-3830-405b-ab9f-5a52ab45311a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13acf097-b792-4991-ba5e-d48a823f0838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e49fe73-3226-492b-86d8-8bdd369d687b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52bcedc-9053-4291-ad97-56af55973f15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcb207b2-ae5f-4db9-998a-243b9fc2faef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cb3f9e-a0cf-469f-babf-d3814f2ebe75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548ccf3e-4f26-492b-8af8-0ec621392c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55828a6-91d0-4a9e-a36d-781a26af0908",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0aead71-dbf7-4299-bd29-531bb875e501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a56ca521-0430-43d0-ad48-6a6d9a02f764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72885099-f1ca-4174-8e0a-a19d06a2d220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6486417c-cef7-4f61-a1cf-35d8a33660c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2db689-ab94-42bd-bcc0-a6188e1ec361",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a43e6e-a4a7-4323-8993-c4490172bba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bea4931e-b23e-4f66-a734-1dff0bf72688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671fe63c-5e58-4ac7-bd30-1845a6d13f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d521e1dd-b3cc-44eb-958f-c2941ec41e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ef0586-7c58-40c3-b733-6056affaf8b3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2e9f29-21f3-45a7-8bdd-881926893ca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b32e58e1-a910-497c-b34b-57f90c55db11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585077c2-4110-405e-b97d-db5af2310052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508105da-1a6f-40bb-bb70-6f788995d56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a743c9bc-c1a0-4301-80f8-99296688c8ea",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6489ba-002b-4836-a3b1-02947c53773f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "706cfbdf-f3ce-4022-8aeb-be70fec8cdd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1f6516-3468-4242-a3fc-b69163a4281e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5957c6-c67d-4752-b6f9-c910689184e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1c2193-76ed-4ebf-9d86-e442dd02d0cb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3df40e-24fd-465a-bc8f-5b846f628bdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cae51b03-f8ab-4e64-849b-e613992a2811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff17d714-84e8-4544-9798-64551bade6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d620dad-a030-4a77-a6fc-452721e6a221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bd2e74-8bd1-4f20-bacc-c12689c984f9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf9b427-878c-4f42-8084-f02ffec55069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34e16187-7fae-4e44-a571-41301fbbe66c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd75ba7a-ce51-4ca4-8518-2d14735d966f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3dc993-4b51-4213-933a-c6bd8b0123d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f44b28-71e0-4eef-bc29-537ce79bfe2c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd383e66-d153-4223-bd8d-0faa7820ed4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d4ef72a-3e5d-4238-baa6-55de61e0ef6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b182bb-be2a-4a68-8b40-877f873d9ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78cfe2a-3893-481b-91d0-22d32ecf8dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de6ab26-5bfe-47c3-a38f-6e23d33e8c1b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9562c18a-eb2f-4030-ad0e-612be82d57b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1b8a515-ee26-41b7-bc77-3107b471365e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c7262e-9b78-4bdf-bd76-200f0b87345e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80bb710-da1c-4bd6-9fd4-9d6f6a426cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bac735-2397-43cc-ad21-a128704b312d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06d55f9-a746-4c2c-92ef-aaca540f5075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d51782a8-7ac1-4085-8cb8-ec5d551bf02a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "267aa534-9dc5-4561-bbda-498ea525e4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f7222f-2a7e-4124-bdea-cde4adb72a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da06b04d-2a97-405a-835f-a0fae9733b5c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b9f108-24d9-4ecb-b401-915f0fb5940f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bef466c-c5d9-4ab2-92fa-147bccaab8f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d92562-8363-4738-8fdc-7d8ae0c35355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba08eec4-aca6-4099-994a-b963af8c44a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1437a4-47e5-485d-8b56-4844486e5599",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7d9194-aaef-4634-b7c2-6725900a1b59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bc90e68-7a6f-4eb5-b9ce-67faddd06ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5826a178-538a-4f36-a5ea-05af61f74ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569f892e-e754-46a4-8385-ab5e1ba07dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8820fee-9c99-4e92-98e2-fb48eb42b161",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e15ba4-6b26-4fb4-a91a-afe2ee39e56c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d320dd9-7165-4ed8-bc8f-6d86ff778a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4651e5b6-e6ca-4efd-988b-7fa15370ab10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b987b79-a256-4828-b449-93a269d5801a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5f08d1-a012-4a70-b56d-da3a9c1e7afc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a769b593-9ea3-4b47-b41d-2953e0ed230a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "592d760a-1816-4790-840c-e039868edac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b043b635-c6ff-4e64-bc71-3fddf503132b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c45624c-86f2-41f1-963b-26e8dd2f4a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc44a586-2045-42f0-9fbc-9089836ae635",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f88185-210c-4884-977c-4689fc3cd276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e535678-7243-4b79-80a0-9502ca3ebf13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4a110a-c5cf-48e8-a5e9-2992547cae06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a35ccc-be1c-4b5a-8661-0de7a0e213a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646457a1-32cc-443f-8642-89b19adadda6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b487deb2-a653-4448-a391-03165a4a7ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af49d293-7b6d-47ed-8d0a-f386d68d3a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d946de2-656a-485e-829e-9a0f3975af01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d20879-6b53-4c5c-b5bb-82200c909983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1764d86f-31af-4f48-832e-3332e0599022",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312f4922-a4d0-4d3d-a8ee-ebd844f97818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe87deb0-c092-4efa-9d72-6bde434e5a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24aee302-af86-47a0-b972-30056b582d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5f0b41-a661-4ac5-b260-5c1979f0de8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b44a1b-f1dd-46a0-b986-0d2679221135",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef020c2a-6d47-4554-b7c9-2b851882d2a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "000be377-22d5-4df5-9c07-dcb9b1c5781e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44860ba-a56f-4e65-adba-25341358b967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8caed638-ba57-4925-bcbf-efcdc4f2d8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda7cf34-aaff-4f28-95bf-cf1d45532d37",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346627ea-caf8-42c7-a4a7-e63733205886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24c04e32-f9cd-45c1-9c8e-4dd33b371f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cc22f2-c594-40ef-b471-9617fe4c30ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e454261-9333-41dc-8a3e-2e13bf4c3b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5e5ea0-8380-4f35-919f-e520dd5de699",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29151b53-59ce-4d1f-b27a-858936e31d4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1679276a-a66a-4908-b28e-e740a4afdea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97b5617-a039-4ae9-b6f0-36d38b413779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777e18cd-911a-488a-829c-f60dac7bc166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a802c8-f2fe-43ee-b091-40d14f110ba0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c881cd-d8b6-45eb-8579-bb978f6c1151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3344f03c-52a4-458f-86fe-d585be5652fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4729a210-dc31-48ac-8ce4-18765e95855e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62695708-8c8d-48ac-8053-eef6d31be6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ac2469-d3ac-4d45-af65-ef643ffd3df9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380977c6-857b-4214-a559-95fc1cd18cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a7f4675-0e89-499e-a026-1d02ee3c1913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c837ec0-f767-45fa-96f9-2d1e654339f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb275f3-2555-4b7f-816f-37f6a737a377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157518cc-03e6-4edf-aaf1-ed98d198b9eb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f29c13-c950-44e8-a64a-45d2b680710a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a81ebd3c-41ae-424b-8849-ff66b4d33ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f617ecb-de13-4cf3-906b-c983b89fec61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64db6ba-9583-4567-ab5b-7045dca8f133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1977b0b-4d83-4c5d-97da-de46371aa037",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b773099-4499-4660-9bf7-11a1d2dd5f41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd51bb6-c032-46af-9c85-8094873ac317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1b662b-cd6f-4e3f-aeb0-4c0d35b0b59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbff0eb-1688-475c-a31d-5f5f1c99453d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d962f24-4c8c-403a-be95-6416ca9996ab",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eda8835-847d-48f1-8d18-553514ffc19f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf98fd27-955c-4ea6-a9eb-b80841e87dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5018bfbe-1037-4f28-87ed-a4d3e2773a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4731ff3b-c29f-457c-be95-c18ba7425b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62c9a63-489b-435a-8542-1dbccf1645a0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279b8f48-d3f2-45f4-a2ec-16ed8aa88691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "221bbc8a-dd39-4b29-8df4-cbac37871b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b443943-56f1-4165-967b-def8a9508ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2897084-c67e-4fdb-9ec3-034d6c18a69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfa4d5f-1a33-4f17-a839-42ca053b9829",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3f6583-56eb-4c14-afc6-48526dee90ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5481db7-1698-4e82-81a7-1c6ebef900ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a6f6a0-97bd-41b6-b94a-becca73234ca",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1181c6-8960-4a3d-815a-3d36c701e510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f4525f-21af-4a27-8d36-a0cfd86ed1e8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9533ada1-6804-421d-8a9c-69912df025b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d8c62c4-3f5c-4c17-8588-7d9de5ec428a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d49800-efec-4ee9-8d1d-e4b6f859eb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e298d1-e547-4c79-8d72-dd984f9f7679"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbc50684-2d93-4861-b19f-0c7faa863991",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a497504-69b7-4755-8964-ddc3fac1d534"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da16f350-98b3-45df-8e4e-6536b7ed4584",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e3f6c86-7d10-485d-b009-91a671c27c5a"
                    }
                  }
                ]
              },
              {
                "id": "9ec5013f-bc1b-407b-b19a-29aef2a49124",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34de573e-1e6e-4c48-a731-6dd50e47dbf2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e79f83d-9df7-468c-ae8b-d6ac3d8dcb01",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4f3dd44f-2696-458f-9f8d-eaefafabc469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8225210e-1d94-4a12-960a-f0694b6efb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df3c70ae-1ea8-48c4-921b-4844b5156e22"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44bb27b0-55d6-48b7-aba8-251adfacf85c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca1120f5-2e25-44fd-b460-c764e992441e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2662c94a-7e77-457f-8f48-c7cfcc3d545b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e60c3992-139e-433f-af51-8b79f4276d34"
                    }
                  }
                ]
              },
              {
                "id": "0de65644-9bdd-4756-9d22-adff1dab7a44",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "232122da-0a9a-432f-b6a0-921590dfe3c6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9085d660-e93b-482b-85be-c1cb68cd4627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1a3c55d2-87da-47d3-b80c-4005af9a9a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0fbfb4-91c2-4165-ae62-609ee3599036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44d8295-db8d-47c2-8c18-1b6ffdc4c0d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "23337c2e-cf81-4ac7-b484-f323791c72c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "473c9c66-1dca-4c52-a0bd-4608cc7951b4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80038d9a-9552-425b-9bc7-36ca52ed322c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1083472f-61c6-4dfa-8cb0-16b4031b6535"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f999d2e3-ef8e-439b-91cd-e2349cfa5c68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce2582ad-ae5b-4a8e-b298-cf56fdbac868"
                    }
                  }
                ]
              },
              {
                "id": "78bcbba9-ec18-4c68-b4d0-8a6736aea335",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3d95c6c-b13a-49d1-ac92-8c42a0af8da2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3f2ce57e-51e8-4920-a3a9-aa5d679a2f13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdc1bc91-67aa-40c6-810a-6468f3980d2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27eb7f92-3ed7-4a7f-b0d3-bb690e500165"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fe4f852-5abd-4ce8-9a29-332ce9cbd9a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "54533cb8-e131-49f4-92e2-12c86700d9f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "057d7f01-09d9-481d-82a3-2635dba0c347",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c36bfa4f-5eec-4b68-82a0-f35977ecdfcb"
            }
          }
        ]
      },
      {
        "id": "804f3aa8-f33d-4cbb-b92b-40014c90b3bc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b94fd5af-e83e-4e96-b83f-3fe15eefd00a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "290fbd67-91bf-4b02-b42b-cdeb89219914",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "504a8947-01f1-452b-97ee-a90b4b82e147",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2fa0a2-77f2-436d-93ad-368c13dfddee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "edc4d808-bc35-4907-acf8-81e2a25eaeeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75584450-f85a-4d59-852f-ceeda9a7429d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "907fde71-9717-4c69-b4e2-d694e54c70b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2dfab964-32ff-4826-8be7-7613a6837739",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15a916f9-96f3-458c-a938-1d849b75c35b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "816763f3-5b52-4d47-9ee3-7612c567a96c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "813dcb1b-92c1-4637-87e1-1e8a94fa5c2f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5669848-b988-428e-806a-74895a2c405d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fbdb16bb-3a8e-4e51-99d1-2009daced3dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18aca9ae-0e4f-4326-98ad-c920fcdbd2ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b14ab9f1-3067-4a48-a276-9a5f2cb776e7"
            }
          }
        ]
      },
      {
        "id": "5e4229c4-6967-4614-b99d-4df101833f6d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "49d1684f-65c4-4a8e-84bd-5df29f83e934",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1300e615-42af-49f5-8c35-3354d5cf4e6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62d2ef2f-b457-421c-b24e-92edbeb599e0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de1e3df-52bb-4e1d-9412-f3cb8666be5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e2d51a0-1bd2-4946-897b-44b975188455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf6cf00-ebe6-45f6-bdae-b58ff6351e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a84a36a1-59d9-42f9-8668-2fe7f4bd7115"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c278802a-d3be-4afe-a291-08c0d3d6a737",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10371534-3a7a-4fb7-804e-0408352fe856"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1a03d9c-e99b-42fc-9194-4960e133dcbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26633b95-2c8b-4ae6-84f6-7166b8cc4e88"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b142e5bf-5bcb-48b9-acba-275be5fe4c4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "172f5902-7168-42ee-b86e-e30b899948d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9b6ac83-0a30-4b58-87bd-94ad49f936eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb7d9ec3-2d25-423c-87a4-28e6c8a02a17"
            }
          }
        ]
      },
      {
        "id": "4fe864a6-1171-4a63-a978-a3e036807320",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "62c8cbb8-ac65-45da-aca4-6e195db1b326",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0949bcff-5475-4109-96c3-09f1d5f05769",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f99406b-39fb-4a78-bc11-4921b4c36b3a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06938528-f7c4-4030-a056-2eda0b3a4267",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d0307ef-bc63-4e17-ae3f-a4bd134a075c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af762be-f72c-430a-b829-16a5be1c9fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06b6ace9-d81c-45c9-b72b-4d2314f564a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19c02265-fde2-4fd1-a999-331a294d830f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61938800-f2fd-4d15-a839-26c32b42c2da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd3906cf-b93e-4eb2-9552-af274fc6de7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13bc2fab-f0ec-4406-aafb-a7025a96c25c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5209cdb3-1655-4d94-addf-ed073af3c92e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "243fc567-639e-49dc-80eb-934abc2c40f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1dae1bdb-f192-4d91-be71-bafbc8408a48",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1914467-653e-4e2e-897e-c582d8cc5d8b"
            }
          }
        ]
      },
      {
        "id": "95b99f4f-f2fb-4a41-bcd7-f509b733b171",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e57bdcfc-48ba-4390-87ad-4a9617496804",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3163a56d-cdab-4b49-8627-f89c055cbbb7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ca05a67f-042c-4259-b608-c44b46993993",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50619cfb-4a6a-4f5a-a1a6-e6b0c778f4fb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab15f26d-1cf4-4521-9cea-c8227f924c31",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 312.06690140845063,
      "responseMin": 8,
      "responseMax": 7279,
      "responseSd": 854.2610259480299,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693787587776,
      "completed": 1693787688349
    },
    "executions": [
      {
        "id": "c83e7204-5f10-41d2-bf27-bd36aa551294",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b8fb8549-94ad-4388-acc1-eac7fb09a5ae",
          "httpRequestId": "cccf460b-61ec-4685-afd5-6e12ec6bc8f5"
        },
        "item": {
          "id": "c83e7204-5f10-41d2-bf27-bd36aa551294",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "65581154-dc3f-46d9-b99f-e76527a37c33",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "26ff1242-6719-4730-b8f2-41588e359ae4",
        "cursor": {
          "ref": "a1455b18-c928-4713-a477-13b6c51e6db3",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aa223923-b539-4b31-bde5-fce747c0943d"
        },
        "item": {
          "id": "26ff1242-6719-4730-b8f2-41588e359ae4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "55d95c4f-5177-4d8f-92c1-aa9ee8f0e398",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "5a653279-ddf3-41f6-8edd-5089bb808131",
        "cursor": {
          "ref": "0649eeaf-54be-44a1-88df-d2355ed85bc0",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7639c2bf-d5db-4b5a-bf4f-c6432648e456"
        },
        "item": {
          "id": "5a653279-ddf3-41f6-8edd-5089bb808131",
          "name": "did_json"
        },
        "response": {
          "id": "e90e1970-e495-40da-8490-4ae2918099ae",
          "status": "OK",
          "code": 200,
          "responseTime": 1554,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef70635-ae38-499a-b343-99ce43dfaefb",
        "cursor": {
          "ref": "892d7286-2319-4b40-b423-c36627e08b02",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7c78ddb8-5981-45d5-b6f8-c8389b176aa4"
        },
        "item": {
          "id": "eef70635-ae38-499a-b343-99ce43dfaefb",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b6ab998-2316-4f68-a255-aa9bf0722b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef70635-ae38-499a-b343-99ce43dfaefb",
        "cursor": {
          "ref": "892d7286-2319-4b40-b423-c36627e08b02",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7c78ddb8-5981-45d5-b6f8-c8389b176aa4"
        },
        "item": {
          "id": "eef70635-ae38-499a-b343-99ce43dfaefb",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b6ab998-2316-4f68-a255-aa9bf0722b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3a5f42-d589-4141-8655-26ed79444783",
        "cursor": {
          "ref": "63e6f9f9-f9a6-48a5-9717-a7669075823c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5e0fa9c8-2bc0-4e63-81cf-ee0acc79e15b"
        },
        "item": {
          "id": "4a3a5f42-d589-4141-8655-26ed79444783",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7b667235-09e6-4b49-a648-1405494094a4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 297,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de73613-5d42-44aa-bb37-df626d83dd12",
        "cursor": {
          "ref": "1ef707be-4594-4070-9a8c-8f3329e84cec",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "982bdf7c-4c20-4d95-83af-0e15e80191f7"
        },
        "item": {
          "id": "1de73613-5d42-44aa-bb37-df626d83dd12",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2ed55edb-9cd4-4429-b2b5-d1f6ab94aa20",
          "status": "Not Found",
          "code": 404,
          "responseTime": 255,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b524786-c549-4b13-ae00-9a0702896aab",
        "cursor": {
          "ref": "9303db13-d870-4bd4-b365-6e3d5d2767bc",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e549758c-2e60-4424-ad7f-17ffbc0f177a"
        },
        "item": {
          "id": "9b524786-c549-4b13-ae00-9a0702896aab",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "48938a33-6742-4055-9001-db142ae108ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d3cdd3-2cc8-49dd-906d-8a406f69b6ba",
        "cursor": {
          "ref": "be38cb33-d56e-4b0f-8b7c-8e27f7370b4d",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "92202eb7-2a64-4666-9e3d-14a4c5730cb8"
        },
        "item": {
          "id": "73d3cdd3-2cc8-49dd-906d-8a406f69b6ba",
          "name": "identifiers"
        },
        "response": {
          "id": "92e430bd-710c-4f65-9b94-5e9bf6b956d5",
          "status": "OK",
          "code": 200,
          "responseTime": 1199,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64a7a77-cb41-4330-b8e3-18f0c9d2222b",
        "cursor": {
          "ref": "f0a3444d-4c4c-4f90-ba87-2d1bb56541e5",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0d5299aa-d250-47a5-baf1-4912b3140231"
        },
        "item": {
          "id": "c64a7a77-cb41-4330-b8e3-18f0c9d2222b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0fec196b-5311-4096-a071-a39814e4c59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de64dfd-a5b8-4158-b098-3f073226df25",
        "cursor": {
          "ref": "cd40ea3c-ee03-4f77-b9d7-cc3fca469cc6",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f9675843-dcc5-494d-9412-bfe7aed0d7b3"
        },
        "item": {
          "id": "8de64dfd-a5b8-4158-b098-3f073226df25",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a9c536e7-4336-4dbe-9e93-327d3887c6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e68ffd-73b6-4340-be38-c0c9670f97f7",
        "cursor": {
          "ref": "5b5bac32-d206-4e1e-b866-ec8ac768b290",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "93ca4995-20f8-4f3e-8a85-be69334e2125"
        },
        "item": {
          "id": "77e68ffd-73b6-4340-be38-c0c9670f97f7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7bc59b34-dbbe-40e5-8802-c6e5931db7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bef8eb9-1f59-49a2-8f51-fa7d9bc01439",
        "cursor": {
          "ref": "caf3bfdf-5cc9-45b4-9445-8531bf808e1b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "29397062-d5ee-482e-bb89-58d863218c41"
        },
        "item": {
          "id": "7bef8eb9-1f59-49a2-8f51-fa7d9bc01439",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b1d7fcdf-f79e-4a0d-ad85-becab5b042f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a85e99-0407-4435-8435-8a179c30590c",
        "cursor": {
          "ref": "da9dc219-c8fa-4772-b180-03215c356f7f",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "352ac5f2-f50b-4d10-b8ae-8f0691e59381"
        },
        "item": {
          "id": "04a85e99-0407-4435-8435-8a179c30590c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fbe57d3c-8607-4bb1-8d3b-94309ec0690f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9922d897-5b8a-4231-81a2-701efab99c14",
        "cursor": {
          "ref": "a773abfc-4594-4ff2-ade2-5bb20b7ce710",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ec6c96f3-d39e-4cf7-96fd-31a033516f45"
        },
        "item": {
          "id": "9922d897-5b8a-4231-81a2-701efab99c14",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7cae8f66-9bd8-42f4-9fa4-e8401bf4044a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e360458-a1c0-4730-aeed-ebd879825e71",
        "cursor": {
          "ref": "1c003fb1-7a6b-4c98-aa00-f1add3ad2c34",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "199c8e9e-bcbd-44a1-be68-f901a8ba00a1"
        },
        "item": {
          "id": "5e360458-a1c0-4730-aeed-ebd879825e71",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f1f67e30-5910-438d-8bcd-a08346ff13d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20baabb-396c-44a8-a389-b94a4a22f27b",
        "cursor": {
          "ref": "dfb594a9-7497-4a52-89d0-6c8a7b00d737",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e9078a4e-5651-4447-a894-4e8467a71607"
        },
        "item": {
          "id": "f20baabb-396c-44a8-a389-b94a4a22f27b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "04ccd56b-f5eb-4457-a54e-0cbd75914554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27f9fbe-08ef-4966-aeb9-65c52eb945d2",
        "cursor": {
          "ref": "1101f8dc-db74-481d-b37c-57863a2dd017",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e1ea81d4-1e42-46a4-a085-8de5724c5bd9"
        },
        "item": {
          "id": "b27f9fbe-08ef-4966-aeb9-65c52eb945d2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "42a4b3c7-8f5d-4767-a7c0-e92289bb9220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a43d407-44f1-47f1-911a-99b74b23c3de",
        "cursor": {
          "ref": "b21d3713-fded-4f82-bfa9-bb495a7f75b6",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "578b53b1-caf0-4422-8a9b-c6130e1057ac"
        },
        "item": {
          "id": "3a43d407-44f1-47f1-911a-99b74b23c3de",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "38939567-a39c-4f37-8020-3b3b5de3a5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2a3beb-0776-44ae-9fb9-38d765214064",
        "cursor": {
          "ref": "242d7821-a938-4e5a-bb5b-2a5b22aece6e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cf81ba82-b065-4e60-bd95-8a1401184442"
        },
        "item": {
          "id": "ce2a3beb-0776-44ae-9fb9-38d765214064",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a17948b7-d92c-4a53-b393-46c8b365233a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6234b93-ab8c-4822-ac74-42a507b0a0ab",
        "cursor": {
          "ref": "239670ee-0948-4e12-873f-f23f04eb1269",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "69c921cf-282e-4823-93c0-7c089cefe89a"
        },
        "item": {
          "id": "d6234b93-ab8c-4822-ac74-42a507b0a0ab",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a8e8112c-85c7-4a46-8be0-730788ce5b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10499ea-db39-435c-8c95-e86c3b572141",
        "cursor": {
          "ref": "96f39acf-4b93-479f-9c23-c266bd1c7fd1",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fe9bfc10-8093-4362-9be8-4db64e280e1d"
        },
        "item": {
          "id": "f10499ea-db39-435c-8c95-e86c3b572141",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f7bead2b-c674-438e-9bfd-ba124420f5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f53f375-b1b0-4f4f-b77f-4c6389540fd1",
        "cursor": {
          "ref": "9b48409e-b536-4737-ba76-8ea9733490d0",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6f4eb0b3-71ea-481e-b6de-7a952501cabf"
        },
        "item": {
          "id": "5f53f375-b1b0-4f4f-b77f-4c6389540fd1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "df2fff7d-ac72-4c53-b3c2-0a9587958770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eaf9790-b054-485b-9aa2-094a217b73f7",
        "cursor": {
          "ref": "1ad1cb7e-c6ff-4210-8f11-8e73f2683032",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3b498f40-ace3-479a-8f68-b7512bb64a41"
        },
        "item": {
          "id": "4eaf9790-b054-485b-9aa2-094a217b73f7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f5fb8e9d-523e-4221-a7b0-e6b0b2accad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a06e0d-f795-44b9-a544-2819142733b2",
        "cursor": {
          "ref": "d1760e07-f9eb-401b-9c89-3a12308a96e7",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "94dc581c-723d-400c-bd0f-e2b90176d54d"
        },
        "item": {
          "id": "c4a06e0d-f795-44b9-a544-2819142733b2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5c18ee72-023a-4aa9-852d-abd8fa3533e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f64e08-2bcf-44ff-8b6f-992bec9f8797",
        "cursor": {
          "ref": "b7ba8dff-a9ec-44ed-b53a-8d0bc44efd90",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "eebd234d-50a2-4fa1-8437-0c5a682f5d6e"
        },
        "item": {
          "id": "d0f64e08-2bcf-44ff-8b6f-992bec9f8797",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "89aa3726-2cf3-41a4-b087-5898487772ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95babb9c-5af2-439b-933c-b3c5b379a7ed",
        "cursor": {
          "ref": "7c7e5dd4-08f1-4715-8b4c-69fb41630a29",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c93e5c60-7497-40cd-b2cd-ab30e79757fd"
        },
        "item": {
          "id": "95babb9c-5af2-439b-933c-b3c5b379a7ed",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dc5e92a3-c968-4dd3-8cba-7ff09f72cc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d344436d-1cc3-4827-a38e-347d8cb316a9",
        "cursor": {
          "ref": "33e01903-4052-4621-b53c-7568146351c5",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0bf1f814-6704-4726-b3d9-4891083dddf7"
        },
        "item": {
          "id": "d344436d-1cc3-4827-a38e-347d8cb316a9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "10847f26-87f2-4cfa-b792-b15ebc9604da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf28950-d08a-4b55-a726-de34d6dbedd9",
        "cursor": {
          "ref": "504a822e-e808-4a58-b23e-86e41058536d",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "92f42c92-a9d0-45f9-b04b-965359604f26"
        },
        "item": {
          "id": "8cf28950-d08a-4b55-a726-de34d6dbedd9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "62bfb024-7777-4ebf-b78e-a2e53a99d7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067ff311-02f2-4831-a7bb-ead3de8b0069",
        "cursor": {
          "ref": "e67418f2-357c-4d28-88d0-eadac5f6909b",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2d3fd137-b10b-4108-bc58-aea3574af1c1"
        },
        "item": {
          "id": "067ff311-02f2-4831-a7bb-ead3de8b0069",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f2adbabf-ff3a-4e31-82e5-fbfa262edd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6e742f-703d-407d-8b4c-7b7d6ec47c1f",
        "cursor": {
          "ref": "98b18de5-b21b-43f7-bb0b-652374164567",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2b7997ad-0807-4ff6-8bbf-c6e87c4dcaae"
        },
        "item": {
          "id": "9d6e742f-703d-407d-8b4c-7b7d6ec47c1f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3f1147b7-2923-41fe-97e8-336df433d075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d682141d-b0b4-4db7-bb51-e813544dd337",
        "cursor": {
          "ref": "ae03bc33-e30c-4a6c-a9ee-878fc87923a9",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bb847410-e503-4749-a799-624c13037ab4"
        },
        "item": {
          "id": "d682141d-b0b4-4db7-bb51-e813544dd337",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "edb90aac-6b81-4c70-be1f-7280e010bf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf577fc-466e-4eba-b5f4-a62317e314f3",
        "cursor": {
          "ref": "82e8b100-d79e-4c46-b492-2684279b4338",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d6e61cb1-03ab-4fab-80c9-c91fe904cb7e"
        },
        "item": {
          "id": "3cf577fc-466e-4eba-b5f4-a62317e314f3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "88819fa2-3be6-441f-8f24-4c5188278856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e1edcd-15f2-4e84-bee2-1c5d5293de43",
        "cursor": {
          "ref": "296465d9-7724-4fa1-9f64-0b913c1ad06d",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e37fa660-cf95-40c0-b70e-d4079075c79d"
        },
        "item": {
          "id": "a3e1edcd-15f2-4e84-bee2-1c5d5293de43",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0e261be0-74e3-4e83-b5f1-5321f96d2202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268ac68f-9ace-4ab0-95ab-f96b45e37075",
        "cursor": {
          "ref": "23effe1d-b39c-4ceb-b432-fa219f065519",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d120a9fc-453a-4b25-8206-6b48acf1f2c5"
        },
        "item": {
          "id": "268ac68f-9ace-4ab0-95ab-f96b45e37075",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b63163d4-8b1f-4f15-b71e-98bb87126991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6325e7d4-4b20-4ce3-8fe9-9136f3f9a813",
        "cursor": {
          "ref": "78ac067e-4627-4f55-8c6e-ab018dddf3c7",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cc3ee47b-9cc8-4d56-a3ca-d9b7cb2d5ba9"
        },
        "item": {
          "id": "6325e7d4-4b20-4ce3-8fe9-9136f3f9a813",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a2a20ffd-f91b-489b-95bb-7f0d90aec778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e769ef-4a92-48af-8325-737e52da9f55",
        "cursor": {
          "ref": "ce196114-1f86-4797-b56d-e978d06576e9",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "37611134-0532-4bb8-b79e-6f546a05ad49"
        },
        "item": {
          "id": "63e769ef-4a92-48af-8325-737e52da9f55",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "77707fc1-04a2-434f-8b9b-dfa82e944cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c0b8d2-66c1-40c1-9cc9-0b9c986f0988",
        "cursor": {
          "ref": "7062671a-6a19-4718-af2a-c3ec67de1fba",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "642af9cd-4aa1-414d-9503-91ec5cdaa878"
        },
        "item": {
          "id": "d0c0b8d2-66c1-40c1-9cc9-0b9c986f0988",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9a8a2104-79c3-4456-a5f8-e722dc235a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd8a594-fea6-4483-b3b6-78c9b22c69ce",
        "cursor": {
          "ref": "0963116b-37f8-4303-9f70-a9a61b1e1700",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1b1ac00c-0136-4340-ad62-b66984560962"
        },
        "item": {
          "id": "4fd8a594-fea6-4483-b3b6-78c9b22c69ce",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8c06b778-8f32-47b6-93ff-327869ed3336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026e8acb-5c4d-4119-b6e8-9d77be8f4b5f",
        "cursor": {
          "ref": "ea3fd777-8d5c-4429-8791-633a04ed597c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3a7093e1-4220-4692-8ead-0213312a501d"
        },
        "item": {
          "id": "026e8acb-5c4d-4119-b6e8-9d77be8f4b5f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d2f5e085-0e8f-4daf-a881-7d414b545db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a55dc20-2781-4ffd-9eba-121ed557e42d",
        "cursor": {
          "ref": "9687213a-583f-4589-9e0e-3ed19c767f7b",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bea351aa-aff7-4083-be47-8d9099d2b09c"
        },
        "item": {
          "id": "0a55dc20-2781-4ffd-9eba-121ed557e42d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0980cd9b-43ae-4205-a496-fc828cc8cec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49cdb12-5647-46e8-ad25-622afd1f1d95",
        "cursor": {
          "ref": "49a16513-798a-49e4-bf8b-a949c762879e",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "98884942-3d52-4abe-8d3d-1a014bf93181"
        },
        "item": {
          "id": "e49cdb12-5647-46e8-ad25-622afd1f1d95",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "18e57eff-78fd-4eaf-aff0-195ed69af49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8946311e-bb64-490c-9d92-a55d47e49ee7",
        "cursor": {
          "ref": "21416147-1ba3-460a-aa94-037d2ed6c822",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "928b748b-1a53-417c-b784-285cccf1c4db"
        },
        "item": {
          "id": "8946311e-bb64-490c-9d92-a55d47e49ee7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e9f6f08f-8726-4363-8541-5cde4cba44f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b8474f-7d90-4063-a105-e12b5637986e",
        "cursor": {
          "ref": "fc6aafb1-2680-491f-8ab2-c4937843f242",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9fbf6c79-dc38-46fa-9764-e670bc60c4cd"
        },
        "item": {
          "id": "79b8474f-7d90-4063-a105-e12b5637986e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2d0cd076-f6e7-42ab-86e9-fd7236f2835a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c3a9ff-acd4-4154-b9fa-7f54323bb1ff",
        "cursor": {
          "ref": "d14c5ae1-967b-42ed-8be5-79434d3cb24f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2cbe2559-fda3-4602-8cd9-4cad8e129861"
        },
        "item": {
          "id": "87c3a9ff-acd4-4154-b9fa-7f54323bb1ff",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "26915fb7-14a5-437e-a401-9ed2d9ea3794",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 592,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215ddf19-6189-4661-bf4a-9e9a6b07788f",
        "cursor": {
          "ref": "97de8b29-ee8e-40e6-ae9d-26af7c0cd948",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a057767a-6cd7-4db1-8ad0-4789cb8e7d71"
        },
        "item": {
          "id": "215ddf19-6189-4661-bf4a-9e9a6b07788f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f8a96ea8-1cc0-4d05-b6dd-3f7de20f3014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a26073-0651-4370-9348-70c3e2571da4",
        "cursor": {
          "ref": "dd747abf-566f-44ec-8e10-d2b586205e13",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "becb46b3-247a-40ed-962f-d523e2bb817a"
        },
        "item": {
          "id": "f5a26073-0651-4370-9348-70c3e2571da4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e4779544-a949-4091-a11b-eaa2952072ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff8384b-a174-4573-b922-b221127e5e99",
        "cursor": {
          "ref": "8731016f-08da-429c-b6a8-435833faad46",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8f701b04-2270-448a-9ab0-4583c1fafb5e"
        },
        "item": {
          "id": "3ff8384b-a174-4573-b922-b221127e5e99",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5d18a378-c460-4ecb-a2c3-f4849e664e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f1ca29-a16d-4ee9-97e0-fc834d5f412a",
        "cursor": {
          "ref": "1550cad3-be92-4d2b-a461-4cdd3065194a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "126a3f6e-16db-4630-b132-fb0051347b48"
        },
        "item": {
          "id": "a9f1ca29-a16d-4ee9-97e0-fc834d5f412a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fe24afdd-9309-4f3f-86a8-4b8722292319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d16692-516c-49af-8564-7158bae00213",
        "cursor": {
          "ref": "41df58f6-29e0-45f7-a935-3fc88eb58822",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "29501c5f-4b03-421d-88b1-1a17eeb8048b"
        },
        "item": {
          "id": "b6d16692-516c-49af-8564-7158bae00213",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0a83082f-4e90-4042-af2a-e6e8b09e3148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53601ccb-61fb-48c3-8011-e6324503d871",
        "cursor": {
          "ref": "21e48d42-785a-47f5-aa32-125a93c1c87c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ef6230c6-329f-489e-87a4-e97ab00f466a"
        },
        "item": {
          "id": "53601ccb-61fb-48c3-8011-e6324503d871",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "10fd1a45-2247-4364-a586-b2d127d4cfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af51fb0-cbd7-4578-81d4-33ac80cc8b7e",
        "cursor": {
          "ref": "e54ba5cc-7f1d-429f-982d-aa154a300c7a",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7f82dd7e-b8d0-476c-90a7-b239ca84310f"
        },
        "item": {
          "id": "4af51fb0-cbd7-4578-81d4-33ac80cc8b7e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b58f8ff5-a04e-4536-873b-ba9fe44a08d8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 576,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b57687e-99ea-4ae9-a22f-321fb0a921cd",
        "cursor": {
          "ref": "86d51b69-d9f0-4098-a35a-3f4cb41c1d95",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fc1c99af-3b7e-4c45-bb3b-728a4cb59e43"
        },
        "item": {
          "id": "3b57687e-99ea-4ae9-a22f-321fb0a921cd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d0450f9f-c2b9-409d-bf98-95ca0ee9f732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef5feea-04f2-4bd4-a6db-552a95e0c3fc",
        "cursor": {
          "ref": "54ba7e6d-0b30-4c30-b9c5-8e9876c033a2",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ef1ef35f-fcf5-4624-87a4-f120eb741280"
        },
        "item": {
          "id": "6ef5feea-04f2-4bd4-a6db-552a95e0c3fc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "50b85092-f4c7-4e90-8bd9-26073a12a2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6843fc83-751d-446e-9da3-e7d6355807ca",
        "cursor": {
          "ref": "438cad0f-6b44-47fd-8668-2d4533dad808",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fd206105-4009-4c2a-8af4-8a7924e5a966"
        },
        "item": {
          "id": "6843fc83-751d-446e-9da3-e7d6355807ca",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "05510209-e5e7-435a-a16b-30ef2faf0ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bf23f0-ef45-4e87-8f42-bbf96f89f6cf",
        "cursor": {
          "ref": "76bb7726-225d-4c95-bc75-c507c00b98d8",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c9ff4a0d-9d5d-4c00-a556-a21e16d18422"
        },
        "item": {
          "id": "d1bf23f0-ef45-4e87-8f42-bbf96f89f6cf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "03576674-d4e0-471a-9e46-a6fd002d6179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e5ae05-032b-4e1a-9f3a-02db995956dc",
        "cursor": {
          "ref": "2098dcbc-8a99-4a8c-937c-d4e776aaa09c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3646afcf-e2a4-4af7-b238-8f9d74a3f9cb"
        },
        "item": {
          "id": "c7e5ae05-032b-4e1a-9f3a-02db995956dc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9136b044-3844-4e93-b064-952ca0458488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d236b9-efd2-401e-af84-6f643c12972c",
        "cursor": {
          "ref": "00541308-371a-44bb-bc29-93ee2e1ca87f",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9b1deb0f-abbd-479e-a0e9-46be9b0288db"
        },
        "item": {
          "id": "64d236b9-efd2-401e-af84-6f643c12972c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0918c9b1-55f3-43d8-90c5-8328dc912a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c4192a-468f-4c33-84aa-6183a18ac262",
        "cursor": {
          "ref": "693c7ec8-3f7a-4201-9d3c-a861397fe307",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "538a4baa-dbd7-4dff-9a30-611401023820"
        },
        "item": {
          "id": "b2c4192a-468f-4c33-84aa-6183a18ac262",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7c240f40-80e0-47ab-bc72-85a0655c51d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdf5445-ceb8-40c2-ac65-ebc1c8811b71",
        "cursor": {
          "ref": "ea889593-4afd-4979-8730-100b4575dfe2",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cc1124ec-7589-4e10-a66e-2eb53ae1ee98"
        },
        "item": {
          "id": "abdf5445-ceb8-40c2-ac65-ebc1c8811b71",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bc1531c6-e821-459b-a1b8-7f208f7b5390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfea1a40-2b03-4e50-95a1-9638fc8b2e9e",
        "cursor": {
          "ref": "6c0ca768-6c91-4de2-a1b9-1547fd6790a3",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2405ce70-d1f5-4fc0-b7bc-02610745e2d6"
        },
        "item": {
          "id": "bfea1a40-2b03-4e50-95a1-9638fc8b2e9e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "34a82e61-49f1-49bc-a57c-061201c5ed09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fce908c-c0fd-42b3-abb4-fd1eaa99ad0a",
        "cursor": {
          "ref": "8617fac0-8b60-4e14-a937-5881e75c98a6",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "716faf71-a26c-4d1c-abef-85f6f9061324"
        },
        "item": {
          "id": "0fce908c-c0fd-42b3-abb4-fd1eaa99ad0a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "550f2881-ecc9-4665-bb34-96fbfe40d425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afad5366-3cd0-4530-8ab0-33f87e87f4c5",
        "cursor": {
          "ref": "1d2db2fd-1c72-434e-bc13-3ce3d4e68991",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0835d4e3-4671-4969-9c35-274b7ee8f869"
        },
        "item": {
          "id": "afad5366-3cd0-4530-8ab0-33f87e87f4c5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a2107fd7-c0c0-4502-af06-0f418224490d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51d14b0-1d2a-4871-8836-a64aff4e7ace",
        "cursor": {
          "ref": "77732e24-0b4b-41ee-983b-465a22fd6d31",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b39b6145-3e93-495b-9bc7-6752fc426db2"
        },
        "item": {
          "id": "f51d14b0-1d2a-4871-8836-a64aff4e7ace",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "84834ec2-c603-4a88-930c-2963e827f785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956d0238-977b-4e74-a54f-c8f62d3c37cd",
        "cursor": {
          "ref": "45bded74-5c0f-4cfa-9363-f75d3253c62a",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "eae5c201-b30b-4d2f-97fe-1502d402e220"
        },
        "item": {
          "id": "956d0238-977b-4e74-a54f-c8f62d3c37cd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8b09fc2e-5b39-4c3d-9afc-bce91bb05574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5043e255-24f3-475f-a24b-03b6ca11bc8c",
        "cursor": {
          "ref": "0cdc63e8-d682-421f-907b-101a1ced3e80",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ccb75785-4dc5-4202-bcf9-6e15470b935e"
        },
        "item": {
          "id": "5043e255-24f3-475f-a24b-03b6ca11bc8c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6ad86367-efcc-4175-a136-676f0a307b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b8b917-4e48-4b08-80b2-046b826c857f",
        "cursor": {
          "ref": "2eb0e868-7bb1-4d0c-a67e-0a8ced8b2dba",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "00aaa816-fb6d-4049-bde5-01df035bc3bc"
        },
        "item": {
          "id": "60b8b917-4e48-4b08-80b2-046b826c857f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "395debf1-b6cb-4ba6-a491-9b2e4fd3e2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06025a5f-9086-4cbd-ae55-7eba059967dd",
        "cursor": {
          "ref": "296580e0-8700-44f5-adce-7d30fa2447e6",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4a7fbcf4-a8f1-4fbd-af82-aac9bc5fe4cc"
        },
        "item": {
          "id": "06025a5f-9086-4cbd-ae55-7eba059967dd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4577d35e-ae0f-4da7-a897-a5cd1a0c44ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a765c82-8660-469d-a6dd-893761b32ba8",
        "cursor": {
          "ref": "89f63515-8f48-4a6a-bdef-be2c0fbf13a5",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a75529dd-7309-42fb-a885-cfe4d15977c0"
        },
        "item": {
          "id": "4a765c82-8660-469d-a6dd-893761b32ba8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4e4fcb8f-beeb-4838-85ee-705dec0518e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62acb717-d54e-4e12-890c-6b3f89f9e07c",
        "cursor": {
          "ref": "cede10ad-9c60-4fd2-a91d-500b8a1389a5",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8efc08d2-7842-4cf4-a2cd-f0554a8fab01"
        },
        "item": {
          "id": "62acb717-d54e-4e12-890c-6b3f89f9e07c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "66e157c0-1029-4b6e-88a0-96eb8fa27880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d57db2-f154-4c49-843e-ebbfeaeae6d3",
        "cursor": {
          "ref": "f9ac7716-79c1-440a-9aef-c3c476711e5e",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b04085b9-44e4-43ea-9691-0a153d7d237f"
        },
        "item": {
          "id": "75d57db2-f154-4c49-843e-ebbfeaeae6d3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7ba06b27-5019-43c0-910b-831021cb3b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499c973d-b948-4ba9-b9e3-96202e76955e",
        "cursor": {
          "ref": "aea23aa5-8f5b-4363-8e1d-7544ffce2143",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "44c45fc2-81d1-4a06-a869-6e8d220352e9"
        },
        "item": {
          "id": "499c973d-b948-4ba9-b9e3-96202e76955e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9d3b15b3-8805-4d73-b872-40566cb90a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29125cf4-da0a-4af0-83c4-2e19195cbb1f",
        "cursor": {
          "ref": "ed840a3f-3637-4784-819d-5668b831a6dd",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "34212670-5b17-499c-a366-a5ce155e71ac"
        },
        "item": {
          "id": "29125cf4-da0a-4af0-83c4-2e19195cbb1f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "61b39a85-61c9-470d-8790-41acf5eb871d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede0fc5c-b02f-4432-a900-d6a66a10abdf",
        "cursor": {
          "ref": "92427d9e-8550-4c52-8d2b-ee49331c504c",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1ad8b394-7309-4360-b7cf-afb11d0f9e27"
        },
        "item": {
          "id": "ede0fc5c-b02f-4432-a900-d6a66a10abdf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1816374e-0de6-4291-b514-4f75c867f95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963abd26-3f88-4251-9261-6ecf69bf8af8",
        "cursor": {
          "ref": "32dfa9c2-a7e2-414d-a648-b139546fe38d",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "faed4b85-93c4-4253-8d80-af9dc330bf60"
        },
        "item": {
          "id": "963abd26-3f88-4251-9261-6ecf69bf8af8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ffa83c10-f9ed-455e-8eec-64dac1a50e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93124b49-64b7-44b6-91bd-f487643a78fb",
        "cursor": {
          "ref": "42513921-591d-4701-b276-6ff55e70acf1",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "934dd34f-df91-4886-9e3f-f0f48b5bef73"
        },
        "item": {
          "id": "93124b49-64b7-44b6-91bd-f487643a78fb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e2145e87-2e60-485e-bc08-864df42b778e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91927b48-6271-4b23-bfd5-5fdcf83e8bbb",
        "cursor": {
          "ref": "ffc0df14-cfcf-4f8f-a6f5-5697847aa330",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "472d2b86-fae9-4427-87d8-f27831df32df"
        },
        "item": {
          "id": "91927b48-6271-4b23-bfd5-5fdcf83e8bbb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "167976e5-c317-4e5c-8797-bfe55b771790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06893f8f-5666-4fdf-93c0-6edcb9b73f5d",
        "cursor": {
          "ref": "c6b5b851-9684-4e99-a630-988a0fd20bac",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "962ca0e2-0759-406b-98bd-3d517e727848"
        },
        "item": {
          "id": "06893f8f-5666-4fdf-93c0-6edcb9b73f5d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0e59eca0-1b3a-4559-bf93-b973902712b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ffadae-b4c4-4fc9-87cd-89e2f87b553e",
        "cursor": {
          "ref": "c661c353-398b-44f9-bc8e-033d79bfa14f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f63c3748-e9b6-42b8-8392-bbced7522c07"
        },
        "item": {
          "id": "64ffadae-b4c4-4fc9-87cd-89e2f87b553e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "97bf10dd-3592-4034-9e48-69c7aeb036fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f088f49-5d04-4bc4-8705-657ad180ee20",
        "cursor": {
          "ref": "a103b6c9-c574-4bf7-b4af-8919b32641d8",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ff21ab79-69e9-4d84-997b-14cd4ab5b819"
        },
        "item": {
          "id": "2f088f49-5d04-4bc4-8705-657ad180ee20",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "45295063-606c-4328-b5af-2ee82a702bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd33c78d-98f8-4bf1-82dc-665c5678ab45",
        "cursor": {
          "ref": "92fda47a-f52e-4cc4-9133-323c8d7f55e4",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "797ebe0b-017d-4f8f-8a79-fe5dd96b9952"
        },
        "item": {
          "id": "cd33c78d-98f8-4bf1-82dc-665c5678ab45",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c2a9fee1-e63d-4227-b4dd-18be1f96aa0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebad913-7660-4558-9fb0-006dc6595eae",
        "cursor": {
          "ref": "f113ff97-7b4c-47b0-88f8-4cef0c6d4f55",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ee24117e-14fb-4e43-8207-92f542527766"
        },
        "item": {
          "id": "bebad913-7660-4558-9fb0-006dc6595eae",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4a10f9bf-1698-4cdf-8cc7-0b9c4f33eaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7ff8bd-b75b-4697-8eed-6c76338d46bc",
        "cursor": {
          "ref": "12829c55-d320-447d-bbc1-58ea852f0de5",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c634cbe5-b4af-4d30-8ef6-15064ecfa6f6"
        },
        "item": {
          "id": "8a7ff8bd-b75b-4697-8eed-6c76338d46bc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "14db05f3-9236-4212-882d-ab62089f8a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3730f431-1ee6-4afd-9707-9c7903f9820f",
        "cursor": {
          "ref": "a2f5fe4a-580f-4d67-a172-583889b48719",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4b2309e2-5264-4354-b4c0-76c12f1cce5c"
        },
        "item": {
          "id": "3730f431-1ee6-4afd-9707-9c7903f9820f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "26ac7d35-eb25-44c8-adbb-8f665a94b699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c078c9d-b2e9-4a07-8e57-73f2b202bf22",
        "cursor": {
          "ref": "ac396bc7-94fc-4766-9688-77c1e11123ec",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "62deeb39-6550-4447-bbfd-094abe88f0b1"
        },
        "item": {
          "id": "6c078c9d-b2e9-4a07-8e57-73f2b202bf22",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9bd8bed1-b25e-44de-b863-54e5ca4b9427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45f9561-ba05-4c30-90a8-50ab98a0178e",
        "cursor": {
          "ref": "9fe4cf51-f35a-4101-b332-56ca9c3285a4",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "725262f7-deed-4691-954c-f6d5379b92f1"
        },
        "item": {
          "id": "e45f9561-ba05-4c30-90a8-50ab98a0178e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f96b18fd-38fa-4688-9170-3386b6dda6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e2f0a9-dacd-4542-8f04-a614b2d7fd7c",
        "cursor": {
          "ref": "008f93ca-5e83-4b26-8cba-631a61d27550",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "76c64ec3-7ce3-431e-b9ff-28588130d142"
        },
        "item": {
          "id": "a7e2f0a9-dacd-4542-8f04-a614b2d7fd7c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2aceba1a-10be-448c-a183-ecca1aff2223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5305af4e-a096-4ea4-a108-7f7e5af0c1c2",
        "cursor": {
          "ref": "637bbb2f-ffa3-4c88-be67-8c83d07178a5",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "622751f8-ac95-498f-ac14-1021b9232db7"
        },
        "item": {
          "id": "5305af4e-a096-4ea4-a108-7f7e5af0c1c2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bcb9ff7c-91dc-4d69-bd0b-f59723b7b5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce6cc4c-40a1-4394-a18d-c806470ba4a7",
        "cursor": {
          "ref": "0b910216-d095-4841-8c40-7f7ae847f055",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "84026ea3-6872-499b-b7ce-f88d6ac5288b"
        },
        "item": {
          "id": "8ce6cc4c-40a1-4394-a18d-c806470ba4a7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "08e8d40f-1c5c-421d-b2a9-02236c823f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3d7c94-7dec-42e3-9b0c-7df421e0fc9e",
        "cursor": {
          "ref": "55b7abdb-6707-446b-b564-a4d666b1a31c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b32c20ef-297d-4ad0-8611-7917033810ee"
        },
        "item": {
          "id": "2f3d7c94-7dec-42e3-9b0c-7df421e0fc9e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b46fd26b-ccc1-41a8-8de3-6f177507d1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d802c28-841d-40f9-ada6-8674129b7e98",
        "cursor": {
          "ref": "c706506b-f3ca-4740-a730-016f2b6a3301",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "beeb087d-bb2c-40c4-9b9c-6db348d372ca"
        },
        "item": {
          "id": "8d802c28-841d-40f9-ada6-8674129b7e98",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6cff5f20-954b-4a40-91ec-0b9d3d76620f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1aab2e-6ac7-458b-b029-e91beab63c1f",
        "cursor": {
          "ref": "11b37d0d-12a3-4025-8bae-9cdb5b42d8ec",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2d708eee-eaf0-460a-9d90-b71e57f81f90"
        },
        "item": {
          "id": "ae1aab2e-6ac7-458b-b029-e91beab63c1f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7b851414-4b3a-4952-a318-8183e9ee9955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abafe465-20bd-4678-ac18-13ca24e8ae6c",
        "cursor": {
          "ref": "5529de58-34a7-4188-bedf-0b66b7e63648",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2bf75e00-2ea8-4ad1-8bd6-7e85b15b50a5"
        },
        "item": {
          "id": "abafe465-20bd-4678-ac18-13ca24e8ae6c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "55f0e289-af38-4c23-af75-d096809200e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f24ae46-6358-42ba-a513-aef7b7aa7b27",
        "cursor": {
          "ref": "2a7ca819-1c8d-4ab0-9697-44ad2ad2ff75",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2ff05215-a01e-475b-802c-c723a4d74cb5"
        },
        "item": {
          "id": "2f24ae46-6358-42ba-a513-aef7b7aa7b27",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "230922bb-8e50-457b-9305-6735bdceaf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0875048-346b-46cc-97d0-5a6a8371f66c",
        "cursor": {
          "ref": "dec2cf50-1675-4cc9-8a42-29f5e48ad02d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bac2b751-cccb-46c9-bd36-b96c71c376d1"
        },
        "item": {
          "id": "f0875048-346b-46cc-97d0-5a6a8371f66c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2fa1a870-a53d-466b-b9e9-90cf1d5a1844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d78b40-2dba-489c-b748-0d6d9e331cf4",
        "cursor": {
          "ref": "ab295f55-211a-48c4-8f3b-be33c2d2e1d3",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "37986691-1795-42c8-a385-79724d94dc8c"
        },
        "item": {
          "id": "01d78b40-2dba-489c-b748-0d6d9e331cf4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f1653e94-1147-4c4e-9ae5-e7bfff2df786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04b6eb5-8dad-499e-bba5-f77825da252f",
        "cursor": {
          "ref": "88cf8f20-1ff6-449b-9c21-28b927497e8e",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "18e293ee-3c00-44eb-92cd-e97a92c88b8a"
        },
        "item": {
          "id": "b04b6eb5-8dad-499e-bba5-f77825da252f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "67e7abd2-e94f-412a-ac88-ab56e137b1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0742a4-3b03-4fc8-8433-f45373d3252c",
        "cursor": {
          "ref": "84a52e0a-a0ac-41fd-8c0b-a8bf824adb6d",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ab945a6e-455a-4f8b-8ffd-5eb4115ecccd"
        },
        "item": {
          "id": "cb0742a4-3b03-4fc8-8433-f45373d3252c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cc7a6810-7532-4141-a10d-03dd5b709848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c8e3aa-550f-4217-8c32-c4130dcb88c7",
        "cursor": {
          "ref": "f954de23-054b-4497-b55c-ea9906f6cf54",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ef392581-f171-4420-a9e6-f3e7dc2ea212"
        },
        "item": {
          "id": "f1c8e3aa-550f-4217-8c32-c4130dcb88c7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a35dcdf4-6fd0-4ff8-b29a-113cf54a369b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4a639e-8ff0-4cec-ab8d-6312651a112f",
        "cursor": {
          "ref": "613b1737-1cd1-47ed-918d-e2b19d5c51c5",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3a65b5d8-9192-46bc-9a1e-a3d585e8ab43"
        },
        "item": {
          "id": "7e4a639e-8ff0-4cec-ab8d-6312651a112f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f1a9999a-34cb-430e-a121-f4107dd988df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d45bdbe-f08c-4e18-a822-d71e13781367",
        "cursor": {
          "ref": "e5913e68-4793-41fe-aa94-49ba699f7ec1",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "836d352a-1b44-4efd-8a5f-33296a4b906e"
        },
        "item": {
          "id": "5d45bdbe-f08c-4e18-a822-d71e13781367",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f9e4618a-e75b-48bd-9ec8-805eddce028b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c00fa98-ee44-4f4d-88ac-fd73f3f89125",
        "cursor": {
          "ref": "548df18a-e141-4fe4-8fc3-c6cbf9116a98",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "aedacbe3-6a8d-47e7-9d09-e7189cf1c357"
        },
        "item": {
          "id": "5c00fa98-ee44-4f4d-88ac-fd73f3f89125",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "98e3fc2a-59af-44de-b6d1-8536cc3cee45",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df05e42-addd-440b-bc28-13a72daa07f0",
        "cursor": {
          "ref": "c6649c18-4992-4926-a535-b8a6aa10e6ec",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "452f9526-77e7-4793-928d-e6ebed126d94"
        },
        "item": {
          "id": "5df05e42-addd-440b-bc28-13a72daa07f0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9b87dad2-b614-4476-bb24-b0b5ca915168",
          "status": "Created",
          "code": 201,
          "responseTime": 7279,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fa8a84-7781-4406-b39e-421438ffbd2b",
        "cursor": {
          "ref": "04a3dba7-5d81-4165-bd82-10b29e92370a",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5cb40921-704e-4ec5-bb53-5887bdae1c8b"
        },
        "item": {
          "id": "34fa8a84-7781-4406-b39e-421438ffbd2b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3f20a7cd-885c-4f53-9096-f911946d072c",
          "status": "Created",
          "code": 201,
          "responseTime": 6338,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67fb67a-8dad-4530-8427-b196fd094c29",
        "cursor": {
          "ref": "6eba5e75-c845-4b23-af01-d7efcd1a5f46",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2e740887-be20-4a2b-a9fc-f9be81e734e0"
        },
        "item": {
          "id": "c67fb67a-8dad-4530-8427-b196fd094c29",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "075490ac-ea55-47e0-85fb-2fd995146820",
          "status": "Created",
          "code": 201,
          "responseTime": 6490,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d3db55-2abd-409f-9974-857683efc37d",
        "cursor": {
          "ref": "def62016-1300-42f5-a283-e36be494286d",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "815fde12-c843-467b-9080-15fa14246194"
        },
        "item": {
          "id": "09d3db55-2abd-409f-9974-857683efc37d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b1305087-dc3a-4906-afad-ed65b7443714",
          "status": "Created",
          "code": 201,
          "responseTime": 5978,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e8de79-4947-4e7d-9e62-f269fbb847d1",
        "cursor": {
          "ref": "17bfeb91-70b2-46ce-ad30-d4e702fc35f2",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d94f69b7-a2d5-433f-852e-ed3c6eb46f37"
        },
        "item": {
          "id": "82e8de79-4947-4e7d-9e62-f269fbb847d1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "81cd4ffa-922d-4590-a2c9-46b25fbc0991",
          "status": "Created",
          "code": 201,
          "responseTime": 6439,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbc85a2-2eeb-4b53-bf62-431c67e8ecc7",
        "cursor": {
          "ref": "2c8df0f3-04b6-4471-b390-423a4f289ecd",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "43d914be-6576-46fb-b447-fe2c6c081f07"
        },
        "item": {
          "id": "1dbc85a2-2eeb-4b53-bf62-431c67e8ecc7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e8312a38-9553-4d46-9959-92549fa45c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "72d84049-93da-4d7e-b206-a0587ef38717",
        "cursor": {
          "ref": "7eec1f86-6f52-4cdb-a458-d9dff4517e39",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4f09b197-7d75-4f9c-9736-40558fc4cde6"
        },
        "item": {
          "id": "72d84049-93da-4d7e-b206-a0587ef38717",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "26bc0b71-3245-479c-ada2-546e123b074d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92f59d9-58f0-49ff-b1f5-9e1796765329",
        "cursor": {
          "ref": "be6107b9-f57c-44cb-9e3d-5847895eec9e",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "64530eef-560d-4137-a24f-a8a44a17160e"
        },
        "item": {
          "id": "c92f59d9-58f0-49ff-b1f5-9e1796765329",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1432e390-6163-4f0c-9d89-17a532194a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df22c4e-cc0d-474c-bc1f-7cc1bd5e96c3",
        "cursor": {
          "ref": "10400710-f752-440b-aeee-e231ad0416a8",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4fdaddd2-e0c7-4ffa-ae3b-65ec3392dd8a"
        },
        "item": {
          "id": "5df22c4e-cc0d-474c-bc1f-7cc1bd5e96c3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b40ce7a0-6d9e-4e4c-a27f-1708c8b6ce6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208b9bbc-05e2-4d86-93a8-b98f3f3b1fbf",
        "cursor": {
          "ref": "a1bb4c6a-792b-449b-9e50-20a2ecc96c6f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7e2500e3-374a-4709-a52a-681f478bff60"
        },
        "item": {
          "id": "208b9bbc-05e2-4d86-93a8-b98f3f3b1fbf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "89a2aa89-90cb-4d95-9e5e-9683ca1559a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf41677d-51fd-4565-962a-0cfea5bfc54b",
        "cursor": {
          "ref": "37d1eb4f-75d9-476a-9731-6bd6fc7dd9fc",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6551b25a-526b-4de7-a544-d9971c66657a"
        },
        "item": {
          "id": "cf41677d-51fd-4565-962a-0cfea5bfc54b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "53beffa4-cc36-4390-99f1-b07e2b158ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f0f2ce-8666-431d-b33b-b56478476e63",
        "cursor": {
          "ref": "b1349ef7-8c4b-4d2f-8c8e-65c72c96d101",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "537ee64f-30c9-41bc-a5da-11291ee673fc"
        },
        "item": {
          "id": "e1f0f2ce-8666-431d-b33b-b56478476e63",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "97c1fa50-5da3-413e-9520-79ad37ae80ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885e81cc-5bee-44fe-b37d-e6be5d2a0208",
        "cursor": {
          "ref": "52fb954f-ebf7-4f10-a508-0e9456c874d4",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5a2fb56b-038c-48a2-b255-4aece74c0053"
        },
        "item": {
          "id": "885e81cc-5bee-44fe-b37d-e6be5d2a0208",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0eeee6f5-8971-4d4d-80b9-ffd15d281ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd45b981-9b48-4f4c-89a4-7832a150464d",
        "cursor": {
          "ref": "431da29c-5d35-4ef1-8180-043561cfcde1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "90fdc1db-7307-4487-8ce8-db2c0cb1f21d"
        },
        "item": {
          "id": "bd45b981-9b48-4f4c-89a4-7832a150464d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6dad1b6e-2d96-4cf0-9da5-512324b6b3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb7f0d9-99dd-494f-90ac-46238ed9c0c1",
        "cursor": {
          "ref": "2897df67-eb3d-47de-8d72-6848ba4650dd",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fd13de41-d901-4d8b-acc1-a6e015d3169e"
        },
        "item": {
          "id": "ddb7f0d9-99dd-494f-90ac-46238ed9c0c1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "89f8da9b-6981-46f7-9e50-561bd628bbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1e73ea-c206-41cf-9818-8c1f35cd0195",
        "cursor": {
          "ref": "79019df9-ce49-42c6-aac0-3dbc2b748621",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ef4bcf86-7b03-49b9-af94-7ee73d534480"
        },
        "item": {
          "id": "fc1e73ea-c206-41cf-9818-8c1f35cd0195",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9a7495c6-b9ae-4565-a27d-329691fce110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a217d943-1673-4f5c-ba7f-c4d2f294e76d",
        "cursor": {
          "ref": "ab2e46e7-da3f-4c83-858f-63df48d39df6",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "be7ba277-d69e-449e-b17c-17581bd2f519"
        },
        "item": {
          "id": "a217d943-1673-4f5c-ba7f-c4d2f294e76d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "36c0ae43-4860-4f99-b9eb-03cb489b2c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e81047-1349-4d07-88fb-339cf0d4c55d",
        "cursor": {
          "ref": "925fc1d1-670c-4637-8490-f06c6d963551",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "aac0dd23-6644-4e10-8984-06d0111d794e"
        },
        "item": {
          "id": "89e81047-1349-4d07-88fb-339cf0d4c55d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4b64ecae-4bfc-42ad-b35a-3b561163f9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcb6222-674e-4381-a075-a8a8327c0727",
        "cursor": {
          "ref": "5c56d4e4-5b85-43cd-ba59-76f4c345b7aa",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "60a84e84-0c44-46c8-880d-16239a9bb262"
        },
        "item": {
          "id": "9dcb6222-674e-4381-a075-a8a8327c0727",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ff7ba522-d67c-4b46-843d-705e8169562a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bae4da-bd36-42b4-8e09-7a9fccef6e4b",
        "cursor": {
          "ref": "12f48670-b11e-4e01-8711-e6bfabc79ecd",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6ada7e18-e7c6-4f2a-a95d-4543d0c70a8e"
        },
        "item": {
          "id": "58bae4da-bd36-42b4-8e09-7a9fccef6e4b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6dd29a4e-89e6-401a-a689-edd78ff4bd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ae9caa-79ba-4616-a1d3-b0583baa93f8",
        "cursor": {
          "ref": "54082517-6f8d-42c2-88f5-d9930b427b54",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f15f2f75-462b-4cbe-bd95-cb70b97f7eb3"
        },
        "item": {
          "id": "89ae9caa-79ba-4616-a1d3-b0583baa93f8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6afa447e-8d33-469d-b726-4f24e16ad738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be074233-e05f-4e14-936f-9008cfd7f380",
        "cursor": {
          "ref": "9ea32386-5ea2-43c1-9a61-350c82ab0ab9",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6d5f6019-fbec-45ef-be03-94fcb7e6e34c"
        },
        "item": {
          "id": "be074233-e05f-4e14-936f-9008cfd7f380",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9bc9ea9c-820a-47de-ac95-be205360692d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055a0f4d-928c-48cb-8dfa-6a2b2f0a7c00",
        "cursor": {
          "ref": "d90eb058-70da-4da5-8e0d-d1a44a77f5dc",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a4a7c6bf-b00f-42e4-99f0-291caec10645"
        },
        "item": {
          "id": "055a0f4d-928c-48cb-8dfa-6a2b2f0a7c00",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4eef3a0d-f216-461a-a727-c289ba0fe1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a2e0f7-f352-417c-ac7a-171dd0b16f16",
        "cursor": {
          "ref": "5affaea6-0e62-43b7-a82d-0d8a61612542",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0657fb7e-106e-43a1-ab07-7f101fe3e4a2"
        },
        "item": {
          "id": "44a2e0f7-f352-417c-ac7a-171dd0b16f16",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0eab49ed-2fb1-4f7f-9543-3a787d848800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786fbde8-1b17-411d-a955-f44e5f2ea7de",
        "cursor": {
          "ref": "ff246fdd-9fe0-4017-a0c6-5823bcbea631",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "33b815cf-b600-462d-b69b-8d9ed16caa1f"
        },
        "item": {
          "id": "786fbde8-1b17-411d-a955-f44e5f2ea7de",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "199a323d-989c-4130-a73c-61cad2c8a6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a296ba7-1ae5-4efc-b4b8-a9ad17b56931",
        "cursor": {
          "ref": "67236c7d-fcf2-458e-a6f6-ce58d00e203c",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "385a9957-8d20-4d21-9b4a-ecc0d750a102"
        },
        "item": {
          "id": "8a296ba7-1ae5-4efc-b4b8-a9ad17b56931",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fedeb785-6248-4ebf-8254-b991fa2210dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c6009b-659e-4e19-a58b-0a168766e76c",
        "cursor": {
          "ref": "ed06c48f-ad36-4009-b282-1afe7784e1ad",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e58bd18a-8fd1-45bb-a7bf-dcd3e473cd10"
        },
        "item": {
          "id": "00c6009b-659e-4e19-a58b-0a168766e76c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e1f7020e-0a94-4a19-b6ed-7c40f122f17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689b3d1f-87be-41b9-9c46-6e3a2a8a34b8",
        "cursor": {
          "ref": "92ab55bb-50ad-4c44-b423-dda49b314766",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0daec756-e7d9-468b-bfaa-a0b46451dab5"
        },
        "item": {
          "id": "689b3d1f-87be-41b9-9c46-6e3a2a8a34b8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "018c776d-eab6-459a-bf97-ba14373fa716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0bb21b-bbc7-4aa4-b33c-126c9dbe4771",
        "cursor": {
          "ref": "d6c8a386-6e6f-4007-af8c-775149d8f621",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "151ce97e-a0cc-4a8f-b476-1ddc940a8962"
        },
        "item": {
          "id": "5e0bb21b-bbc7-4aa4-b33c-126c9dbe4771",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e2c192c9-9766-468c-9f36-c7c7d44dd0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadba4a5-aa4b-440d-a037-33842895eabb",
        "cursor": {
          "ref": "63b35c08-0137-4f14-bafd-c6534510d66d",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "81c433cf-a21d-4f68-a2ce-397dcc8229d5"
        },
        "item": {
          "id": "dadba4a5-aa4b-440d-a037-33842895eabb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "82ed2e11-7766-4f2d-a72e-24952642827c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f335b2-8a23-4160-b9e5-615aa53768a5",
        "cursor": {
          "ref": "edacca20-a3c4-4b6a-a0f4-b470a8088f2f",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "20444690-e8f8-4837-a7c4-ded931c2d2f1"
        },
        "item": {
          "id": "48f335b2-8a23-4160-b9e5-615aa53768a5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "090bff03-7c1a-4756-89a8-63e2b16e3b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7c7eea-39d0-4b81-8414-cb4ce423a4cb",
        "cursor": {
          "ref": "2d8c6204-91dc-46a9-9cab-ea4f1276f664",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c4ddb6a1-3897-4ce2-a9d2-384279543331"
        },
        "item": {
          "id": "2c7c7eea-39d0-4b81-8414-cb4ce423a4cb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a08061a1-10ff-4fab-b3b8-315b084403fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cb28b0-9b64-474d-9013-b59e804a3d6c",
        "cursor": {
          "ref": "cebe70b4-1bd5-4a5e-b367-0e197776f35d",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0fdad89f-0556-4015-8b68-2feefc3a366f"
        },
        "item": {
          "id": "61cb28b0-9b64-474d-9013-b59e804a3d6c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "61d8cc1f-3448-409d-85e2-355b54f6ee47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d030b7-9b2c-4be1-8faf-7a73519f33d8",
        "cursor": {
          "ref": "d60005ea-97ab-46fe-9f49-70b262f632b1",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6f0e3196-c672-4fe1-9433-07552e29e9f3"
        },
        "item": {
          "id": "b3d030b7-9b2c-4be1-8faf-7a73519f33d8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f6a7dd6f-5f39-4e3c-9371-0a9e82c4e65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e3d2a2-df2e-4f78-855f-124b73ba5e1f",
        "cursor": {
          "ref": "48fcbb9a-88ba-42ee-abd3-b28a98b7d73f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5e8fccdf-9a69-41ba-b7b1-f627977045b2"
        },
        "item": {
          "id": "61e3d2a2-df2e-4f78-855f-124b73ba5e1f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b9270bf3-2878-4739-878c-33ab7b31bc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef849ea-f7f2-49e2-819c-f2a3b830ef42",
        "cursor": {
          "ref": "0141966f-ae7f-428e-80a6-c6670a047752",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1394de12-85f8-45b4-a515-ce16879a3918"
        },
        "item": {
          "id": "4ef849ea-f7f2-49e2-819c-f2a3b830ef42",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2ae0f52b-0006-45d0-9390-4b7622d62f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19dad67-50d0-48c2-a1b6-aeeb510682e7",
        "cursor": {
          "ref": "d6a3205a-17b0-4bc6-bd65-4cfbce384a3a",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ae2f395d-3442-4fee-bb3b-e2bb8e733fcd"
        },
        "item": {
          "id": "a19dad67-50d0-48c2-a1b6-aeeb510682e7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "420063ec-2160-4c2c-ab7b-c49ed6ad5e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c39910-3dec-4bcb-bb65-bceef17a5503",
        "cursor": {
          "ref": "5d2c63af-3287-41f7-aa15-1ee0aa363665",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b79fc9bb-f5f9-4a55-a335-9dbc59069c71"
        },
        "item": {
          "id": "85c39910-3dec-4bcb-bb65-bceef17a5503",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1d91e379-9ae9-42d9-81a5-59e874d805c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e1c249-3c22-47cd-a574-7285ecc1aa51",
        "cursor": {
          "ref": "c13b198e-1717-49e0-b8fa-0d46d13a09b1",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dc6dc843-6e58-4218-abf4-aaf9b4f485b2"
        },
        "item": {
          "id": "b9e1c249-3c22-47cd-a574-7285ecc1aa51",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "46f16246-778b-4d6b-bce8-dabff38ef14f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2410c4-3b9f-45f5-b2e7-94eab19b4527",
        "cursor": {
          "ref": "d106f150-b1a4-4460-81a2-47d65eeddc51",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d8a28a61-7d62-419b-8600-2945415fd9f3"
        },
        "item": {
          "id": "4a2410c4-3b9f-45f5-b2e7-94eab19b4527",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "99fa3b8e-6b81-4117-b0bd-7783aa0eae28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25f738d-a900-4ff5-a207-cc2700e423b5",
        "cursor": {
          "ref": "fd0321d5-377d-438c-a8dc-9fdb9c565f6b",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "54f80dd1-760f-4481-b1f9-3ed1c309986c"
        },
        "item": {
          "id": "f25f738d-a900-4ff5-a207-cc2700e423b5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "06dbb4ae-8448-4cd8-bdd7-f3d84fbe5333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c40928-6c3c-4125-a59d-d88679d5d632",
        "cursor": {
          "ref": "280651e9-4a4b-42d3-a183-d1bb367ade30",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "42522a65-ba2b-4da8-8eb3-43ae3ffd02ea"
        },
        "item": {
          "id": "54c40928-6c3c-4125-a59d-d88679d5d632",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0e8e6327-d5f7-4ad1-8492-00f8ed8136bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2b31cf-3317-458e-be77-873294b8eb1b",
        "cursor": {
          "ref": "705b3adb-4577-4d6d-a7a8-31a128ed1ee7",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f943627d-672e-403f-8ffe-b318d01ef5b0"
        },
        "item": {
          "id": "ad2b31cf-3317-458e-be77-873294b8eb1b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "13d27ecc-ec46-4ed7-a275-dcac98ef5e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823ad8a8-d5f8-4aaa-ba04-344043995300",
        "cursor": {
          "ref": "597d73ad-40c2-4902-b515-83e56b8cf2fd",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "376758f0-a03a-4cdb-b6dd-6c7f44445aad"
        },
        "item": {
          "id": "823ad8a8-d5f8-4aaa-ba04-344043995300",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f144392c-1911-4de3-94d3-6b1271d27cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5614d62-f680-4916-a932-77365985e154",
        "cursor": {
          "ref": "71ad2057-acc0-4a4c-bb92-8ca127b89300",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0e1ed00a-5c9b-4f80-83d7-be626a295810"
        },
        "item": {
          "id": "e5614d62-f680-4916-a932-77365985e154",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f6901223-3367-46be-9c5e-d40e90f39c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e790a2-66eb-435e-a6da-430a44e68159",
        "cursor": {
          "ref": "384fbfd1-e1f9-4adb-b08b-54bf032d5a9d",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "922863a5-ecd9-40c3-9cb8-4b02abfb8751"
        },
        "item": {
          "id": "a2e790a2-66eb-435e-a6da-430a44e68159",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "64fca521-6756-46aa-a818-58b9e74e43e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8440b454-06fb-435b-a990-e2b0ce2dcd7e",
        "cursor": {
          "ref": "ef68dc48-7658-4dc3-9efc-00855f1d0a53",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bb73e2ca-4ce9-41bf-9e2c-7b49dbea93c9"
        },
        "item": {
          "id": "8440b454-06fb-435b-a990-e2b0ce2dcd7e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "de5bdd94-7b7f-4846-b770-73795eac666d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e41629f-d759-4dcb-8dd3-e0636cd875e1",
        "cursor": {
          "ref": "15d0dff2-a74e-4b85-a31a-2e296ad67082",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "dcf28cc4-f4fd-4d77-ad35-220b2709ff7d"
        },
        "item": {
          "id": "0e41629f-d759-4dcb-8dd3-e0636cd875e1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9796c3b7-6a81-4f85-9820-68495863eeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049a1bf7-0dde-4b04-91f4-2c4fa6e085c9",
        "cursor": {
          "ref": "04bf9b3f-f523-46b0-a3ec-b294e210b358",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bd55c62f-ef83-4afa-a272-26feba98d679"
        },
        "item": {
          "id": "049a1bf7-0dde-4b04-91f4-2c4fa6e085c9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ae8a6da4-ff39-4cd6-ac7f-0f27b2693350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3480284-38c4-464f-b957-0dde91429203",
        "cursor": {
          "ref": "b84211c5-55ce-41f2-8f64-599f8e073b61",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b1944139-963a-43d9-896f-c1198203ca81"
        },
        "item": {
          "id": "b3480284-38c4-464f-b957-0dde91429203",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d0334066-66f0-42b0-8feb-080c8dee7dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ef6fa3-fb44-4778-919f-6c9b8b4a5c02",
        "cursor": {
          "ref": "79dac766-aaf5-43fc-8357-d2576ba59ce2",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5ad8ae32-56be-465e-adee-c5090cccc113"
        },
        "item": {
          "id": "51ef6fa3-fb44-4778-919f-6c9b8b4a5c02",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "54dc699f-db6c-4e35-8a0a-86b90b525c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74dedac-8c32-451c-8baf-b02f6911fd61",
        "cursor": {
          "ref": "460cc1ec-d29b-4682-a41f-a0c5c3ba61c2",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b2cc5b7e-4271-42e3-87da-9f2087951384"
        },
        "item": {
          "id": "d74dedac-8c32-451c-8baf-b02f6911fd61",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cc5e4298-5890-4716-8bb7-1df82e0feb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01e0fb2-05cc-40a0-9642-c99501038708",
        "cursor": {
          "ref": "17ceea8d-35a3-47c5-ae7d-dc939b5f0246",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b17e200c-4a7b-4be7-8b1e-1e316c89a4c3"
        },
        "item": {
          "id": "a01e0fb2-05cc-40a0-9642-c99501038708",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6b4b49b0-eac8-44dd-a19a-f82841eccdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3597ff-9f25-4ee8-bb7f-f366d6100c92",
        "cursor": {
          "ref": "ad8aa24c-b098-4106-a2fb-759e11730f9d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d5a2db61-e0fa-491b-a1a5-4c63935f5da4"
        },
        "item": {
          "id": "ca3597ff-9f25-4ee8-bb7f-f366d6100c92",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8264ac2b-ef9c-49cc-a480-c31aebd50871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24f41e8-61d4-4bae-91e7-eecd7780ebed",
        "cursor": {
          "ref": "4486a553-756a-43b5-ad2f-5041b89e5114",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fb93d34f-ba83-493e-b3ef-8330881a1843"
        },
        "item": {
          "id": "b24f41e8-61d4-4bae-91e7-eecd7780ebed",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6845b1cf-9d3e-42c1-a43b-0c460ac1714b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480f37ae-b5ed-4a2b-94f4-e3c2f7e410e2",
        "cursor": {
          "ref": "36bd7abb-db03-4446-a078-c80178965491",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4ac108b9-c377-4d88-adc9-0c2c28a78ef3"
        },
        "item": {
          "id": "480f37ae-b5ed-4a2b-94f4-e3c2f7e410e2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2ab568df-5a30-4354-8367-b69c3f32a877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6163e476-e05c-4496-b088-25064ad43598",
        "cursor": {
          "ref": "a28dad85-4fcd-45f4-b5f5-d2ee5ff372ad",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4088e590-7517-4d46-96c8-28a6b388b4b5"
        },
        "item": {
          "id": "6163e476-e05c-4496-b088-25064ad43598",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fe32edad-e886-4097-9445-4ea31a818ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bb8b29-3ecd-4f58-8ee7-76cf4d07dea6",
        "cursor": {
          "ref": "a4ba7be4-3a76-4fb8-89ab-24c9acd8ef9c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b7629ddc-5431-4111-a420-8d9edbf8aa0b"
        },
        "item": {
          "id": "e1bb8b29-3ecd-4f58-8ee7-76cf4d07dea6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "de7366cb-b404-4cde-be18-0ea73b5d7588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b4ccdb-fcf1-445d-bdb5-9118c6ede35a",
        "cursor": {
          "ref": "dcc0002a-fc79-4ac8-8f49-b293d0f30ff6",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f2b6923a-fbb4-4073-8953-bedfbd8bc193"
        },
        "item": {
          "id": "83b4ccdb-fcf1-445d-bdb5-9118c6ede35a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4b2240ba-e1a8-4662-819d-e230d0100d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b173d1-08bb-4c83-9673-73e80d10f1d0",
        "cursor": {
          "ref": "84210339-4032-412b-adfd-8fa99c022174",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8ae8b39e-6f91-4d06-b2fc-dde76ca5ed26"
        },
        "item": {
          "id": "12b173d1-08bb-4c83-9673-73e80d10f1d0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5b418fec-cffd-47f8-8580-478ced8560b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b1c8b8-f49f-42d0-acb8-4da26e26647b",
        "cursor": {
          "ref": "95c79bc1-c9fc-4554-9ad4-f3f92fd89a1a",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cb1812d1-bdbd-4df6-ba7b-99da5293b101"
        },
        "item": {
          "id": "00b1c8b8-f49f-42d0-acb8-4da26e26647b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b5f239d3-20c1-482c-8f2b-2e6709f762f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d33b0bb-d744-45db-ad75-4e184f60513a",
        "cursor": {
          "ref": "23c93125-b2b2-4d49-8487-91d139e24f56",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "99bcefcc-ad07-427f-afc7-2c43cea0ea8d"
        },
        "item": {
          "id": "1d33b0bb-d744-45db-ad75-4e184f60513a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e19881f1-d57c-4cac-a3ee-c30fa0efaf04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8b156b-361b-4fd9-9040-2a22779c774e",
        "cursor": {
          "ref": "94311824-1df7-4aac-9a27-9e5dae3dc812",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "05edf82f-999d-440b-9297-d30b08319d2b"
        },
        "item": {
          "id": "4e8b156b-361b-4fd9-9040-2a22779c774e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "afc45bca-c1b5-46cb-b0de-e80a844af570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8ff9bd-f269-4302-9077-df80cfd307fa",
        "cursor": {
          "ref": "bf23ae18-7cda-4c71-8ae0-3332d4cc28e0",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "37ad81a0-de32-4814-bffb-4226187a53fc"
        },
        "item": {
          "id": "fe8ff9bd-f269-4302-9077-df80cfd307fa",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bc28b18e-e92b-468c-8b89-b0c932912864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c92a149-9279-40e1-bd24-8acf96772130",
        "cursor": {
          "ref": "49ea496c-0cfd-4086-af12-b57db87eed78",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5a83d267-c729-459b-8964-45d25e776d74"
        },
        "item": {
          "id": "8c92a149-9279-40e1-bd24-8acf96772130",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "286a3db3-13f9-40fe-b4bc-d7c27c0dcfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0ada17-7482-48ed-b79f-fea3bdfd6bf5",
        "cursor": {
          "ref": "534a5214-3aaf-4549-90f7-48117fbcabf1",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "622922d0-9e68-4cf7-bf8d-308e41e4de4f"
        },
        "item": {
          "id": "ec0ada17-7482-48ed-b79f-fea3bdfd6bf5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "caaa2522-49a6-47fc-8890-352775435c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5288a59-48c0-4e57-b36d-d97ac9980d28",
        "cursor": {
          "ref": "c68527c8-6b38-49e9-8574-12a6cedf5166",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4e7322a7-b2f3-4f03-95f0-c7c050ec59a9"
        },
        "item": {
          "id": "d5288a59-48c0-4e57-b36d-d97ac9980d28",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3cf7411e-2722-4692-abf6-48d695584070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c6e881-0c4d-4a7a-8e52-092012b00a78",
        "cursor": {
          "ref": "ab062b97-c639-435f-aa1d-44f30d32c809",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "655933f1-6617-41f8-96f5-ac6bbfd5337a"
        },
        "item": {
          "id": "d6c6e881-0c4d-4a7a-8e52-092012b00a78",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4f4f4a4a-b200-4562-9d33-adb20f52933c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15f373e-23fe-40d1-a5f9-c64a48f19888",
        "cursor": {
          "ref": "b6865252-bee3-4113-9dfc-3b5a2ebf6762",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c22675b7-30c9-4bef-84a7-b4b003353f4d"
        },
        "item": {
          "id": "c15f373e-23fe-40d1-a5f9-c64a48f19888",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c093c062-dea4-464b-b8d3-e48a6fce4fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1e8020-77a3-459f-b4c7-5e8af3449b76",
        "cursor": {
          "ref": "eb1d0ae2-043b-422c-af19-d68264c59d2e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4ae2fce5-7257-46b7-9144-257a4d530588"
        },
        "item": {
          "id": "fb1e8020-77a3-459f-b4c7-5e8af3449b76",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ef75b73b-2c69-4a83-9279-dd2e25d7873d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de309499-482f-4a7f-8ce1-52b88b78669f",
        "cursor": {
          "ref": "05a36cc7-b289-4333-be6d-ff23de09f866",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3fea68bf-27ad-48d2-894b-64bd321bb8a2"
        },
        "item": {
          "id": "de309499-482f-4a7f-8ce1-52b88b78669f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "85d33d2f-fe7b-4873-96e7-5aa56ff252f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f668c89-f562-4374-b681-7691c9cee625",
        "cursor": {
          "ref": "d4cb018a-11fb-46e6-bb48-0e67d2dec90a",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8dbcc5e2-e07b-4752-80d8-8094bae88dfd"
        },
        "item": {
          "id": "3f668c89-f562-4374-b681-7691c9cee625",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "454c52d0-2a39-47b2-aaa6-4da5fe40b3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401fe777-e845-4a08-be99-1a8ee30f07d9",
        "cursor": {
          "ref": "e76e3069-c39e-48b1-bbd9-66e3f66448cc",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "add90812-23af-44bd-8efb-715f4bf774fe"
        },
        "item": {
          "id": "401fe777-e845-4a08-be99-1a8ee30f07d9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ccf726ed-0877-44c5-8311-eb3304b00f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eeec278-18a3-45d6-a3a3-660a8dd09496",
        "cursor": {
          "ref": "4d7460b3-f09b-4f24-8bdd-8b1b22267916",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9a920959-bd04-4e4b-b636-417f41da6dd5"
        },
        "item": {
          "id": "8eeec278-18a3-45d6-a3a3-660a8dd09496",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fe49f98a-2484-49ae-9aad-b76047b8e0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a75c7e7-2a51-4b3f-a8c2-f72033c736e0",
        "cursor": {
          "ref": "989bf47f-21ee-4d00-a8a7-59798aef9587",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9d1563e2-881b-4f3c-868c-9567681573ee"
        },
        "item": {
          "id": "4a75c7e7-2a51-4b3f-a8c2-f72033c736e0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9ab7849f-db20-4e20-ba1d-53ef27c24d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754faa3f-8621-4ef5-aae5-553ff3cf605a",
        "cursor": {
          "ref": "0e2cbc41-a855-4e40-8f3a-ca4c4867ff7b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "19a9da4a-62a6-427c-9e90-2d92f609fe74"
        },
        "item": {
          "id": "754faa3f-8621-4ef5-aae5-553ff3cf605a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "10a2ce89-84cf-4e92-bfa7-1ae230ff4241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698beab8-e36d-4bd0-89c6-15fd51883d6f",
        "cursor": {
          "ref": "5e0b505e-4304-43ba-82ef-dd9cbc875b04",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "11268e78-bcd8-4523-806a-95230a0ca03c"
        },
        "item": {
          "id": "698beab8-e36d-4bd0-89c6-15fd51883d6f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a73e3eec-da57-4a5c-b1b6-55d2f161fec0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd1a5b1-3995-4132-93c9-e6ac98236aca",
        "cursor": {
          "ref": "c1ffb1ed-8066-4351-8c89-c9dbfe60b635",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a30da8b6-3524-4e52-bf86-4cef04d97b78"
        },
        "item": {
          "id": "2bd1a5b1-3995-4132-93c9-e6ac98236aca",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "edbfd11b-fb62-4ee4-ab59-097843df110f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ceb5e4-e846-4e58-81db-cb626d27ecbe",
        "cursor": {
          "ref": "aff43bf9-c3a6-4cc1-bbc3-e8de4d1bb90f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "783ecbf4-b1b0-4fcb-9300-9c299a812673"
        },
        "item": {
          "id": "99ceb5e4-e846-4e58-81db-cb626d27ecbe",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "df862d37-0e66-488f-8150-6d14325e490f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f302696d-4ec3-4b64-b61d-f07a11e04ebb",
        "cursor": {
          "ref": "79f23cc8-660a-4d07-bfd4-5da444ec424b",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9f179b45-3aa3-498f-b691-c0b20a95585c"
        },
        "item": {
          "id": "f302696d-4ec3-4b64-b61d-f07a11e04ebb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5e6c36f8-2d3d-4c3c-99f1-cf778977d19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5bb091-18f2-4f81-81d0-920d0b059d3c",
        "cursor": {
          "ref": "1b81ea73-121d-497b-b8ea-fd9211171c09",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6261589a-cec9-44e2-b28c-c71d72ecebab"
        },
        "item": {
          "id": "2e5bb091-18f2-4f81-81d0-920d0b059d3c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "270ce0c8-0496-45e0-9ccf-32257b67c302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de309bb-0c2a-4e81-abb3-af96e9eb3d0d",
        "cursor": {
          "ref": "e06bfb5b-b770-4cef-b04a-a2cdee9abd04",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "42e1863d-3c5b-4328-b1da-218abe8e70d2"
        },
        "item": {
          "id": "3de309bb-0c2a-4e81-abb3-af96e9eb3d0d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ee95c194-488b-4487-8589-7d4abe0ae21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bcacdf-1a7d-46c3-be6d-f90ef7719c02",
        "cursor": {
          "ref": "6ffee461-1da6-4a48-aba3-998f55a7ace7",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "313f48f5-e7a6-47ff-bb15-ac4ec5ac144a"
        },
        "item": {
          "id": "b0bcacdf-1a7d-46c3-be6d-f90ef7719c02",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3e4ecb04-f681-48ef-9160-bc2779bf8ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd09ab3e-3ced-4d2c-a8b4-3ea49f19cdd8",
        "cursor": {
          "ref": "fc480e17-6a31-439c-b0ca-acbad6f94a10",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "890053df-88e5-4fc7-b37d-ad83a38b4487"
        },
        "item": {
          "id": "fd09ab3e-3ced-4d2c-a8b4-3ea49f19cdd8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a2483f47-513b-4691-85e7-ebbf8c271a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0034fad5-c524-4164-8866-a451efb175a4",
        "cursor": {
          "ref": "adf1396b-eba4-4d06-b5df-de32c7125b08",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "889da615-d425-4a7c-998f-e66c03da4d96"
        },
        "item": {
          "id": "0034fad5-c524-4164-8866-a451efb175a4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bffea537-1dcb-4d25-822b-27a83bca6e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d206d46b-c53e-4897-91f6-1ced9876ab0e",
        "cursor": {
          "ref": "002eb5e8-81bc-42a1-8655-63de350f630a",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9214a5f8-1b57-4c12-a32b-47e7b5c74191"
        },
        "item": {
          "id": "d206d46b-c53e-4897-91f6-1ced9876ab0e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b31e9545-483e-4fe0-adc9-3505aa93bfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2c33c9-881a-48da-ad7f-ceded5be50bf",
        "cursor": {
          "ref": "66f946fb-2996-4cda-86b7-e670805bb94d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a2cd6606-c0e1-4080-91c5-532ee8286c47"
        },
        "item": {
          "id": "2c2c33c9-881a-48da-ad7f-ceded5be50bf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "54261761-c1ec-41b4-b0cb-a0cc84245a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f57e011-1bd2-4a4d-bffd-b993d3f1c683",
        "cursor": {
          "ref": "82ce72c4-e299-4863-9a2e-8405465d24ba",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "49d3d379-eab7-4684-8a64-88a119f7a85f"
        },
        "item": {
          "id": "8f57e011-1bd2-4a4d-bffd-b993d3f1c683",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f96f5511-05ad-4b6c-8f9f-77d05dc01e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b322197a-d277-4326-b104-fa438f21b434",
        "cursor": {
          "ref": "93f61321-fbe4-438a-a178-e2d44e52cc71",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c5ad7ae3-854a-4174-a7f6-dbf988c1d297"
        },
        "item": {
          "id": "b322197a-d277-4326-b104-fa438f21b434",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7883c2d4-68da-4d68-8695-5ed6222418e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9293d4bf-1ccb-4850-a1a5-22194b8eca48",
        "cursor": {
          "ref": "d0e3a266-1185-434e-a403-c616508d0236",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "becded82-b463-4e3c-a45d-6dcbf872196e"
        },
        "item": {
          "id": "9293d4bf-1ccb-4850-a1a5-22194b8eca48",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "78c8b4ab-66ce-41d9-a3b4-0161960559ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789808dc-488c-4ab4-9f21-9001ab1b9d31",
        "cursor": {
          "ref": "7d5d46e1-19bd-47e4-acd4-a25f914a49cc",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "17ae3042-1af5-4fed-a529-1ffc9584084b"
        },
        "item": {
          "id": "789808dc-488c-4ab4-9f21-9001ab1b9d31",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bb980809-33c3-44e2-9983-72e5ae753003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb68715a-b508-480a-83d5-b6112b48837d",
        "cursor": {
          "ref": "682f39f4-034e-45bd-898d-78f8e099ef95",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a192ea8e-d5b8-47ea-a6e9-c6d3d3acc49a"
        },
        "item": {
          "id": "fb68715a-b508-480a-83d5-b6112b48837d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d09ba2a8-0b48-4cd9-9f44-1b8f90b5ea26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d25487a-8f53-46b4-b9e1-fbb446b0b033",
        "cursor": {
          "ref": "cd9a068b-e507-4ace-81bf-a124310f6fb2",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "68c6df8e-f8cc-4412-b2d9-d8eefe4148ff"
        },
        "item": {
          "id": "7d25487a-8f53-46b4-b9e1-fbb446b0b033",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6f3b42f2-a3f3-409f-8639-41dfceaf6387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2197bfc3-7ac2-4dee-9f85-f65cc7763a86",
        "cursor": {
          "ref": "87ee8db6-2a84-429a-b446-5761d8561e3d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c688e334-a30d-467d-bf88-78fe1e38fb61"
        },
        "item": {
          "id": "2197bfc3-7ac2-4dee-9f85-f65cc7763a86",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0e8832d6-adcf-4915-a30b-5b5dec3e5cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc168db0-b910-400b-96e7-11073ee0ddde",
        "cursor": {
          "ref": "de6cfe24-a1df-4aa6-8b10-a16852c1cdf7",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1498e8a8-66c3-4360-8bb4-0a05e7b082a8"
        },
        "item": {
          "id": "dc168db0-b910-400b-96e7-11073ee0ddde",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b0f7ca64-1cac-462c-918b-851be0a24ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f34ef0-8293-4332-802f-9e491bd7746a",
        "cursor": {
          "ref": "001f1629-3f5f-4466-9790-9cfd1c607633",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9cd7588c-0b0b-42da-b784-66f5c78a3444"
        },
        "item": {
          "id": "c6f34ef0-8293-4332-802f-9e491bd7746a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "90eb93ff-b7fc-44a0-8671-b2f2990eff57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c69c0aa-07f5-4e1a-b742-3bf8e942a387",
        "cursor": {
          "ref": "6df647c5-af62-4b1f-a99b-ada3263ad06e",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2285099d-ae73-4d4e-8ff3-f56c5b7fa53d"
        },
        "item": {
          "id": "6c69c0aa-07f5-4e1a-b742-3bf8e942a387",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f6989a72-b3a5-4544-a5a6-f7b851c79668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddf9e43-79ee-42c8-82a7-89cd3744c3d6",
        "cursor": {
          "ref": "b2b250de-300f-4c35-aff7-011ca57e9d70",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e7e3ce95-81f5-4399-ba06-32365c643c71"
        },
        "item": {
          "id": "9ddf9e43-79ee-42c8-82a7-89cd3744c3d6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7b34d7bd-9892-4bae-bed2-6065748f5bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95883909-4890-4f61-ae32-7d4d43f44513",
        "cursor": {
          "ref": "987ed651-cf84-40f6-8827-3e07aefa1392",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ff278ecf-2e07-4c1b-a480-7c6b789d53f8"
        },
        "item": {
          "id": "95883909-4890-4f61-ae32-7d4d43f44513",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3a573c8e-a29d-4f1e-8d22-e3efbdaff6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cbdf79-7f51-419a-8e4d-677830f33172",
        "cursor": {
          "ref": "f333c9e6-245c-4a7f-b290-5a979b631822",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b15593f5-f4c3-4225-9421-2c7261c2d78c"
        },
        "item": {
          "id": "a6cbdf79-7f51-419a-8e4d-677830f33172",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "38732779-60e9-4d88-9d53-9f5198ffab52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1770b6d-1fdb-48c5-96b9-b7c8df469b39",
        "cursor": {
          "ref": "1e2ceffe-87f6-41c2-b65a-f914646ebf2f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "613ddde7-08f8-47bc-80b0-6b35b6e81d53"
        },
        "item": {
          "id": "b1770b6d-1fdb-48c5-96b9-b7c8df469b39",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "07ef134e-9392-4b0e-b315-3d3651abbc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c6b81c-13e3-430b-a87c-7134f89cb206",
        "cursor": {
          "ref": "2bf37028-87a5-47ff-9a50-135ce5591f01",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9fd925c7-1026-4ad9-abaa-09bc650e4933"
        },
        "item": {
          "id": "b7c6b81c-13e3-430b-a87c-7134f89cb206",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4310a0aa-be32-4363-8645-252bd36d89ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6fccb1-5702-4fbc-8ea9-7dc4367024ae",
        "cursor": {
          "ref": "d2b7a52d-7cc7-4eb8-8167-2bc6c91eefb1",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d2ad95b2-b302-4674-a694-2d1c7c670406"
        },
        "item": {
          "id": "0d6fccb1-5702-4fbc-8ea9-7dc4367024ae",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "267a337b-f8de-4fda-b0f3-719ece676175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f454a8-361d-44a7-8648-36b4616985f8",
        "cursor": {
          "ref": "d0e38b37-5de9-4054-96a7-666d1dc46a52",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "83f2b25a-89d4-4f5e-a9a1-2cd9016ccccb"
        },
        "item": {
          "id": "73f454a8-361d-44a7-8648-36b4616985f8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "147ddd1a-43dd-4c5e-a64e-f5c0a3d01a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f94c1b6-c103-4a72-b313-fa1c7f8ff9d9",
        "cursor": {
          "ref": "0c68c16f-e826-4cc5-a30a-ce6a1b296383",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9e3a9996-65d5-472e-a67a-9d926d288612"
        },
        "item": {
          "id": "0f94c1b6-c103-4a72-b313-fa1c7f8ff9d9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cf80d77a-f482-4be3-930b-d1d7e32062cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b63ae9-40ab-4a7f-b3ff-f35e8a8d2547",
        "cursor": {
          "ref": "647273a7-6393-4bfb-b395-ea7ee55987b9",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3217169c-c0c5-4223-a544-366486671a27"
        },
        "item": {
          "id": "04b63ae9-40ab-4a7f-b3ff-f35e8a8d2547",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e9e71363-9eb1-4a7e-9333-ec40a5d24cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e7b918-bec5-40b8-9186-195f2ff5710f",
        "cursor": {
          "ref": "12e528aa-901d-43ca-b062-5fc55e2ef6fa",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "331d85b0-0156-4c5d-94eb-29fe8da89e62"
        },
        "item": {
          "id": "b4e7b918-bec5-40b8-9186-195f2ff5710f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f0c180d4-629c-481d-a456-5c8c2cfaac15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ce0a27-3ccc-4772-9c1d-be05bd9fbac1",
        "cursor": {
          "ref": "970b32a5-b6ab-45a4-9e9f-7709883179c3",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a93b56a7-779a-4410-97e7-b18d607cd2e6"
        },
        "item": {
          "id": "69ce0a27-3ccc-4772-9c1d-be05bd9fbac1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "83271335-d55f-41fd-a4e1-7deb47589199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ccc239-053b-4b9f-ae93-430ad0ee7159",
        "cursor": {
          "ref": "e9684d2c-b5cc-4b2c-8122-cf750978f63b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "39927fff-58e2-4a3e-a1c7-76eae0619d38"
        },
        "item": {
          "id": "f3ccc239-053b-4b9f-ae93-430ad0ee7159",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "54408725-3178-44c7-9bec-e678fee8ec48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11b0ab5-fa8c-4f83-8523-49721fc4d643",
        "cursor": {
          "ref": "8a01a171-0333-492b-8412-6fa3c214efae",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d2bbad68-3920-420c-8bd3-b5df4a2ee074"
        },
        "item": {
          "id": "e11b0ab5-fa8c-4f83-8523-49721fc4d643",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c15acf75-048f-4787-b083-2833940adb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d79d725-4efd-49fa-8e7e-2a3b6486974a",
        "cursor": {
          "ref": "fa9c44aa-8bbf-4716-89a2-acc1ae156b83",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "652a4aa1-e601-4e6c-a3d6-a76b2dcc4510"
        },
        "item": {
          "id": "6d79d725-4efd-49fa-8e7e-2a3b6486974a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9de85d24-13ee-4aa7-8c39-6f664fbd3639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03c3daf-4b1a-4b18-93fc-f1c62475bb7f",
        "cursor": {
          "ref": "ab4a6bcc-c7d0-4082-a3f7-2f5b60f4baac",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ac70e538-d551-4108-9773-dfca2213edcb"
        },
        "item": {
          "id": "b03c3daf-4b1a-4b18-93fc-f1c62475bb7f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b48e339f-a184-44a5-b0d4-2ff8b5a064ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a431938c-1960-4800-91cc-4ae40009f2d3",
        "cursor": {
          "ref": "37b23517-920d-4b12-86ff-8fc5590c90e8",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ea31c363-299d-4701-8fd8-81f62ac8da01"
        },
        "item": {
          "id": "a431938c-1960-4800-91cc-4ae40009f2d3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "486143c6-3bb1-4d93-8898-97f274a3284e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7f2ca0-1c87-4c3c-bbc5-3eddb66b75aa",
        "cursor": {
          "ref": "81aa33c0-129a-403f-bae5-762c089adbb1",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9cbaf73f-6532-4237-b8c8-bc02fb942a03"
        },
        "item": {
          "id": "1a7f2ca0-1c87-4c3c-bbc5-3eddb66b75aa",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2bad8f7e-a32f-495c-8597-6d85c4d135fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb36d88-abe4-474e-ad07-aed6b4f8d855",
        "cursor": {
          "ref": "8c8d0a04-6dfb-4ccf-b3a6-36340b8d85bc",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9c6c4fd9-a465-4762-8e87-5e88b4dce7af"
        },
        "item": {
          "id": "7bb36d88-abe4-474e-ad07-aed6b4f8d855",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "419f6198-dbcf-4595-8a8a-0b28e1f6b57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a0ab71-95b9-404a-bff6-7b6660716f37",
        "cursor": {
          "ref": "956f634e-e5d1-4d8d-8782-690e35f07c43",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d4b36a2c-1db4-4f5f-aa48-024b564de53d"
        },
        "item": {
          "id": "f7a0ab71-95b9-404a-bff6-7b6660716f37",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2cc367db-067d-4a86-8dc9-c2a34d2687fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4684c172-e251-4569-a81c-3d3b345718ab",
        "cursor": {
          "ref": "5c385407-d5e1-40d2-83e8-e95c297aa106",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b10d3334-816d-47ed-9244-a73eb2127c72"
        },
        "item": {
          "id": "4684c172-e251-4569-a81c-3d3b345718ab",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "76d87450-4b8f-4754-b6fa-90178889f7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526f6d25-1b4b-4e64-9a98-71816ed855fc",
        "cursor": {
          "ref": "a8f938e9-9b6d-41b8-b826-02c24376e4ab",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2ff8faf1-7321-49ef-b872-53d53c917bb8"
        },
        "item": {
          "id": "526f6d25-1b4b-4e64-9a98-71816ed855fc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9a873adb-bae8-4c5b-8d05-32089728f832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058559de-98bf-4848-b3f3-0636f9e9dc6f",
        "cursor": {
          "ref": "67e008db-13b1-43d6-b523-b7a5b5775c7d",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c8840ea6-4bef-43ca-9194-0741bf1cd93c"
        },
        "item": {
          "id": "058559de-98bf-4848-b3f3-0636f9e9dc6f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cf484b57-dc97-400f-8a33-dda07213c838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee48fe5-23fd-449c-8218-cbf7a03c374b",
        "cursor": {
          "ref": "6e4931b7-3473-4421-a4bf-fef48b7f7a80",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "82e3a185-9530-41ce-aa1e-b711141a4f28"
        },
        "item": {
          "id": "cee48fe5-23fd-449c-8218-cbf7a03c374b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8fe5e17e-5eaf-44e5-ac4e-e639a7431ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae2587f-1ceb-417b-ac8d-a359cc7b94ac",
        "cursor": {
          "ref": "2783bf9a-63bb-44c5-b62b-630c0262c0a5",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3cfae770-7ba2-4de9-aaa8-ac0d180d337b"
        },
        "item": {
          "id": "fae2587f-1ceb-417b-ac8d-a359cc7b94ac",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c9756109-6722-4ee5-ae0c-c6a427804793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83f3c37-1a0d-4126-87b2-a6b2cb26fcdb",
        "cursor": {
          "ref": "54940d97-f994-4250-884c-dab1372cfc22",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e5701f8d-e6ce-46dd-a1c0-10d5fafd6009"
        },
        "item": {
          "id": "e83f3c37-1a0d-4126-87b2-a6b2cb26fcdb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f5890154-579c-4bf5-b7c2-f97e824ced56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24d742e-1f01-47d4-a8b7-8f338edeffe9",
        "cursor": {
          "ref": "22d4c9c1-c73d-42d4-b082-f509ec4dee78",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f47c0549-6d39-4172-a634-1e0233e97193"
        },
        "item": {
          "id": "c24d742e-1f01-47d4-a8b7-8f338edeffe9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1ef6fcf0-57ee-4f28-80bb-c89fff84654a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0294a3cc-3673-4899-9402-15446afa81e8",
        "cursor": {
          "ref": "f8194953-0640-41e7-8cda-c1a30da47ca1",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "83507f69-6736-4e90-9689-1e899b0c78b0"
        },
        "item": {
          "id": "0294a3cc-3673-4899-9402-15446afa81e8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "63daf481-fb7b-455e-b450-b8f95a5a5c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff1b1ad-bf68-4259-ada7-153a376030dd",
        "cursor": {
          "ref": "5db51d79-d02f-4aa9-887c-365e124d26e3",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5350bda2-f292-44ec-81ef-1d0e4351af80"
        },
        "item": {
          "id": "fff1b1ad-bf68-4259-ada7-153a376030dd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "60dde2ea-9fb4-4f11-a998-92afa90994e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1f1d05-09fc-4e84-a6b2-bcea5acc9390",
        "cursor": {
          "ref": "36aa760d-e3f8-4a44-ad63-31cd788e5e33",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "acc98c54-4eda-434a-a526-5c0c375b0be5"
        },
        "item": {
          "id": "cf1f1d05-09fc-4e84-a6b2-bcea5acc9390",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fcbff405-a9b2-4b17-9b11-31599b912c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e31e7c-6554-4a03-99c9-a393d518bda7",
        "cursor": {
          "ref": "0908443d-bf4c-4bd6-aba4-6366cc61d0bd",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "73c03608-98af-454c-9ac5-d9cb1e60b6e4"
        },
        "item": {
          "id": "64e31e7c-6554-4a03-99c9-a393d518bda7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6a217bfd-8818-4393-b15b-cb822bfbbbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c335326-76f6-49db-a952-3d68ac7e8e78",
        "cursor": {
          "ref": "530c04b9-b817-45c6-bf58-70ede08751b1",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ab74b29e-61ae-418e-96a8-48fcfede6137"
        },
        "item": {
          "id": "9c335326-76f6-49db-a952-3d68ac7e8e78",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6a0d3469-18c8-4b2e-9853-1dcb76ecdedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a723560a-44e6-44ae-adf9-bb0f37a937e7",
        "cursor": {
          "ref": "9eec8abb-1b05-4edc-a07a-cf0e1ae464de",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "abf2b1e2-205e-4bd5-b041-a8b14a877d5b"
        },
        "item": {
          "id": "a723560a-44e6-44ae-adf9-bb0f37a937e7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1f3288a3-8153-49ee-97c6-e5e89a4923f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71842288-5730-4a61-b19b-3adf0f7a588f",
        "cursor": {
          "ref": "e59b5be5-cecb-4db4-ac7e-0b1237274b25",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1dfd6471-5b31-4e16-bda7-c0f9a794bde8"
        },
        "item": {
          "id": "71842288-5730-4a61-b19b-3adf0f7a588f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ed40db01-b71e-48ee-a0c9-e7bf94a78431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699c8660-9755-4462-b178-d6c85e4de64d",
        "cursor": {
          "ref": "5c1ecbdf-a746-463e-a756-34fbf7e3631f",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "11166465-8c30-4469-abb6-e8117fe9d270"
        },
        "item": {
          "id": "699c8660-9755-4462-b178-d6c85e4de64d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a60a4bcb-495d-4f99-b2ab-81b4c16b3e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c113ba1-d61e-4cd6-adf4-82a221e1106d",
        "cursor": {
          "ref": "751bc0e6-2caf-41a7-99c3-76f6404b8be9",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cde3b734-b614-4a5c-ae73-f9b81ec5a790"
        },
        "item": {
          "id": "0c113ba1-d61e-4cd6-adf4-82a221e1106d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a42b15b5-19d7-4071-a273-008303236bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934261a1-520f-465b-a8c6-a28f72a69c52",
        "cursor": {
          "ref": "fb652104-9880-40d5-958b-f736eadb95d6",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b9e33866-6cd6-4000-9d9c-e53a70bdaa52"
        },
        "item": {
          "id": "934261a1-520f-465b-a8c6-a28f72a69c52",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "60c4dfbf-9eab-44ff-857e-b7bf8deca9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b37995-ada2-4b81-8dae-3610d8c1edaa",
        "cursor": {
          "ref": "d18b6866-b1c0-4e99-928c-96804dad4a23",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a9658d0b-61d1-473f-be5e-fb47d4734bd8"
        },
        "item": {
          "id": "e9b37995-ada2-4b81-8dae-3610d8c1edaa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d6d479d4-a14c-42d9-be63-e1be9ab0a10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e373e02-b62d-49bb-ac21-3f24e8487e22",
        "cursor": {
          "ref": "3656a0bf-7216-4d44-8ece-b2978a08499c",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "dcfcec58-9b3d-4378-9e58-97abe6d90e7f"
        },
        "item": {
          "id": "8e373e02-b62d-49bb-ac21-3f24e8487e22",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "66ebffc5-d1e9-4c90-a996-1395115ff763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3801d92-007c-4e6e-858a-e1943def5339",
        "cursor": {
          "ref": "5d96cce7-67ed-4dea-b0a8-24708ba2d0db",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a528d0ae-cb8a-4997-822b-1990f2fb13bd"
        },
        "item": {
          "id": "d3801d92-007c-4e6e-858a-e1943def5339",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d102c0eb-09b0-4fa9-a072-a96980391fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5483159-89ee-491c-8ee4-f28e88e3b717",
        "cursor": {
          "ref": "48f298d5-4c08-45f0-bf62-263604acf415",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2d2532ee-d0eb-49a0-9c16-dd03fe446add"
        },
        "item": {
          "id": "f5483159-89ee-491c-8ee4-f28e88e3b717",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e9aaed1b-54fe-4715-af0e-339364eed28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602f3304-1aad-40c7-9d19-97e63b434694",
        "cursor": {
          "ref": "2021a59a-b870-44ab-ac17-f379ca3df5e4",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "428786bf-3743-428b-b9a5-faa13e890507"
        },
        "item": {
          "id": "602f3304-1aad-40c7-9d19-97e63b434694",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4046e1bb-0dc0-46c1-a11f-3c77ad0f1beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5be18b-7b95-45e5-b36b-3c54e3eb504a",
        "cursor": {
          "ref": "357f3386-4d55-4dea-963c-88e643813f33",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2931b6ae-fdbc-47e9-aeb0-204b3210e149"
        },
        "item": {
          "id": "ca5be18b-7b95-45e5-b36b-3c54e3eb504a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "09de4fd2-4008-47df-bd35-5afbdadedbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ad5519-68f3-4e32-8c91-a245ac3aa5cb",
        "cursor": {
          "ref": "bad5d418-5775-46b7-9184-2c5493cd1d24",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2bfc01c9-2dc0-47e4-82c2-6e33e6c6ded4"
        },
        "item": {
          "id": "79ad5519-68f3-4e32-8c91-a245ac3aa5cb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "661254c1-2b22-4ae5-9c2c-08b7bb98c873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a74013f-3655-4c8f-a15c-e9c575792529",
        "cursor": {
          "ref": "a60b1f82-f2f6-4076-b491-e30052640110",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5fa437fe-d1b9-4eb6-901d-40ca6ba8de13"
        },
        "item": {
          "id": "7a74013f-3655-4c8f-a15c-e9c575792529",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1e846168-afb9-4e14-b0c6-b493723a0f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36563f2-b875-4a56-bd1f-3c91aeb5364b",
        "cursor": {
          "ref": "14bb0eb9-8a3e-452c-bcb9-27854d5508e9",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9fde360e-2dbc-4aba-8ee6-e788d4e83fe0"
        },
        "item": {
          "id": "e36563f2-b875-4a56-bd1f-3c91aeb5364b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "74ba5848-fb9f-44da-bcd0-d7b08e686dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b36a8dc-592f-4328-a721-15f3ee3bca1e",
        "cursor": {
          "ref": "40069940-7f01-4ab7-9ec3-fd5d7b4ee807",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f12acdd5-6859-4c26-9871-fb22987e9e2f"
        },
        "item": {
          "id": "1b36a8dc-592f-4328-a721-15f3ee3bca1e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "49223851-4d0b-4b65-88c0-3a12ed0899f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5c1750-47b0-4381-a1a5-776b6219a3e4",
        "cursor": {
          "ref": "51e93e1a-a9c8-4910-881a-bd33ea41da61",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "db0aa36b-513a-4beb-8015-b73e62d68a52"
        },
        "item": {
          "id": "7d5c1750-47b0-4381-a1a5-776b6219a3e4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e9de4038-ef84-4b01-bcf3-bf44e9ad0ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2762cd3-0f4f-42fa-89f9-f720cba00743",
        "cursor": {
          "ref": "50b3a6bc-720f-4fd3-ae18-680c0d8ded9b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9cba19c2-5602-4d39-b2e6-b86bc1180d93"
        },
        "item": {
          "id": "a2762cd3-0f4f-42fa-89f9-f720cba00743",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b9ae77be-c29f-47fa-a0e2-b108217efa34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7f6207-b83b-4938-b9c8-99a389cbf9d5",
        "cursor": {
          "ref": "52b076a7-dae7-42e0-a31e-1e88d5e4c195",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0c879abc-eb5b-4789-b015-eb014935ed89"
        },
        "item": {
          "id": "ba7f6207-b83b-4938-b9c8-99a389cbf9d5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f4a8dab5-0508-4aa5-88e9-0a6cf9bc8f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e49fe73-3226-492b-86d8-8bdd369d687b",
        "cursor": {
          "ref": "3fd503ab-d501-4d81-b46f-4befc97248fe",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "430cac72-69b5-4913-816a-19673ec1ca74"
        },
        "item": {
          "id": "3e49fe73-3226-492b-86d8-8bdd369d687b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "36d79d6b-3e80-452d-a50e-5371615a06cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55828a6-91d0-4a9e-a36d-781a26af0908",
        "cursor": {
          "ref": "45c0d77e-ade0-46fc-8146-69b7eda9939f",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a6365e56-3818-4d17-bb89-765836612064"
        },
        "item": {
          "id": "e55828a6-91d0-4a9e-a36d-781a26af0908",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d71a6e94-de41-4599-bd72-e37f7e1b953b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2db689-ab94-42bd-bcc0-a6188e1ec361",
        "cursor": {
          "ref": "51266173-8e87-4e13-adbe-7d96f8198a1f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3c62f924-af58-42c8-a435-64ba0ae1b5e2"
        },
        "item": {
          "id": "2c2db689-ab94-42bd-bcc0-a6188e1ec361",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6def24d6-3ae1-4b1b-8e30-0754ede215e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ef0586-7c58-40c3-b733-6056affaf8b3",
        "cursor": {
          "ref": "c11f1529-ebee-4129-aa09-ebbfc2287a9d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "83baa4d8-fd13-4110-bc11-7cce7bde987b"
        },
        "item": {
          "id": "d5ef0586-7c58-40c3-b733-6056affaf8b3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a46d65fe-9a58-4a71-aaf9-ba3b0efb8493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a743c9bc-c1a0-4301-80f8-99296688c8ea",
        "cursor": {
          "ref": "f13d30f9-eb67-4f33-a221-ad8d29a4c913",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "37de9706-7f30-4a7a-af97-72e7c1bfa0d1"
        },
        "item": {
          "id": "a743c9bc-c1a0-4301-80f8-99296688c8ea",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d81accdf-1c77-4f9e-a781-55c8a9d4b7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1c2193-76ed-4ebf-9d86-e442dd02d0cb",
        "cursor": {
          "ref": "d7639568-bdab-4ce6-b2e3-7004425f35be",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b2f2968d-35d7-468f-b661-b0e20d2e7d34"
        },
        "item": {
          "id": "bd1c2193-76ed-4ebf-9d86-e442dd02d0cb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9a832dc9-0465-4bc8-b36e-b361a614db71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bd2e74-8bd1-4f20-bacc-c12689c984f9",
        "cursor": {
          "ref": "3abc9461-afe7-4ee1-96f5-8e95d69c87d4",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "acc92045-1ac4-422c-96dc-23a6720fe624"
        },
        "item": {
          "id": "22bd2e74-8bd1-4f20-bacc-c12689c984f9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "edb3a291-ecaf-4b62-9ad3-252f2805b132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f44b28-71e0-4eef-bc29-537ce79bfe2c",
        "cursor": {
          "ref": "1bc03bfa-88cf-4e63-b4b7-2b216cd0f7d3",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ee2f6984-3342-4a03-a329-44e107d60716"
        },
        "item": {
          "id": "58f44b28-71e0-4eef-bc29-537ce79bfe2c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "30134fdc-2ec0-4869-94ae-4d249777a235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de6ab26-5bfe-47c3-a38f-6e23d33e8c1b",
        "cursor": {
          "ref": "a8a0bcc4-f192-456d-98c6-0c87d6c10b30",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "24a50244-9bc6-4efa-bb26-426e6fa7d1c0"
        },
        "item": {
          "id": "0de6ab26-5bfe-47c3-a38f-6e23d33e8c1b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "310472fa-d8da-45b6-a5db-5a2d0539fa3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bac735-2397-43cc-ad21-a128704b312d",
        "cursor": {
          "ref": "6677cb1b-e9e3-4f9d-9692-31cd2b1c388e",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ff436f73-da65-497c-b71c-4ff8efe045e1"
        },
        "item": {
          "id": "58bac735-2397-43cc-ad21-a128704b312d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f09c562c-2a37-4ad7-ab17-ce6bd377470f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da06b04d-2a97-405a-835f-a0fae9733b5c",
        "cursor": {
          "ref": "20c8b573-ba5b-457b-99d6-9a04d7a242bd",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d25f8b0b-4701-43f0-a142-11d7941b8167"
        },
        "item": {
          "id": "da06b04d-2a97-405a-835f-a0fae9733b5c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "03bbf7a6-46bf-40d3-96d3-712ff7a9e118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1437a4-47e5-485d-8b56-4844486e5599",
        "cursor": {
          "ref": "86a0e520-584b-41b8-8d80-d415b08a2381",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "55598654-0a93-4959-896c-35d9d5a8fe8d"
        },
        "item": {
          "id": "1e1437a4-47e5-485d-8b56-4844486e5599",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a018009a-5850-40d4-800d-186351777448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8820fee-9c99-4e92-98e2-fb48eb42b161",
        "cursor": {
          "ref": "12c69ef2-40b0-4731-a9ac-7cca5e38fa74",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d3b64e2a-49c6-47eb-b71a-e18ffe712fb1"
        },
        "item": {
          "id": "d8820fee-9c99-4e92-98e2-fb48eb42b161",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9558ff1f-890d-46b6-b3f2-2a5bdfa5718f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5f08d1-a012-4a70-b56d-da3a9c1e7afc",
        "cursor": {
          "ref": "53605ddb-f493-4de7-8937-309fffcbda07",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5a91a850-471e-4c30-94e5-3478049ba2e1"
        },
        "item": {
          "id": "ad5f08d1-a012-4a70-b56d-da3a9c1e7afc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ffbe075e-2a25-4a42-ae67-6246d3df473a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc44a586-2045-42f0-9fbc-9089836ae635",
        "cursor": {
          "ref": "c5e49e5b-11e8-4591-a1e1-9706c61aee4f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a11362b6-17b0-43ba-a733-cea31a7796de"
        },
        "item": {
          "id": "cc44a586-2045-42f0-9fbc-9089836ae635",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7579311c-ec3a-4787-9a31-0aee640d1804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646457a1-32cc-443f-8642-89b19adadda6",
        "cursor": {
          "ref": "8dda463c-b9bb-4f2f-a980-15ff50f912c1",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "aadb1b3d-7340-4e3a-baf6-b8b0d0ec755f"
        },
        "item": {
          "id": "646457a1-32cc-443f-8642-89b19adadda6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9650f2ee-bd5b-4e04-99a6-a84c95b81b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1764d86f-31af-4f48-832e-3332e0599022",
        "cursor": {
          "ref": "e68f570a-ff91-445e-af5e-d4bcb41c9610",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4f5b255a-c407-41f8-a15b-ca57205db0dd"
        },
        "item": {
          "id": "1764d86f-31af-4f48-832e-3332e0599022",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3de89f97-5573-49fc-9bb8-ecfdda863e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b44a1b-f1dd-46a0-b986-0d2679221135",
        "cursor": {
          "ref": "e2a4f07d-3254-47c2-9da6-0de750b92163",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9e4072c0-1ff1-44da-83ae-c0abe8434927"
        },
        "item": {
          "id": "49b44a1b-f1dd-46a0-b986-0d2679221135",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6ff73c6d-48eb-4c26-b835-fd963b2ea51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda7cf34-aaff-4f28-95bf-cf1d45532d37",
        "cursor": {
          "ref": "706fee60-943e-4462-b04e-4109481f1711",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "300a4e6b-3639-4a90-8192-1b075afc574e"
        },
        "item": {
          "id": "eda7cf34-aaff-4f28-95bf-cf1d45532d37",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5bc5423c-0073-494c-b918-7dc72dd138d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5e5ea0-8380-4f35-919f-e520dd5de699",
        "cursor": {
          "ref": "738241d9-4176-4aab-8dde-3585b8a43569",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0dbef96f-d79b-4786-9e1f-2a05c04f80fb"
        },
        "item": {
          "id": "3e5e5ea0-8380-4f35-919f-e520dd5de699",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6de0a507-7480-4175-9db5-608c89350ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a802c8-f2fe-43ee-b091-40d14f110ba0",
        "cursor": {
          "ref": "5c7b0847-167d-433d-b3c5-8b053d371972",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9e39611d-9324-46fc-881c-ba8defaf3bbb"
        },
        "item": {
          "id": "97a802c8-f2fe-43ee-b091-40d14f110ba0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e4e26a64-8719-4504-93f6-9f6347f5e8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ac2469-d3ac-4d45-af65-ef643ffd3df9",
        "cursor": {
          "ref": "86f5ed3b-c8e1-41e8-9e3e-0cc91c7626c4",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "72b247ca-5ddc-4465-a30e-dcdd5f93dadc"
        },
        "item": {
          "id": "25ac2469-d3ac-4d45-af65-ef643ffd3df9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "95d36d6e-6a3f-4be8-84d8-89b2c5ecf421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157518cc-03e6-4edf-aaf1-ed98d198b9eb",
        "cursor": {
          "ref": "85ef68d0-df0f-48ab-80f8-8d27f31a8159",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f977093e-76cc-42cd-95fd-c9f1cf9c99d9"
        },
        "item": {
          "id": "157518cc-03e6-4edf-aaf1-ed98d198b9eb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "96e3bdac-4d0d-4d21-9b76-44e9503f6969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1977b0b-4d83-4c5d-97da-de46371aa037",
        "cursor": {
          "ref": "25efc451-0b3c-477b-abf6-c7a6a46825e5",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "53954340-042e-40a5-8055-467fc49270d3"
        },
        "item": {
          "id": "f1977b0b-4d83-4c5d-97da-de46371aa037",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f6876cda-8076-44e4-a77e-af47200e4529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d962f24-4c8c-403a-be95-6416ca9996ab",
        "cursor": {
          "ref": "4733496d-ea66-4da7-92f5-260aa92d778c",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e308cd3c-bbe1-4522-9ab6-ed9e7360c966"
        },
        "item": {
          "id": "0d962f24-4c8c-403a-be95-6416ca9996ab",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d30707b3-b35b-4bb8-894b-ac0b1f504c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62c9a63-489b-435a-8542-1dbccf1645a0",
        "cursor": {
          "ref": "cfc6e25d-b85e-4a25-919f-499ef586a55f",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a8d2563e-6a19-46de-90c3-d293c8f91f20"
        },
        "item": {
          "id": "b62c9a63-489b-435a-8542-1dbccf1645a0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "01bf0a54-223a-4c3e-895b-c66ec96b76b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfa4d5f-1a33-4f17-a839-42ca053b9829",
        "cursor": {
          "ref": "7bfd1074-34bf-412a-b83c-fea4d029010c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "89092b04-9cb7-4a9b-8972-23a9cbb48dbb"
        },
        "item": {
          "id": "4bfa4d5f-1a33-4f17-a839-42ca053b9829",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d3c7de15-41e5-48e3-86e5-1d87308cc298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f4525f-21af-4a27-8d36-a0cfd86ed1e8",
        "cursor": {
          "ref": "8425a72a-dc69-455c-b5e7-a329efebd1bd",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7218b6f4-2f4c-4172-8d12-09d88b795297"
        },
        "item": {
          "id": "81f4525f-21af-4a27-8d36-a0cfd86ed1e8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0e92c088-22a7-4771-8e7a-b7bfaa359f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34de573e-1e6e-4c48-a731-6dd50e47dbf2",
        "cursor": {
          "ref": "7dc6b5e9-56ae-4c2e-b03a-c3486edc9ae6",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e302929c-a99f-4c47-a11e-de65a6e0c68a"
        },
        "item": {
          "id": "34de573e-1e6e-4c48-a731-6dd50e47dbf2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "94bc98ce-4ef6-4dea-a5f8-0753fdcf50ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232122da-0a9a-432f-b6a0-921590dfe3c6",
        "cursor": {
          "ref": "d29011a7-8aa4-4557-bc2f-0e82c75cd967",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "911b3641-a2d4-490f-8ff8-250133dc4dc6"
        },
        "item": {
          "id": "232122da-0a9a-432f-b6a0-921590dfe3c6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5029b0c7-eadf-470a-858d-c3a79c294940",
          "status": "OK",
          "code": 200,
          "responseTime": 121,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "473c9c66-1dca-4c52-a0bd-4608cc7951b4",
        "cursor": {
          "ref": "a646d86e-e56f-4779-b974-1f90e6923fe8",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8d67269c-21b6-4c62-8550-06bbc1dd4fb3"
        },
        "item": {
          "id": "473c9c66-1dca-4c52-a0bd-4608cc7951b4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "253ce61c-6142-49c8-ac1b-0652a26a8cfd",
          "status": "OK",
          "code": 200,
          "responseTime": 1441,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bcbba9-ec18-4c68-b4d0-8a6736aea335",
        "cursor": {
          "ref": "6db0db8c-ed4d-4be1-94db-51b534d84d98",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8eda94de-da8e-4a53-809f-1beba19341ec"
        },
        "item": {
          "id": "78bcbba9-ec18-4c68-b4d0-8a6736aea335",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "59a057ee-5808-4621-9a89-8c4732bc87f6",
          "status": "OK",
          "code": 200,
          "responseTime": 1613,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "504a8947-01f1-452b-97ee-a90b4b82e147",
        "cursor": {
          "ref": "ca3461e1-8811-4189-bbec-000090bda304",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "58578543-d94b-415c-a935-85c0bebd03b0"
        },
        "item": {
          "id": "504a8947-01f1-452b-97ee-a90b4b82e147",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4f385c1a-5459-43ad-b36e-283a20669f39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504a8947-01f1-452b-97ee-a90b4b82e147",
        "cursor": {
          "ref": "ca3461e1-8811-4189-bbec-000090bda304",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "58578543-d94b-415c-a935-85c0bebd03b0"
        },
        "item": {
          "id": "504a8947-01f1-452b-97ee-a90b4b82e147",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4f385c1a-5459-43ad-b36e-283a20669f39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d2ef2f-b457-421c-b24e-92edbeb599e0",
        "cursor": {
          "ref": "848ea776-124d-44e8-95a2-574656e3e643",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "251a1b99-e391-4caa-af5b-e614e1844ad1"
        },
        "item": {
          "id": "62d2ef2f-b457-421c-b24e-92edbeb599e0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7ab92dac-b28c-4b6d-a548-264cc400c5b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f99406b-39fb-4a78-bc11-4921b4c36b3a",
        "cursor": {
          "ref": "59bd80e9-771b-44cd-a735-245c3e9d4029",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5f0b2537-b59a-4790-b8dc-903fb8234c41"
        },
        "item": {
          "id": "8f99406b-39fb-4a78-bc11-4921b4c36b3a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "45576c3f-038c-4295-a51c-c01feb2a3043",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}