{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c91c7e02-55f3-43ce-9784-2b2430855b67",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d63f076f-5945-4c7c-8d49-06bb893a0edb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b68b247-c68c-4430-9f39-fe9493fd3daa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4619d868-cdc7-45a6-8f15-cb5dc73be4cc"
                }
              }
            ]
          },
          {
            "id": "76d98313-b878-4eee-90e3-2105ee2cbf28",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bfc36e29-534f-44f7-86f5-a9fc2785a07d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "333d1f00-df08-4134-aade-828ccecf47d2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e7ee6d0b-d1c7-4dc7-a7ed-5fd442046b93",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ca1eae2e-e00f-4026-b89b-d4eaed9f5c5b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9b6d215f-dc51-45a7-97cd-82819ae747c6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a94d6a6f-f8dc-47a5-ad0e-5d9aee16f526",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3948f43e-7ce0-437b-ad13-7e544c858c9d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37e1fdf0-f9c9-4273-97b8-578a8e89f58d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe7bee3d-3302-486c-983f-0fd380ebfb68"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d6443fd4-8201-4d82-9ae9-bd3fac85eb60",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed5cc5a0-4ce9-45d6-9515-6a1fbfa4db2a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49df4e04-0fba-4169-99a3-019c7347c723",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d384aac9-dc5e-481f-ab3d-b82d725467c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85cd0c22-6a4d-4767-9bae-661c666a9e04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "507e1a24-3870-4c57-a089-0ef1b67ca8a3"
            }
          }
        ]
      },
      {
        "id": "ba7bc42c-f20e-4b80-b75a-999bdebc5a59",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "09d89681-8437-4ff9-aaf1-ce3c2015bb82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "096ee97f-2ca2-46d1-817a-01734e723edb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "92c9c62d-a2f4-40ff-8846-4a65f59eac3c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b0a9b4-4a98-4cde-91d1-72faf576adea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8866f07e-14b2-4493-8625-b9eee08f4902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6be1da-0772-4dbd-9be8-a36c585f6cc5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a76898-f140-454c-9923-90cd181cc2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc373308-6ad7-4bb2-af91-677a0c83d532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07231dd-f2c9-41f8-9677-66c566f5f71c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07c6705-1a3f-4270-bb4e-52b2374fbdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0dd6df97-7a17-4a38-a8de-186c30fa23fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a7c0d22c-3e1f-4137-9d40-c0f1192eb333",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db11620a-b9c5-44ec-98ef-9176c17c0bb1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee257393-dbb5-4a4c-acf0-7de33e51eb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c273043-afe1-4535-8261-36f3babd363a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fe2163-31de-4bae-a4be-93a3e0915b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703e8051-b509-434a-b251-029e6ae646c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c2ea0733-dafb-4f8c-ae26-73551f726065",
            "name": "Positive Testing",
            "item": [
              {
                "id": "23396e5e-fa6b-4c14-b626-97f904d83f9c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b7736af-d2b2-4524-856e-0cb65eea0e2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8796edd9-3b7b-4a2e-9f69-903395600c89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71275ed3-68e6-4e7f-a0cd-4b2ad873e782",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "540e6ab2-294d-4a1b-b566-de7523436b97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d4da3ed-b2f0-428f-99dc-f28a03778d61",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78ea406d-92fc-4254-b344-dea346adfb82"
            }
          }
        ]
      },
      {
        "id": "9547b2ec-d7aa-41f9-bc75-8996da7cf28b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "59d86f94-9c5d-4304-b2d4-4655b657c6e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d918e0d7-7114-4e4e-96e3-b5de595af6d9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9cb94bfd-18c9-45ab-8d16-e6d437600070",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3921265-4082-4c65-af01-1b5bf725bc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a19d644-92f0-4534-9e8c-2065501ecab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e546c6-6f9f-468f-b095-8aba517bda06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea7f49fb-8539-41a5-ba3e-65c6698eef00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fa53e2-bb48-4142-891e-b4fc0e4d62ad",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d658c13-35f1-4485-aa34-d1c1e3610c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac01050-d465-4d26-9ad8-a2b066ad86a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f64470-1611-419c-8cc3-397cd3aa5a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efda1819-12d5-4d0c-a42c-7f12e7dd9267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b795a7fb-339b-449a-b572-5c51b8dbe98a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f4cb49-50fb-4e7c-b317-ed3d3ba2307c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98e7d63-b574-4981-a992-ec05cf538d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fe78b1-78d1-4ce5-87b9-82cd0c7a1f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f5b9198-81b3-41a6-91b4-df9815aaa27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad74a32-7bb2-4458-83a6-1554994391bc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1757d70a-158b-44bf-8a96-dd95b4418c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13bb91f2-b692-4ed4-8562-fc38318b0cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d1c2e8-2490-4f91-b3b3-0dc0556c6b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97f8806a-8953-478a-b270-da2031a1345c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9de9d3d-f7fe-4ad3-9d3c-f0e877121041",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b8bbc2-6c74-4511-a89a-a508b178bab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed38144-aada-4ac7-a741-d383ba867235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865487fa-fab9-44c6-8f4f-aeb5ee0cef51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69d8a3f9-a8f9-4414-bf6a-355ea0cb8af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540cc9de-8337-4715-9bd7-9500ea787aae",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ddcdbb-6d1f-439f-b25f-a36e6af65cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb3a53e-2c44-4b7a-9472-bf78d1e4a3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6031649-cad2-411d-b66e-1d881fa507a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47b5ea30-d336-47b0-82fe-00f6269abd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b23a19-a818-404c-b925-908a6384be0e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56250cb5-c108-4553-82ac-bc131e115304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825fcaee-c96c-4ef6-a19b-5dceaa7eeea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68c8d27-2d03-4b52-9247-f7903df9a5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebafc122-50e6-4022-8cb0-91881fd53447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39eb54c1-ab1f-4f5c-b984-b6bd15e66b17",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75be2f83-5024-4520-a5b7-79b596242aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a02fae2-a573-4a06-a401-c99fa8817be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f23732-6711-4fba-b1ef-571f6a496e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e79a91f-56f3-43e3-920a-5fa89cea5bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72545549-6d16-4cb6-9cfd-e93e3b5be1ef",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6ef7f3-0fb2-4a3a-b5d7-37bf934157d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbe400d-4b05-44d3-8110-c16885dc9cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b33d4c-bad1-47c9-af6f-ae93e946d2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48757316-b3b1-4132-9063-c88b1b9ffcc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c266c01-87af-4de2-92cb-4f2185dc70b2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9259d6-26b2-48ca-8446-839bc704436f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ae6900-2a38-4df1-b1e0-bae5be2a2679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e34250-5dfe-46e3-b7ef-f0d90e5f266f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "debeb21a-1171-41df-a71f-09e5b1c4cb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73fa383-6084-4941-b3d8-744c63134c81",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16108eef-5a81-40f6-aa7d-2c51be20ea34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04726215-72b6-4c8c-b2a3-76a6f124fb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f46be77-e62e-4024-8f6a-fcedf20b616e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b4722bb-3f41-49b3-b62b-c8b0a2682d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1e66b6-2259-492d-a7a6-c79e90e23147",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0d72e2-875e-4405-aa46-97476956ac17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37122ce3-db4c-4062-8f75-8b76d662b03e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca82d566-71cd-44ea-af28-cb7536341dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7df479fa-21f9-4c95-8174-93e7cf2f5a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd42889-9c25-437c-a694-4a98bdd07449",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ea850c-a6e9-4a83-b0f9-3ab488dd36a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0898b7-f5a0-4957-9500-5aabdc45e626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75419e0b-3476-4f53-9eec-924728441ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa97c62c-ca06-4670-9bf5-a485f98cedc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d433e48-42d5-4f55-8503-bc7b22193bba",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2fadea-9992-4d27-9dc3-d9cb0b958483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b606432e-3941-444f-91fd-f0a3d60d5b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c3a4c2-29be-4f78-b989-3fa983ca4a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e37a73f-cedc-4c87-8810-a3a89f106894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e08324e-93d3-4562-bf71-894b7b176404",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7468ba90-05f8-498e-8e4f-37ce1fa6a623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b965906b-2287-4f15-b7ea-432abbb775dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7820403-bb78-4e52-9a71-7116c7d06340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f295034-5b1d-47c4-a807-18da1663faad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067cacc8-05f2-4811-ac71-b9a7aadfd999",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ebf48d-a715-4656-9f40-6d3f10f1fd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565e74d8-a4cd-429b-a32a-860d6a67660f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d34b28-fcf2-492a-b47a-baaf7db85d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "155109ab-3bef-4891-b675-0b3fa3a2f821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf820c14-5172-49f0-9753-4b6b0d6da26a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797eb938-046d-4168-953f-5ca6370332e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ce3586-efef-4c9d-a0d2-69a0f58c68d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26bbefd-f6ce-4d51-af81-21617ba86279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bb648ed-32bf-4b67-901a-b51c6365a955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f799d152-0b9e-4f4e-94eb-5b28b7af2690",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42a3262-e62f-40ed-8eb0-1567a03fa6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7db9f7-9745-42bc-bae5-dd10137f2960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144bb5f6-05ae-43df-8559-12ff98c2659f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eaba6a1-c0d3-4bbe-b31e-14cbd63996d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d01301-c41f-40cc-9802-d475d1738e78",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8024b9e2-1d10-4f24-9fcc-64e918b16d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4f80a6-5b43-451c-a948-1f1ff6f1feea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b25628e-9547-44b7-b56b-ab58cda7eaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cea24141-4cb4-4b84-9be7-94ecfd1738fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4c5f38-dbfc-4598-862c-3ccb01891816",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d27fd68-b2bf-479d-90d7-b9cddbb05702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79f52e4-7baf-4fd7-89aa-1cfcce230dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560efc65-5679-4124-800b-ff4e3ab9bffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "006cd2ae-539f-4bc9-b7f6-b39ee129a1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f5709a-5904-46de-97fc-a6af45c6b3b5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c62664-c9cb-41bc-9064-f121ccc89cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23218422-73e9-46a7-9257-928f047235d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f645409-0b98-4627-878e-8d4fc3e83a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c4e174-018c-4bfb-b631-070e2b820145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edddb772-42a1-420c-b581-e37eda264019",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78a2d36-120e-4a1e-bd74-9208d98ea2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1cf5e88-638d-4b27-9160-ff534ae62896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2f0e54-4bf5-418f-9837-806fb84ddda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "530f61df-1a80-4abd-8887-237bed1a1c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fd9325-002f-4d13-98ad-8cc5b6a4ebee",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9bdf60-ca90-476b-8efe-caab5cea941d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30f857b-912c-46f4-ae41-3da3a6a6fcf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f8ed64-ed1f-46f3-980a-ea3f5448317c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5ba2e7-7745-49dc-b8f6-f14773878b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae19e9a2-beeb-4641-9aa6-33fce9354076",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5792c3-41bf-42c2-94fa-5fbe277c6550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84e24d1-840b-4c55-aee5-07b67ed576c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8796c5-ac2b-4d1e-8831-614812869ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "818fc4f7-cbfa-4f79-b375-0fc7b8abaf30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9423bb9-e473-4ca6-8697-529176c0a93e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3ccc68-fc8b-4d32-9a22-c8ff03a4f961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84ea5c4-e777-489b-aea8-533ee0d17309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4334619b-461d-40ab-92e0-66cd256eca42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d13dba6f-c288-4a88-97d2-8800ee433061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7daca71e-d867-4869-835c-d1ca5f618d59",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f58a0ab-a095-427b-812c-507afdc1b5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5b40c5-2074-4387-8399-087439b54a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8dc0bd-4b45-437c-aaa3-214f3c8c2074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b611abf7-5205-4aff-b1fc-3c6331bf9a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac2a865-08c0-4bd6-9fd3-1f3fa5eb22d6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956a5c76-fa80-4071-b445-2e4de0ee5ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145f289b-711a-4d1b-984c-cc80a6a2d474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec476851-e090-4695-836d-eb162e9fb2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aada6a79-a655-4469-9911-b388636a5f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea24b39-bcfb-49a4-8ecc-b624d34dfb7a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c8500c-b100-4c02-b8d9-a395faff3774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf225b5-3cde-47b3-8b63-0193f4ed5867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35c197e-c685-4fed-a47a-7a042256eb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "356bf258-5449-4e6f-ac6d-7b47fdb62ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cde26f-63aa-4ff8-ba37-dfd871335e08",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1047795-465f-46ca-babf-52718481845f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de0c3b3-2afa-4826-95bf-26eb33996cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95261614-a330-4ae1-8e52-8b2db98bce46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e654856-17a6-43b7-814d-14b81d0bb0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92040694-36dc-47f1-b3a2-940c213f1cdd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf94fd5-4f47-4ec1-9c61-ee434a890409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881bc718-755a-4eda-917e-21d54558cb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebc630e-06dc-4110-8a43-b7276af8fce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "772d96f8-bc40-41dd-a78d-1e5a2caf70f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0d38b9-0c08-4846-83b3-8329a9670545",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a87adc3-52bc-4c82-a553-e1cc7947dd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0826f9-d8a9-474b-a049-75ad353035be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90ef8cb-d598-44c9-82eb-0207583d9c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "56794150-5c54-42fc-a6a5-2baf3160be20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11a3015-69dd-40f2-91f1-a9c1b6623175",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fe7f9d-438d-413c-9fa3-61c0f164e6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce541f25-3205-4b12-a2a7-1129f16935fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5783780-ecef-4814-8917-5cf7906fa17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c682f48-a3ff-40d9-a305-681156684ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8163ba96-f2c7-4d29-aa20-62d06855befb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e0ae90-b40f-4af8-b539-0f14f756c171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d436f7-431a-4817-bd4e-cb730f783c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea2c99a-f15a-4b6f-b698-fdac6ae70f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36b369c2-7984-419f-ac8d-e9fa2308b40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ba5e7c-d16f-4e27-98b3-aa84b9f1faa6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a406b79-fe0b-4b3b-97a5-9c0bd43b27db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef417f7-bcc6-491d-bd7a-3962099f79eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97230918-954e-433c-bf06-a3bebd0126ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62b4fdb2-95bf-410b-9ef0-b74bae67154a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7ebf01-754e-4125-89d4-dbd1a62864fb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052836e0-833e-41ad-8c6b-a9a45e1dcd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77721583-9848-4a30-b78e-a7c94975d49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca003391-8ee4-4ff7-88aa-4b3d47f9527c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "16b9871e-aea0-4ace-bd33-4eb262ea986b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63089ca-d3f3-4d81-804d-54b45db399a2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85134b9b-7bb9-45c0-bca0-6ab01badb2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c5b28dd-2795-41ab-9332-c2fc22717692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41936df-0ffc-4cef-8845-5a8286b31c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b454883d-94a3-4712-861b-4e8165d350c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d368fd5-f5d0-4494-b5e0-456ef1ae505a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b24315-7ac4-4946-8874-91dab7e96d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5808e0e-335b-45ff-a2af-e18f898f6961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedbb4bd-2d27-4177-a855-b040ad93f256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63d11718-9325-4b63-ac41-30714601c765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658c17f4-2829-48a6-a049-2d69531173f4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f63c97-917a-41c0-88ea-e78cd4581373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c8675c-2583-4291-b383-8346c296b51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc41866-c167-4a56-893f-dd1b81d2b524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ff3ea0-674b-49ae-86cb-dd97997b7823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7c1071-166c-4a69-9e5b-a87db4bffe43",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc19fa0c-ec81-4527-a7a7-dd4655e1db05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3909d3-3586-465e-b202-8e333e9cabd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e817f3-e53b-470b-9229-04bea98a91b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a734318-2938-46a8-a1c4-fcf483671fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a981e3-d7b9-4668-91c7-19f2e2892084",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d193be-b42b-4d0e-aff4-49d538c0ca17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68682984-2862-42a7-afbf-7352e001cec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9f274f-237b-4d7a-9a9d-cca3a4c51658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e50265e-511e-4b9b-9ae3-36d9538a3da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a35d029-c8d3-48df-a8f7-c9c6493f0fc5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a450cc-8f5c-4e8c-a580-212b5a8dfd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a482315-d518-41e0-91a4-cb4add447b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3324a51d-63de-4204-92cd-93486dbf4cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "21e83c10-bb97-4dd3-876a-04d70c7064e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c77dbe-d832-4cac-9957-6d254fc4e5da",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb760dd-3622-4f92-9c7f-1ecc29413c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b4ec9b-54fa-4c9b-b528-7b389b7c2098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ffac78-b2c7-4834-acce-4616762fe514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2e000b0d-4342-4ae6-81f9-497c9a99474d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249c0de7-747c-4327-b519-57f568cb1bb9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afebcde4-6a43-4043-bb82-90c83c920ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535cb9b3-24ed-451c-9698-4c1eaf3ce722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f16f6c-7023-4f49-b4b5-169b68ea2fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7aa7a3d-517f-49d3-ae47-4a8312b42790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1d0f84-4693-45a8-949c-831048794844",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c00f19-196d-4791-b6c9-80addd7da683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d08597-eb4b-4131-b5d4-4a11b4246c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9c6bec-e793-4251-8e79-8cd1a78a65c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea64bd2-0912-4672-a48a-e7216efa2084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab27c032-0bc0-491e-95ec-6ef10c26a033",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2742cc77-6659-42cb-b444-4507f531e6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a60f30-c03d-4993-84dc-99e724d8fef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c26466-350f-4165-b8c7-b1aeab453e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7f9a9d-57d4-4015-9b5c-f2bf7539debe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3efd73f-fe65-467c-98bd-cb118148d3c6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa98a32-e193-46d0-9d2a-cbe4e7956e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09f28e6-4c6f-416a-9772-d0bcd03f75c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9c7de9-9e56-48c6-994d-9f4a6050cbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80cc90e9-061e-4d87-8c92-5d8313129d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435f15ea-4d32-41e0-a783-914a1ccdff71",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615425d2-2f11-499e-b53d-53d5f2b7c8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b7b16f-aecc-48e0-8bc2-489bbe7f367b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9f4cdb-722c-4644-9198-b53cd833cd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6df9168f-9921-484d-9fb2-f682e1442cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3871ac0e-df34-4261-8a1b-5856e023e92b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121bd989-064e-4934-9395-689d0db333e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fd8b91-eccd-40e1-8a51-8fdfcbe35d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad1dd44-7e35-453d-9f49-d54a6b6128c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7249d7c5-bd5f-4c68-a61a-3f32dd4653a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717dfb61-f0c2-4a23-86c5-c111f05e6ead",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d92662-d09e-480f-a1cc-abec84badb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9eda6a4-1d13-46a8-a492-731b2876de57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b01c24-31d9-43a9-87d7-b89351043544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cbc853a-1920-4611-a180-fc71401a6177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07603f7-7f70-4eac-955e-f82d20c17ae0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b620aee1-93e1-410c-8645-278482a3eca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a17d50-76ca-43a4-9bf6-de4e9330d1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f42d3b-f26c-4abf-b123-b79ab9e2c857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf18f504-b39d-4d32-9486-351001be5a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6894696d-b3ad-4085-a687-687232d8b6d7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8605ec2-4209-45a7-9006-f8308d5de7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a846c41a-35d8-457d-9636-a2ecd0fa4a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69d1845-3dd3-47cf-9c2e-28f463b1ec60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae447500-223b-4e57-94a9-9a5f08e7d9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163a5f64-4add-42da-9aa4-4a3615109d40",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75142155-4ecf-4d8e-a4a0-f82b371901e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eae0774-edc9-4abb-9557-d1b5dc180831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ce83ac-fb48-47b7-a59c-d446b4281ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd5993c-e331-4b23-979e-89fabc14d8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64c9885-222d-4f58-91c5-88836dc78dc3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cafef79-73c7-4a07-adbf-99ec49311d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872be9e4-ecf2-4db8-985e-eba92130ecdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126653b3-a740-4c9a-8eb0-2692670d4ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "acd24c34-df01-4254-b109-9fda20ee34cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc1aec1-af9a-404d-bb05-a07664c36512",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c16cb7d-1dfd-4c44-b149-1f2eb0e7eeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706ea62e-bf19-47ea-a7c8-289a64ce536b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab54ea6-e396-417e-8b56-78e8ff1971d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8044d5fc-d28a-4da1-a2ad-9d2106b48ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b1a201-be58-423a-9137-40e0beed6a22",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0657b7-2b76-4280-b1af-6e1802e78b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc99988b-ac14-455e-a644-ed1f045dd512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa829c27-f184-4a8d-be6f-d6850d15bd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0526db65-889a-456e-b730-0194856ca590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582af547-3545-4f0e-bad8-227f6473b62f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bc1ce1-96f9-459c-b30a-fe26108fcf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991aa7a1-e930-4ecb-a729-cfd413e4d4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1db5645-f995-4ef5-a293-14a0c1165b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8a004729-e946-48ea-ac48-edbb9e79b23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50eae478-81a0-497f-99ed-0055aefdab49",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98aef98-8b14-4bdd-bb23-8e3bbbf014f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc25a83b-7246-4b01-82bf-654152ba27b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354485ea-b080-4c19-aa70-15f3222310e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e90a926-47eb-4049-b1ce-e5fd36272865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df79f8c7-1988-4008-a765-38ae9004ac58",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb17310-99b4-42b0-8825-f3a7c303fa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c805d8fb-7c1c-4d8e-bd44-6f775de175b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9035bed-531d-48ab-8294-6d667a7fcb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e46fc6d0-1ad4-492e-bb75-ab1e32a8c2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acdcea1-5a2e-4192-b8b7-1575d6617b93",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5f024c-666c-4905-b468-0e13e14d5f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a4550b-0df9-428b-bfa6-e84b72af821c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d173da5-397b-484b-b22a-c6dc269e46ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cebb73a7-c5c1-4cad-a0a2-894770b608ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361f18e7-dae0-40be-9a3b-b3786ee688a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6deb7500-0f3a-4f4c-9633-9cef55228082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b963f743-cdfb-4fe4-bc5f-e7c48c968284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1443e2-1a57-43ce-8131-d1cd10331229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbdd55c4-fe3f-43a5-b1bc-99ade0e40e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86bb8a0-25b8-4317-a752-df85e6ce2093",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acaf5ca8-d332-465e-9813-46208e97d49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3462893-de0d-4b3b-af07-fa15a0be1f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3235be1b-d839-49c6-8f27-533fda628e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fccb586-4f2c-48fb-8ae3-b8649ace0803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9008ec44-6ec7-4ad9-840b-96d87dc89fef",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5395e77d-5681-4676-8671-9e6e599c9fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84c2ec1-bb2d-467b-a97d-d4fd66c8fc8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1906e3d-c0c2-4f45-9c2e-130896e324cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2345cbcf-47d6-4632-ae19-244aea3fcdfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879b2a90-92cf-4ed4-85c9-8dbf4da57d2a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3e71d6-8321-4beb-b436-e4995330b15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a654f4c3-6452-42e7-96ae-ebd74f8b1749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d638aef-5619-4300-a93a-ead633279cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "907bee48-cd7d-441d-b6d0-d5151863fcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bfab45-499f-4bd6-a86d-694fc1888fc1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794cf1de-e39c-4935-b176-12ba9a44b7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8647a862-3e06-4ee4-ae31-1f8c36250713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e43d3fd-c6fc-4cc4-88ea-fe737440b9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cebc9b0-0aea-48fd-a64e-3651862d4af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707fff02-bae5-481b-83a1-10614be2906a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343db3ef-28b4-4cda-b143-d4e1a4d3c242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07636ee-fa18-4da3-9ef7-2150835ac7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c5f106-2403-4e87-bf37-13c66a21b380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a36a074-1924-402f-ad88-995554a5dae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d70e9b-f716-4c93-8bd1-28fcca55cd68",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c168e14-e827-421d-b98b-9446ee856340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603d754d-df1f-4d86-888c-a662e6e4842e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5dbc72-8111-4013-8538-42305f3ef4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9dbb5da-9a4f-428c-82d3-64e15f1c80c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663583cb-c26e-480c-9f39-13f54f231295",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e2eb53-379d-4008-a771-1f2b2893a5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b65e01-1e6a-4578-8fe6-6d3d6ea8c39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697a156a-6f5d-42d7-b55a-50c8229bdb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a88367c7-2b3b-4351-9d70-90d8ff3dd3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcf8ab9-2d4c-4b27-ae74-b10fd8a5ae48",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afc14cd-611d-425b-9261-734195245f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2523e6f2-5faa-48d7-ae01-9a8de277e58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa49cd2-652b-44a4-8b20-24e66708be0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc4fdb7-934d-466f-a9e4-537eb3e99b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860e8e99-7719-48eb-9f05-73cc33792478",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8b76d6-72a9-46c7-8cea-3da1c581615e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2371118-6d8a-46c0-a124-67cf9bedf42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b23b728-c78f-483a-a658-5c1a55e068ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8d559b-83a3-4b49-8c21-a246ef060c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30659c32-7a25-46ab-8aa5-bb767d6f4a66",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8aa8f47-ae56-485e-a858-7b11338c893b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf62a2f4-89e6-4ea8-affc-dfd383c77bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47c3163-ddb2-4f47-969f-ce627aac4611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb95a27-2608-4a82-9683-ec33e14a8b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0c744b-57fc-4741-9749-db42dd5ec9ca",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c3f146-9881-49ea-b05a-641b0669967a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50bb9b0-fc84-48f6-b5d6-53b5a1cd3be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b3587b-c3aa-4e31-acf2-5ce394dfa1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec8d304-9fc9-4195-be66-8a6d6fbca665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a395c2-6a3c-4030-95fe-97d9a4e00cbe",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6f56c6-44dd-4d52-b344-12c59af4aa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f52e4fb-127b-4bf0-86b3-489ad5a8f6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b32d70f-442a-4bd9-8626-effc5abf7027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbbe4a0-3dcb-46be-ad74-b51f43397d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f78c2c-6114-45bf-be3e-fc985d824820",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271b5327-1a90-453e-8308-708c4af526df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b5a3f8-d258-498d-a72b-e56f224951e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c03d1da-ecf1-41b7-8176-c409bd8e0c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3704c8-e537-4181-9383-4c7d9530c88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9b3681-f24f-48a3-827d-44813999a2be",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba44603d-b8a8-43b0-879b-03f0d7f83f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310d6646-8a03-44ee-8cc3-1db8debdd505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a4f275-de2e-44e8-8321-9a127f9dbf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11b0cc11-f1a1-4e06-a635-6f8fd8f0f4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b5ff51-80ad-4874-831d-5cca640a4702",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bebdf3-888b-45a8-9bc3-6633a01c8e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46ceb9d-1b0c-49bf-b16b-4cd0558c1d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13444a83-2e7c-4a62-8bea-6d716bd1b150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d1e65c-f535-470f-862c-5ce7dbbc718e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baea1c5d-adaa-428c-a361-87d934661768",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b60dada-0d7c-4af2-9268-6ae6feb1bd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d03ba44-1a1b-429e-85fa-1557cb21be94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d56bf6-66b4-4ade-924b-bced43397f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6532e72e-a3ff-4ab9-83e5-1756ea563d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56e6557-731f-4668-8cfe-1440a44b151e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c45ee5c-bf0e-4095-a850-60c72df71938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8a18c0-5375-4e74-8c8f-414fdfdf5ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5067b02a-3708-4288-8f44-eb58f5b93800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5af8a791-c7aa-45f3-8f52-dc9aed3c24ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344a1e7c-9dc3-4aa6-82f8-249e99365667",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dc72df-4af9-494e-89e8-d0119b837916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1b7b4c-ed02-480e-bccd-6536a205eb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992ed435-833a-4dc1-98a0-76dec77692c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "781f0753-4976-47c1-9f63-5379e63ed521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40e7a32-1e92-43f8-b3da-3ad3dcf241ee",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0194cb08-37a6-4bf2-881e-9a9147255295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc69fa64-f6e0-46bb-a96e-c8cca86d456b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8942e202-ae6c-48b1-be87-d62611203f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "415313ab-a301-40f7-876f-a2fe6a19190d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa67131-d7f7-4dc1-870f-528f56d30525",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bec70c-48eb-442f-bf39-425ae39446dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb44dc9f-39ae-4046-95cb-6b957c185e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34099fc-c15b-415b-a608-d4017f9ffcce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a079052-1df6-4e72-9d76-95f4ea5a600e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52340e8a-ddac-4458-bc25-a67e76a5d10c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3890623-154f-42a7-b391-382530b9f224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c97ae73-cf44-4396-8b75-1f53e538d54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c62c790-2344-44f3-887f-a7beba1e224d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8e80e4-cb3b-4340-9815-fb1b6af69af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a55ac5-5628-4776-af91-3539f581a5aa",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45bcda4-4aa6-4535-aea7-f0e4bf66340f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a46e15-392b-458f-9eb3-65614fee6a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42c22d4-eed3-4b22-99c6-dcfcbead237c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab91bf65-8217-4d09-aef6-a9f57d3f7c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb45a7f8-905e-48ff-92ae-5b12636644f4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd82ea9a-97c7-4728-975c-5a1f145a077e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc55f7ac-a022-47ed-8a8e-b60a52b88ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751bf2ad-cbf7-4451-92d6-84938c8b070c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "820cd701-67ec-4e74-9adf-eded270653a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eef9a2d-a497-4573-b8ab-f16be92c5914",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39c1061-fb8e-44bc-98d4-659d42c065f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e30a82-6aa5-4599-884d-44dd31d39865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9ce88d-afe1-4d5c-ba66-1e9486b6fb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0687f0a0-c25c-4084-ac82-ab7bc85f4969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f42eadd-9e5b-44c1-8a80-02d8fc28a297",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516798d6-a135-4414-b114-c859fded71f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3514ddee-f01b-4760-8315-fcbba29c6ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b17ed9-f5fd-4517-badd-3b6f85aed071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d5d7d5-b4aa-486f-9fef-a01611443549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fa23b1-1bc5-4bf4-a224-fe0d8eeaed9b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26789dff-09e2-4351-bee7-6ea54e82df68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6217cf68-feef-4929-aa31-e024d6e0e761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f2de6b-7a39-4ec1-ade8-5ccbf7444b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6da0251-a7bb-4596-80b1-79f139c2be61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f8f579-73e2-492b-8323-187427e31cad",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b08d5b-5a10-4dcd-91b9-d5f4f0f0bd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b866fe-316d-46cb-98c4-8f92b72b6a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0cfaec-a13d-4edb-911d-9fc85215a676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0703ad1c-00c4-43bf-a42e-1dda0701a8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ba9032-683d-4334-bec6-c4b135173fa1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8263d1c-95d5-4a79-a04e-0cd3a7bcb5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d113e5-b050-4efa-95b6-401a907f8126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12d7c1f-01ec-4cc0-82b1-4a7249007f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5057f441-d8f4-44bc-957c-835aa30ee384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4205839c-99fd-4f09-93b4-5f145a8c172d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e414691c-b1af-43d7-a599-49705dcca03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27bdcd50-57c8-40d9-a460-66d1afa123a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee11af4-f4aa-4b21-ba56-17f23123d8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "28ad5bc3-2ec1-4de7-a06a-11200c3a34d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4104b781-79ae-440f-878f-ae51a633453d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b223f58-96bd-4e38-a4f8-02d79eefabf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b631c052-0bdc-41fd-be14-24e632abae9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec24e891-e197-461f-b5f6-63afb22facc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4a7e68-f848-4038-9ae2-4fcbb9cbdfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4ef56c-4d30-4f74-8357-d262ef62eccb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08548ab2-a96c-4c7a-8c0a-308c902e076f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b74b9c2-640f-4371-8b54-1cf361200848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aff2621-ff6b-4ca8-bc21-cd1dc0342dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "09f5ca98-dc51-4832-b346-d61fe076efee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81fb4bb-2add-4496-8228-8d0b9ff1a57c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8b1dea-722e-4c58-b96c-34014830e9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f0a9d2d0-e5b4-4074-ab1b-aaf7c07057ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ee7304-d4b9-406a-ac99-d13a1d85eba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce571411-d263-459b-bea8-fa2ac32b2097"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "510322a6-8deb-4cef-bd1c-1d45979d8742",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01ab7428-1497-4a6a-8047-e3a01c76f7fd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e078a7-1cd2-4581-a578-002c10e722f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb4132ce-c007-4725-af96-06ddcb2cee9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7b3154-7405-4569-a724-a41ee37af2e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b274d81-7910-48e2-9340-a3238318d043"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54d0bcb9-bf5b-46f1-b42a-c37917863ee8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83384ea9-794c-4713-9162-701c2ec7f939"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67cda11e-33ea-4190-b64d-59ab9f93f57a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "906070cb-cc54-4103-98c6-902d13882e23"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3c92bcd-624a-48e4-b13d-a3d1abedfe90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a87b9e0f-d34b-4413-aaf7-fdaa1034587c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e72f8b09-e934-43ac-aff1-d59720249072",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab8421fb-0d5a-4c6c-8662-cd1d9dc927fe"
                }
              }
            ]
          },
          {
            "id": "8dc512c3-3d5f-4ad9-9295-eb563b2f51fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b75555af-80a5-45b8-ba8f-41490844b6c1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87df2434-96ad-46f6-9bdc-d1e3b682bf48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16c354b0-f9f5-4dc7-aac2-dec636ae4239"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6a5600f-ec95-4a28-81bd-9594675655c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6ec8ea57-7b6e-4a73-b77b-740875106855"
                    }
                  }
                ]
              },
              {
                "id": "916082d6-f86f-4781-ab94-028055fc596a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6d31ad7-4a43-442a-9659-d3f497db0fa7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6f53809-1022-4c77-96d7-af39b30fe65e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7147ea3-20b3-4246-aa93-367ce4d40cef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1cb7310-0c98-492e-8510-f840c79ae1da"
                    }
                  }
                ]
              },
              {
                "id": "5cd528f6-d139-49ec-aa88-f3f76a8b4d8f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f3b61d0-5e0b-4bb8-9d93-5659f728f4f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe0bada9-bb5a-4234-8d76-f15277c6b5bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cf1c46c-c051-49e4-b8fc-6afaeb5ca2c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "654b10f9-d510-41b8-8f38-480829222b3c"
                    }
                  }
                ]
              },
              {
                "id": "c172a0ee-332e-436f-a4b3-25f42e364575",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2905b254-ae08-473f-8ea9-beda0da2bf8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1f19505-f82f-449c-a2cc-af0dfe3a8369"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4e59e4a-1f7f-4189-aca8-1fc55c322dc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bcc719d9-60a9-4e87-8563-879a0d915cec"
                    }
                  }
                ]
              },
              {
                "id": "0924461f-2fb5-4b48-aecf-88301a3b6da5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bcb608e-7d3b-4866-b7c7-226f095e8d53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae0122d4-3eb8-4608-ab4e-d3768943acbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97342305-3ebb-4970-aaac-4eab7015cec2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d3636bdb-da3a-4479-9d2c-66e7823b3e1d"
                    }
                  }
                ]
              },
              {
                "id": "8b9082dd-3561-43e2-a3bc-e2e69fefff8c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70ff8b27-3749-43a4-863b-a91863902edd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a03ea92-4ffb-4fac-907c-ec06da51a911"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ccf59a7-7d95-46ac-b2e7-81e03196a7f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a3a164ca-9e7e-4899-b47d-d1c1daa74818"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3131939f-d366-46d5-bbe8-6a2d0081a450",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce9563a1-c458-4aaa-bc86-8fc4ffda981d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e87ecd5-ff2f-4f10-808e-4a6887ddb8db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3924e370-1f30-4ebf-a4d7-dc4726f79e54"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c38b3fe-d01c-40bb-9fee-44b89f6188a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "853b2c68-62bf-4509-8d9e-c7ea07ec6f4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e11799e-c622-4972-9713-87c7af45e135",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b85b5dda-c73f-402d-b505-ece1b0854287"
            }
          }
        ]
      },
      {
        "id": "6eeb141e-ac86-43fe-b614-95a95948076b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f34a1656-08ab-4c7f-90ee-e6ab51b5fa89",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4ead936-1844-4211-9eac-38ee5e1e06f7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "29afd47a-1dbd-4f37-ab18-56c3a684b41d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c903c0-6aff-41be-abd5-e4ac96d3c7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d792e182-2f21-421e-84d0-fa631a2e1bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a5c063-a559-4b67-a3af-2804691a1215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1f3395-f61a-4f1a-b5e4-30db55112284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23eec2c7-da4b-42a3-8593-f0c659ccc744",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a907ff1a-be33-4044-bb59-4f933ceb963f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a8028f-b7a1-4a78-a603-77ddfda99755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a101b92-88b3-4458-968b-83621a8b7e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a89256-7f48-47aa-9a49-ec3425162017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51cd7e4-933d-453c-bbcf-046f9986db67",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19032ea9-5ad0-4c3f-ba3e-878e3d048bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f293ab4e-a71f-4067-8dc9-fd2d4b4e0bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5700c92-3bb3-4bf4-98f6-cf3b4caa67ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2294962d-1fa9-499b-86f7-e8e35c92f904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c5b56e-ff61-44e6-9f7f-d3d9b6c2ba45",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9afff7e-6d43-44f1-923d-f2029df0fd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b516453-37fe-4b80-8f53-23ca31236967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69630eaa-a9ab-47d2-8259-666facb5d9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c45195-d514-4b59-bc1f-3800650683ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24178173-9c8f-4499-b67f-f56b0b8d8619",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c219d80-1139-4e40-aab3-7d2c1a07d4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e379311-0b2a-4cf1-b02d-f4471dc3867a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c40536-6ba4-44a1-967d-3129b8e628f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf952cf-9cb3-43a5-909b-0ce767e30014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af069c35-6157-4b06-bb2c-e0d4ba8b5dbb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9057f3-2f66-4c33-af0f-822b807e76fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb86993-55ce-4ff0-9667-29d1231e2099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb723f1-6a77-4fb6-9ef7-59f88d16e4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edacf1fe-af40-4ecd-9e5a-6a7d3b83dea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff6f349-905b-4cd3-805a-44cb23a0543f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d90cd12-01f0-4adf-981d-7c719e683b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cf113c-81c6-4bc4-925b-e24334c5fe0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e87c3d-c7b7-43e4-8e3d-5f1e1fbcfb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3ff329-2604-4fb2-9106-c9cc9d227873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7e05be-0c9f-4fd1-b01f-6afb1d3c51cb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830f34bd-19ef-440a-be1e-155554e8f9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9e8dcd-394b-40fb-8c12-037762ecc148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f67c5a-630b-4606-be29-70c2b20d23ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad86803-79bc-4f1e-aa73-eefc1a919148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73641218-3903-417e-9ab4-f3d69af72988",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1060c9-aa44-44b4-9964-d77c04721c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a2ddfa-c494-48c1-a563-76719bcfe6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5765fdc1-5b79-4415-a2a4-2b3924dd017c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fbd092b-24b9-4552-994c-b9b3c0fb792e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c78acb-e45e-484e-a326-6bb7727f5537",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ca7750-5987-484c-8e1b-fb9569bec1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f758760c-ab24-4a70-9f46-a08ed18cbe0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46754dd1-fbfb-4b80-9383-68d5e99f68e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86297a1c-9320-4a57-ad99-a64ca9e8e128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4184090-6c4f-4384-9ffa-e7d4b777b6d6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f38d74-52cd-42ac-9436-02ecbe7197cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c17ade7-72e6-48fa-bae9-6ffaa35d8611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088ee5b2-60ee-41e3-a575-83d3efdcc12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fd461c87-6b14-4edb-a2f1-5b54ef0da45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9153fc2-99ef-4ece-b9e2-8a370c3279f8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4f0375-da20-494e-a30e-1001f3165e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bac17f-f66e-46e2-8f83-98151bae9bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d601b0b5-44ab-4459-bb3b-71acfe9a4a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a79cd70-2fbe-4351-b603-9f1a26055648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36bfeab-ba87-49d8-b250-c3f90ac9e481",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2d0340-7e70-4b40-966a-83130336303a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754dd846-7fb2-43f3-a167-486067356b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a52c54-5f41-4a99-8643-12c7b7d18eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6458efe2-3a91-4404-9c76-024271081e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81ea03b-cbef-45c8-9ef2-fed7965489a2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252c8803-253e-461f-b4b3-52bc936f72d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ec4e46-66a9-47be-8b32-3fed9305a8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b497b7-b2a9-4d2c-9eb5-d9473b14e969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f9e441-688e-4371-ad00-8ab2ef3c050d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56d1962-3943-4dbc-aa5c-e24d18b8de7b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8673ab-86b2-413a-a0b6-7ee13a827e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7971f50-0478-4b3f-8ace-93afc6ffcb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fa5a0d-9b55-4b1c-b98a-c5999f265597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f83df67-088c-44d8-bc20-5a1c96ca4bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08fbcd7-da4d-4428-9b36-414433fabeca",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985a8636-8874-42e1-b3ae-d43c00e55b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f0ac77-4999-42ff-b6c8-225ccdea761f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d291576-7cab-4992-9f24-108dcb053f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e37a11-72cb-4450-9aa2-1822bf661a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6748e8-9010-4ebe-959e-385e048f9fa1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d89a11-32a9-44b8-823d-f0618c24d096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cc362b-641f-4af5-88dc-b667d349fed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fab1a9-f2fe-46d2-928c-46d178601868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d6695a-0222-4368-b30b-46b63d9d0dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40790366-89d8-4300-bcff-90149082820f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a351685e-d46f-4f5d-bb4c-6af9c12850ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e2de61-8f96-4d8f-b9d1-8fa5a3eb45a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d8d5c6-38b0-4a1f-ba06-6e1a1125bdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6410710c-a97b-482b-a041-0ee8464e204f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d8215f-190d-4576-9a5b-8ecd98ec5252",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723ee250-bd1f-4649-ad80-4f6471fa7d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04561ab4-9de4-4777-a86c-b9441f7012ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5be780d-1772-43c5-a064-dfcb7bcc9046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60d153c5-ae6a-4725-88de-bc8fff10c51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62ffc83-a965-4eca-b71c-9cd2646bbd31",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161b550d-51f1-414c-b942-3d19353ea3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b66e5cd-de54-4b4f-bab2-2cc2486ce977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2702aa-79bc-48ce-8d46-2761df8279cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "864a9fcb-c23e-4332-8406-a599035d8ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b4bb04-6694-4278-b11b-1a3757087e07",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e66b42-3e6b-4ff3-965a-fe6c0f8f8a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59d0475-0b65-407e-92de-c7e25da165c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215e185d-a704-44fa-9623-441a5790d5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f06ebbf-8955-45d7-a32d-aa35d4d0b1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523560cf-9b38-488a-8150-b512f97af93b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9394234-7043-4ff9-afe0-043f7fed695e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8282c6-4998-4818-a3bc-50d90e961fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9968c834-8461-4cea-a666-8ac27162ee3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67537788-8a04-4a3b-b9f7-876997295d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ca3737-134d-4d52-9c33-5e1c4bfc557b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef083b5f-e92c-42b6-8de4-2994c38bf101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b446d96-220e-4a07-bf50-6a11cf696178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb46e88-9065-4301-9eb3-508d913a7e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb5b03f-ea6a-48ea-b699-7e553118a991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc40854-bead-4a91-aff2-df900e66c597",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b83bc31-6cfd-401f-8422-bd203882d788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ae078c-d88d-4f91-996e-1b20c4da1010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf02359a-389b-469c-8924-96dfd39ac970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55441773-3e9c-4e07-8962-4068130385fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdee2f2-2ce9-4248-899a-eddc51364d9d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e9f6ce-15de-41f6-9de1-51f45aa4f007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec62634-0c49-47ee-84fd-923f9d0cb3eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495bdd34-9bc0-4571-a96c-03cdba9201ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0ef755-00b4-4e4d-9881-a2905afa94bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438d8bd1-0ea6-49cc-82de-bd97ccb93a4e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb14831c-3365-44a4-a3d5-f038fb469506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8751a276-f3c6-4f0e-b1e5-804484b9be1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f58f15e-bfa9-42a6-82b1-4e2910eef6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5fed77c-a19b-4089-902d-471d43a637be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8e8587-27e5-4f6f-a06e-65b47aad7c96",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276346e0-5848-4b22-bea5-c1279360cd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a3274c-974e-4636-8d24-c1e67131f5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48fb14b-1160-4c7c-a923-dd5c5edb0832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f968967-ae16-4ef5-8f53-0e59d415c40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922309fc-9b24-4b5b-a438-5d6e940e51a5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b588eb9-ec20-408d-888a-14c2ea8991cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6404ee5-60e8-46a4-b770-2a7de63e85de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088af56b-90d2-48a2-b109-2993a0bc9545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2925a5d-94f0-42b9-a32a-f0753d476f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7af7b6a-c219-4fe2-a302-a02c15d2e5b5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6d7158-601c-4182-9abc-2c5f1dc2cf60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760bff06-88c7-4e4a-9e0a-bedc099bd857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d60271-7e6e-42f7-8586-88561870793d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a18eba3b-cea7-4c26-9064-1073f7037407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc22cafd-ede7-4c78-b412-9e3a0d829aa4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a988e5a-ff46-44c2-a980-3e23e71b6e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae17f68-f027-4b7e-a15e-68c99de49564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e28f64-ff72-4b8c-840e-f8d89563023e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8155bdd4-620a-41e3-99bb-ea625363f0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4f7603-f514-4435-80ab-1d180e2681fa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15c9c79-5b4c-4426-bd60-f9ca742d1d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897a106c-cd7d-44ca-a0e5-beb938b4ddff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec557707-a106-4789-b0f4-c2f04f37dccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8bc10d-579c-4784-98fa-31aac1bed8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411ee356-f191-47ab-bd69-8a56d25d075a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17a50a2-c01b-425f-8a26-2045b57279ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d072059c-b542-4866-8ab2-192bea1ae4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d43fbd7-9c1e-4174-a477-69d940ce3516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec4ce88-05dd-4640-93de-9ea68840b923"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bdfa54cc-bfa2-418b-8758-754d747abf4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2bf4672-3281-4d64-8d24-61f701efb0e0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a1c23c-89eb-4fc1-ab74-149f8eaee841",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0b93a631-2eb4-4164-ad7e-59e907db30bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a772c0a-1994-441f-92ea-077131fe93c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c428119c-9d2d-421c-8486-171b80dfe2ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f86286c8-b4db-49d5-a4a6-834e58563ef5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be1cb5b6-c0d1-4b01-9e93-f5c6a9eadab4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2860afe9-3ed0-41e5-b8bd-3929189bca1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fb21bec-c8be-408b-b203-2f14c360c497"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ada1905c-4874-40be-87c3-d279f56defe6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "11fdf0c4-01c9-4501-a9f9-73d93417ff02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d17db20-99c4-4f08-a29e-fdf8a3d99b90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7210766-0a42-41c4-89e9-41cdba35da50"
            }
          }
        ]
      },
      {
        "id": "f5c44802-4537-4d5d-a3d1-701c31f22e8f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "85124f55-ef91-41b2-9f90-bd00c2a7b50e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10390e58-99fe-4e50-905a-fbd40dede14b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a8cd5330-5f32-4c39-8b17-6895d7a27a0d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aded906-7668-4cbe-a11a-167c0db27487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2e08df-fe81-4702-9121-393f0240128d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfa16f7-1cc6-41b4-b06c-33552fbe5275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f34596e8-64a1-42cf-8780-9a055ee31c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef29923-ca4c-4a17-a403-e5a6b8457052",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a8fc50-bc1e-4121-925a-0be28e9a7c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff12fd1-34d3-4af6-98bd-3ab423afd18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82540eda-3ccc-49ed-a5eb-38d36c9d6d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f994bf6-aafc-42b5-88ae-59ae0b3ec5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6687224-fad0-4ed9-a5df-a1cf56ea4901",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1707b8-6b2f-4721-bebc-30a249d59b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c52c14-1cc3-4b8e-a2a3-7c78322c7462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2395eb12-028c-486e-a54c-ddbde0483278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f40d93a-0540-4122-9e24-b1f0311d32bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527c81c1-fb78-4f81-8608-e662c9dcdc47",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385530b2-ef2c-460c-9ec0-a4a31efcb4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda4f2b3-3a4f-41b6-b672-a2d9c8762b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505efa7c-b827-4529-9450-98839bdb7605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d6b3c5-9754-41ea-8048-84a786f50a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a872e7b9-f796-497b-a5e0-a68d2d15b421",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827771f4-8bb2-40c7-95dd-c5c89d03226e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "decfb6c1-e2ac-4175-ae3f-607936f7d770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ef7f29-b985-4e40-afc5-96f1d86af38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "def0627d-be76-4e86-9432-17593caffca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c072aa-7855-4d11-bd80-c9a0eed5a89c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d996b376-c146-4189-a720-f4c9e93af931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0224c1c0-5bcd-4e77-9658-b940df3422b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e45a154-7a47-4c03-a3f7-22cdf8b7c812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e33d3109-dd6b-47c0-ac30-cba22f058e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf449cb-95f6-4a7f-8410-ff1dfae16b7e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807a2097-c322-438a-bf6a-f04fb2ff44fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a6aeb0-1176-4107-908d-21f1f623af26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d11b8d-9252-4b09-82c6-779d48f5d8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "58b4cf2a-22dc-471e-9837-73f28a29c274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a2cfe5-d450-48a8-bd85-a4e84ee55fd0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cab2c58-02af-4714-81cf-f2d277839df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958e9591-10a1-4fc6-980c-877a39d90cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408c5558-36b0-4325-97db-cd48ba156524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55da60ea-9b4d-41b3-80d0-8f436bd843e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f803f76a-e416-4a5b-bf77-ba6c7f6b843f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303d0351-d1a4-4822-b694-12f62569d07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ceb777-dcfa-4720-99ea-39d92b9f8125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d96e845-8037-4ed2-b8a6-7d093385ca15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "025a5baf-2a0e-4848-b220-a3c20b1af48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773fe81a-6bbc-4d04-bb89-d128f4885cb3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce059e45-1758-4ad4-8e78-02f1d6e310bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95e0ce1-8773-4155-9f8b-d1a812f3379a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327b0297-a401-4d95-877a-f4f07bda20f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3958e15-9e78-4836-980c-48a00bb15060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d71257b-9bf8-4939-bbc5-29137985728f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089a64da-5338-40a3-a5a0-f6808205e856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa87dd2e-50fa-403a-89da-78a844bed99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22abf9a-e285-46a4-ad83-c96b979c2a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "96afc4d7-857d-4425-947a-768c456108f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7e4fa4-dad6-41df-9566-8165f72057ba",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25bde76-1010-49fd-8492-fb7e91a242fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f07684-560c-4965-9f25-a99c1be35f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdc1b15-f7d0-4079-8db2-38006ca90d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e865438f-1b9b-43c0-81fa-369d07fbe4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2304e92c-35a3-4d70-b785-ea1c5e916aca",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5412ad97-a7f8-41c5-a954-3501defbfc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35c70ce-a3a7-45ec-9261-7d69dfeaee4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0701464-f182-4031-a0e7-7d7ab5150e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7118b87-a542-43d3-9b1b-add86b85804f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fd7c4e-4672-47b2-ad71-e92be71aa3fb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88557cc2-08ed-4f55-9ba7-0ba7e1753155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea749b7c-e384-4f6a-b95b-911c09ae31ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bcfe18-fb72-4490-9ab4-c51492d348c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "58e9ba65-6308-4bd8-a1c7-0127f7362456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c3e301-e530-47eb-abab-f59582908058",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae007c1-9133-4c8f-a067-5c35f6f234a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e07c60-eb38-43e3-b552-e34bc09fc900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85fbbb3-672b-46b1-9271-143b40948a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b662087-4e5f-42ec-83cb-303797de7a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e7a44a-4892-42c5-b279-80301fcbb29a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758232e8-3742-4c1f-bc58-0507cf4e9a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9645a417-4e42-44b8-ad13-fd6dec335d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9904192-438c-4938-9888-c612bd5a4564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "51967c47-8415-4ddd-9725-db9879fa04c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbb3289-9a52-4fc6-96b3-b953e0745c18",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca883d8-6fe8-43d9-a64a-509246d79e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66446480-3bfe-43d8-9d52-3ae10b72687f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b83de4-97e2-4aec-b3c0-f482795f99a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c146ae84-95fb-4325-834a-437c374f96cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00011546-e759-488e-b4c0-2884e03371ff",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b1e380-997a-429b-a74d-8fb67215d547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a7e59f-4f95-471a-b401-b48cce03fa1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a6abcd-5c03-4c2a-bf90-75149a7f8cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19b37744-5407-4ffe-ae5e-820901346793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0a2547-db11-4cb0-b5d7-85237702e680",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7018535f-57fd-450f-aa43-89d2085ed4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc712d92-4557-42e9-bffa-b8229eceb510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082258ed-9dda-416f-bce0-222e51139898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a06eb155-e306-472a-a7de-d33aa5fd9c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653f3387-9479-476d-b311-776e636fd5e7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e4406a-9aa2-4a62-ac53-5d574c74f53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aabdccb-8046-46f4-8a75-4217fc93ef62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de80d457-2df7-415f-ae66-9aef3f1e4ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03500d9e-446b-41e0-b3c0-a2464d2f05dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc3d412-9a5d-4f4a-a080-d4e4da900214",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c539ec-5cec-4643-8ee3-cabbbb96c5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca43226-6a9a-4b79-acb9-733eae524af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d34af3-0095-48d0-bccb-26a7eee9217b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f94cd23d-37cf-4cf2-9719-579a8b5e1328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322e22c3-6a92-4805-9f15-bb3817db3512",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22361db6-e79e-43a6-8832-1d0836debc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4cabb6-121f-4a30-a008-611673820e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e59501-3550-4645-a193-6d97f3bf317c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "055863f1-c961-4259-8a14-9cdbef6e0d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54764023-b676-4da8-86af-8cec61b6af62",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27c7752-bc03-4a68-a2a7-6e80bce06004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6b7595-257f-414e-bbd1-5397c2525ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373e93ac-a19a-4818-8260-d3da55bd6f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50b2252e-5b60-4f26-9ac1-6c3f4cbcf29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e824846-b30b-48f5-b562-8c0a96f210d1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9d4a78-7b27-4d09-8d50-6c047dc02ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313dc9f5-e9b1-46d4-a259-2b3670050081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f08c3f-5c60-4419-bacf-fd6b0963e996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5cafd92-6a55-4a9f-a26d-10cc9ad06fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480bbd9c-eb14-49f0-aea6-1b70e91177df",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b65014-da6d-43b4-92d3-7cfd0bc7bce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d695249-e340-43ab-a4be-7bf4cce9e5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281bc809-94ed-49dc-9165-0f0411f573e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d606cdec-0e3c-46f3-a5f6-af7c9c4cbea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad7ec1f-3d23-41d1-b78b-8c91824386fd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550afeca-35da-4c05-97a4-3eddf5de54bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1b7335-3dc6-4bce-bd72-9933b3c71bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5882c9c1-aeb4-4790-8ec3-386455ee8418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "226acb04-3117-4726-adad-6a383f24dbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee4f966-c099-40d9-9c12-07bc3c7e9296",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c722d66-c37e-4f9f-a20c-38c9cc3af3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aece05c2-66fe-4cf0-a2b8-5982834e6765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa795d8-ac80-4070-86b6-3d26c35e4732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe627ffb-ab58-4fc3-9ad4-43afe05b78ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d387bb-fedc-4b7f-b02e-c707843bdd6b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa548da2-b43d-46a1-8f16-c63a57becb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1338694b-a731-4c6b-9b8e-4c9312192385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8629b5d-f270-4e53-a3c3-deb5f61b1724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85248b5d-e7f6-4f87-9062-47f41ea2d17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdf1929-c3cb-4dfa-9404-37617678a673",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601d461e-b4df-4ec4-a4c6-9586a035f6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6408ee-b74c-4e3b-8a3f-847945e4062d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115c726a-782f-440a-bef4-f36b00b22fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06470dcf-44b4-420a-b6b2-20f3b45f83f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401e09e5-4774-4b30-b4c8-61cfb60ff72b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd66d60-703a-4b40-949f-e5c73db5c88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb09670-2f19-49a9-bf97-75e5e8650a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9a6fda-8319-4427-b0d4-0e4ddc5adc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4d48b07-6b24-4fca-beda-0c3960b3216f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ae6dc6-2fd8-47b2-9b46-e8f6d691966e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26075018-5bed-4969-80f8-f2946a3614bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ff4ba3-60fa-4c7c-94cd-5d0ba77fb8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959e3577-4137-46e3-8caa-6bf7dbea446f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c23d7c86-4128-4f52-b5f9-d395ca8b0d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad503824-453f-4c0f-be07-4fd289ea4af5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d034ef-661b-4777-9ae6-e710e796a4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deed1a80-1037-473b-84d5-16e7b8c36edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ca64bc-218f-41ac-83b5-69d37134376d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80eb1df5-b001-48dd-bc00-bcd4407f1cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7993ff2d-0741-4c60-9d25-daf1bfb721a5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3eecb5-c692-4799-b47d-edd32d569ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51656354-4d48-45b9-903f-ceec108762e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453028b7-2ed3-408b-bf51-a3d2e0ce810f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7935de7-d29e-439e-a27e-034e1d8c379d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e1f76b-0aad-4e5d-a6b4-3cd226e673e6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c934495f-6c2b-4084-94c0-b74394c0ef88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9d9162-2b22-436e-951b-268830dfbf9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea6c924-946b-4c41-83ea-a1a65e5a1aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "762bdbaf-fc3f-4ebe-b626-af027ea52482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fc8e1b-55e5-4804-9669-2e75dd309d7b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7729e553-08ac-4d02-b63c-4ec759ccf14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c041232d-052d-41e6-aad6-e92c775bda38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8f144f-a1e5-4d98-8e7a-0f2e81c4c91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "062fd5f6-617d-44b8-a915-20e25d421b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56b05f7-bfd5-4776-8796-e2b433e37ed1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eff265a-4605-4461-8049-ac25c69a2a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a03875-ea1e-4399-bd04-08ec4d7b81c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bccb812-c6fe-4583-abdd-5041a6abc407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b290df-4f8d-40fb-8536-306258b65bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abb1975-b3c9-4ce2-8e3a-8c85e0ddfd18",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92167f38-7fa4-4456-a5cb-97ba3d601407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac07f6f-3e8f-4a8a-bef8-7274a43bf047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2272e674-5dbf-47ca-af09-74a8877ae633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5de0fecf-2605-4f22-9f20-2f20fd05e662"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f2da424-e6c2-4f2d-8f1c-f0fde95f3d84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9560a32-1e0e-4290-ba54-94320b628feb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d204c082-234e-4fd8-84ac-d5a680b6d607",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8538217d-7f50-41de-be92-21f837b39dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcc858a-98a0-413a-886a-dd8d9463d079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee7e7871-3afb-4148-9558-daf9edef79e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "990161a4-e782-42b5-acd4-03ad1a15e1e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c88bdfb6-9c32-4458-89ac-6f229b74a5c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e7bec2a-890d-4763-9453-75bfcb47bb7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aec3c945-7f27-483c-ba69-d0c7ce533daa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0607e68f-196f-4f47-855d-82420d271d8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9677c64a-afff-4d40-82b2-fcc1ac65dda0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eccd8c46-8fb2-42dc-aae7-624b27db73c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "694d894d-f76d-4c12-9e66-5fe6b181c5bd"
            }
          }
        ]
      },
      {
        "id": "abdc875c-7dde-46be-b066-72b80f86b52d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a628277d-afa7-4f0d-ae46-9dab31752533",
            "name": "Negative Testing",
            "item": [
              {
                "id": "44a2e246-19d3-45fe-85a1-cc103d0ba4a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6bc39323-81b9-47d9-b63f-229c3c77cc30",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1730b49-5357-4a17-9b64-b222b300fce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf6c8ec-4a52-43b9-81b7-a3dda11df083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d1de21-57ac-4691-a209-376331306deb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9b03e6-1d39-4ec0-b401-c9c6dc93676b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0631db-4861-43f5-b068-55991f010530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395db566-020e-4ca8-b81e-95c8e595741c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d7ac32-261d-4b11-9375-9073691b5d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1bea46a-c9cd-40b8-9109-6b62e145de70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29708cc9-8e81-4c6f-b1c1-d39c3b0b337c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02817682-b30e-4a5d-8172-be2ee6c0c333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef63c07-12b9-42a8-8df3-61c0f3dd92d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6640364d-9a64-4ae8-a6cd-acc96296d50d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1434bc9b-25fb-4565-a820-6448e4fb6a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d198a1-58cf-4fb4-8f9f-431f3f35a20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd54099b-43be-4511-81d8-53ae9108c875",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ce3a63-4586-4a49-9cd9-5d9b88661330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5042eb02-f1f0-42bd-80be-63753cd16b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0e51ac-bed9-4e7a-8340-29ac19ecb2e6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2deac5fe-2a30-47ab-9d99-9fa197a41e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad969f37-efb8-441f-a7c0-6517d63b8bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3341771-40e2-4b6a-b797-16a8b3f7a9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedf820e-1ec4-4c58-a779-ddf58cade42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c970bcc0-16f1-4490-ad3f-4e88bd8e33aa",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05dc6e7e-df42-439c-9100-de296216d691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af0a31ba-035d-4f82-95e7-b4b245a15f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333a3270-45d5-43ab-9b90-7fc733c4b7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de9e42c-5c75-41a5-b502-e7804921742d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad303687-dd15-43c7-b08d-3e7493451839",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0eb689f-0951-464c-84a7-2ec06de206f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3df795bb-fab5-4207-943a-2315f5f4a813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df33ba3-106b-41e2-a575-9232ee8f4f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e86835c-6890-4f8f-95c5-f636e43f7239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da409895-893b-4eea-a72f-116c3dee1f92",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74e9241-4a8c-4ab6-90dc-e80dc9f7826a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f81a2a6-2d50-4719-a48a-01e0f41b57a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3e3d30-58d9-456e-b5cf-c479caddb792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee8c2de-0706-47d1-82c2-c68a6909d1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb601265-1a5f-49e9-b162-4e248117695b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047b4080-8d09-4af4-9d24-6c1dfb4fa4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25aefd9-673f-420d-b8be-723f3a5e1d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bf7449-f076-43ad-bf70-4b8984bff02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdebf2f8-e1ee-453b-9d4d-0dc5fe151f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a7dbad-4312-4fe1-b74d-ce761f076bb3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bcd838-f369-4e5b-ba9d-9e0d0fe228d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352839b3-1286-4f57-9c69-c483a290ecc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84318f82-51fe-415b-9664-4f2530b47de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2ce63c-7b37-4d7e-91ce-a06735ded47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383ac658-25d6-4a9a-a617-5503c41cde05",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e0ded7-29a6-4e85-b15a-d75906fbdc08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c6b7e5-7cfe-4ee4-9487-63c4ec7360a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6d15b5-2e79-4b47-91f5-fb486f747825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb2f435-be7f-4969-aa9f-afd7c7111b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7986d98d-4ac1-4379-a17a-ba9ad0a0ad4f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b213c71d-1fce-42ad-bdc2-f39814ac9e8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e1a9e83-1a0e-4349-8626-b6a59bc1418e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31acf6d3-d389-42a2-9b07-bab7d780e557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3d5745-f4b6-4145-8249-82a7bff6f038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c514ca9-9e6e-4d6c-b534-81f3dce9b854",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726590ea-46bb-4fdf-9258-efe1d9ae434c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32444b1b-7cba-429b-a5fd-b628b17d258c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1457ee53-1481-4ca3-8c11-383b7b6c2fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f9ecac-64ed-4caa-9d4b-89eea1f4a9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33f8c86-5f22-4c9d-9ace-397446827262",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cef2be-30cd-4450-b106-8c1d31ed6405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f8b3aa6-2481-4eb8-951d-0dd47daccfc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9563567b-74da-4fdb-a85c-02841f4a6bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f476ab9b-2a3d-4cb3-91cf-fafd183399a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5afa137-2a12-4b17-affd-95aaa00a0b51",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c308c9-6c34-47b6-b1d6-0f5987004459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c08f1d-ec37-46dc-9815-688502659b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb576b07-4d8c-4d92-b7ed-07ea0de67aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c622106-b2e3-42f4-bbb1-4b360ce9d5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2a6db2-9b2e-402a-a1cc-09f41f2c4295",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649cbc54-b7c4-4e53-add8-3a94b2a55c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e5b991-4974-4867-a718-3545035be5a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8810e892-94f2-42ec-a171-d6d21fae328d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1ac910-fb95-426f-97e9-6ffc7195df5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b310d9f-8bd4-45cb-a88e-bfcebc59bde3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467e8340-0e3a-4adb-9c98-e6f4724e8a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470325a3-a78c-470f-9b2d-b7070c5c7d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd790b5-df65-4809-aa2d-0aa1010b8e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2b88e6-6873-48f5-857a-6d613b640784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567510e4-21f8-47bf-ae34-cd07cff5013f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ef0435-1ac4-414c-bd11-dddb15debca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca128a9b-5cd4-4d76-8bcd-e20b45313e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2e2295-580e-4aab-a5af-507b1f7c4724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86088b7d-7652-4881-a7d8-9016bca75328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401da607-76c4-451f-99d3-51b4b52de220",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36855371-91da-4eb4-bb6a-7944ceda60d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5895a674-5cb9-4c6e-999a-9846f7184eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7af338-6d70-4810-bf94-f625974a7bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270c031e-fae4-4466-b8af-8378b147b7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1445534e-27f7-48cd-b3b3-f18d2e65c72d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951f2335-4d7d-4388-982d-c63c42d3b730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20507e4f-1b04-48cb-aedb-0fda08fd297b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23489b95-a4bd-4e90-8713-3eaf4ee691c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9efdba-8db1-4efd-9bb7-819e25a5a661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0dd299-4367-4c7c-a766-a2b87cdf80af",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b9125b-730f-425d-87f4-60975effec9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6795ec4c-082a-472c-a25b-faa510fdbc97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a959fae-c809-4274-8995-80d276d81804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f53845d-877e-46f8-bf3b-f39d3de1d441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c81a14-e3e3-44c9-bc2f-4d794450f7a5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd694002-c511-4e15-b2cb-250e0260f34b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0276543a-23b4-4bfa-b4d6-64ff03afffc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c892fa56-4dc3-41d9-99b0-29d5dae12ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81163ae8-4ea6-4a88-8d1f-feb9a221a3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40176a82-a210-467b-bd7d-6fe0a5e67cfa",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723343c7-cf2d-4cf0-b803-9a1527858257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "301cb901-0971-42cd-90d3-3e316a07ef09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a4a39a-431d-427c-879d-e3935c1d91c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0adfcabf-dee9-422a-97e9-336cedba22bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af667f3-437c-4ba2-bda6-fc407f6438e0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d286b6a-415f-4754-b302-c7e3d3820638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04d66704-0339-43f8-8b73-c1da10734e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e786185f-e78c-439f-9e5d-14385503965d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9307f97-db77-4de9-9adb-1495b5b545fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acf9f66-58ef-4c5d-9591-15a9c7c02fe9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79163fd8-56b3-4e17-bce6-2acf5cd87299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e7de3b5-98d6-4244-8cae-7e0a5dd729b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a03cd5a-f5df-47dd-9cfa-343b734ad4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26bdd5ae-dec3-4cde-97eb-c0518a7613cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d07933d-c70d-4317-bf52-05d37e8ef8ce",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8603d16f-0314-4e82-ba41-c52838966b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c1e36c-431d-4d89-948f-f00e89b348a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91e21f5-44b4-4291-9924-228998426398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485b962d-5cce-40fd-89f2-266433801705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795384cb-8f0f-477a-849f-25a08756c885",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6efe1dd-334b-4478-8d6b-479ef6b2509f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8f9e255-0ad3-4bb8-b690-fbe83ba4b9d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080025e4-4ebf-4417-bfea-127b0734ca0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9e9cb4-0c28-45d0-96ae-cb1cf3ce52ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33d8464-0eb0-4a94-887b-b8b8d88624ae",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badba36d-83cb-4e42-8110-cc8b3081cc9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f47c9d-b4d2-489e-8257-b81a553d071b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5379a42d-3c05-4039-a910-5fe80f4ff7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ec16ad-feb7-4db8-a9fd-b3445562cd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4b6a72-6f20-4369-ae0e-1f051421d5cd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932bbe0f-db23-41bf-9245-f718a52e22f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bbb526d-ec49-4e38-afba-30c0b3ba6f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8867df6-2247-4229-b3c7-7609bc482067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b136dde-c1c4-486d-9401-d1eb6f5d44d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57b349a-1ffe-4719-a394-fa621655521f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5140ef4-ec35-401d-ab66-5eae591a8173",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6416730c-057b-4458-ace0-f56e05668fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6ff1f0-6f49-4cb9-a5c2-1795b13c00d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2d19fc-ad8e-4fcc-8313-de2a5a013703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b9607c-a60e-4be0-9c15-6f75046fcfd2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba5ac77-3234-4b66-9163-b3db8e4655b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "282c02d9-ad0d-4bdf-8b73-a9f4ff9a1647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5190fb4-2ac6-41ce-b27e-e69f0ff8a70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777f2328-3a1c-4240-a839-19e5e1d28a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f6b6b6-a5f1-461e-ac33-3daea8f7b72c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9feace75-cd77-46a3-96a9-88ea3abcc4d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f08ef65c-758a-41be-a671-c222e623e364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98383de-2f6d-4787-8725-024de5a79e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e6e4cf-57ac-40b3-9e57-6bc18c66c27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1decbb7e-ce37-498b-8508-abac11002b8f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebf1488-33d4-4e2c-ad1e-aec943e9b1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe092875-40c1-46a8-8a0e-1ff81fda5e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d9b6af-41a1-42a3-aa52-8a14bef0247c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d52ba23-9f4d-4b40-bc2b-27ecea49e0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6453a802-d176-4975-a7f0-9c336f301731",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4200f65b-7df3-450e-a3b3-1eb581d913b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e169aab4-37d6-457b-a7ee-879463d9525b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ede8c07-a336-49ac-8e11-4efe3ab43e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f777d8b-5373-408c-b72e-a2c1b915d872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d1dee1-ce21-4ad4-b08e-bcc9d2c53d7e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b6bdc5-ba65-46e8-b82d-e4234e554df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c16cf2-0602-437d-abfc-1745f2f94b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd2169b-6c71-400a-a391-d72943335354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6db0386-8651-4c23-a2c5-e0c1eeea6071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03e1251-01ab-4fc8-85d8-e38754c503be",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be91edf6-8667-4477-91a6-d632b06cf798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d055db1-9837-47fa-9ff0-5d8a69fece54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "005e9ace-e62e-45bb-b2c1-fa5d56d4159e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db42cbbd-a41a-4c8e-ad17-1716e372c561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0967731-3791-429f-a00b-a4118950715b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a33eaba-c329-4d40-a70f-93919db802c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e2c11f-8387-481f-a8a3-60173925505b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881ab623-19b0-4c8a-a595-495c8215b9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb63de3-e69b-4838-88c3-91a778f1d35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d8e2f8-26f1-4ff7-b224-fbde70784cdc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57cb53c-148e-4e03-af3b-c55baa863392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106bc5a4-4be6-4610-80de-f8bbcfd3a7a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956cc6a4-68e6-4566-a429-f9cba0b6314f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf316d10-b929-45d9-8690-99220ae0a596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c716253a-f6fb-45d9-a819-cd4b8e9706d8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49f63b2-1efb-4c9c-bc8c-859202153007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c883f56-859f-45b1-943d-5bbc676de1e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470e2602-d9be-45f3-82c4-3998453df1ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1830f41d-1d9c-4969-bcb9-d5b8be86877d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5a39e2-4af5-484a-aa0b-a66993036d73",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2fe47a-1cf1-4a95-b65e-b5a9d94bcb06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4ac843-cad3-4397-970d-151c6d8acb65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda2fcb0-b810-4b54-8ebf-376fd7fdb7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be40326-ac39-4c8c-b3c8-a9027a31ee25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e83512-88a1-478b-85f1-0e0295bd26ac",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c09ee65-29e4-49bd-a6bd-1348bf2e8c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca4a879-74ff-4c3b-ae54-2a6826a05ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ca8bbc-36b4-4525-a3c2-2576ce13d4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2ad36d-2073-4e7d-ad4a-7a292fb50bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ff8bf2-e4bd-45fc-b720-5ae024ff3809",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca3d23a-6f53-48aa-a73e-a355f2354b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a83050e-db58-451f-8a4b-0fc1d78d7538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fdb561-234a-4d9b-9b15-59f15810edcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68df07fa-4acd-4bba-a5b4-975e7f688b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c031d4-c62d-4ca0-8361-4db5279df5b9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc88495-3aec-49e0-aa93-be01cab1dcdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a497724-e33e-4c3c-9a4b-38d66b9d7326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a0d98c-a053-4656-8869-a414626f7d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32e1b17-eb0e-46a6-9114-79927991d205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2ab253-77cb-4723-a231-960b628a82f0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26871576-81bd-4c65-a08b-78a3601337c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9caeb6-302e-4321-906a-b8d9e0f87dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfeaf90-9471-41a8-8be1-f0efdac5c2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c24c3fe-5034-4627-82e2-ee859b0e2b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfac9442-54fd-4ae4-9c81-a815f7289b25",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33da6b5b-6692-4328-91ce-362219765d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87c6e49-b6a2-4678-85f2-d601ea540bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9a1a19-ad0f-433c-9cb4-a0ed88a992a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0251def0-2003-49f4-8778-f09ed8658c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8779d40f-4c40-427a-ad42-eb543e62ad58",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08e2ba8-f813-40c3-9f0d-3ed113bac0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2beb0606-64d5-4dbd-b139-266bf51ce0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf52014a-4605-4737-99c8-f48c6c78aed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f61d62f-90ff-429e-b6d4-0cd614404115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8b6ed1-08ac-48d6-946e-607ab6556e71",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe85a9b-375b-404b-a2f0-37173b23193b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2812aadd-12d3-4212-a09e-673e64afb51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8b342b-b8d6-4200-984a-a2db039b79ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28889a2b-ece8-42ec-a8f9-30e90148dd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8846e1f-5caa-4ed8-a457-c2c01934cc2f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d92fab5-c5fa-4eaa-96fc-404aa231c7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ed02e7-37e9-488f-b986-671c84514350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddf29f5-f284-41eb-a2b4-c07f9c08b9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5128114b-83f6-49b6-895d-ec48be81cb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c517d1c0-dab2-4abf-a8ad-95713c2a923b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8728cbc8-5d3a-4fc8-8154-1b934119158c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c6e9f0-de82-4185-8db2-3d895ef099f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be24dca-f192-4bc5-9fe2-00f18d7ec08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc779b8-3289-44c6-a810-9bfc7bc825cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a7d48b-c0f5-434d-a62f-5c12d23c151e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b22dd3-4a35-4966-9ef3-787239b06742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5398fd1-b3aa-4083-b903-60450d648984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe68e9d-a9ca-452d-a072-a1e73a2afb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabeda69-496a-4595-95fb-62ebea66d284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106d4945-2c57-4db6-8e3f-05338dea4aa6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c57c4c-4955-4a44-84f3-90de4798d959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb4f1ed-3b29-42ba-bf73-f32790cefd56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0408df5b-2594-4422-981f-e7d098f29454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f168f998-82b9-44d4-9eb9-6fd3eb0ca7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2c4ee2-cc1b-4efa-beb5-396e757b0da7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d7a464-adc7-45f3-a40f-318c2ae30088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91718276-6ca7-4753-ac34-7fbee9affeec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e810960-41f1-4eb4-97be-ccdbbae85554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53fed4b8-1197-4daf-a711-c6c9ad596394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef91bab-1cca-455b-9dad-10b2d3975d99",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039cdbfe-57b7-4eae-8030-47c6d8803a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36459e7-8c46-42d9-8d31-0acf46a776d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952660f7-2866-4b33-b136-f1fac938c706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd587d9-ddf6-4dc6-8dda-8aafa2917fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa805fc2-39c1-4a67-97e1-d8b6a3852ded",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d842110-022d-410c-9733-266143caffa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5f824c-dc01-462b-aa4f-438244f95984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c65bbdb-c4dc-4f94-a658-44c11f0d8e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56ae013-07c6-47eb-86da-de6dc4bfd4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364e8227-19da-413e-9186-a6b5c7a35a43",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c33034-3e85-4985-aaf8-de6e453d14a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f888855-109f-4d62-9af7-452fde468051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45a119f-86d4-4655-a6a0-fba0e4f820b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac67f75b-ad3a-4452-86ca-6968ec2149ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83869217-ca1c-4e47-acb4-2b7571f46d28",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f71ad2-b3cd-4315-92af-52adcfad1705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f897f73-aeea-4758-bb6c-89932edbef69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f420bc-301b-41d5-8bd6-db3b320bd30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbcf882-e3b0-456a-9a09-c8f88d88e351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848e2249-4302-4bfc-8142-8322de151ddf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6275545-23e0-4808-a3ac-f4d4dcbaa99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860071f9-d3b0-4ffa-ab1f-2e757e1bc558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce99359-a312-4fe5-9124-c8a53533b82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bba3c1-1ab8-4f3a-ab88-7c391d681150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45eb9636-89e8-462c-8be0-c28aa002e787",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f2f5dc-ae1f-45f1-a729-dc6c2e407cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a609c2-b3e1-4f4d-a338-ff4c53e9ad53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d07546-015e-4d00-9598-96eabadd46fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba9db24-5324-4eb0-b208-5ba3fb32e1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1457a71e-29e2-48db-aa5a-16c0b302dd17",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87420e8-317b-4b6d-a748-0dee93482ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab288ee-fe28-43fd-916e-f20ae36b6782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe749b0-d4b7-4152-9d1d-f44ebb934f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ab6d3a-7033-4ef0-a36f-75fa60266afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec904dd-9d18-4f6e-8e39-59c1183373af",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f471f422-bf16-4a90-b55c-c84d9a4eb616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d069369-b37e-4d23-88df-33db2cec2db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32327a0-5be8-40cc-8a1c-3402e2a43cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0ead7b-d7fd-4ed9-8421-7cc405a72fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815feb67-304f-4e6f-be87-1ceeee8a3f1e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82ceea7-1c89-4ad2-ba87-c8a7e34aa064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74dfe0f9-53ed-4a11-87d6-b35c68bfb63d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bab55a-1f70-4dc8-a7b3-b4281b3cdadc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6450efc0-d804-4153-906c-79485eae7482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab1c785-88e4-4a8d-a06d-670f4fa7da57",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6166e185-535a-47f6-9936-4e1f27164c07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd58c1e2-1a96-4ba3-ac72-ebd1ab16beb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13057c3d-fab5-468f-a8a8-cc2b774eff4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029bf9c3-feff-4175-9a8e-1c8ca140f6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f4d27c-8cd3-418b-a880-5d0a5673fd0f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75c70f9-ca7d-4405-911d-178abefa05d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f1ba209-d542-443d-91dd-47f3497557d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0e14bf-ae43-4fc9-be1f-f2ade0ae824d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41fb98f-e6f7-4a28-b601-dfeb2224c7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2993e6-d0b8-4670-ab3a-7011e80ec949",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20a511f-fb0d-452c-bd6a-7d06b1df98df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ac91a93-eaa4-4ca6-841a-28a00f2994a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69260fa-9351-40fa-ba76-63e0ba2d2702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1c3440-156f-47b1-923f-249e3223b2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667d1b0f-332a-4f36-a2fa-2fec633a7f11",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483b8aa8-73bb-4ee4-930e-057204fe80d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ea86e0a-645a-42b5-9bf6-1561d35dc67e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a24d46-50d7-4d7d-8281-9dac93a249e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d267bf-9fab-4560-9e02-dcf9353eabbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f7df16-2043-4cec-92b6-010ee28a9ffa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71443015-9efd-4333-a566-f9b23a47fffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57293436-b319-4ea5-86bf-baf454054eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "976016f7-7a90-4b60-bde2-80fc3a688364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c72372-44b5-4d25-a3b2-51274ea9e736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d04c8b2-7175-498a-afd8-0740c7da086c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899d36a5-a534-457f-9ccb-c00f65c782e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d5d1d34-0dfa-4e17-8a08-12595e1661a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cbe836-3a1a-43a5-9fd4-8b339caf0577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853d72c9-3ac5-4542-9792-1a0cd091de63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3c791e-7fa6-42d7-a13b-21244c801f94",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e403273-e5b0-40a1-81d9-e6bc6571f4ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c0e5af-82a6-463e-923a-e401a79b6349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef4f4a5-208d-4776-8a43-81a2467fdc46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372c6293-116f-449c-b7ad-bcf8d115861a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e759405-f48c-41cc-9423-c99134d19f13",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3ae29e-74ad-4921-90bb-7dfa42eb6dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17bf2581-5f58-41e5-8e03-c58e842c2e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2142a75-d890-44ac-8fdb-ff38077b02c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c16ce3-9bb0-4dd2-87be-7d0c254ca1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6ff695-1172-47de-8974-ee19fd577c0f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aefe125-b6d4-497a-bded-6a95acfc87a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb404bdb-c839-4d12-963d-49eac4be8105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3716c88e-7a71-4d39-a25b-9ea07e571866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e057b5-be71-4f27-a30f-159e3a210774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0b2b88-eed4-45ff-a2b5-c2b4402d2acd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ffd595-f635-4b01-a231-837187a11d87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "013a908e-887f-4a2b-8042-578ec0279255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d924b81-c879-411d-b245-3e6c7353de1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93a833d-3390-4eeb-b035-4cdb0f73d066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b2588c-6483-4fd0-a4c0-25c04fab3e45",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a055b7-c86d-4046-ba41-e7df2ed9931c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04eaa00e-f03b-418b-b432-83d83ac1befc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af5712e-ae0e-4585-96fe-7d90fd79f7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b15924c-6f68-4b1e-81c5-bb8e74baec68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910e27d3-e768-4a96-99d7-49b1ff05d880",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5ce785-e638-4476-8416-6ddc8b08cd25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "527f8af5-5a5e-4b0c-a128-110fc560bdee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5922224-de39-43f3-8619-f56f384b5ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e24262a-19bb-467f-ae58-b6cf463c250a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253ae2db-159b-4b9f-818e-36b674a58822",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f22c6d-3957-455d-b62d-953c2b6108cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "265b2efa-8e5c-4321-9e2b-8b796500ac44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c694b0-4e12-4e8f-ab76-64190cbfd575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b107224-18c4-467b-ad5f-d35392d3c10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b908edd9-6d70-4b43-a016-06dbdf879534",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d886a3e6-62f4-454b-a3b5-151c9f689180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd869957-f030-4f80-8b53-a68f81c7b5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c29a19-ed2a-4034-876b-1944a4286702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39af6c6e-9035-49e7-a7e6-92ba9a14c9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9233f0-4f07-40bf-a730-85f0bd68e12c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1daa6e3a-86af-4cd0-9293-37536fa61e6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5fbb534-581f-4f2a-a96b-c416055b6eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccf3629-ccb4-45f4-a5be-027005ae0f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4586013c-9f38-4c33-b3a0-b4ede6fa2c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0746ea9b-59a8-459a-a332-53a4e24d4515",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825f8982-2044-49bd-8b6f-947bbb9ad1be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60cd183a-b9c3-4337-ad4a-d31d6c71c959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2c53cb-3b2e-462c-9370-cf5d8782d99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12fbdc68-61e3-4af8-82a2-981cc0936e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04930772-2c99-447a-8bbc-d562fa4f26f9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac09b57-d2a5-4c90-ab7f-ac19a423389e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8ae2b5-6b67-4566-9912-5f83fde90cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69f896e-a57a-4133-a2ad-862a629d82bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b6a5c4-84ed-42a0-8bcd-a1cd028240d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f79999-fff2-4bad-a0aa-dba8f449b199",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fe22dd-7bab-4226-8cce-9c266279b528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12e51077-e380-44f0-b1ef-d35b95dfa99c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd906840-9dab-44c5-a96a-8ec7744b11f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b2391e-2204-49cd-9cd4-0d4747b2ed77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04dfd01-b39f-46ec-8811-0620209e920f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6e54e8-ece8-4aa3-a50a-4dc436215d66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9db0b31b-fa5e-4eed-a46c-01112d2b266e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3561f084-6e1b-42b6-bfdd-befb125e1fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf1993f-04cd-4687-a22d-574b22ed480b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ef47da-24d4-444a-8fdd-c679c6f49c9b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b53a1c-c244-4959-9357-65239bdc3d5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21f8cb61-2619-40ba-85d6-ccca1b92a988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f53617-ce09-4e35-93bf-c5fe86aada42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7201a9-e40b-4b8d-84ce-1f9a00107550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b93d46-28c7-4edc-8cf1-f8697fa5fd44",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac509c12-ea5d-4fb0-ae0d-2552328ed2dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fad6867-c8f2-4556-9b18-3ade71b484a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05784f55-0cf1-4d40-99cc-f11ee9d30a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a3a340-3386-4bad-8f73-de6a29e5c71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0d9129-6b9a-4d42-8e23-1d4068cc1a9f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eac0bd5-9676-4e98-96a2-9fab506fb444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8576512f-4834-4cd4-8038-7e2aa086b9de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e597955-85a1-47f9-b732-3c5690cdb53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f920ce7-af9f-4d79-911b-83159a9db994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380c8187-ad2c-4171-a109-e672ce292689",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2795b051-d2ad-4045-b44e-eb27cfb9a26c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de48a98d-5946-4dfa-ab46-bf917a38fd07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec69a340-0cde-44d0-9acb-7b457bcfac68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a92f71-17ad-41b2-9410-03e231c8779f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce52091-8744-4db5-8474-944ccaadf593",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fe9b22-fdf6-4597-a484-3030135d4cec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90c5b8d6-3036-4536-8597-52adec327311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5088b63-ceb7-4026-8f64-5b720a713999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c95dd09-bc06-4b3d-a11c-6a68839d8fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc98c42-41b5-4187-abc5-a7e329406057",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc00c272-a466-4fa0-87a0-99abd606bc04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d95cd22-3045-4286-a464-13cec0811726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd791405-8722-41d9-90b6-24a4b8347f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ccc701-c7d2-4601-b1fc-df634c71d561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0152057-5b42-4c69-bab4-8a233f78f60d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7debcb-6efb-4c36-b0f1-fb8ef49c04bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3053f531-1762-4038-a389-701d9c18624d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "155f0bff-2358-4f32-9930-3a9a3399fc33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e94d75d-0da7-4960-b94b-4f499a91cbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d4bf4e-55f8-45a3-b1b8-05fc31abe42a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15195967-09df-4868-ac17-799dc64c9cd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "800a9515-b75d-441e-b289-ba8377464b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed2147a-62bd-46db-af73-3be0cc1bbfc4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42727f83-f0ab-41db-b43b-4a956c500233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf50b5b-13c5-45a3-bf33-2a25a1f70990",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1331a42-da70-4399-a7a9-9b385a460c26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b807ac7-e3aa-48f4-bc59-9e362d1f3b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c602af-1b33-4fd3-a548-1459ffdd521f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebb1661-fc01-4b8c-851b-16ea3d347e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c9be1f-7379-45d8-9c90-e424114af482",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc4fab9-4545-4bf6-bfed-2f45742d44f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8194cba-c7d5-4190-98d5-bbab5ff27d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc299a7-ef18-4b1d-ac25-960d446e241c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547e1459-0065-4ca2-84b1-ce92b9821948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bde334-3249-4a76-adcb-2f093419ce13",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa26fc36-ce45-4b0f-9079-6fc2d5c998dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dba51e08-d088-4ac1-a321-35ee024d9372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11575d69-8afe-4270-9e0f-6c204f590132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028d77b9-8509-484e-9d6e-43c584a370d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82201bb1-4c97-4140-99f1-fe64ceabbce2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89802d67-f81f-4d8f-a9a3-44db8d1f6841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0afea3e-61da-4fb0-821f-963d3e0790cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a6c512-399d-4749-bed7-2eae628bffc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e585311b-09a1-49c9-9e12-1b0ed33093fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fc0c99-3134-4538-9a7e-3a90fa9422a7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441c9f40-b4be-4162-b9e4-2fd81d1eff88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abacb893-dc66-415d-97b5-3f26972433ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f09fdd9-f8a0-44ec-b6eb-ccbb3b4d9654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc22eb7-e1b5-4ffb-b654-226ae8319984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66957dee-3a9b-406d-86c3-778d2f1eb25e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edcda7d-fa8b-4774-abcf-1edf200ccc7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4308a375-2190-4904-a953-af1732a9335f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d6648c-f37c-4770-ac2e-92e8e7a35173",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e5ab74-d9ff-4ed2-9388-833e6c44ce14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da03fa8b-f252-4d51-a8eb-ff70b1145929",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbd7fb9-4adb-4a32-81e8-ad918e63d2f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be3a73a8-29be-415e-9bd7-38216760da7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d085bdbf-40d2-43e0-bbc7-49702f01a2fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71de00f-dc3f-4e25-becd-a750140fbed6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1597772d-cfc4-4138-9b56-2acbef7e95d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b43d2380-8472-4d88-8b17-4eaf185af63a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d8b32ad-47db-4327-af06-8ffb814ece56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55fbeb68-7171-4f9b-ab5a-70471a2c4a0e"
                    }
                  }
                ]
              },
              {
                "id": "e5e33e46-3a41-416d-b952-7c257eefddef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "171e3cbc-fe04-41bf-8fc7-ab467b04f32c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2e37fc-2599-4b53-8daa-68039dabd8a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ac7b338b-5aec-4df5-a5e0-fcc5e4dc22ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c67b139-db94-45af-875f-b7255336a8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "523115d5-9d98-4f85-bd52-9c31921553a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76df3e7a-0ba6-49fa-9620-2ffeee1ca7bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b85527a-1283-42d4-81a1-d2524216d495"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25e9b93f-38cb-4615-b0be-fbb836820fa9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5411e718-9181-4b8f-b568-ac77108cfd0b"
                    }
                  }
                ]
              },
              {
                "id": "ed94f36b-c6a2-4caf-a60d-986bb1e2e4b0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1321ed46-6491-4bdd-a34a-fbfb8dd28e89",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a42daa-7047-4946-ad8a-bc9572d1ec8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bf2c9dad-4b66-4145-9ddc-f26147100e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a3c9d0-860e-402b-ae17-fb032973e0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb68497-7602-4c3b-88aa-1dd594e7967e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "561239e0-0949-4b04-a389-ea6fa5b55469",
            "name": "Positive Testing",
            "item": [
              {
                "id": "45876e45-a882-448f-895a-3c843714f852",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b163dda2-2af0-4a0a-990e-753099afce2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "554037eb-cd40-476a-a94e-d60dab428b1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43f05c31-651e-4216-b92c-ed81f8a529ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc8c951c-623a-4de6-8f56-07e43df598f0"
                    }
                  }
                ]
              },
              {
                "id": "2e371d7f-7778-4197-a9c0-a5abaf725c50",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0cdae03-a87f-4f70-9b18-502bffa02dee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "736fb954-0b0f-430a-a747-a7c38beb4c40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5294a91c-3a4d-43a7-bb6a-2245630cfbfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba124a35-b6d2-44d5-bf18-4b2e5dd4dc73"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6755143c-f5d2-408a-b452-ed91e900cd99",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bf86c56f-65a4-43a2-97a9-427eb09de31d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd72e1d7-97ca-4914-a249-0cdaa9ddb70f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0de5e034-a8de-42ca-b4bd-9e9912c0bdb6"
            }
          }
        ]
      },
      {
        "id": "eefbe435-73c4-4c08-be37-f3291b08d337",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bfa484e5-b197-41f1-83c7-6f3c82e59940",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbdc5df1-ac27-448e-bc77-2ec217f7f02d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f064522c-f035-495e-965a-8240d1ca03c7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcde384-37a2-4419-b75b-0bb4f73f2f62",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0aa43868-0426-4646-ab98-7e6d67d0b558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0822150e-c24c-429b-8165-7d36a9962ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d35b370-459d-4fa8-b41e-0954687cf3cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "547a2337-1428-4a39-8abc-d8c2290705ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dbe66a5-effd-49ce-aa39-4c27ef999edd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4189a2f-1c58-43f2-baa8-a7b1d04d7c90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db70fde1-37a6-4288-b423-9cef532b7260"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25b1d93f-1008-49a0-9e26-79b188d4c213",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ed248eef-83fb-47ca-a28a-023f1d4a8e8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccc6d434-71f0-4316-8f44-723a7fab9414",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31ef7ae0-6925-4824-9175-dd555828f4cc"
            }
          }
        ]
      },
      {
        "id": "b7d49783-d67f-410b-87b6-57c4ca2a1422",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "88fc58ff-5ec6-40aa-aec0-0642bca5ebe8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e5e42ca-5341-4f0b-ab84-9862adfd1056",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b68cdfa-b891-4e88-829f-ad60edf3068b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d2a095-21b9-4c96-942f-fb2c9c12f320",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d75e1bf0-8f05-42c7-b664-0c9bb5773176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6d6b52-8461-47f1-9f48-3a68199024fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1598df7b-cf99-4989-af42-576eeada7577"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88029dc8-1c9e-4fff-96e3-d4760671f6b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52a982f6-85ad-438d-9379-42defec5265e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77cdeb2e-207e-4844-8cef-0fd953b381b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebb133e9-c215-4a8d-99ad-f13fb0f482d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1801a8aa-56fc-432a-b300-ce539dd95b66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "504640e4-45c9-4aa5-8367-5fb50c2c9fe1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ac93acf-1a4c-4f18-8534-46bacfb7633d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "913ad5bf-0ce7-4bb4-b0ef-26021f3b487e"
            }
          }
        ]
      },
      {
        "id": "dcb8a0d3-bbc2-4f95-9585-e2721e51c961",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7c0d6abe-38be-4cef-8c81-3bda0ad4a4f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7cc4a59-b6c8-4c4b-a625-b4bfc50e428c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3c7e491-9bf4-461d-8e84-48c0f77673b3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ac5607-e9f7-4c23-8bd2-1bb6f6668272",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6341c874-4913-42e7-889d-b843a4b50a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c8ed60-acaf-47f8-b88e-417861ecb81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b50fa8e-5d4c-4b3d-ace2-dc775d93f141"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c0ccd6e-3a86-499d-80a5-9fbdf8384e1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e31b03f1-25a0-463e-99a8-b70fe7795bb7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efb23ca3-f4ca-43af-9fdf-1dafa42f81d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e382449e-46f8-4d96-8671-e3e69ac91475"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "753af581-5c6a-475f-90c9-e74e50e66cf7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3d53551a-cef5-470a-86b9-5664cb6a31ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f7071a7-fcd6-43de-a98f-279c6f0f2a76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fec42d5-a21b-4103-a706-68b7c6ebe21a"
            }
          }
        ]
      },
      {
        "id": "0685fbbd-d771-4316-94bd-fd18d9219180",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "182444ff-6602-4ff5-8529-8dc28dd1da13",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6204aef9-889e-49e8-bdd1-ca4fd861e622",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "154812c3-c175-4c4a-8223-d267ff9a0063",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e94e6706-6f7b-4061-9446-f76e8eced40a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcb2afa7-8830-4218-b423-0f26cb1d08c7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 82.88732394366203,
      "responseMin": 10,
      "responseMax": 4344,
      "responseSd": 356.00118884497533,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693787586591,
      "completed": 1693787621699
    },
    "executions": [
      {
        "id": "d63f076f-5945-4c7c-8d49-06bb893a0edb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "34fc2c39-4a4e-4d6e-a606-2795472ad6dd",
          "httpRequestId": "909a4815-e15c-4f5c-a6e7-6a3db9b54377"
        },
        "item": {
          "id": "d63f076f-5945-4c7c-8d49-06bb893a0edb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c7e6456b-3ec2-4e8c-9663-05fc74fe3b66",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "76d98313-b878-4eee-90e3-2105ee2cbf28",
        "cursor": {
          "ref": "0652f136-a837-48b7-952f-4216d8378a18",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a2d46424-e4de-47d1-a72f-7dc2e57fa270"
        },
        "item": {
          "id": "76d98313-b878-4eee-90e3-2105ee2cbf28",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d419eced-3752-49d1-8d0d-0cb761408194",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "9b6d215f-dc51-45a7-97cd-82819ae747c6",
        "cursor": {
          "ref": "7a546db4-2b8e-4053-9712-db76a125fd3f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6c14b6e1-b8fe-4ef0-9a0a-55524c88d328"
        },
        "item": {
          "id": "9b6d215f-dc51-45a7-97cd-82819ae747c6",
          "name": "did_json"
        },
        "response": {
          "id": "488955f4-2898-4ddb-aba0-657ebc21f2fb",
          "status": "OK",
          "code": 200,
          "responseTime": 276,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c9c62d-a2f4-40ff-8846-4a65f59eac3c",
        "cursor": {
          "ref": "d0c3cda6-3f5c-4ccd-94fe-5723ae5b4b08",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7bc6b631-903b-4b45-8f51-b5d925866ccc"
        },
        "item": {
          "id": "92c9c62d-a2f4-40ff-8846-4a65f59eac3c",
          "name": "did:invalid"
        },
        "response": {
          "id": "bb848f9f-a3d8-4bde-be55-4ffca0622641",
          "status": "Not Found",
          "code": 404,
          "responseTime": 622,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c9c62d-a2f4-40ff-8846-4a65f59eac3c",
        "cursor": {
          "ref": "d0c3cda6-3f5c-4ccd-94fe-5723ae5b4b08",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7bc6b631-903b-4b45-8f51-b5d925866ccc"
        },
        "item": {
          "id": "92c9c62d-a2f4-40ff-8846-4a65f59eac3c",
          "name": "did:invalid"
        },
        "response": {
          "id": "bb848f9f-a3d8-4bde-be55-4ffca0622641",
          "status": "Not Found",
          "code": 404,
          "responseTime": 622,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6be1da-0772-4dbd-9be8-a36c585f6cc5",
        "cursor": {
          "ref": "22a2daf5-7d52-4888-8400-01386025c229",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5d800834-f134-4545-9468-1100cf3f4500"
        },
        "item": {
          "id": "ac6be1da-0772-4dbd-9be8-a36c585f6cc5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e87f8e1d-a7c7-45aa-9df4-34ec9a6f122c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07231dd-f2c9-41f8-9677-66c566f5f71c",
        "cursor": {
          "ref": "3e5d7161-fea4-4ebe-ae5a-223813ebb43a",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ee26e2b3-99f7-4707-8d2f-afa1de9ce2e3"
        },
        "item": {
          "id": "f07231dd-f2c9-41f8-9677-66c566f5f71c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "46c00c5c-2c90-4634-bd38-8edc6f4a2b35",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db11620a-b9c5-44ec-98ef-9176c17c0bb1",
        "cursor": {
          "ref": "fabe85ec-fa87-4162-9533-9ae9cbe5acb5",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b9da1e18-a15b-4a0d-9221-1227ccd50598"
        },
        "item": {
          "id": "db11620a-b9c5-44ec-98ef-9176c17c0bb1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b7db7579-f0fa-442a-b8e7-ff8707d6f3ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23396e5e-fa6b-4c14-b626-97f904d83f9c",
        "cursor": {
          "ref": "bc94c19a-dd28-4548-9e08-29f1efb05f73",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "22dda076-18ad-489c-8fdb-52eda4e7dd4d"
        },
        "item": {
          "id": "23396e5e-fa6b-4c14-b626-97f904d83f9c",
          "name": "identifiers"
        },
        "response": {
          "id": "d24297eb-4c3f-4ba3-acb0-3b7539d997da",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb94bfd-18c9-45ab-8d16-e6d437600070",
        "cursor": {
          "ref": "7846b0de-88ba-47a4-a795-faa3ebec4004",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a13be734-d699-42c4-a488-d7edb56d5cb7"
        },
        "item": {
          "id": "9cb94bfd-18c9-45ab-8d16-e6d437600070",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e51192cd-4e65-44f0-aaad-09da1f62130a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fa53e2-bb48-4142-891e-b4fc0e4d62ad",
        "cursor": {
          "ref": "37997a04-2200-4c1f-9eed-0b914a6db901",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cbe902fd-d2bb-4994-8931-547530d90e75"
        },
        "item": {
          "id": "a5fa53e2-bb48-4142-891e-b4fc0e4d62ad",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "19de0953-8cf4-4b3d-b4ca-da58bca9f00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b795a7fb-339b-449a-b572-5c51b8dbe98a",
        "cursor": {
          "ref": "dc021892-15c7-4e45-bd48-c0950ca59726",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4b3463ea-5685-4404-ba2d-914a4ca8afbf"
        },
        "item": {
          "id": "b795a7fb-339b-449a-b572-5c51b8dbe98a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4ad71409-d0f6-4237-b183-d728342586f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad74a32-7bb2-4458-83a6-1554994391bc",
        "cursor": {
          "ref": "973bead1-e65a-425e-b4ac-e3f12d3b80c5",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b9ee657d-cc4e-4575-acc1-cb741785a1e6"
        },
        "item": {
          "id": "4ad74a32-7bb2-4458-83a6-1554994391bc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b8ca5838-4e6c-41fb-a52f-c8cd8918e0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9de9d3d-f7fe-4ad3-9d3c-f0e877121041",
        "cursor": {
          "ref": "b02f9c65-7804-4256-b85d-0f7e94d48bca",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "700278c3-6bc9-4015-afaf-031957ac12a9"
        },
        "item": {
          "id": "a9de9d3d-f7fe-4ad3-9d3c-f0e877121041",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dd671fdc-341b-4b5a-94d6-a1eaba87d7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540cc9de-8337-4715-9bd7-9500ea787aae",
        "cursor": {
          "ref": "67832e73-a21b-4f12-9a0c-a3e6cab2370f",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e66c715f-2cb3-42e5-8feb-38c2b948dfd7"
        },
        "item": {
          "id": "540cc9de-8337-4715-9bd7-9500ea787aae",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "646f07f5-055b-4fb0-99b8-13c7d7a2b029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b23a19-a818-404c-b925-908a6384be0e",
        "cursor": {
          "ref": "d92bdcb5-817d-44ac-984b-13ac481783b9",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "169c3eb5-9b7f-4684-9c07-888ec6bc2d0f"
        },
        "item": {
          "id": "14b23a19-a818-404c-b925-908a6384be0e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "09d89d9a-350e-4362-9f62-6d903c7a29b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39eb54c1-ab1f-4f5c-b984-b6bd15e66b17",
        "cursor": {
          "ref": "42b1de43-e48b-4686-98bc-c8f9e2188647",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "435a3688-7be8-4924-aa9e-6582bda1df8e"
        },
        "item": {
          "id": "39eb54c1-ab1f-4f5c-b984-b6bd15e66b17",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "37bdccef-7ec3-4158-a03b-f00d2a3f4975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72545549-6d16-4cb6-9cfd-e93e3b5be1ef",
        "cursor": {
          "ref": "7735656d-e826-418d-a598-b0dbcf90e222",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "03de64a2-6040-47e5-8d8f-7529ce266120"
        },
        "item": {
          "id": "72545549-6d16-4cb6-9cfd-e93e3b5be1ef",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "eb51042f-57dc-49a5-83a9-2fabbe56962e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c266c01-87af-4de2-92cb-4f2185dc70b2",
        "cursor": {
          "ref": "d189798f-4bf1-4091-a264-9ddfdc3b742d",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5753b3c1-e4fe-4919-9ba3-4bb7699bb331"
        },
        "item": {
          "id": "6c266c01-87af-4de2-92cb-4f2185dc70b2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8b08600e-00cd-489e-a325-0acd6d8f0826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73fa383-6084-4941-b3d8-744c63134c81",
        "cursor": {
          "ref": "98442974-a582-44ec-9f5b-a5afff9cacfa",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "513aca38-5c4d-49ec-ab59-a1387b57eb5e"
        },
        "item": {
          "id": "f73fa383-6084-4941-b3d8-744c63134c81",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "31ebc37f-9d73-4529-afd2-f7c089d1f514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1e66b6-2259-492d-a7a6-c79e90e23147",
        "cursor": {
          "ref": "b6346a5b-2e22-4038-90ce-87e27d67416e",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b2ea54ff-e546-4331-900a-99bb6f8ed7ee"
        },
        "item": {
          "id": "ec1e66b6-2259-492d-a7a6-c79e90e23147",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cf747003-ead6-4717-be76-409ca362844d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd42889-9c25-437c-a694-4a98bdd07449",
        "cursor": {
          "ref": "9b8beba4-17e1-4087-bf45-bb118ccdfada",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0b3a61e9-c854-441c-bf06-27efc60c19f1"
        },
        "item": {
          "id": "3cd42889-9c25-437c-a694-4a98bdd07449",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5196fd73-e893-4662-a713-8cb0b1f24935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d433e48-42d5-4f55-8503-bc7b22193bba",
        "cursor": {
          "ref": "ffc70d73-0a36-4264-94c1-cc4ddf77b7af",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4e7ff353-9536-426a-9fda-dfaaeb5a6e3f"
        },
        "item": {
          "id": "9d433e48-42d5-4f55-8503-bc7b22193bba",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0a9c02c5-cb72-4e51-9ce6-edccf5f605f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e08324e-93d3-4562-bf71-894b7b176404",
        "cursor": {
          "ref": "3b40625d-6d3d-4bee-97a6-73e026f5e2d7",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "910ee919-c870-4fa0-b605-069506e33a4a"
        },
        "item": {
          "id": "3e08324e-93d3-4562-bf71-894b7b176404",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "253a9e6c-081f-422d-8746-05fdbc58e44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067cacc8-05f2-4811-ac71-b9a7aadfd999",
        "cursor": {
          "ref": "90068f8e-be2e-449d-93af-bc1447e9d68e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2aa5f8ae-f321-44e8-be48-438bfb2dcffc"
        },
        "item": {
          "id": "067cacc8-05f2-4811-ac71-b9a7aadfd999",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fc1fab09-20ff-4806-a5d4-a790c477ef2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf820c14-5172-49f0-9753-4b6b0d6da26a",
        "cursor": {
          "ref": "ba3dc017-f112-4c46-8e0d-88fcd82c47fa",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "91c04051-cf11-4739-b9aa-b68868eab1f4"
        },
        "item": {
          "id": "cf820c14-5172-49f0-9753-4b6b0d6da26a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "11cc5fda-8efe-4ffc-9f3b-5299bef43518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f799d152-0b9e-4f4e-94eb-5b28b7af2690",
        "cursor": {
          "ref": "fcda29af-779b-408d-898a-1a23f18a8d5e",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "abca5f9b-cdb6-4370-9c0b-a4f910c96d87"
        },
        "item": {
          "id": "f799d152-0b9e-4f4e-94eb-5b28b7af2690",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d3d13ed6-ba1d-4da9-9c39-9c1bb6c2fd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d01301-c41f-40cc-9802-d475d1738e78",
        "cursor": {
          "ref": "1abcae2d-a82f-4f6d-bcb0-e15f3f2457a2",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "590ff4f4-2dbe-43b4-9a22-3248c779cf05"
        },
        "item": {
          "id": "d4d01301-c41f-40cc-9802-d475d1738e78",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7a8e2b8e-d0cb-41f1-86cc-56dbb4be84a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4c5f38-dbfc-4598-862c-3ccb01891816",
        "cursor": {
          "ref": "6ad8c64b-8197-46e7-b185-556353c88b32",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "88092f5c-8a5b-4fef-a1ff-e6c83a3f7e9c"
        },
        "item": {
          "id": "6a4c5f38-dbfc-4598-862c-3ccb01891816",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9870ecc3-7189-4e1b-9777-2c110a962344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f5709a-5904-46de-97fc-a6af45c6b3b5",
        "cursor": {
          "ref": "caaccc73-f984-4a9e-b203-fdfdca8f5ec4",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "78b1b3c9-36d8-47f0-bd3f-6a4a2d3812c6"
        },
        "item": {
          "id": "c9f5709a-5904-46de-97fc-a6af45c6b3b5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8ee0088f-a720-4af7-b052-00ebf8c9a83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edddb772-42a1-420c-b581-e37eda264019",
        "cursor": {
          "ref": "3741967b-f6c2-41aa-8e3d-cb11f9d56942",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "36f31c44-d183-452d-be52-f5b0596435b3"
        },
        "item": {
          "id": "edddb772-42a1-420c-b581-e37eda264019",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "313acc48-9960-4b98-8c25-094b3a7274e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fd9325-002f-4d13-98ad-8cc5b6a4ebee",
        "cursor": {
          "ref": "b34b6e2b-98aa-415e-982b-cfc6e8474eeb",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "aac5f026-de52-4a43-badb-96101cc95c2d"
        },
        "item": {
          "id": "30fd9325-002f-4d13-98ad-8cc5b6a4ebee",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f6e24b57-4b5e-4faf-a4da-e6c940b0a3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae19e9a2-beeb-4641-9aa6-33fce9354076",
        "cursor": {
          "ref": "26e67f55-dba6-4326-8f2a-a25af5035db0",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9e1adc7b-c49f-4b8d-b89c-d7046ca0d3e0"
        },
        "item": {
          "id": "ae19e9a2-beeb-4641-9aa6-33fce9354076",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2ee1904a-9e55-43ef-9600-1cbea49983ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9423bb9-e473-4ca6-8697-529176c0a93e",
        "cursor": {
          "ref": "70047049-5880-46c9-a5e0-5047ebdce56a",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "81c0b831-36fb-4dbd-bfd9-742240ce0c82"
        },
        "item": {
          "id": "b9423bb9-e473-4ca6-8697-529176c0a93e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3f13ec86-9936-49f8-a0ee-a52fb1980253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7daca71e-d867-4869-835c-d1ca5f618d59",
        "cursor": {
          "ref": "c4566c36-bb22-4823-bae3-9e3a07d67ebe",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c3afae48-aa5e-42b5-bb7e-aafcc139fe23"
        },
        "item": {
          "id": "7daca71e-d867-4869-835c-d1ca5f618d59",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5a9ad076-d633-4276-af72-adc0e89873e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac2a865-08c0-4bd6-9fd3-1f3fa5eb22d6",
        "cursor": {
          "ref": "47a724d3-e34f-4787-b7fc-4d421781a26b",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d056ef38-f052-4465-b51a-49869ff4e06c"
        },
        "item": {
          "id": "aac2a865-08c0-4bd6-9fd3-1f3fa5eb22d6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c5c224f8-02d8-44fa-b7fc-326a337b8e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea24b39-bcfb-49a4-8ecc-b624d34dfb7a",
        "cursor": {
          "ref": "544b6ea1-d4f6-4345-9ee8-a8a434055739",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b6d872e6-a17c-4b44-be33-1552c326f762"
        },
        "item": {
          "id": "8ea24b39-bcfb-49a4-8ecc-b624d34dfb7a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5902467c-e93a-4532-bb12-0d82a7b167f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cde26f-63aa-4ff8-ba37-dfd871335e08",
        "cursor": {
          "ref": "34993b7f-ba42-4585-9a2d-4dd526c6ad76",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "50462ed9-6dda-4dc6-acd2-c1f067f57cac"
        },
        "item": {
          "id": "19cde26f-63aa-4ff8-ba37-dfd871335e08",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7cf62e42-754b-4e2e-a432-6edc3ff5b1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92040694-36dc-47f1-b3a2-940c213f1cdd",
        "cursor": {
          "ref": "570b63cc-d637-4d37-8a4e-6da34feb169a",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "021d3c06-e5ce-48fc-bb42-67280319ce15"
        },
        "item": {
          "id": "92040694-36dc-47f1-b3a2-940c213f1cdd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "67698e3a-f671-4744-8da2-f907452ca9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0d38b9-0c08-4846-83b3-8329a9670545",
        "cursor": {
          "ref": "8371bb9b-95d8-4a98-8488-14c3c8773e89",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c7159538-5f69-41ca-9e0d-77e239296b03"
        },
        "item": {
          "id": "6c0d38b9-0c08-4846-83b3-8329a9670545",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "632a6e60-3241-4594-808d-285a47f984ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11a3015-69dd-40f2-91f1-a9c1b6623175",
        "cursor": {
          "ref": "9cfd2e63-4f80-40f5-9771-f3b06daaa294",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "67526dd1-186b-4acf-8621-abd009678297"
        },
        "item": {
          "id": "e11a3015-69dd-40f2-91f1-a9c1b6623175",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "18ec4b8b-736a-48bc-a440-a07ed2bb92e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8163ba96-f2c7-4d29-aa20-62d06855befb",
        "cursor": {
          "ref": "b05113b3-e5f5-4952-a91c-224da7db58e5",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ccbe18d9-e638-4744-a6f8-aabbc3a72afd"
        },
        "item": {
          "id": "8163ba96-f2c7-4d29-aa20-62d06855befb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6e253540-0ef0-46de-b524-bdbf92362d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ba5e7c-d16f-4e27-98b3-aa84b9f1faa6",
        "cursor": {
          "ref": "48f43102-a5c8-47e0-b77a-fae5a17a5a8a",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2132c2a1-edb8-4834-a624-2f9168539be0"
        },
        "item": {
          "id": "b6ba5e7c-d16f-4e27-98b3-aa84b9f1faa6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "86f888ac-38ac-4c49-a030-1511b3b0f4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7ebf01-754e-4125-89d4-dbd1a62864fb",
        "cursor": {
          "ref": "c7805fda-fccd-415c-ba06-d038bf11028f",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2e1d9eb8-1b94-4a44-abee-df3058adb0b1"
        },
        "item": {
          "id": "2f7ebf01-754e-4125-89d4-dbd1a62864fb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "34bff00f-2531-4d55-b096-f2c8ef923110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63089ca-d3f3-4d81-804d-54b45db399a2",
        "cursor": {
          "ref": "36cc99b7-6d5b-4d48-8ab6-80086b171676",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2491af6b-418c-4475-9982-d6d12e3d245c"
        },
        "item": {
          "id": "c63089ca-d3f3-4d81-804d-54b45db399a2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a2810eb3-abc5-4d28-987a-bc924c0ad426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d368fd5-f5d0-4494-b5e0-456ef1ae505a",
        "cursor": {
          "ref": "8950a566-7e4d-4e3e-9edf-42b5e7b267bb",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7c7ae420-3668-4c3b-81a1-24d9742acf51"
        },
        "item": {
          "id": "8d368fd5-f5d0-4494-b5e0-456ef1ae505a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ef55e525-f564-4135-a1ed-321fe9cc865b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658c17f4-2829-48a6-a049-2d69531173f4",
        "cursor": {
          "ref": "93fca134-6b3e-41fb-b93b-ed6cc287c074",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "12b767e5-483c-4374-baca-2f959c86cace"
        },
        "item": {
          "id": "658c17f4-2829-48a6-a049-2d69531173f4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9ea8df85-3b74-4102-ac9f-734c15dae565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7c1071-166c-4a69-9e5b-a87db4bffe43",
        "cursor": {
          "ref": "d3c0d91b-c895-49e0-a535-aaaa17d3ae60",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2d40dfca-049f-48ac-8f55-6d9174622def"
        },
        "item": {
          "id": "7d7c1071-166c-4a69-9e5b-a87db4bffe43",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a0a0eb30-b7cc-4c6c-9bfe-949328a2c49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a981e3-d7b9-4668-91c7-19f2e2892084",
        "cursor": {
          "ref": "cb2fff1a-cd80-440e-8d06-12f65405f5f1",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c7dd8865-0abe-4db0-ae21-e39cdadcefea"
        },
        "item": {
          "id": "93a981e3-d7b9-4668-91c7-19f2e2892084",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8506c6dd-660a-4e9d-8335-d9128dc90bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a35d029-c8d3-48df-a8f7-c9c6493f0fc5",
        "cursor": {
          "ref": "2fba2abe-90aa-4f00-b8b6-068831a6ac05",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "98a4cad8-9faa-4573-b303-0c1f960b4f1b"
        },
        "item": {
          "id": "2a35d029-c8d3-48df-a8f7-c9c6493f0fc5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "45448bba-fa4c-4bb0-909c-23be124d3188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c77dbe-d832-4cac-9957-6d254fc4e5da",
        "cursor": {
          "ref": "23c9c4ed-f99a-4c83-82b4-5f2762311e2f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "29e0ac33-4a13-4479-9ea9-4cc24aab0b56"
        },
        "item": {
          "id": "47c77dbe-d832-4cac-9957-6d254fc4e5da",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ae632cd0-aa75-46a6-b932-ed0a5b04bd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249c0de7-747c-4327-b519-57f568cb1bb9",
        "cursor": {
          "ref": "6ee82482-3d4f-4300-b347-7f22ecd7ee69",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "38a79c6d-66f8-4a27-a45b-0cf859e7c03a"
        },
        "item": {
          "id": "249c0de7-747c-4327-b519-57f568cb1bb9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "14a4b414-c703-47fe-adf8-abe4b6f54e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1d0f84-4693-45a8-949c-831048794844",
        "cursor": {
          "ref": "52a4c79c-9507-433b-af82-b122733c8122",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "344166c3-5a27-4bba-bd9f-7e329622ff77"
        },
        "item": {
          "id": "2b1d0f84-4693-45a8-949c-831048794844",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4452de3f-85eb-428f-b73c-74daab0818f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab27c032-0bc0-491e-95ec-6ef10c26a033",
        "cursor": {
          "ref": "73b555a1-5fcc-4e24-8c42-91ce33a91c3a",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "76fd6932-6616-4629-acf9-3316cba2c8f7"
        },
        "item": {
          "id": "ab27c032-0bc0-491e-95ec-6ef10c26a033",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "337a1a2c-e0f9-4646-b1b2-fb43fb51a7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3efd73f-fe65-467c-98bd-cb118148d3c6",
        "cursor": {
          "ref": "a53de791-6b77-451b-9ec0-64e6128d32bc",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bce021ed-c375-4331-82c6-e1429f03a389"
        },
        "item": {
          "id": "b3efd73f-fe65-467c-98bd-cb118148d3c6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "263eb1da-f3ef-4f9d-bb30-a5a84769238e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435f15ea-4d32-41e0-a783-914a1ccdff71",
        "cursor": {
          "ref": "d9429b9a-0394-4594-85ac-644b05fb5140",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d237f2c9-0620-4ad0-8be1-e9e04e09b91b"
        },
        "item": {
          "id": "435f15ea-4d32-41e0-a783-914a1ccdff71",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "731eba46-98b6-4a44-bfe8-50817bb8f657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3871ac0e-df34-4261-8a1b-5856e023e92b",
        "cursor": {
          "ref": "1f7d3a18-a8af-4a32-aec6-3e65a4406b4c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b021cc67-4b96-4951-a38d-ad86ab06d371"
        },
        "item": {
          "id": "3871ac0e-df34-4261-8a1b-5856e023e92b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6b361e70-54b3-4832-8268-e446633ec8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717dfb61-f0c2-4a23-86c5-c111f05e6ead",
        "cursor": {
          "ref": "6dcb0d7d-05a5-4642-bc1b-4c140a6af91f",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cc3575c0-d5ee-4968-a880-d70141430e79"
        },
        "item": {
          "id": "717dfb61-f0c2-4a23-86c5-c111f05e6ead",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "72d5e1f1-e3c0-4ed5-b66e-5b7f79356406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07603f7-7f70-4eac-955e-f82d20c17ae0",
        "cursor": {
          "ref": "ba73bb7f-1a23-4ff7-a6af-a7e689d075a1",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7976fee6-201a-4791-859f-e65e24d3be9a"
        },
        "item": {
          "id": "a07603f7-7f70-4eac-955e-f82d20c17ae0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "787ee0b5-1397-407d-8143-8c21ba3f974a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6894696d-b3ad-4085-a687-687232d8b6d7",
        "cursor": {
          "ref": "f47bd3fe-1230-43d6-b054-8b1ca63e1474",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dbfdd4b1-6e49-414b-8095-7f205cd879eb"
        },
        "item": {
          "id": "6894696d-b3ad-4085-a687-687232d8b6d7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "79f4b969-0715-4b72-bdeb-47e44b188e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163a5f64-4add-42da-9aa4-4a3615109d40",
        "cursor": {
          "ref": "41ed0166-0484-4a4b-99e9-f6895f676edf",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a55c8d7c-e218-420d-b298-2b00408e40ff"
        },
        "item": {
          "id": "163a5f64-4add-42da-9aa4-4a3615109d40",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2334ec32-f4f5-44c8-9a89-2df1d3a0fe19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64c9885-222d-4f58-91c5-88836dc78dc3",
        "cursor": {
          "ref": "8fc6783c-cb99-45bd-9328-187a68c804ba",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b79f51cb-2acc-4a3c-927b-0d5c5a2db78f"
        },
        "item": {
          "id": "b64c9885-222d-4f58-91c5-88836dc78dc3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c178dd6c-a7df-4d43-847a-6885f74d05b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc1aec1-af9a-404d-bb05-a07664c36512",
        "cursor": {
          "ref": "6f9c86a1-3ba4-4735-84cf-d981b1083edc",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "23496bcc-64c3-45c2-89b9-d113c81f0557"
        },
        "item": {
          "id": "8cc1aec1-af9a-404d-bb05-a07664c36512",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e9214735-ea97-422f-9a69-67786173614b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b1a201-be58-423a-9137-40e0beed6a22",
        "cursor": {
          "ref": "fc409e31-3262-4e26-a99f-a05d20eef617",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5fe9971a-1e18-436e-b56d-c44f2a089298"
        },
        "item": {
          "id": "b4b1a201-be58-423a-9137-40e0beed6a22",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "35cf387e-5b45-438a-9150-9511b90ccee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582af547-3545-4f0e-bad8-227f6473b62f",
        "cursor": {
          "ref": "5797cb0b-b22f-4c45-97b0-782beaaa4fbe",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dd341cc7-ee8f-40a9-bf92-676fbbce0b58"
        },
        "item": {
          "id": "582af547-3545-4f0e-bad8-227f6473b62f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ba85bdcb-1af7-49c0-98c1-7e4a1b19d79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50eae478-81a0-497f-99ed-0055aefdab49",
        "cursor": {
          "ref": "09efc267-0eca-45dc-860c-06717d1cace6",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5aa4e674-2b37-4a0f-907f-ff5b5fb8705c"
        },
        "item": {
          "id": "50eae478-81a0-497f-99ed-0055aefdab49",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4b4698f8-4edb-4be0-be0f-f7b1124650af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df79f8c7-1988-4008-a765-38ae9004ac58",
        "cursor": {
          "ref": "0a567ad4-36b1-494e-9649-6bfe26d91d0e",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5dbda374-df2e-4acc-81d6-64a12ca355b4"
        },
        "item": {
          "id": "df79f8c7-1988-4008-a765-38ae9004ac58",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f772ccd4-ced2-404f-a58d-ab77297655ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acdcea1-5a2e-4192-b8b7-1575d6617b93",
        "cursor": {
          "ref": "4bfced51-78ce-4072-8f8d-3f937ad17c14",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "81175c56-596b-4485-ac72-38fa1f645996"
        },
        "item": {
          "id": "1acdcea1-5a2e-4192-b8b7-1575d6617b93",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d59055d7-c5e4-4061-94f0-a3e15d365003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361f18e7-dae0-40be-9a3b-b3786ee688a6",
        "cursor": {
          "ref": "e7a5c23a-3098-4f1f-a4cf-6fe0f50da431",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2974ca0d-a08a-4b9c-8eb7-6305825ca16e"
        },
        "item": {
          "id": "361f18e7-dae0-40be-9a3b-b3786ee688a6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f68864f4-7c67-4e4c-96b9-0fca31e11d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86bb8a0-25b8-4317-a752-df85e6ce2093",
        "cursor": {
          "ref": "1cea0e31-8112-4219-bbff-309ac8b0c8ae",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4db837cb-00b2-4456-94fe-b0037b6c1442"
        },
        "item": {
          "id": "f86bb8a0-25b8-4317-a752-df85e6ce2093",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f8d7075f-36c9-4cd0-baef-b3e283abb619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9008ec44-6ec7-4ad9-840b-96d87dc89fef",
        "cursor": {
          "ref": "83c0f8e0-33eb-4eb7-a374-806fb12b4184",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cdcd7c4f-f197-4c07-8d0e-1c23f10d62f3"
        },
        "item": {
          "id": "9008ec44-6ec7-4ad9-840b-96d87dc89fef",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "95ea1b6f-ef5f-444d-912d-409b720b3aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879b2a90-92cf-4ed4-85c9-8dbf4da57d2a",
        "cursor": {
          "ref": "77e9b5d3-d60e-43c3-923e-9a24566b024f",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9171f0cb-0357-4fc7-a777-aac01d1f5737"
        },
        "item": {
          "id": "879b2a90-92cf-4ed4-85c9-8dbf4da57d2a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c8c18556-0551-4f8a-8bf7-926fe54eefa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bfab45-499f-4bd6-a86d-694fc1888fc1",
        "cursor": {
          "ref": "bb3cb0a4-b8d7-4077-8a70-e25f5ebaf51e",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1ecb70e9-d930-4cbb-8086-205663ece600"
        },
        "item": {
          "id": "17bfab45-499f-4bd6-a86d-694fc1888fc1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "93fdd22a-2edd-4934-8a4e-b78030069920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707fff02-bae5-481b-83a1-10614be2906a",
        "cursor": {
          "ref": "0c8c30b5-2151-4097-bdb8-e9a6cc61e314",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e5daaa80-539f-4be3-b137-f63cdfccc40b"
        },
        "item": {
          "id": "707fff02-bae5-481b-83a1-10614be2906a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6db1c454-4d33-47b2-b5b1-0ac00ccdc911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d70e9b-f716-4c93-8bd1-28fcca55cd68",
        "cursor": {
          "ref": "a85d2afd-cefc-41cd-b57f-d327c1f9ac9f",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b1699b37-162f-42c1-8970-d6ad4a094365"
        },
        "item": {
          "id": "99d70e9b-f716-4c93-8bd1-28fcca55cd68",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "966c7a71-161a-4fac-ab2e-5a3bf75fedfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663583cb-c26e-480c-9f39-13f54f231295",
        "cursor": {
          "ref": "20fc1a6d-6e5b-4150-b269-55fa426ba7fd",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ac93e5d7-a7be-4a64-b81f-57a9fa9c30f2"
        },
        "item": {
          "id": "663583cb-c26e-480c-9f39-13f54f231295",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "70ae72e2-c4c9-4416-a482-374018504c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcf8ab9-2d4c-4b27-ae74-b10fd8a5ae48",
        "cursor": {
          "ref": "82eaa615-e565-4451-a7d1-051bbbf0292f",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5f17511d-3494-4a4d-9b1a-02c89f4551e9"
        },
        "item": {
          "id": "9bcf8ab9-2d4c-4b27-ae74-b10fd8a5ae48",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8f1de0a8-50f9-4c3a-bd02-bd6102d1da58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860e8e99-7719-48eb-9f05-73cc33792478",
        "cursor": {
          "ref": "c58d847f-e000-4647-b27f-423ae6172808",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b1a91bd3-a5fe-44ce-8ea9-c31c776e198f"
        },
        "item": {
          "id": "860e8e99-7719-48eb-9f05-73cc33792478",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1476b320-fa80-41a1-925e-1671856022dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30659c32-7a25-46ab-8aa5-bb767d6f4a66",
        "cursor": {
          "ref": "63f46fec-580a-46b0-acd0-6e081dc6e54a",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "35798ea2-3d92-43b7-9bf6-8cb4eea99f00"
        },
        "item": {
          "id": "30659c32-7a25-46ab-8aa5-bb767d6f4a66",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "09c81c84-0c58-4190-83eb-f20272b8319a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0c744b-57fc-4741-9749-db42dd5ec9ca",
        "cursor": {
          "ref": "77bf854b-936a-4c9f-8ab6-066b23b1e176",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "331ca191-96dc-4f6e-b34a-34b16e6a2217"
        },
        "item": {
          "id": "fa0c744b-57fc-4741-9749-db42dd5ec9ca",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3987ffdd-1b0d-4b03-99a6-7fb2ddae5a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a395c2-6a3c-4030-95fe-97d9a4e00cbe",
        "cursor": {
          "ref": "2ab51985-05de-43fa-910f-862e7c722727",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ac04fcda-d53e-4cff-8762-3c10cf550f94"
        },
        "item": {
          "id": "90a395c2-6a3c-4030-95fe-97d9a4e00cbe",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fb4b2cb8-9f83-4ea1-a656-2c5f94aa4eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f78c2c-6114-45bf-be3e-fc985d824820",
        "cursor": {
          "ref": "bc04ec55-ab8d-40e9-a80a-cf43e06572c2",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "59c9db3f-f471-4c50-b4d7-db946f9ea961"
        },
        "item": {
          "id": "51f78c2c-6114-45bf-be3e-fc985d824820",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c7f0e568-d453-4b5e-8737-c27840180ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9b3681-f24f-48a3-827d-44813999a2be",
        "cursor": {
          "ref": "811128b1-8f25-4460-8bba-a2af82c9a399",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "11acf136-ab05-427c-84a8-4348572441be"
        },
        "item": {
          "id": "4c9b3681-f24f-48a3-827d-44813999a2be",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "cbce88bf-5c18-4296-b43d-d04341ddfb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b5ff51-80ad-4874-831d-5cca640a4702",
        "cursor": {
          "ref": "f4a94ffc-5943-49c8-99b3-fee88e9ac2b9",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "aca44dc9-bee6-4cc3-a070-7ca7f4dae32b"
        },
        "item": {
          "id": "54b5ff51-80ad-4874-831d-5cca640a4702",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "57802fba-25e0-498f-9189-94a9e5ba7e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baea1c5d-adaa-428c-a361-87d934661768",
        "cursor": {
          "ref": "d2274281-a36c-40be-a011-34d337bcf197",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a0b50733-115e-4381-a5ad-98d7f8d7af35"
        },
        "item": {
          "id": "baea1c5d-adaa-428c-a361-87d934661768",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "033b391d-a07e-420b-8b01-298e955404a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56e6557-731f-4668-8cfe-1440a44b151e",
        "cursor": {
          "ref": "148380fd-eef7-4bc4-bb70-7885332d53b2",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e2ddd4b5-64d0-435a-ae83-fe0a1fbf0b8e"
        },
        "item": {
          "id": "d56e6557-731f-4668-8cfe-1440a44b151e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a0b417af-8259-4859-92b9-17b261cd3005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344a1e7c-9dc3-4aa6-82f8-249e99365667",
        "cursor": {
          "ref": "107dc957-d9d0-4755-bfdb-9ada23f74801",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3db9c2e1-e037-44ea-843b-5ec61593b92c"
        },
        "item": {
          "id": "344a1e7c-9dc3-4aa6-82f8-249e99365667",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1a5334a3-2421-4460-af1f-692fab209e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40e7a32-1e92-43f8-b3da-3ad3dcf241ee",
        "cursor": {
          "ref": "4b2e3f1f-fb0d-4337-87f3-4d9e3007bba3",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1eafd37b-2a1b-4011-97ce-4c22d8b74ee4"
        },
        "item": {
          "id": "e40e7a32-1e92-43f8-b3da-3ad3dcf241ee",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d5bec1ac-6f5d-456f-9b28-9d972f5ef164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa67131-d7f7-4dc1-870f-528f56d30525",
        "cursor": {
          "ref": "593e1ecd-3f9d-482d-899b-41a3c277b5e1",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d72258eb-bc6f-4a40-902f-ad78c40404da"
        },
        "item": {
          "id": "faa67131-d7f7-4dc1-870f-528f56d30525",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "82fa9e85-2212-46b3-b58d-f1b78317d79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52340e8a-ddac-4458-bc25-a67e76a5d10c",
        "cursor": {
          "ref": "11887510-64c7-44e6-985d-6cd3fcbc38d5",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0e61ff42-6473-41db-a204-df12d91da3d1"
        },
        "item": {
          "id": "52340e8a-ddac-4458-bc25-a67e76a5d10c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a4039a50-085b-4079-ab68-c83cbedde582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a55ac5-5628-4776-af91-3539f581a5aa",
        "cursor": {
          "ref": "c24d6dd0-2c33-4f7e-9572-6d9ab1a852f0",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "142220e8-3b27-4f6b-bd3b-ee36933960e5"
        },
        "item": {
          "id": "c3a55ac5-5628-4776-af91-3539f581a5aa",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c0c305b8-be38-4fe8-a6bc-dee145ee36a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb45a7f8-905e-48ff-92ae-5b12636644f4",
        "cursor": {
          "ref": "b183ee94-f69e-48fc-9474-25b758384cbc",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b2ccc849-5f8e-4b7f-9211-9baf77cbac72"
        },
        "item": {
          "id": "fb45a7f8-905e-48ff-92ae-5b12636644f4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7bbd660f-33b6-404b-bb48-94f70ff014a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eef9a2d-a497-4573-b8ab-f16be92c5914",
        "cursor": {
          "ref": "f39bc0ff-fda6-4e8e-857a-f5cc8d6d9295",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "01f14a72-462b-456e-a9ac-ee5e1f691338"
        },
        "item": {
          "id": "7eef9a2d-a497-4573-b8ab-f16be92c5914",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "41d50940-4163-4f0a-9956-e7a445d1ee9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f42eadd-9e5b-44c1-8a80-02d8fc28a297",
        "cursor": {
          "ref": "d323fa7e-1329-481d-8c57-0ffbf29748de",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ca820b0b-516c-41ac-aebb-2fa8ba749778"
        },
        "item": {
          "id": "0f42eadd-9e5b-44c1-8a80-02d8fc28a297",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c9decda0-8967-40db-a2f9-c9c68cd27c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fa23b1-1bc5-4bf4-a224-fe0d8eeaed9b",
        "cursor": {
          "ref": "38a564fe-027b-4410-8516-1a2c2bc58634",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8f33c771-0525-48f8-aab0-f4e9e8c8a3b4"
        },
        "item": {
          "id": "29fa23b1-1bc5-4bf4-a224-fe0d8eeaed9b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "31f98b07-6488-444b-a9e8-9d19aaaafb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f8f579-73e2-492b-8323-187427e31cad",
        "cursor": {
          "ref": "c5c383b1-076b-4965-8c3d-d9ac3e4f9116",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d45c3a26-377b-41bf-8fcd-006d07459edc"
        },
        "item": {
          "id": "c0f8f579-73e2-492b-8323-187427e31cad",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1cedb49c-34c9-475e-b102-c78e7aee5f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ba9032-683d-4334-bec6-c4b135173fa1",
        "cursor": {
          "ref": "b6da1678-f543-450e-bc80-3dc6714e59ea",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "672bebff-7a23-4fe8-bfa5-32d3cdd39ab9"
        },
        "item": {
          "id": "55ba9032-683d-4334-bec6-c4b135173fa1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "06c41a9c-fdf5-4c32-80f0-f30ac09cdfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4205839c-99fd-4f09-93b4-5f145a8c172d",
        "cursor": {
          "ref": "02bca47a-ed1a-4dcb-afed-317577237521",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5a90f5fb-8bfd-4298-80d8-8a0dd937beee"
        },
        "item": {
          "id": "4205839c-99fd-4f09-93b4-5f145a8c172d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1af52335-7ad6-4715-82b2-6c630f26bc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4104b781-79ae-440f-878f-ae51a633453d",
        "cursor": {
          "ref": "a7953011-382b-4c7f-baba-2498407e43bc",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "db957d10-a078-4c41-bcc7-77275b7ff5a8"
        },
        "item": {
          "id": "4104b781-79ae-440f-878f-ae51a633453d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2034c67f-2cdf-4525-9744-df95a1e8fb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4ef56c-4d30-4f74-8357-d262ef62eccb",
        "cursor": {
          "ref": "fb912dc2-64de-40b6-994d-fcb384de88a7",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cdc81711-bb9d-49ad-a843-27b4f1065abe"
        },
        "item": {
          "id": "6b4ef56c-4d30-4f74-8357-d262ef62eccb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "32c6a295-5d51-49c3-a0d2-af054682ab79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81fb4bb-2add-4496-8228-8d0b9ff1a57c",
        "cursor": {
          "ref": "9bb7d152-9ba2-4b31-90e9-2d3d57ab4702",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f5423480-d4d2-4e41-a545-23d73c61f230"
        },
        "item": {
          "id": "a81fb4bb-2add-4496-8228-8d0b9ff1a57c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d61f4250-bfa0-4ab7-8a43-61ba588436ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ab7428-1497-4a6a-8047-e3a01c76f7fd",
        "cursor": {
          "ref": "7dd1912d-f4f5-42f2-91a2-c32eb1e1a54c",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "136b0e57-405d-4954-a7e2-d8a9b0e0b732"
        },
        "item": {
          "id": "01ab7428-1497-4a6a-8047-e3a01c76f7fd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "480d3ced-f5bf-4602-bdf9-9781ccec843a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75555af-80a5-45b8-ba8f-41490844b6c1",
        "cursor": {
          "ref": "ac3035ee-c74f-4f42-875b-01a26d94ab27",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8bdb0c3f-bc73-46a8-a686-5b3d38903468"
        },
        "item": {
          "id": "b75555af-80a5-45b8-ba8f-41490844b6c1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9de8c0f4-60be-489d-a7cf-a1eaa77e15ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "916082d6-f86f-4781-ab94-028055fc596a",
        "cursor": {
          "ref": "d67873ab-5d75-4dca-85e6-d7173a9e4745",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "22827d2c-b76c-4c59-95bb-975b0e4a5c7c"
        },
        "item": {
          "id": "916082d6-f86f-4781-ab94-028055fc596a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "13813168-08f8-4684-b3dd-6fbf68b035a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "5cd528f6-d139-49ec-aa88-f3f76a8b4d8f",
        "cursor": {
          "ref": "208dd81d-9d39-40b4-a4ac-9c5e46e67e51",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8f343549-a3da-4e37-977e-697e16b908da"
        },
        "item": {
          "id": "5cd528f6-d139-49ec-aa88-f3f76a8b4d8f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7efc678d-7ae7-4eaf-8ffe-e6c145a1d5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c172a0ee-332e-436f-a4b3-25f42e364575",
        "cursor": {
          "ref": "b760e734-04cc-4444-b21a-8c7460bc1886",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "32aae1a0-d200-4037-84ba-b3df4bbef63e"
        },
        "item": {
          "id": "c172a0ee-332e-436f-a4b3-25f42e364575",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bade50a3-3145-4f3b-8314-31290c4bc043",
          "status": "Created",
          "code": 201,
          "responseTime": 4344,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0924461f-2fb5-4b48-aecf-88301a3b6da5",
        "cursor": {
          "ref": "6f988c3a-fd7c-491b-be65-36aba220c518",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4f582b88-8080-426f-97a5-2ebd9d4064e6"
        },
        "item": {
          "id": "0924461f-2fb5-4b48-aecf-88301a3b6da5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6273e2a6-e251-4175-9955-ea8b5393f1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "8b9082dd-3561-43e2-a3bc-e2e69fefff8c",
        "cursor": {
          "ref": "ca4460fb-d5b5-48f8-86e4-c57d3e8bfc4d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ce4753ee-3bf6-4dc3-8d9a-fea215c674a1"
        },
        "item": {
          "id": "8b9082dd-3561-43e2-a3bc-e2e69fefff8c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e6a159b5-c8da-427a-8608-6b1178e98a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "29afd47a-1dbd-4f37-ab18-56c3a684b41d",
        "cursor": {
          "ref": "fc3f897b-be07-448e-940b-6b0e9bb4b1fb",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "36cf7de2-550c-4b7b-a887-d07162ef54f8"
        },
        "item": {
          "id": "29afd47a-1dbd-4f37-ab18-56c3a684b41d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "865e186f-5182-493b-a8ca-747620a2cee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23eec2c7-da4b-42a3-8593-f0c659ccc744",
        "cursor": {
          "ref": "70e8a894-016f-4625-8f0f-f90a020fc9fa",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "02697040-7c68-457b-a6d9-44ee48282664"
        },
        "item": {
          "id": "23eec2c7-da4b-42a3-8593-f0c659ccc744",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6588fd90-e43e-4033-a805-240656b70c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51cd7e4-933d-453c-bbcf-046f9986db67",
        "cursor": {
          "ref": "6c7e6844-2288-41fc-b1dc-a4df967b8e03",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e5af5afb-7156-4e1f-89f5-0775607417db"
        },
        "item": {
          "id": "b51cd7e4-933d-453c-bbcf-046f9986db67",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d75c090f-ec6d-49a1-a073-1f619ce5dc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c5b56e-ff61-44e6-9f7f-d3d9b6c2ba45",
        "cursor": {
          "ref": "3a7b4a75-25e3-4eb0-a2ec-b8e6fac6c2d9",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9e771418-5c88-4784-9913-86379696e2f1"
        },
        "item": {
          "id": "73c5b56e-ff61-44e6-9f7f-d3d9b6c2ba45",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f032da59-3567-473f-95e0-4d5cbd72342c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24178173-9c8f-4499-b67f-f56b0b8d8619",
        "cursor": {
          "ref": "10351719-17fe-418a-a272-651f53b277a3",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "84d94b37-9fd4-442f-a68f-af9cd0e74791"
        },
        "item": {
          "id": "24178173-9c8f-4499-b67f-f56b0b8d8619",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8276d990-69df-472f-98f8-5916eed46931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af069c35-6157-4b06-bb2c-e0d4ba8b5dbb",
        "cursor": {
          "ref": "a872664f-0399-4f14-8b45-cd606ae09ab1",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1a6babd2-2f66-4748-a462-7ff2c794e6d6"
        },
        "item": {
          "id": "af069c35-6157-4b06-bb2c-e0d4ba8b5dbb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f7e10d7c-e7c1-44f3-bc48-4d8397ac0008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff6f349-905b-4cd3-805a-44cb23a0543f",
        "cursor": {
          "ref": "fa399fe6-ce2f-4559-a384-33a415c36836",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "514525f4-e1b6-4cb6-9746-e7017d59931c"
        },
        "item": {
          "id": "2ff6f349-905b-4cd3-805a-44cb23a0543f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dfc62a40-a3f0-48ae-af31-6dd91332a527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7e05be-0c9f-4fd1-b01f-6afb1d3c51cb",
        "cursor": {
          "ref": "79e87a90-8d68-4651-a88a-7cfbcd4a4ba4",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "08aeb71d-7780-4f47-8b4a-1303c1f72608"
        },
        "item": {
          "id": "ca7e05be-0c9f-4fd1-b01f-6afb1d3c51cb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4457d409-1e75-4386-a69a-0c0eda1aa944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73641218-3903-417e-9ab4-f3d69af72988",
        "cursor": {
          "ref": "6350a662-656f-429a-9794-ffb322e2827b",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cddb30f3-7343-42f6-abaf-ac979b5a5ca0"
        },
        "item": {
          "id": "73641218-3903-417e-9ab4-f3d69af72988",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2246d8b2-3ec6-479b-bbf6-d2ce76fe675c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c78acb-e45e-484e-a326-6bb7727f5537",
        "cursor": {
          "ref": "20ab670d-33d9-4910-a626-9d0c72309222",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9db19004-e80c-4305-a49c-aec9300b7c87"
        },
        "item": {
          "id": "a1c78acb-e45e-484e-a326-6bb7727f5537",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dd2ef7dd-cde6-4e82-ae77-e7c2151c7e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4184090-6c4f-4384-9ffa-e7d4b777b6d6",
        "cursor": {
          "ref": "28310756-c68f-4e76-ad5a-1ae65b8bda07",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d7649863-b95f-4a49-aa78-479e2aed5d86"
        },
        "item": {
          "id": "d4184090-6c4f-4384-9ffa-e7d4b777b6d6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "52c21c1e-b092-450d-a439-7ad0aa894db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9153fc2-99ef-4ece-b9e2-8a370c3279f8",
        "cursor": {
          "ref": "8503364a-b289-4abd-9149-30dd073f922c",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ce6180a7-e4c3-42c6-90bd-06cd66287636"
        },
        "item": {
          "id": "d9153fc2-99ef-4ece-b9e2-8a370c3279f8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bcf42c71-88bc-45ab-8dce-e504bca7c28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36bfeab-ba87-49d8-b250-c3f90ac9e481",
        "cursor": {
          "ref": "3c06d955-8b73-4b2d-b139-08f95aa74999",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f8f0532f-a209-4bf4-b455-d82968ddd1a1"
        },
        "item": {
          "id": "f36bfeab-ba87-49d8-b250-c3f90ac9e481",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7e7a13e2-fac2-4761-98bb-7b561e9c1163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81ea03b-cbef-45c8-9ef2-fed7965489a2",
        "cursor": {
          "ref": "8034937a-e6b3-407a-9e78-fe949c89fd3d",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "eb28f3ec-26b2-487c-bf81-b99ea2d855d4"
        },
        "item": {
          "id": "d81ea03b-cbef-45c8-9ef2-fed7965489a2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "73c364e7-8763-427d-960f-e587d604424a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56d1962-3943-4dbc-aa5c-e24d18b8de7b",
        "cursor": {
          "ref": "64445674-7c16-4d73-b05a-72eec99e9e4b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9697d053-c599-4277-b4a5-9cb7dcd28098"
        },
        "item": {
          "id": "a56d1962-3943-4dbc-aa5c-e24d18b8de7b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2f31131a-ed88-43c1-9b5f-4cfb5e463c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08fbcd7-da4d-4428-9b36-414433fabeca",
        "cursor": {
          "ref": "3f1dcedf-d56b-49fc-8910-b98eb538ed36",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "52436027-9dfa-4765-9da0-f0334bc96e84"
        },
        "item": {
          "id": "b08fbcd7-da4d-4428-9b36-414433fabeca",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f0d16a33-65ce-497f-9f35-476c6ddfc4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6748e8-9010-4ebe-959e-385e048f9fa1",
        "cursor": {
          "ref": "d2947383-527b-48fb-a102-33560a596c0f",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "868056a0-4052-4b51-bf70-85364474faa2"
        },
        "item": {
          "id": "6b6748e8-9010-4ebe-959e-385e048f9fa1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e8ea7470-2e6b-4608-bd4e-62cf2e55926e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40790366-89d8-4300-bcff-90149082820f",
        "cursor": {
          "ref": "646390e3-eb56-443d-a192-cc5f93e8b9ab",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1a73b296-0917-4a2e-a019-4d07f53bca03"
        },
        "item": {
          "id": "40790366-89d8-4300-bcff-90149082820f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5ca97d9e-645d-4ee2-be40-6b8ca0142030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d8215f-190d-4576-9a5b-8ecd98ec5252",
        "cursor": {
          "ref": "eadad453-3039-48b8-b46a-ffece233b4a3",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8a117f7b-7069-475d-8cef-7fe4cfb25b48"
        },
        "item": {
          "id": "f8d8215f-190d-4576-9a5b-8ecd98ec5252",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c0e2bd24-e6e4-4202-90fd-6faa75562a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62ffc83-a965-4eca-b71c-9cd2646bbd31",
        "cursor": {
          "ref": "40487219-bb56-439e-8315-d12730256815",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "93669ebe-ecff-4771-8169-f62825cfa843"
        },
        "item": {
          "id": "f62ffc83-a965-4eca-b71c-9cd2646bbd31",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b3f1c012-e4bf-4192-80ff-19d1ebf9d1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b4bb04-6694-4278-b11b-1a3757087e07",
        "cursor": {
          "ref": "1cee21be-8efa-4181-98f0-b51da21e1ea3",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "565a1379-a1c9-4829-89aa-32c49ace5fa2"
        },
        "item": {
          "id": "39b4bb04-6694-4278-b11b-1a3757087e07",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f7f8f1ae-a842-4be5-b9c3-28f5b32c1fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523560cf-9b38-488a-8150-b512f97af93b",
        "cursor": {
          "ref": "71d38425-4f17-45ee-ae23-eb006f3a029b",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f83a0000-2cdb-40d5-b5a2-bf482a1481e7"
        },
        "item": {
          "id": "523560cf-9b38-488a-8150-b512f97af93b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8db9bff9-8ce8-47bb-b8e8-a3232bd47ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ca3737-134d-4d52-9c33-5e1c4bfc557b",
        "cursor": {
          "ref": "712ad5fc-1125-4b65-85b9-97dbf19a5af3",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "91bc5ecf-ecb9-4a47-8a60-8288ad9fabb1"
        },
        "item": {
          "id": "c7ca3737-134d-4d52-9c33-5e1c4bfc557b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "983da7b7-d56a-41a7-8256-af64e513f3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc40854-bead-4a91-aff2-df900e66c597",
        "cursor": {
          "ref": "839b402c-658e-40b4-ba93-cbcdfefe5b7a",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1f8c170d-1225-47f5-b2a5-a32c6401ff23"
        },
        "item": {
          "id": "1cc40854-bead-4a91-aff2-df900e66c597",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5e5de159-f738-428d-92e3-e8cb75fe2129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdee2f2-2ce9-4248-899a-eddc51364d9d",
        "cursor": {
          "ref": "efae1765-17a2-400c-89dd-6720eeb9537c",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ac4c749a-7120-4ac5-b033-1f7dde70d594"
        },
        "item": {
          "id": "7fdee2f2-2ce9-4248-899a-eddc51364d9d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b493bfa3-aa3b-4b33-92cc-82ed45c8e300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438d8bd1-0ea6-49cc-82de-bd97ccb93a4e",
        "cursor": {
          "ref": "9f7cfd41-76a8-457f-bd9a-69c2da1d04df",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "678b41bb-2193-4d58-88a0-6e58279483c4"
        },
        "item": {
          "id": "438d8bd1-0ea6-49cc-82de-bd97ccb93a4e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f166ec5b-7deb-4f46-af41-8f3d28273716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8e8587-27e5-4f6f-a06e-65b47aad7c96",
        "cursor": {
          "ref": "3ecb96e2-39ed-48ee-88cf-55cc588527da",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "23147d22-516c-4bfd-815f-0d7e275624f4"
        },
        "item": {
          "id": "9e8e8587-27e5-4f6f-a06e-65b47aad7c96",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0de63aef-ce62-45a3-bf7f-6da0dae9eeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922309fc-9b24-4b5b-a438-5d6e940e51a5",
        "cursor": {
          "ref": "8a37f8d3-9406-4482-8583-1c2a722c07ee",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4dd22396-10ed-4d0c-b1db-657ad19c14d1"
        },
        "item": {
          "id": "922309fc-9b24-4b5b-a438-5d6e940e51a5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "08b3a1a3-8799-4677-b854-d84c0eb14131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7af7b6a-c219-4fe2-a302-a02c15d2e5b5",
        "cursor": {
          "ref": "b9ee0aa2-cc5c-4557-a73c-0677cb663376",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5de88622-47c7-45ce-9152-852afef10d12"
        },
        "item": {
          "id": "f7af7b6a-c219-4fe2-a302-a02c15d2e5b5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "debbcc53-54f5-470b-b79b-560ad6c87630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc22cafd-ede7-4c78-b412-9e3a0d829aa4",
        "cursor": {
          "ref": "c3589eb4-4185-449e-8876-e2f96886e472",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6c13a7bb-a337-474e-8f0b-be0aee351582"
        },
        "item": {
          "id": "bc22cafd-ede7-4c78-b412-9e3a0d829aa4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e64bece5-b523-4252-a0c2-d3cb7bec3561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4f7603-f514-4435-80ab-1d180e2681fa",
        "cursor": {
          "ref": "cc25e173-3632-45fb-aee8-445800c61dde",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e6fea3ff-2754-48f2-b851-18909af5247b"
        },
        "item": {
          "id": "0b4f7603-f514-4435-80ab-1d180e2681fa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "54b541de-f39e-4159-b84f-66826e60484c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411ee356-f191-47ab-bd69-8a56d25d075a",
        "cursor": {
          "ref": "4c8798a1-4a90-4da1-98e7-cf19fc532580",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e7a2aba1-9f53-4c26-9506-f45352d76af8"
        },
        "item": {
          "id": "411ee356-f191-47ab-bd69-8a56d25d075a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e678cd3d-c118-4bca-bb19-5741df236184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bf4672-3281-4d64-8d24-61f701efb0e0",
        "cursor": {
          "ref": "592067f4-e1ff-43cf-98c6-28e4e9f546a6",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c6d543d7-9429-41a2-af2b-656f861557a2"
        },
        "item": {
          "id": "e2bf4672-3281-4d64-8d24-61f701efb0e0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "148b0bcc-e016-44ba-88c7-2bce9ac6852a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cd5330-5f32-4c39-8b17-6895d7a27a0d",
        "cursor": {
          "ref": "4fac1285-92be-44aa-8abb-d907c78847aa",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3eb36ed7-85f2-4603-b197-afc990e92a1d"
        },
        "item": {
          "id": "a8cd5330-5f32-4c39-8b17-6895d7a27a0d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5f1df9b7-e2b3-4f1a-ba1f-1128ac6b187c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef29923-ca4c-4a17-a403-e5a6b8457052",
        "cursor": {
          "ref": "6574d162-5a8a-4764-b380-cb608686651e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "51c81d2f-0111-4985-9099-bd9d28579869"
        },
        "item": {
          "id": "9ef29923-ca4c-4a17-a403-e5a6b8457052",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ee562727-e711-4ea6-859b-44d518183a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6687224-fad0-4ed9-a5df-a1cf56ea4901",
        "cursor": {
          "ref": "a35059fc-16a8-449b-926d-4586672084ee",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "94ff2b4f-f5c3-4d2b-99df-a1f47d61fb84"
        },
        "item": {
          "id": "f6687224-fad0-4ed9-a5df-a1cf56ea4901",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "294aac9d-ea33-4b89-8c22-350dfeae0b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527c81c1-fb78-4f81-8608-e662c9dcdc47",
        "cursor": {
          "ref": "f7326202-4110-455d-81a8-611158098734",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "23df599f-3721-4209-9f13-c86843226576"
        },
        "item": {
          "id": "527c81c1-fb78-4f81-8608-e662c9dcdc47",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d0c5434b-e59b-44ee-af90-14b87de72061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a872e7b9-f796-497b-a5e0-a68d2d15b421",
        "cursor": {
          "ref": "d5e52beb-5870-42b4-9cf0-e0b81b5a51f1",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5203fdfb-8163-431e-9773-f688a870e3b2"
        },
        "item": {
          "id": "a872e7b9-f796-497b-a5e0-a68d2d15b421",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "66640df1-004d-4c7b-892f-0e0c1ee94b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c072aa-7855-4d11-bd80-c9a0eed5a89c",
        "cursor": {
          "ref": "19c44c50-d3c8-4e00-8943-9f50ece6ac09",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "33dec1dd-a347-4c9f-a4f1-6edc8b108d7a"
        },
        "item": {
          "id": "87c072aa-7855-4d11-bd80-c9a0eed5a89c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "edd2f613-6f00-4fcd-bdf3-ee9811dfe4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf449cb-95f6-4a7f-8410-ff1dfae16b7e",
        "cursor": {
          "ref": "f747ea56-eef4-4fac-bb05-feda9e2662c8",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9895e962-56c9-4367-bf20-d1fb139334fd"
        },
        "item": {
          "id": "bbf449cb-95f6-4a7f-8410-ff1dfae16b7e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f0e678e1-5a12-4b2b-853e-16219e910cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a2cfe5-d450-48a8-bd85-a4e84ee55fd0",
        "cursor": {
          "ref": "fadd187d-2793-4d94-9ab6-0c059658ef8c",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d20ce23e-8a70-4d5d-ae89-90d7f7dbce7f"
        },
        "item": {
          "id": "f1a2cfe5-d450-48a8-bd85-a4e84ee55fd0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6761d17c-a8c7-4bf7-b994-f3240cddb1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f803f76a-e416-4a5b-bf77-ba6c7f6b843f",
        "cursor": {
          "ref": "9b04b198-1201-4379-ac67-f6792f5ecdab",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "63fa9325-e002-40ae-ac57-cb9687920196"
        },
        "item": {
          "id": "f803f76a-e416-4a5b-bf77-ba6c7f6b843f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "30fedddf-341f-4142-bbbb-84392b3d7c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773fe81a-6bbc-4d04-bb89-d128f4885cb3",
        "cursor": {
          "ref": "8230d75a-c28e-42cb-a948-ca4e567d2964",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "18b8eef9-38ba-4226-83ea-1ecba12a7211"
        },
        "item": {
          "id": "773fe81a-6bbc-4d04-bb89-d128f4885cb3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "038e0e82-4507-4c24-928d-d90e2d0d67f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d71257b-9bf8-4939-bbc5-29137985728f",
        "cursor": {
          "ref": "06eab6e7-9d4b-403c-b3d8-bbc46fb8e6b6",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8d79c8d7-f629-4866-92c5-c141ff823daf"
        },
        "item": {
          "id": "2d71257b-9bf8-4939-bbc5-29137985728f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b3495a48-cc2f-4c4c-a5f4-742e38c63ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7e4fa4-dad6-41df-9566-8165f72057ba",
        "cursor": {
          "ref": "ad09c924-dcf7-46bd-aac0-cfa84dea1a1a",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "eb8a7595-9023-4867-b846-7a90ed0d9072"
        },
        "item": {
          "id": "fa7e4fa4-dad6-41df-9566-8165f72057ba",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7bd4672c-0cf1-4729-ac07-e16b52080b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2304e92c-35a3-4d70-b785-ea1c5e916aca",
        "cursor": {
          "ref": "ffff1850-0232-4c3d-8e2f-e65fb45f65ab",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "81d31b3d-b239-417e-ad9d-0fd60a6a770f"
        },
        "item": {
          "id": "2304e92c-35a3-4d70-b785-ea1c5e916aca",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c3caf0d4-029f-4c51-99e6-9691e488e32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fd7c4e-4672-47b2-ad71-e92be71aa3fb",
        "cursor": {
          "ref": "9ec73451-f99e-49f8-b17e-d11ca5302515",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "24b4d19f-4747-4f0c-acfd-480b741fb5a8"
        },
        "item": {
          "id": "94fd7c4e-4672-47b2-ad71-e92be71aa3fb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "628f867d-7ada-4fe1-8032-e3ee17a8a279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c3e301-e530-47eb-abab-f59582908058",
        "cursor": {
          "ref": "bf388d85-8e73-4bb9-8c81-1c75fba649e1",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8b254ef2-60ce-4e80-84a6-c7fb4f316b73"
        },
        "item": {
          "id": "30c3e301-e530-47eb-abab-f59582908058",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f93e67df-c39c-4007-8196-4e616ba9cb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e7a44a-4892-42c5-b279-80301fcbb29a",
        "cursor": {
          "ref": "70d95876-b525-4294-b31c-a543ccb4a3d7",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e2918f7a-f8bf-4d36-85c0-160c5cdc9efd"
        },
        "item": {
          "id": "f8e7a44a-4892-42c5-b279-80301fcbb29a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7b74b7f6-0d8f-458e-9385-9fe62e590b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbb3289-9a52-4fc6-96b3-b953e0745c18",
        "cursor": {
          "ref": "ca63b603-0ccc-4f17-9352-3d7ad3ca2ef1",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e2570c79-fb6a-468b-a133-efb854616b48"
        },
        "item": {
          "id": "6fbb3289-9a52-4fc6-96b3-b953e0745c18",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2e0c0a60-406f-43c0-bd5e-daa45f3b33a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00011546-e759-488e-b4c0-2884e03371ff",
        "cursor": {
          "ref": "7cc426a2-5d01-4814-8b68-63f3703c9c18",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1803e2ab-6219-4b08-ba16-650e45f7e58f"
        },
        "item": {
          "id": "00011546-e759-488e-b4c0-2884e03371ff",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3242e8ad-37bf-4a03-bf0c-88089ce28633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0a2547-db11-4cb0-b5d7-85237702e680",
        "cursor": {
          "ref": "4f08e555-6763-48e2-924e-aa01577c2d95",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5d721eca-a597-4228-a7dd-81d42351dfd3"
        },
        "item": {
          "id": "0a0a2547-db11-4cb0-b5d7-85237702e680",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a8853d08-16b3-4278-bc3b-2559869b2101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653f3387-9479-476d-b311-776e636fd5e7",
        "cursor": {
          "ref": "c0800d1f-0a12-4c88-865f-dbb51e8b36b7",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "180b1aec-319c-42a1-9705-0085f135ddd6"
        },
        "item": {
          "id": "653f3387-9479-476d-b311-776e636fd5e7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a49452b6-2e55-4778-a26b-f24f101562ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc3d412-9a5d-4f4a-a080-d4e4da900214",
        "cursor": {
          "ref": "f7686b44-c891-4923-b6e0-0d5af81388ff",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "116c7d8e-adc3-4e60-9abd-b5090ca5277a"
        },
        "item": {
          "id": "0fc3d412-9a5d-4f4a-a080-d4e4da900214",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "431932b4-1d1a-4c94-9796-b1364c2a2d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322e22c3-6a92-4805-9f15-bb3817db3512",
        "cursor": {
          "ref": "225ece94-0abd-4349-9e3a-750311130a3b",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "db313c19-4443-4f2c-a7c8-885fcb91fb26"
        },
        "item": {
          "id": "322e22c3-6a92-4805-9f15-bb3817db3512",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "533f673a-7204-484a-af0e-7232eb0297cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54764023-b676-4da8-86af-8cec61b6af62",
        "cursor": {
          "ref": "11d983a1-3ef5-400e-a9ba-d08324b0a0ad",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "739d8c2c-c4fd-4994-86e5-5971b06e8ea0"
        },
        "item": {
          "id": "54764023-b676-4da8-86af-8cec61b6af62",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e898f0eb-304c-4521-b880-5061252bd553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e824846-b30b-48f5-b562-8c0a96f210d1",
        "cursor": {
          "ref": "a2c14453-fadf-46d8-9a3c-667e66be50f3",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5d1946bd-550d-46e8-acdc-d43b184183f6"
        },
        "item": {
          "id": "3e824846-b30b-48f5-b562-8c0a96f210d1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "591bb351-eca3-477d-8454-d74f1841f474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480bbd9c-eb14-49f0-aea6-1b70e91177df",
        "cursor": {
          "ref": "d372202c-8e20-44e4-bb89-7203abf500e5",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "08491431-7b3f-4def-9e6b-83f1fed3b2b7"
        },
        "item": {
          "id": "480bbd9c-eb14-49f0-aea6-1b70e91177df",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b70b773e-fbbc-499f-ba4f-ec1133ef9b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad7ec1f-3d23-41d1-b78b-8c91824386fd",
        "cursor": {
          "ref": "d4b9947a-0059-40fa-8f97-4db143302969",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6e2ab0ed-fcdb-405e-b6c9-2f51703372e9"
        },
        "item": {
          "id": "7ad7ec1f-3d23-41d1-b78b-8c91824386fd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bead7883-b616-4de7-a27b-096e6f64a1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee4f966-c099-40d9-9c12-07bc3c7e9296",
        "cursor": {
          "ref": "a28ba67e-3e7d-4a72-bb8b-f220a410f44a",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "258f74dc-5ee0-4e52-881c-d0779ebfda21"
        },
        "item": {
          "id": "4ee4f966-c099-40d9-9c12-07bc3c7e9296",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6d130607-36e5-4d14-821f-0c6a4de6caaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d387bb-fedc-4b7f-b02e-c707843bdd6b",
        "cursor": {
          "ref": "d94ddc87-8771-4ed7-af38-fc34c695103a",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7ac62d2d-eacf-4426-b0c6-1b002babf661"
        },
        "item": {
          "id": "66d387bb-fedc-4b7f-b02e-c707843bdd6b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "39746e1e-360b-4d37-b468-42348002b534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdf1929-c3cb-4dfa-9404-37617678a673",
        "cursor": {
          "ref": "4935f036-945d-4961-8a0d-4aed686d7bd5",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "94340108-2bce-40ee-a8c0-fec0d6f1f596"
        },
        "item": {
          "id": "1cdf1929-c3cb-4dfa-9404-37617678a673",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8fe622c5-6bf6-47f3-8ac7-75846a002c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401e09e5-4774-4b30-b4c8-61cfb60ff72b",
        "cursor": {
          "ref": "f5fa085a-05c9-4528-ae21-43beb1ee7a96",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "df9bec9b-6c8e-4296-b2f0-76afc2ffbb14"
        },
        "item": {
          "id": "401e09e5-4774-4b30-b4c8-61cfb60ff72b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "35c6f9a4-47bb-4e9e-8769-adc5a508a4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ae6dc6-2fd8-47b2-9b46-e8f6d691966e",
        "cursor": {
          "ref": "4216bfea-b7cf-417a-b6b0-e7e4630af3b5",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "822dc1c3-f986-42be-8f39-7d34b548de33"
        },
        "item": {
          "id": "b7ae6dc6-2fd8-47b2-9b46-e8f6d691966e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7593ec0a-4b35-4e08-a1ac-2aae929ce368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad503824-453f-4c0f-be07-4fd289ea4af5",
        "cursor": {
          "ref": "19203284-e1cb-4fd6-8534-44d6d3b6b12f",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "baef37bc-54e1-45e3-86ad-5bfb6e566687"
        },
        "item": {
          "id": "ad503824-453f-4c0f-be07-4fd289ea4af5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fbdae63f-ac5e-4c27-bb78-cc4709d6d9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7993ff2d-0741-4c60-9d25-daf1bfb721a5",
        "cursor": {
          "ref": "df8a0f46-9b15-4735-84b1-b764c3b7e6b4",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "edb76968-abb5-421d-8c60-a67f69433da7"
        },
        "item": {
          "id": "7993ff2d-0741-4c60-9d25-daf1bfb721a5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "02091a69-d82f-4968-8c32-d6c3908b82e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e1f76b-0aad-4e5d-a6b4-3cd226e673e6",
        "cursor": {
          "ref": "e64d996f-a8b8-4480-89a6-7cc79234c7b9",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6268a00b-ae14-461d-9e4f-f49ef0282876"
        },
        "item": {
          "id": "73e1f76b-0aad-4e5d-a6b4-3cd226e673e6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f7d9e1db-5a24-436d-8aee-cfc6118e67f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fc8e1b-55e5-4804-9669-2e75dd309d7b",
        "cursor": {
          "ref": "418bc0cf-53ee-4dda-a6c4-293bfc60012b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "93f8804f-7990-4ed1-8452-95d8a1c26f96"
        },
        "item": {
          "id": "34fc8e1b-55e5-4804-9669-2e75dd309d7b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "20eb9a8b-1306-4908-884a-3ca797c0a23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56b05f7-bfd5-4776-8796-e2b433e37ed1",
        "cursor": {
          "ref": "e32cc595-8676-455b-bf4d-b4604ffa0f85",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f6a689d7-125a-446f-8cc7-ff4ff9903a3c"
        },
        "item": {
          "id": "a56b05f7-bfd5-4776-8796-e2b433e37ed1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "890d1f5d-dd67-4b25-826e-e940a95a37fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abb1975-b3c9-4ce2-8e3a-8c85e0ddfd18",
        "cursor": {
          "ref": "85fe3968-8ac0-452d-8464-f07d1e132828",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f26ce516-94b5-4815-a742-30ddf5ad06ae"
        },
        "item": {
          "id": "8abb1975-b3c9-4ce2-8e3a-8c85e0ddfd18",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "84de5d58-7de2-4044-83e5-951db8158b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9560a32-1e0e-4290-ba54-94320b628feb",
        "cursor": {
          "ref": "74dddb6c-0870-422f-83e9-6a5b44dfebce",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b3a9c5fb-8cfa-4ea1-9c7c-26b71fef717b"
        },
        "item": {
          "id": "d9560a32-1e0e-4290-ba54-94320b628feb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d6b2d996-5508-4dfa-b4bf-ff403fc6926b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc39323-81b9-47d9-b63f-229c3c77cc30",
        "cursor": {
          "ref": "4740d9a4-322b-47af-8cd3-78b727fd66f9",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2e3873cb-f693-4075-bbdd-0aa7405f83f2"
        },
        "item": {
          "id": "6bc39323-81b9-47d9-b63f-229c3c77cc30",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b2c58830-0af5-4c6c-8bb7-937e1c892927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d1de21-57ac-4691-a209-376331306deb",
        "cursor": {
          "ref": "3d563126-cac8-4bc9-9c3c-e6fa4c24d4d7",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f336e91e-0371-4a45-a0d0-5fbf471bd9fe"
        },
        "item": {
          "id": "94d1de21-57ac-4691-a209-376331306deb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "95dd62a0-1bfc-4be6-94d8-923854602028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395db566-020e-4ca8-b81e-95c8e595741c",
        "cursor": {
          "ref": "d4c86620-5052-46dd-8118-312e0c928d3d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "059ef014-4fa9-4496-850f-00afaf91694c"
        },
        "item": {
          "id": "395db566-020e-4ca8-b81e-95c8e595741c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b22ddb66-84e9-457a-97b0-a761b9073a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29708cc9-8e81-4c6f-b1c1-d39c3b0b337c",
        "cursor": {
          "ref": "2f77d26f-8d9d-43ce-aac9-feb87a545316",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5fd1d478-6a56-43f2-95c2-b20a32961faa"
        },
        "item": {
          "id": "29708cc9-8e81-4c6f-b1c1-d39c3b0b337c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c69ce04d-e7f4-4715-9f49-a676319bdb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6640364d-9a64-4ae8-a6cd-acc96296d50d",
        "cursor": {
          "ref": "0b6e0810-c025-4100-bd13-014db5581cc0",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2e27dee9-7133-4ffa-9096-fbcfbf9fe0e2"
        },
        "item": {
          "id": "6640364d-9a64-4ae8-a6cd-acc96296d50d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "207fc6f0-54f6-41c1-9bb0-6c9de0d70c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd54099b-43be-4511-81d8-53ae9108c875",
        "cursor": {
          "ref": "bfd60362-8824-45f0-b3dd-764548e2774e",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2d0c850c-0997-4c0b-9038-a8cc5b6942ff"
        },
        "item": {
          "id": "cd54099b-43be-4511-81d8-53ae9108c875",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1a16d140-4f5c-4402-ac85-9d5901701d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0e51ac-bed9-4e7a-8340-29ac19ecb2e6",
        "cursor": {
          "ref": "b0ed6ab7-f6f2-4a36-b978-31f3d735c781",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "97941104-a232-4de0-b5c7-16289567737d"
        },
        "item": {
          "id": "7b0e51ac-bed9-4e7a-8340-29ac19ecb2e6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bbc6fa8d-2830-47b9-bd2d-ef98d0d8fee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c970bcc0-16f1-4490-ad3f-4e88bd8e33aa",
        "cursor": {
          "ref": "6cfcb0d3-a8f6-4284-90e1-38e2e5739ad5",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "aad2e519-9ed3-4943-a938-f3019e980264"
        },
        "item": {
          "id": "c970bcc0-16f1-4490-ad3f-4e88bd8e33aa",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e1b6fc3d-8aa5-4f58-b469-f0b12b3bd4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad303687-dd15-43c7-b08d-3e7493451839",
        "cursor": {
          "ref": "78467202-e44d-42e9-8e81-f6c02a2245f5",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "63f834cd-0507-4a91-aebb-486f31a4b0d0"
        },
        "item": {
          "id": "ad303687-dd15-43c7-b08d-3e7493451839",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c8e7ef42-5762-4335-b286-dfc60be7cc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da409895-893b-4eea-a72f-116c3dee1f92",
        "cursor": {
          "ref": "3ce94c47-2f36-41b4-805e-4070328002c5",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "408c14d8-599f-4c73-a53c-b3af7f30d27e"
        },
        "item": {
          "id": "da409895-893b-4eea-a72f-116c3dee1f92",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ced01e03-2a81-46ca-8d5e-210c3340cbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb601265-1a5f-49e9-b162-4e248117695b",
        "cursor": {
          "ref": "e3fbbf93-73b8-4f0f-a687-5bdbcd6cb957",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "671cf332-bc88-4cbe-aa1a-1e31b30c6ea1"
        },
        "item": {
          "id": "bb601265-1a5f-49e9-b162-4e248117695b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "17d4c358-4f29-4d83-a96a-910164a233b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a7dbad-4312-4fe1-b74d-ce761f076bb3",
        "cursor": {
          "ref": "464627ba-1064-40cb-8a12-e6179980a67e",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dce8ebea-e20c-4693-aee3-9ae197ac2c0d"
        },
        "item": {
          "id": "00a7dbad-4312-4fe1-b74d-ce761f076bb3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d4090fd6-84c6-4d54-b197-32732f2eabe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383ac658-25d6-4a9a-a617-5503c41cde05",
        "cursor": {
          "ref": "79861ddd-6dba-47b8-a42c-0cb13ea87294",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "72ed56ae-1156-4aa6-bde0-d805b1691b7f"
        },
        "item": {
          "id": "383ac658-25d6-4a9a-a617-5503c41cde05",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "081044e2-9e79-4e38-8b3e-116cb0e80709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7986d98d-4ac1-4379-a17a-ba9ad0a0ad4f",
        "cursor": {
          "ref": "0aaeb6eb-7888-4dde-b4fc-a40409110c2a",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "147aaedd-8eff-434e-8b40-9a3bb2dab828"
        },
        "item": {
          "id": "7986d98d-4ac1-4379-a17a-ba9ad0a0ad4f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e5453274-1b2f-47ca-b1c8-41547cee9da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c514ca9-9e6e-4d6c-b534-81f3dce9b854",
        "cursor": {
          "ref": "df5b665e-472b-4a50-aab6-b0a1bfc1ecb3",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a2cec915-e9f8-49e7-8e06-80932ab3edfb"
        },
        "item": {
          "id": "6c514ca9-9e6e-4d6c-b534-81f3dce9b854",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a1167698-e8fe-4c80-ba2d-b6fc5443c885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33f8c86-5f22-4c9d-9ace-397446827262",
        "cursor": {
          "ref": "8eb1ecdb-28a5-4807-b008-84fb754c400e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cf63ae39-b7ef-46fb-b162-d7eda4ba5a2f"
        },
        "item": {
          "id": "e33f8c86-5f22-4c9d-9ace-397446827262",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e7cf163f-9b30-4875-8ca9-9f5ac7f368bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5afa137-2a12-4b17-affd-95aaa00a0b51",
        "cursor": {
          "ref": "e9021033-d7ce-4b05-9d4f-ea6b0a1dd46a",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "31add47c-efa5-41f9-a2fb-0333c0bd4fd9"
        },
        "item": {
          "id": "c5afa137-2a12-4b17-affd-95aaa00a0b51",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7ea280e7-6fe7-4c3d-a15c-080b0601bb40",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "ff2a6db2-9b2e-402a-a1cc-09f41f2c4295",
        "cursor": {
          "ref": "f58ab09e-14aa-4e66-96d2-3566b80fb103",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "61b51c99-d1a3-409f-a1d2-10e6b736b752"
        },
        "item": {
          "id": "ff2a6db2-9b2e-402a-a1cc-09f41f2c4295",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9fbd852f-d8c5-4934-b4c7-b7b62f71cb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b310d9f-8bd4-45cb-a88e-bfcebc59bde3",
        "cursor": {
          "ref": "bfd70259-6c50-4295-bdcd-651b4cfdd193",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8fe52ca1-56d0-4e26-89fb-f62cc96830cc"
        },
        "item": {
          "id": "0b310d9f-8bd4-45cb-a88e-bfcebc59bde3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2140eef3-d822-4801-bbb7-7c957663a475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567510e4-21f8-47bf-ae34-cd07cff5013f",
        "cursor": {
          "ref": "dabf1f0b-b374-40b1-8b07-12a98bc540a3",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d0689f76-0905-40f6-9961-2d5604a13452"
        },
        "item": {
          "id": "567510e4-21f8-47bf-ae34-cd07cff5013f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d80cf213-3378-439b-aab5-e41710554858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401da607-76c4-451f-99d3-51b4b52de220",
        "cursor": {
          "ref": "36cbb7a3-a31e-4d85-ad5d-a0272cbd3787",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "97cc0a4d-f813-47fa-b77d-c642c3764383"
        },
        "item": {
          "id": "401da607-76c4-451f-99d3-51b4b52de220",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ae37255b-8127-467d-b571-f271baeb40df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1445534e-27f7-48cd-b3b3-f18d2e65c72d",
        "cursor": {
          "ref": "99e77bc4-694b-4ab7-894e-224655f878ff",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e57013f5-89bb-43b6-a831-c7ce684b3717"
        },
        "item": {
          "id": "1445534e-27f7-48cd-b3b3-f18d2e65c72d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d02766c1-c760-4e06-b304-d679420b0ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0dd299-4367-4c7c-a766-a2b87cdf80af",
        "cursor": {
          "ref": "30786c82-e0f6-447c-81c2-26cd88879e17",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "afbca9ed-31fe-4474-bfe8-67f09d0ab581"
        },
        "item": {
          "id": "db0dd299-4367-4c7c-a766-a2b87cdf80af",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2ed5ed2c-6789-47eb-9d8e-7449694f507b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c81a14-e3e3-44c9-bc2f-4d794450f7a5",
        "cursor": {
          "ref": "65540863-3471-42e1-8b79-cc17aa3dfb57",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e0aa065b-0a45-483b-8cdf-8c5be98653b7"
        },
        "item": {
          "id": "00c81a14-e3e3-44c9-bc2f-4d794450f7a5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c431a13a-5ffa-488d-8051-b71534894249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40176a82-a210-467b-bd7d-6fe0a5e67cfa",
        "cursor": {
          "ref": "9cda9997-436d-4f47-8fa0-eede01d4b4d8",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "370339f0-93d3-4ffe-a1c1-520309cdbbb7"
        },
        "item": {
          "id": "40176a82-a210-467b-bd7d-6fe0a5e67cfa",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8334266d-d168-4c1c-8bbc-e2c05c0f3dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af667f3-437c-4ba2-bda6-fc407f6438e0",
        "cursor": {
          "ref": "4db9f3ff-8155-4e53-bca8-fc09b7eca16f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "553f7fd2-e0a4-4379-8967-3f23a5ec1a36"
        },
        "item": {
          "id": "1af667f3-437c-4ba2-bda6-fc407f6438e0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1b84f917-94c5-4430-ba7a-ae9ae2da4d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acf9f66-58ef-4c5d-9591-15a9c7c02fe9",
        "cursor": {
          "ref": "76cae998-2a9e-46d1-b2c2-5fdedb179723",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fe93d888-e5c3-43f9-9c54-2362c428d6dd"
        },
        "item": {
          "id": "3acf9f66-58ef-4c5d-9591-15a9c7c02fe9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "262d2072-8587-4070-bffa-a6c74fdb472d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d07933d-c70d-4317-bf52-05d37e8ef8ce",
        "cursor": {
          "ref": "f4cc38bd-e6f5-4a2c-9095-2bdfc1daff22",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8f765e1d-c708-4aa2-b09c-f6cd4721440d"
        },
        "item": {
          "id": "8d07933d-c70d-4317-bf52-05d37e8ef8ce",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "59f733c3-349a-4efe-a957-a8cd8e87699d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795384cb-8f0f-477a-849f-25a08756c885",
        "cursor": {
          "ref": "7920d0a3-c1eb-4b2a-9560-a1e566d05ca6",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "94f986f1-d794-4473-b170-eaea8885869a"
        },
        "item": {
          "id": "795384cb-8f0f-477a-849f-25a08756c885",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0f84c8f2-9001-4aea-95cc-db888632a996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33d8464-0eb0-4a94-887b-b8b8d88624ae",
        "cursor": {
          "ref": "f3e4fdfc-0020-4a89-a485-5d4d615e0ec0",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e556d32b-dc33-4859-97de-f917a04f3a83"
        },
        "item": {
          "id": "a33d8464-0eb0-4a94-887b-b8b8d88624ae",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e46e2c08-3ba6-4dd5-a544-c0aadc39bc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4b6a72-6f20-4369-ae0e-1f051421d5cd",
        "cursor": {
          "ref": "6af19201-75e8-4f2e-9a84-7450c454009c",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "51e0bbe2-1b5e-4bd6-a78c-b37dbf392802"
        },
        "item": {
          "id": "af4b6a72-6f20-4369-ae0e-1f051421d5cd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7eabff00-b280-40a0-8689-aa16c2941d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57b349a-1ffe-4719-a394-fa621655521f",
        "cursor": {
          "ref": "9606167a-12b7-477f-81fe-5ee291c009c8",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6740dbb5-943a-4b92-9189-ce391707e3e6"
        },
        "item": {
          "id": "f57b349a-1ffe-4719-a394-fa621655521f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6372f807-1f77-4ef9-b7bc-33adffd24c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b9607c-a60e-4be0-9c15-6f75046fcfd2",
        "cursor": {
          "ref": "c1b6aee0-6085-47f8-bcbf-987ae22fd141",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7618d7b9-e20a-486f-9209-6c7f173039e1"
        },
        "item": {
          "id": "03b9607c-a60e-4be0-9c15-6f75046fcfd2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d6826ac5-3627-4cb7-9b97-387be9138f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f6b6b6-a5f1-461e-ac33-3daea8f7b72c",
        "cursor": {
          "ref": "6cd45cc9-5aea-445b-8a7f-4611fe319379",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6d04baa1-cb63-4e70-832c-9257c4a46109"
        },
        "item": {
          "id": "09f6b6b6-a5f1-461e-ac33-3daea8f7b72c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1bca3316-218f-4c6a-b3ad-4fe8aa62f9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1decbb7e-ce37-498b-8508-abac11002b8f",
        "cursor": {
          "ref": "0fb89f90-efd8-4e03-a089-83b0f109a909",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "017803d8-0229-4913-b384-4bb1cd9021e5"
        },
        "item": {
          "id": "1decbb7e-ce37-498b-8508-abac11002b8f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4e56f619-7cce-4cbd-aacd-1bb035013428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6453a802-d176-4975-a7f0-9c336f301731",
        "cursor": {
          "ref": "67489505-da84-40ef-8521-6d4c8ad006b4",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "db693a2a-a8be-49aa-addf-9bdf78adab5d"
        },
        "item": {
          "id": "6453a802-d176-4975-a7f0-9c336f301731",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "10dd6e71-70fc-42e5-bc9e-6bdc7a175ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d1dee1-ce21-4ad4-b08e-bcc9d2c53d7e",
        "cursor": {
          "ref": "e2cd71db-48f8-42aa-a42b-2e2cc6495be6",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1f2ce777-800a-4ff5-9d37-73c0bf513bfa"
        },
        "item": {
          "id": "42d1dee1-ce21-4ad4-b08e-bcc9d2c53d7e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bfc4f5f0-93df-4e7b-85ac-4ad02e3c2b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03e1251-01ab-4fc8-85d8-e38754c503be",
        "cursor": {
          "ref": "24c42436-b2a4-42e8-a79e-1b4aea0e0178",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "838f5cea-c717-4bb0-a16a-897177b4f9f7"
        },
        "item": {
          "id": "d03e1251-01ab-4fc8-85d8-e38754c503be",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "aec25b82-129e-408a-b3db-55f0fc3e46d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0967731-3791-429f-a00b-a4118950715b",
        "cursor": {
          "ref": "1d2416f8-abeb-4a9e-87c7-f6ad247a13b7",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "21491b86-b92b-4d30-b5fc-6d3f338dab1e"
        },
        "item": {
          "id": "d0967731-3791-429f-a00b-a4118950715b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8eb880b8-618f-4988-9da7-25b1414bfbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d8e2f8-26f1-4ff7-b224-fbde70784cdc",
        "cursor": {
          "ref": "41352345-c8a6-4bad-8c2d-5ffa2c5850f5",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "77a43f33-6d55-4bde-8f87-1032e6b11bf2"
        },
        "item": {
          "id": "06d8e2f8-26f1-4ff7-b224-fbde70784cdc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "71bcb726-2673-4d2f-ab7f-764d7708f449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c716253a-f6fb-45d9-a819-cd4b8e9706d8",
        "cursor": {
          "ref": "f3140077-1713-4f20-aa9f-1a54fa9b7009",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b79b6c94-782f-4104-9eab-3d3616f0aaf5"
        },
        "item": {
          "id": "c716253a-f6fb-45d9-a819-cd4b8e9706d8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "771d1d9f-3ca6-4f39-b0d3-f6741ec0142e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5a39e2-4af5-484a-aa0b-a66993036d73",
        "cursor": {
          "ref": "52e30473-f999-4910-9c97-070235c079e7",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0c1688da-3881-4860-b94c-96deeb0e0b29"
        },
        "item": {
          "id": "1c5a39e2-4af5-484a-aa0b-a66993036d73",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9fe8e5a4-f64a-4e68-b3ca-9118252178c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e83512-88a1-478b-85f1-0e0295bd26ac",
        "cursor": {
          "ref": "6e311eb4-4925-4801-85e9-51465abd1f6e",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f67ba4e0-6a21-4c1b-82b7-93e0dcfa2418"
        },
        "item": {
          "id": "38e83512-88a1-478b-85f1-0e0295bd26ac",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6aece156-9900-4aee-9b08-280d7b91c06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ff8bf2-e4bd-45fc-b720-5ae024ff3809",
        "cursor": {
          "ref": "05ad8c18-21f5-4c44-9ab3-ae322e95eeca",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "337f304d-71d0-4cce-bc47-e0304198a0e7"
        },
        "item": {
          "id": "61ff8bf2-e4bd-45fc-b720-5ae024ff3809",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "62f3dfd4-cd2c-4d84-9340-88c67a0313ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c031d4-c62d-4ca0-8361-4db5279df5b9",
        "cursor": {
          "ref": "864ec9b6-9c71-41f2-b61c-606caa821150",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "33f272a3-bf90-401c-a71f-fe0af26177f8"
        },
        "item": {
          "id": "a4c031d4-c62d-4ca0-8361-4db5279df5b9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "93ab3e46-e349-4fd3-8a96-24d59cf1250b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2ab253-77cb-4723-a231-960b628a82f0",
        "cursor": {
          "ref": "6ae1efeb-0657-49ec-84ef-13b3cbe2947a",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d03d8836-1a72-4c5d-9e13-70e7c18d2466"
        },
        "item": {
          "id": "fe2ab253-77cb-4723-a231-960b628a82f0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "dcd2957c-1696-436b-829e-259a1b64078a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfac9442-54fd-4ae4-9c81-a815f7289b25",
        "cursor": {
          "ref": "a06624be-85c6-4bcd-9181-fec3c870668b",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "737f3d4a-4773-49b7-8663-ac73c8adcc92"
        },
        "item": {
          "id": "dfac9442-54fd-4ae4-9c81-a815f7289b25",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1816023c-7421-43de-9beb-52c3c625939b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8779d40f-4c40-427a-ad42-eb543e62ad58",
        "cursor": {
          "ref": "924d2e3f-39e1-40de-bdf0-97db6852b218",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b0481f6a-190d-4222-9ff4-8b4866bb1dca"
        },
        "item": {
          "id": "8779d40f-4c40-427a-ad42-eb543e62ad58",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1232c508-f862-4b0b-a8c9-92a174afd4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8b6ed1-08ac-48d6-946e-607ab6556e71",
        "cursor": {
          "ref": "cc459968-2589-4c05-b242-3392cda813a6",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "aa52654d-d9fa-4291-9040-ca2c1bc66912"
        },
        "item": {
          "id": "0f8b6ed1-08ac-48d6-946e-607ab6556e71",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9dde3146-3aca-41d9-b0a8-c4a6fb48e8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8846e1f-5caa-4ed8-a457-c2c01934cc2f",
        "cursor": {
          "ref": "4f07e63c-a942-41a5-a3b1-8ba5edeb5802",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "87825bb5-13e3-4b6d-8052-b5d059c220d0"
        },
        "item": {
          "id": "a8846e1f-5caa-4ed8-a457-c2c01934cc2f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "813800a8-2a34-451d-b0fa-3e6ec3df3130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c517d1c0-dab2-4abf-a8ad-95713c2a923b",
        "cursor": {
          "ref": "bdc7191a-e1e4-436e-9d7e-02b66dd3fe92",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "eec8c9e0-f1ca-4b21-8967-8498097c2870"
        },
        "item": {
          "id": "c517d1c0-dab2-4abf-a8ad-95713c2a923b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4af99fb4-d107-4a7c-b209-97035b700a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a7d48b-c0f5-434d-a62f-5c12d23c151e",
        "cursor": {
          "ref": "541f8ea7-940f-4434-ae90-4a02e7ca1fc3",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d42077c6-eee7-445f-9bec-921ebba17f84"
        },
        "item": {
          "id": "30a7d48b-c0f5-434d-a62f-5c12d23c151e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c2617d02-6e75-4a0e-a1c8-e22e1317882e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106d4945-2c57-4db6-8e3f-05338dea4aa6",
        "cursor": {
          "ref": "1021205c-a007-40b8-a06d-88fc296a522c",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9618cefa-96ee-496b-9918-b9be9ce9124b"
        },
        "item": {
          "id": "106d4945-2c57-4db6-8e3f-05338dea4aa6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ce3c1524-abe0-4e73-b283-5609693daa2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2c4ee2-cc1b-4efa-beb5-396e757b0da7",
        "cursor": {
          "ref": "f8be39c5-3f95-41f9-b318-bba7b7832dad",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ae43d915-02a0-417b-8fec-857ee9b63e85"
        },
        "item": {
          "id": "8d2c4ee2-cc1b-4efa-beb5-396e757b0da7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "45f016a6-f678-43ac-ac62-2d0926ed2068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef91bab-1cca-455b-9dad-10b2d3975d99",
        "cursor": {
          "ref": "71afa927-8034-4f9e-a920-d03c692e0878",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6dce3348-30ad-4589-b7c4-6763f9cd992a"
        },
        "item": {
          "id": "5ef91bab-1cca-455b-9dad-10b2d3975d99",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7db42250-c3f9-4457-9edc-4bbcfad45bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa805fc2-39c1-4a67-97e1-d8b6a3852ded",
        "cursor": {
          "ref": "623c8687-0b33-495b-9bcf-57edaabee3f6",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a7e471e1-1141-47e5-90ec-668494958077"
        },
        "item": {
          "id": "fa805fc2-39c1-4a67-97e1-d8b6a3852ded",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c43e3566-5063-405c-94db-0fb9ba4c9dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364e8227-19da-413e-9186-a6b5c7a35a43",
        "cursor": {
          "ref": "d1b1bff5-8e5d-4aec-9372-7a16d371b347",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "02d205ad-5ec1-4b71-87c6-bb3f11eb8116"
        },
        "item": {
          "id": "364e8227-19da-413e-9186-a6b5c7a35a43",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "36df1dc9-9342-40ca-8131-57191eea3d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83869217-ca1c-4e47-acb4-2b7571f46d28",
        "cursor": {
          "ref": "2041273b-da00-4f3d-b36b-61a434dbdc1b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fa3982a4-ae23-4e09-9ed8-3a592e6302bf"
        },
        "item": {
          "id": "83869217-ca1c-4e47-acb4-2b7571f46d28",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4eac4d08-91a6-4693-b522-990b823604f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848e2249-4302-4bfc-8142-8322de151ddf",
        "cursor": {
          "ref": "dba93c52-f274-4aef-80b6-5c280461d942",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e7fc02bb-0b62-4e59-9bd3-5a73f9689d10"
        },
        "item": {
          "id": "848e2249-4302-4bfc-8142-8322de151ddf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5ac28714-3ec9-4e7a-91f6-0c297445a493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45eb9636-89e8-462c-8be0-c28aa002e787",
        "cursor": {
          "ref": "555e5d13-6993-4deb-9848-61681f942f68",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ed9562f3-95dc-4a34-ab27-84d85cc16a23"
        },
        "item": {
          "id": "45eb9636-89e8-462c-8be0-c28aa002e787",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ca4a3e4b-7c93-458e-8139-25fcf771bbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1457a71e-29e2-48db-aa5a-16c0b302dd17",
        "cursor": {
          "ref": "55ffc41b-f61e-4963-bbe2-1b02befb2d7a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "651deec5-c64d-45d0-8734-04d49b9aa625"
        },
        "item": {
          "id": "1457a71e-29e2-48db-aa5a-16c0b302dd17",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6bf5ee74-774c-47a8-ab03-befe7b4aede5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec904dd-9d18-4f6e-8e39-59c1183373af",
        "cursor": {
          "ref": "258b6dcb-89ad-4019-aa2b-8f5a12cd3629",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6a0bb0ab-b65c-4357-a954-8256b40a8c56"
        },
        "item": {
          "id": "2ec904dd-9d18-4f6e-8e39-59c1183373af",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dd0a6057-e687-431b-a421-615873edd932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815feb67-304f-4e6f-be87-1ceeee8a3f1e",
        "cursor": {
          "ref": "56f4aabb-baf0-4302-9c8c-a5085113ecf4",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6b078a62-e930-4886-87f8-39fd789fdc38"
        },
        "item": {
          "id": "815feb67-304f-4e6f-be87-1ceeee8a3f1e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "34e6a5d5-4099-4118-b154-78ff4d5dd286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab1c785-88e4-4a8d-a06d-670f4fa7da57",
        "cursor": {
          "ref": "04288fb9-6eb3-4fe5-9a7c-08cac259f4d4",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1c171c3f-7854-41c3-aa78-e54a32d9e5bc"
        },
        "item": {
          "id": "dab1c785-88e4-4a8d-a06d-670f4fa7da57",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c58bafd0-2a0c-4021-9d03-b996cd6b2718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f4d27c-8cd3-418b-a880-5d0a5673fd0f",
        "cursor": {
          "ref": "e36179e7-8424-4c9c-a08c-7364dd213ef8",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "16913f83-e007-4f50-829c-180cbdfdfcb5"
        },
        "item": {
          "id": "76f4d27c-8cd3-418b-a880-5d0a5673fd0f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6e39afad-1d6e-4e24-ac20-bc3366648045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2993e6-d0b8-4670-ab3a-7011e80ec949",
        "cursor": {
          "ref": "ce733381-d4ab-4ef3-a858-777372d20130",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bb5c35a0-e3ab-487e-8f49-c72c35a06bb3"
        },
        "item": {
          "id": "bc2993e6-d0b8-4670-ab3a-7011e80ec949",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "96accc2e-4eb2-4214-9dfe-9abe2abb7f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667d1b0f-332a-4f36-a2fa-2fec633a7f11",
        "cursor": {
          "ref": "7ee4eb94-33d0-41c0-8ca7-3b51f64da662",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b8ea838b-f52d-48ec-9daf-bfe1356c6923"
        },
        "item": {
          "id": "667d1b0f-332a-4f36-a2fa-2fec633a7f11",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "701337f9-f7b3-428a-8f3a-7b9651afae71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f7df16-2043-4cec-92b6-010ee28a9ffa",
        "cursor": {
          "ref": "96f04f8d-585d-47c1-8ea9-615a26afd2fa",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ecb9a161-6098-4f4f-921a-f2ad84d58435"
        },
        "item": {
          "id": "a1f7df16-2043-4cec-92b6-010ee28a9ffa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6e782929-fb37-45b2-8ffb-fd4ee7196291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d04c8b2-7175-498a-afd8-0740c7da086c",
        "cursor": {
          "ref": "9ef2712d-3517-45c5-bc8e-50980f88c9e6",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "37ceaed7-15bd-4891-90ce-5d41d3cb23d5"
        },
        "item": {
          "id": "3d04c8b2-7175-498a-afd8-0740c7da086c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c572424c-c5a5-4a5d-bdf1-c9535d3d3d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3c791e-7fa6-42d7-a13b-21244c801f94",
        "cursor": {
          "ref": "77555a0e-dfe1-4f06-852d-8adcd2ec7ea7",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "33620915-efa2-4514-b5ca-acb9aff65c8a"
        },
        "item": {
          "id": "ac3c791e-7fa6-42d7-a13b-21244c801f94",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "177eda12-f641-4587-a844-f27feccfc46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e759405-f48c-41cc-9423-c99134d19f13",
        "cursor": {
          "ref": "47070e16-1351-4ea9-a3ce-af265fe4d8f6",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fec11958-e4a6-473a-b6b5-27290aa4c53e"
        },
        "item": {
          "id": "5e759405-f48c-41cc-9423-c99134d19f13",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9da5c3b6-5627-4c2b-8b73-5269fd1a89dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6ff695-1172-47de-8974-ee19fd577c0f",
        "cursor": {
          "ref": "db24c6c5-66dd-4083-b217-75de002db17f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4e8798e5-0274-47e3-b45f-74a8e8210a29"
        },
        "item": {
          "id": "fb6ff695-1172-47de-8974-ee19fd577c0f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1b9fd4ed-4382-4068-bc25-b3b67eecc270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0b2b88-eed4-45ff-a2b5-c2b4402d2acd",
        "cursor": {
          "ref": "aa9e94cc-53da-43af-98ef-520a74416d3a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d775623d-bd8a-42ef-b642-5410f76f6dde"
        },
        "item": {
          "id": "4a0b2b88-eed4-45ff-a2b5-c2b4402d2acd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b95d4990-2858-4c31-951b-75fb14c2afaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b2588c-6483-4fd0-a4c0-25c04fab3e45",
        "cursor": {
          "ref": "c5eda27a-ee8d-4326-b0f2-4413c0cffac1",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "45913ea2-b758-4589-98dc-3bb36f6adb20"
        },
        "item": {
          "id": "34b2588c-6483-4fd0-a4c0-25c04fab3e45",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "50a46aec-ee0e-4a11-ae4e-dcc879f7dfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910e27d3-e768-4a96-99d7-49b1ff05d880",
        "cursor": {
          "ref": "5cfecf0f-be1b-46aa-9ec9-fc7f79063c33",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f6f7c248-3f3d-421d-8367-bd3d01d5649f"
        },
        "item": {
          "id": "910e27d3-e768-4a96-99d7-49b1ff05d880",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "031d61ef-a717-41cb-8c91-a54d47494178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253ae2db-159b-4b9f-818e-36b674a58822",
        "cursor": {
          "ref": "36859085-dc31-4d96-afe8-7c33c49e5951",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ceed7a96-9a1e-4d2b-ab9f-4a6a58b385dc"
        },
        "item": {
          "id": "253ae2db-159b-4b9f-818e-36b674a58822",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1c4623c4-3377-469d-8ca7-a93c6a15f5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b908edd9-6d70-4b43-a016-06dbdf879534",
        "cursor": {
          "ref": "cf90cc84-9d81-4dbc-ba4f-696defbe1490",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "87bc0f0e-cae6-4878-a398-c87641fd69e1"
        },
        "item": {
          "id": "b908edd9-6d70-4b43-a016-06dbdf879534",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "be28cf58-99c9-4f59-9f57-69099ba10e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9233f0-4f07-40bf-a730-85f0bd68e12c",
        "cursor": {
          "ref": "5f98de94-2c37-4ba9-8b5f-33e62f6dd800",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "dba78fb9-6a9c-47ed-9625-b2d1ccd9e630"
        },
        "item": {
          "id": "7a9233f0-4f07-40bf-a730-85f0bd68e12c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bca25299-c52f-40c4-aeb4-e0dba8e92dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0746ea9b-59a8-459a-a332-53a4e24d4515",
        "cursor": {
          "ref": "2e62cd90-050a-44c1-a6b1-90b5dd9371f4",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "448f1326-b9ba-4f15-94de-72f3f6f89158"
        },
        "item": {
          "id": "0746ea9b-59a8-459a-a332-53a4e24d4515",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f1d36f95-0515-4f62-bfbb-207102e900a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04930772-2c99-447a-8bbc-d562fa4f26f9",
        "cursor": {
          "ref": "01a2a41e-4897-4bd3-b997-ba5444fdc516",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6a0e0cc8-8b3b-47c0-80eb-40d3c8b2f3e3"
        },
        "item": {
          "id": "04930772-2c99-447a-8bbc-d562fa4f26f9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "46639dc4-480d-4ef6-aa74-de80846282f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f79999-fff2-4bad-a0aa-dba8f449b199",
        "cursor": {
          "ref": "c5414b50-5c59-4cbf-8b90-e7d0f120afc2",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ca884566-9aaa-48f5-ad07-91b1a0138da8"
        },
        "item": {
          "id": "91f79999-fff2-4bad-a0aa-dba8f449b199",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ef6edca6-f388-4445-8265-af4a7eff1f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04dfd01-b39f-46ec-8811-0620209e920f",
        "cursor": {
          "ref": "b2cb7bac-3ee6-434a-9d58-796c159ed7fc",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "edd497b6-89cd-4f97-8b5d-a66d49d1db98"
        },
        "item": {
          "id": "d04dfd01-b39f-46ec-8811-0620209e920f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b4b03930-d5b7-44cf-b53f-ed5f1b84dada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ef47da-24d4-444a-8fdd-c679c6f49c9b",
        "cursor": {
          "ref": "9b5e3bae-f6ec-4d13-8ae9-f5ad9fa6ed27",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6ed360f5-d8b0-4333-92e2-ddac8261fcd3"
        },
        "item": {
          "id": "29ef47da-24d4-444a-8fdd-c679c6f49c9b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2866c947-58b5-4c5b-b428-13c2c1e6fcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b93d46-28c7-4edc-8cf1-f8697fa5fd44",
        "cursor": {
          "ref": "828b759d-0814-4936-9ccf-dfad2378cbbd",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4b26819c-084b-4a36-a7da-aef6bc920c79"
        },
        "item": {
          "id": "a7b93d46-28c7-4edc-8cf1-f8697fa5fd44",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6326d6e8-5c85-46d4-b817-5addf1740cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0d9129-6b9a-4d42-8e23-1d4068cc1a9f",
        "cursor": {
          "ref": "3550188c-5898-427c-89c1-9ae8da4c3bc9",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0f8b8cc8-f1b0-431e-b6b9-ae8ff9938658"
        },
        "item": {
          "id": "df0d9129-6b9a-4d42-8e23-1d4068cc1a9f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "29cb8761-371d-47fc-b496-fb414ff5f97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380c8187-ad2c-4171-a109-e672ce292689",
        "cursor": {
          "ref": "a8057f31-e482-4697-b457-8ccdda0af271",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d53b3d05-c964-4242-aba6-6eb257d22f27"
        },
        "item": {
          "id": "380c8187-ad2c-4171-a109-e672ce292689",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e5059a5d-bbdb-4ea8-96f1-21d3e888120f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce52091-8744-4db5-8474-944ccaadf593",
        "cursor": {
          "ref": "0c3bd76e-9913-4763-9269-16ba5fb5c661",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0ef17178-915b-4c30-a97c-1788484cd083"
        },
        "item": {
          "id": "3ce52091-8744-4db5-8474-944ccaadf593",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b59a9e22-24f0-49e9-b83b-afed5ddd8b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc98c42-41b5-4187-abc5-a7e329406057",
        "cursor": {
          "ref": "80e25a03-7893-4241-b6ee-652a5c007bb7",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a39c77bb-0629-4cdc-a727-b7b71b59f01d"
        },
        "item": {
          "id": "6bc98c42-41b5-4187-abc5-a7e329406057",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6cfd438b-6720-410c-9f29-bf5ab618ec73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0152057-5b42-4c69-bab4-8a233f78f60d",
        "cursor": {
          "ref": "85d61ea9-8d44-4943-ab71-40fb2701e78f",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a0384710-ac28-433f-916a-cbb25f2bc418"
        },
        "item": {
          "id": "c0152057-5b42-4c69-bab4-8a233f78f60d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e162296b-ec6f-4a3a-98e1-247738af3074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d4bf4e-55f8-45a3-b1b8-05fc31abe42a",
        "cursor": {
          "ref": "902d0a7a-9707-4c2c-80eb-e77a6d18a836",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "48a6d921-4230-4d85-8552-63e83f57ce77"
        },
        "item": {
          "id": "15d4bf4e-55f8-45a3-b1b8-05fc31abe42a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "71e7dac5-dce7-4a0f-bd3c-80b0cc6ba198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf50b5b-13c5-45a3-bf33-2a25a1f70990",
        "cursor": {
          "ref": "32d3035d-12f8-4213-a566-829bb811bfb1",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "fa81ddc4-ee43-4b50-8879-2dbe95840274"
        },
        "item": {
          "id": "1cf50b5b-13c5-45a3-bf33-2a25a1f70990",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b1be02d1-0268-45b5-a534-6df7d4ed1085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c9be1f-7379-45d8-9c90-e424114af482",
        "cursor": {
          "ref": "eedd573f-ccd0-4664-81d3-797707a5c79d",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "55da0999-a053-4ec6-bd56-07c22f5bb96d"
        },
        "item": {
          "id": "64c9be1f-7379-45d8-9c90-e424114af482",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "35dc4728-4519-47db-a3c2-aa832d764e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bde334-3249-4a76-adcb-2f093419ce13",
        "cursor": {
          "ref": "5a0e3b43-899f-45f3-b799-441968c7f5ce",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5f9cae1b-3287-4c8a-a7b9-88fcb8be9406"
        },
        "item": {
          "id": "44bde334-3249-4a76-adcb-2f093419ce13",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "95b9a92a-faaa-4c07-b05d-02e6b83e760c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82201bb1-4c97-4140-99f1-fe64ceabbce2",
        "cursor": {
          "ref": "1da9f74f-42ad-4cb2-878b-303daa45e6b7",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "70252216-33f4-4672-8b69-f7931ed967be"
        },
        "item": {
          "id": "82201bb1-4c97-4140-99f1-fe64ceabbce2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5fc153c9-f43e-44a0-80eb-9a8b93c44e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fc0c99-3134-4538-9a7e-3a90fa9422a7",
        "cursor": {
          "ref": "987ce65b-aab8-4002-a574-9a382c0b12a9",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ebd545af-7610-4346-9ad3-39eb0ed2fab5"
        },
        "item": {
          "id": "d3fc0c99-3134-4538-9a7e-3a90fa9422a7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "146ea0d6-6b40-4556-94c5-02ed57bf5577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66957dee-3a9b-406d-86c3-778d2f1eb25e",
        "cursor": {
          "ref": "1437d646-5d39-4a78-bf0e-9fe49d6ef098",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "fd313cd4-a587-4cab-8035-6b4827abbb2f"
        },
        "item": {
          "id": "66957dee-3a9b-406d-86c3-778d2f1eb25e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "36ba7ae8-72b3-43ba-82f9-3d3a23895bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da03fa8b-f252-4d51-a8eb-ff70b1145929",
        "cursor": {
          "ref": "17fb6412-b4a7-4ce7-a8e2-15f3b6e34db6",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "44743806-e7d2-4270-ab1b-aa2bf9371a49"
        },
        "item": {
          "id": "da03fa8b-f252-4d51-a8eb-ff70b1145929",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b835fd06-0a79-4239-937a-2349073e5eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171e3cbc-fe04-41bf-8fc7-ab467b04f32c",
        "cursor": {
          "ref": "ea5f1926-66dc-4082-a9b9-386a04511a75",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9c8fd3c8-bc0c-4dad-9a19-ca94945e32cd"
        },
        "item": {
          "id": "171e3cbc-fe04-41bf-8fc7-ab467b04f32c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a3235112-c291-4d2c-8391-619b023d5113",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1321ed46-6491-4bdd-a34a-fbfb8dd28e89",
        "cursor": {
          "ref": "cb1e454f-d5a5-4434-826e-c40619efcf34",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "78c924c4-2b04-4795-afb5-8f6aa528d101"
        },
        "item": {
          "id": "1321ed46-6491-4bdd-a34a-fbfb8dd28e89",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bf0f0d19-2b25-4dd0-b559-aa7633ad13a4",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "45876e45-a882-448f-895a-3c843714f852",
        "cursor": {
          "ref": "76ed3fe4-b7e2-4962-ba26-38d2eff89334",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2d5d890b-52b9-4513-98c8-a6204daeebc3"
        },
        "item": {
          "id": "45876e45-a882-448f-895a-3c843714f852",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0730e288-28f9-4890-adf6-1d0baf79a76e",
          "status": "OK",
          "code": 200,
          "responseTime": 2533,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e371d7f-7778-4197-a9c0-a5abaf725c50",
        "cursor": {
          "ref": "32b3a685-c7b3-4688-bb88-71e8ea1d2076",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "84c763b0-9c28-4343-b13b-68c0ad83babd"
        },
        "item": {
          "id": "2e371d7f-7778-4197-a9c0-a5abaf725c50",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d157bad1-7465-452e-be48-1db6b1b1b09f",
          "status": "OK",
          "code": 200,
          "responseTime": 2814,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f064522c-f035-495e-965a-8240d1ca03c7",
        "cursor": {
          "ref": "531bfe5a-2ea0-4dde-9c68-3089976aaf24",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "07716730-b867-4457-8c43-2be64a07ce0b"
        },
        "item": {
          "id": "f064522c-f035-495e-965a-8240d1ca03c7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f5ff0ab3-0cfe-42b9-9043-ca25b9411c14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f064522c-f035-495e-965a-8240d1ca03c7",
        "cursor": {
          "ref": "531bfe5a-2ea0-4dde-9c68-3089976aaf24",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "07716730-b867-4457-8c43-2be64a07ce0b"
        },
        "item": {
          "id": "f064522c-f035-495e-965a-8240d1ca03c7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f5ff0ab3-0cfe-42b9-9043-ca25b9411c14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b68cdfa-b891-4e88-829f-ad60edf3068b",
        "cursor": {
          "ref": "6b9b875e-6774-432d-9636-d43c8e658985",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1c678a00-d53a-4cfd-b73a-a83ab94da81c"
        },
        "item": {
          "id": "7b68cdfa-b891-4e88-829f-ad60edf3068b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b0c7e13a-ce2b-4082-a75d-575ba90ff042",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c7e491-9bf4-461d-8e84-48c0f77673b3",
        "cursor": {
          "ref": "ee7dfe9f-b203-463a-b54e-cc362cca5aa1",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5876a126-64c9-4286-9d96-755e2ee51422"
        },
        "item": {
          "id": "e3c7e491-9bf4-461d-8e84-48c0f77673b3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7c4c45f6-5a8d-493f-b22b-2c553685e218",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}