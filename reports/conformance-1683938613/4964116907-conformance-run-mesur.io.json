{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0c4c8b77-fb5c-4c68-8bc0-e5d5e43fb39a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "da05bb77-6d38-4c85-a741-643dfc69c395",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4eebc15f-2f79-4bcb-906d-11ed7075af3c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "87ba02b3-25a6-481c-99a6-e41c3bc2745a"
                }
              }
            ]
          },
          {
            "id": "3ff0e410-a27c-45b7-8252-7bd4ff7e2b6e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "53917a1f-0c5c-497e-924f-7a262c54f560",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c36a21c1-f3fa-4653-b602-2a9fd9f91fbc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f422ecb6-e2d7-4341-8153-8d6d42c8c17a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bd335d9a-6305-401a-9e30-a61b132bd791",
            "name": "Positive Testing",
            "item": [
              {
                "id": "34ba8d43-146c-4cba-95af-f2d0b4e0a36c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92469674-cd76-41cb-baac-3c65368f5ee2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a5ed217-4966-47d8-8ecc-7f0cbdb2f0cf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e01dcaa-62f8-448f-999e-78f06e3df0f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e41366ce-c9de-4572-b64f-a00f743e6c96"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c4d54661-9c95-4692-a8bb-edd234b11747",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5078b176-9801-4b2c-a624-cdb7c252d594"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f0ddd5a-cd45-4236-9b1e-2be83eb1a31d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "30ed2255-a8d8-40a6-95c7-faa9c0701a8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6dfac892-49d3-48b1-963a-a60c25f21107",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8462bbc-b207-4210-a46e-bb822c099540"
            }
          }
        ]
      },
      {
        "id": "27804e13-383c-4f7e-a8a0-b945cff09b4c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d6597679-f2d3-4f49-a758-bc6b8f137dab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afc92c96-ca98-4c19-b953-ee95ff276d09",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "393db8f2-ce00-4c0c-a60f-8dd0be9c325a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1708097-3ad4-44ee-b5f6-4ba98ec706a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c546bb2-67fd-4dc8-8a27-9236ea18458e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8842e27-d8f2-4f0e-9edc-beefbf7ab5dd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa508337-eed0-477d-8cad-9cbb7d7bc207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecc636b3-dc2a-40ff-9fde-ce022d467415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449919dc-099c-453d-969c-c992990297f8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6b5e6d-4c15-45f1-a95e-53d3bddb4794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17913ec3-1cb6-479c-8a89-979de993206c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "28b6be77-de7d-4bf9-9db3-2c9a71af1939",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a17c679-e78b-4e5b-b763-183be853f2eb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8687ead1-42ae-41f8-afe2-0a39c111395e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a44507cd-b326-49b6-bb12-1e48d096e2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39e403d-a8ed-4be1-8b00-dce976fdafb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fffb83-9849-47e0-93c9-93fcf33e71d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af45e1c7-e949-4136-ba06-3c249412841d",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da144ea-0787-4ad8-9b65-e06285b6c514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d79b1af7-d78c-4dd6-85e8-f0dce54ec715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2231a962-14bb-4ab0-9aca-255280143061",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "25edaa0a-748d-4d36-b4fe-c1e3e0d3eb37"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "08aae568-6aae-4211-b280-891b4792cc11",
            "name": "Positive Testing",
            "item": [
              {
                "id": "84dd9d5f-ac27-4b30-a689-3c293870f3f4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c720529-214e-4e9a-83ba-ccc97d79c9ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "53871bc8-82cf-497d-ad65-9df1cb990f5e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "761ba179-7bb9-47c5-bbb9-a04aad639578",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d02fa3ef-fe61-4d1a-aee2-82a907504561"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "010d7d37-d29c-46fa-b499-1e7c923f084b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99865f4d-3696-4d05-a18d-296472f038fe"
            }
          }
        ]
      },
      {
        "id": "2bb49d35-e3e8-45e3-8f10-8e0b83207bc2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "dd7dd07f-9d80-4a1d-8620-533fd17b8fc7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8278f5b-5bc8-42c3-8783-49405bbdadcd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "34c5fc91-c578-45f8-af69-327a3d4a35e2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db36b719-f06c-47dd-8bed-fa900edc67e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c20cb8a-2778-4ad5-8c2c-1be81746b37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ab9318-da93-42ff-9b56-fb799aa3614c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6764bcdd-442c-4bf8-a4b4-b1443cc18507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f3211a-0bd0-4cb9-950a-3fcc700acc3d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bf7e2f-3fbb-4df8-bf2a-61173328f2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d8cae9-cb7f-4214-8b95-5e2f0db359bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d209e6-7e65-4198-b971-202dbe1f4437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdd17e35-bed3-4ff3-8185-2b71ff1c80a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2cca73-d32d-496d-90d9-fe1c385b4e1f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8f9892-5f3f-45a8-9779-76d227685ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a1e8b5-b863-4072-8bb5-5ecb81baf93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301b5852-a9bf-4f2b-81d7-67f6ab2c361b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ad584b0-80a7-44b9-8325-a2ab0bd649e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55470def-30cb-42a3-bd32-691959c7e66d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc15ea5-aaef-466d-81fa-8fdfa12e27c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acba6044-271a-4c6a-ba41-594ce7721b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6150d28-44a3-4dc6-9024-0f7868469f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2af13566-5cf7-4adf-a9a1-be5e458ebc5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af7f655-9a09-4080-a37e-0f93e09138f2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b0b04c-ca3a-4fa9-92d9-30127cb3ef95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78412ed0-c6bc-452d-8e22-b4e0cce07ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25783c74-51e5-4579-84f4-9ad210ff7686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf3a173c-10a2-45b3-abd0-6286c74c55c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6389aa13-02e2-4e21-9e4d-39414f43ac11",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba65acca-5ece-45e3-8b81-90d5c64f01cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780730f5-4b12-4ff2-b3c4-f0ca99e59614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8492539e-63ec-46fd-a746-72b8f96f3c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8c7c70f-eca4-45b9-9317-c5ec64b4bded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcf75c0-6e0a-4c25-88ec-a08c50af08b4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1476118-db10-47ad-a146-e9a994729d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6692af-0488-4a63-908a-a82e0674e3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b51054-879b-4fd0-9dae-4db1b475c364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "819ad3cc-5f60-453c-b0fb-d47378592c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7cca5c-2173-4fa3-8dfd-d0f929c4bd10",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e5930b-1676-4c61-8d6c-07415b4cb75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970c81ff-528f-45b8-b52a-bc82241805ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de523b59-5fc1-471a-a574-9463b7b4af11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac651c8e-369a-48c2-b943-77ca14b8157b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0578cf81-a540-45d1-b26c-477cf2835f1f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63cc0b5-fc54-4983-9883-4ca1a9f12baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2260c6-ff11-4fcc-ac4e-b0b31ea2e57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97ad586-7d2a-4920-9506-ecd596641db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb2f5e7b-7006-4c30-b78b-323ec0d143bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43ea7be-4e7c-4c65-8307-53075a6969f7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd22e60a-70a3-42d9-9de4-54e28baa1ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4bfcb5f-03ca-47a2-8aca-625ee48c3f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b70f3e-9da0-43ca-ab41-4de0ee2193f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad825df5-6e6a-4222-93a9-5493783d3ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c742d3d-d6cc-4176-b301-52eb3b61df88",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09d7896-553d-45b6-90e9-dc22c7023818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5d9903-6b80-45ef-a2b1-e4f6d6e5429d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3e818d-5d2f-46b5-9058-87857b5ee080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cba3646a-1d1c-4087-8e64-08b70ba59a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68dc1967-6d51-43be-b694-d7b8e99bca14",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fa6700-672a-4bb8-85d0-6f651b881649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be821ee-acdc-46fa-aa45-58774907821b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faeb0c4-a5f4-4336-956f-e4ee228acd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7021d29f-5ceb-4dda-a46a-55e5a73cb97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4fde0e-5f78-49a5-a548-fbab0cb06321",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b13c173-1ec4-45ac-b429-01c340e18cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25575ba3-7447-4d13-ba82-3daabb01897c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cde744-33da-4ea3-808c-92d285de6677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a9d36fa-8608-42dd-af73-4df85a061dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b71c8f5-6a8b-4a01-ba60-873029822c3d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792ce933-7756-436c-bb02-0c38d824860e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2a9d0c-af4a-4b8b-aff4-fbac5d230329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7419c58-35f6-4894-889e-db40501eb0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd1877a4-3e14-4b4d-9740-474fd3ee47af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef539fe9-b01a-4110-a218-b42dcae41076",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0eedc1-033e-480b-99a0-58f0f2e0ebc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0cbb95-6db5-4c00-ac69-27e6027560b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a78cd6-fe21-4446-ad1e-7f85aae1bff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a67ed158-c85a-42cd-a6ca-e28439588882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4bcf1f-a1c2-450d-bcc1-d9dca9465af1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810d5202-146d-454c-baf6-fc2776c4c36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e587c0-4555-43a5-9d77-5d8ec7db16c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e6a3be-7fca-44ec-a096-afc35ce8525b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c95f04d-6ee9-4de5-a661-590f476b8a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7e3981-3dbd-4090-9be2-bbdf6737a376",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97f8058-73ba-4d98-93b7-1688505246bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85db5e9-ccb9-4eaa-8c10-ed2c4570cb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5489ab5b-d469-448a-9785-0d0630684917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f691f624-8561-4d71-9b73-6b51acfaa45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c4dc7e-b8c0-4d61-ade1-0632e9de5604",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6d901a-c0e5-4a48-b60f-0ca272287b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7be706-bdaa-4e6a-944e-d25f6f64f0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e5611c-48be-4e11-a76d-1a9255d2a236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e543d8f1-2ae2-4435-8d90-0ccaca353136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd7e1fe-bd87-4582-8d7d-028de963b49b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e476284a-a3f3-40e5-8525-ef3ffd4b6455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15891b7-8b93-4c97-9f62-6977cd3e35cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b121ab8-6cd4-4174-bc39-89ba9aeb3aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06e93aad-b051-41b1-995c-18e81f4c08d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97f844b-0100-40dc-ab3f-16a7b9b7350b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bc0025-61bb-4cb1-aad8-0efd6656b5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f65cba1-24f6-40dc-929f-97d194903b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e523d81c-07f3-45b8-92de-4b4d963df8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3174a5b7-0907-4928-b156-b73aae1b22ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc14f4de-8d52-44ab-9c96-d3def555ec66",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4befd1e1-7aa1-4cc6-86bf-fb60a66ee588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c75e52-7dad-4cd1-9a8e-87809bf12602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3acc13d-c9a5-43d3-b9ed-af801a6c451c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82e5de45-70ea-42d7-b10b-29ffaced9a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e59534-7b37-4908-a043-cb3a835d0845",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9097cc46-2619-4fb0-b88d-cb6720e66749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb22c24b-d497-4b33-9ae2-38e8c5fad77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae81b6ad-d07a-4692-b858-6a85da32ec14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63b56230-6d0e-4ed8-a618-5c492c5a5338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214989b8-eb30-43b7-b624-73b9203ab6d6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af720eb-0fe7-4d87-ba73-32c16d6f7e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041421c2-bdbd-4af9-8ba7-3b1d1e6ad454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac61466-4710-4abe-b1c1-a8b4322d8a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a56d67a-c331-4458-951b-eea8fa52048f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b219ca-64f3-4b5a-a56e-816f6a109942",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3809a7e6-1625-47ef-b83d-2ca0b19af230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cd3b45-ee23-4b48-9587-e0989b77137c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae63e29f-2e40-47ea-88e3-8e39b9c67a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b818776-58ce-4fe0-9b7a-1d948a158db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dbf239-fd3c-4870-a56f-21f94f8d7c60",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3226c59-1836-494e-a73c-8b263691fd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa14f0a-818c-45c5-a1ac-9c34e372ab04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b1873b-0a73-4b22-afce-0e6cb99eeb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecad2d3f-bf41-418a-9ccb-1e7b062e8bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92911df-a15d-45b9-8bd0-7b2e87a662f8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2800c0f9-1c9b-4a79-bf00-b3650b509a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b476a5-4bf7-4c4b-915b-26fc089b5676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84785e13-6599-4fdf-9a7a-9478fbce4938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "191f985f-1894-49c8-b2b5-a6328cd86fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e629efc-98fd-4c0b-92a5-93d2e6e0bbab",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e851d4-bbfd-4ef2-8419-eb3be6f509ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5785b5d-8ccb-4ca4-ba58-b759b55b0ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53327480-bca4-47b5-93ef-83e5adb09c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "058f0ffa-0b89-4ccd-9988-e744042553eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba29d90-5c75-41a7-8dc6-4e00cc000bb1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188f9d48-eaca-4d9a-b3cb-76f1e198a06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a042c4-5883-4b0a-9187-3690f83a1a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f87db6-7b7a-4ac8-a58e-bf3d6ea0d254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea52fbf-6f2d-439d-8d65-31185b464edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b12410-a1dc-4be9-aa74-98f3cca1a0de",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe51359-4912-435e-a56c-86c5b348857b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfdfc8ec-531c-474c-af07-82e3320a708d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15829f69-78d9-4a42-be07-d9e743272d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0705087a-5f7f-4a93-82ad-57ed55b6a246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8034bfa8-be55-454e-8f97-62f728ff97a0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138c908e-3806-449d-b53a-6b7af64fd194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499d6a7b-6795-434f-ac51-488607ee9591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab73d8d-8ed0-4cc8-8098-d874f033961a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "558af6eb-fcf3-4097-917b-d14efef245fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4346d5bf-1d23-4700-9130-6bc4cf476f78",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4889d99-4fac-483f-a610-fad3c5c643bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c853928-3dc8-4aa3-b794-61dc71443416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee04ee9d-fac6-437c-a41d-f0747a5a5c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0b28ff-0029-4328-8544-d2ba2de240c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fc7c1c-3cc5-48c4-87b6-de4a852aaac8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d828551b-039e-4f79-bf71-46779996115f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab08114-191c-4fc2-8543-0df6db86315e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7632d7-2e58-4405-b810-09e8909dd16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e085835-50be-4f26-9289-d92297247be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa85dd25-0434-40ac-b3c9-89dcff9e4cf2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2cf285-e2e4-4d6e-89c3-1a5f2544b8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f45c55f-6950-4063-b1fe-6463a373663a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3151827-2136-4b7b-9389-dba563af51ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12bf655f-91cc-496c-8e41-a44d4f97aa58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34446906-e678-423c-b078-35aab8ec5a1e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17025627-0ed4-49e8-814e-9458477ba978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd543cf9-696a-4aef-89cc-e547bff5f8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ba3dc3-9cd3-4e8f-a7a0-a15020461ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0db987-fe2c-4724-9da5-dc50acedf2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47e27bd-8e28-4042-aa56-eb31c4ad68eb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439d032f-2ab3-4808-a76c-c8cc5abdd5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5299dcb9-93b6-4d06-bf79-9316beea5d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3bd5ec-c0a2-46cc-bf29-55e23e63e9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bd61e138-a636-4873-84f4-2e5896717ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614dba33-8f4f-41db-8b65-fe9831e5ad3a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b50372-187c-46d9-a7fd-1f6955bd4563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bca3785-61bb-4a21-b23c-06382be5bb88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2643449e-1033-49de-acdb-5481d1d9910e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4bf6f3-885d-4891-9d38-4ce1caf739cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7803664c-c2a9-43be-9cd6-d7016a6b4ec8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa45549-f0db-4482-bdbc-3436c7461e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58935838-eeb5-4b84-9570-4f83c864acca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ca5ce7-be61-444c-8b85-f1ce330f5da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05809805-6c11-491c-8e27-4989f223a4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850180e4-5efb-4536-89be-e5299ccf6b8d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf38078-32e8-4129-ab24-2076033c6efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b86b8ad-a1be-43c8-b378-54853846f5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf44424-0bf0-4777-b19b-17f50419c8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7ff3e4-5b9c-4961-bd2c-61b1f5a5fe3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0e1d26-802f-4c9c-aa55-7277325935f5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c14ff2-bd20-4a64-81f7-47e41d911ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d482b0-715d-45b0-94e5-d09e46d126ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480a1a63-ef8f-4184-b9ca-74a846a6571b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe483027-32aa-4711-a60d-67ab33362b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628daafe-291f-4e70-b256-711ecb623b63",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f61209-59bf-4b1d-8ea5-a5df6840f2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bb9a26-f606-4193-86cb-e337864486cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02890e93-1ee1-4d7f-bbf3-7284df6a3b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "07ea56ea-0cdf-49b5-a14d-40c902070b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24f4bcb-6b2b-4d2d-914e-e885103247e0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fd3ba6-cabc-4b5d-b87b-651c11297253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8991c97d-3ba7-4037-a1ee-4ed071fe9c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb8a43c-4821-4b9e-9483-71524ff9abd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1220e0a2-6721-4ecd-aba8-55f56d745925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa2bbf5-7142-47da-8b00-40cfc035c75b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ff31f3-2b0d-4c29-8c56-630327692627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5d33b7-bc2c-4c2b-ac66-c829cb706486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385f259d-4176-427d-ac3a-28ff6aee1cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bf99db24-f33c-4d47-ba81-7063ccbdd0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a0382f-347c-4794-a682-520d58ca1340",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6afb271-5259-4368-830c-5871740b7535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a988ea6b-2f3b-4d43-9300-6061973cd18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4e8d05-87a8-473c-a2c5-ccf407440fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe02ef6b-b0f7-406f-9d34-6c30f8028e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa9069a-64f5-44b6-9c6e-276ddc40e008",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df417d1f-8fed-4b69-880c-2c174a2acb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6d7034-8346-4953-9ac1-8870206ce7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96cc8f1-9a1f-4205-9ca5-bdb804304427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c7f6c7-b706-441d-bba0-b18beb6ac6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46677169-045e-46d1-9868-a5d5ec975c63",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac55664-bee3-43b3-984f-4fb1627f8d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f268263-20ef-49ff-906e-98de73f2b87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f859346-b3ae-4d20-9cc5-df9ec4e34553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "095fc2bc-d6c3-4858-93aa-b108505094e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d902ab-253a-4ea6-ae1c-46f15a10d256",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b961e40c-94ff-433c-9779-3ca38a98fef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5119fd-464f-430d-8cc2-56a692c83d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac077dc-1348-48ee-9dce-8154b00e24d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1382f0b6-c371-4494-ad92-ca7ed343d13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333ec5e7-9cd8-44dc-9ef8-3ea9b71601ef",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4f2400-820f-4e4e-b91b-2e1f880464e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a477039-9fa4-4177-8214-ada03197b5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0215804-8d1e-4b0f-88b0-c5028edc7509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a04d961e-d7e2-4cc9-8152-f2bf145de345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe34076-bdc3-49a8-bc10-94bb96c9f9d5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d55f052-1eb7-4a6f-abbc-31565248de78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ec8657-a2e4-4a77-aec0-d6d2be91b909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc14d0c-ce78-4bd9-8515-62d98ea52309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abcc0e4c-848f-42ea-983e-bcffb1067af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347f7b98-90d3-44c7-9752-5408b099ffa5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36543c8c-d010-4935-a3d0-45799f96e6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0af98fc-61d7-41ea-85ee-5894718a0908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab31629f-d79f-4595-a8de-6a276886a734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d589caa9-0b1b-4578-bc4e-60c97144f25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf4edc0-3be0-4ceb-b2b8-290e81c257d4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9bb66c-4a34-479a-aa8e-9aef1131f11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff143cf-b134-448e-8bf3-b0f65c086a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d42bb6-0080-4cb8-808f-18c83758392c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f14c33-9787-46c9-81a4-7efa628d1669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce859ed-e9bf-41af-a177-85aa5a0234e8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526979bc-9fa4-4f80-a47a-674011e0f5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f78d39-43b6-4d9e-9409-25186fe08b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e122c9b-e7ad-4853-9884-bb6c796cfd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "98311d89-4d03-459d-9afd-f6bd3cda55bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5126ff36-674d-43b8-a142-95500cbccf3c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e8d900-e7da-40ca-8e85-2626409d88b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f72410a-b01f-45ea-9240-ec4b065e8800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e15aa3-a00d-45dc-86c1-17f292648d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "350dc086-975a-4d2a-a69b-04d483509983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c7972e-2a7b-4287-981a-a4d9dcad78fd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c68a07-6230-4b7c-8de8-441f7f41e23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd57f6a1-6309-4d9f-80fb-5e6236a0383c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d15ddc-477f-40b9-a091-b8c5261a21cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "183d506f-f776-4b5d-ac56-2154836d169b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3e66e7-bdbb-4ab0-9524-942921c15dc8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1e10d3-11ca-4f9e-a1fd-109c2a254327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27497620-59b5-4ef0-89ed-cc00d3239b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e2662d-a68d-4062-9cee-b063e6f60bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0c442f-9532-4a86-ad36-8f08e727fe02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ada2fa2-42c1-41e3-b7e5-e22a4f141775",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63900767-651c-48e6-aa3d-72bdb14df987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3025403-a217-41e3-b9fe-08153ba165ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08401a4b-fbf1-46fa-9891-c5f1362d6860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "410adf5c-a306-497c-9e6f-2cfb36f44e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9696ec-424f-475a-9371-a35e70482a40",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa75543-7581-4e8d-90ad-b302888acd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0513d15d-17b6-4ab8-b612-1bd493e0ceba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46266dbe-7918-49b5-a379-d17ab6fbba7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "58980d50-6807-4d7a-9ed1-e485fed9dc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b1d32c-0c7f-4da4-af97-485c97352cda",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70698733-c3a1-43f2-affe-dd97a01e910c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8242a4-5b1d-4d0c-a0f1-c6c6291959e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81563b6e-7922-490e-9215-92f54544a937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cef8205-e84b-4cf1-b0ca-ea1e3cff2e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3657e5-371e-41d6-a7ff-54f4006622fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10a937c-93e9-4579-8bf7-234c5a56f13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f850604-8c21-40ae-a011-c975988ee8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d3eb7c-2385-4467-90fd-4ecafaac34db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fa3e83-f9eb-47b4-894e-97e8addbb619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7219abb4-38b0-4f41-80c7-5bca2b85bf02",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16d06e8-8ab0-4274-aa96-5b6a3b834500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b918dbd-d18d-4bcd-8b9d-404936df8e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b04455-2217-444e-9e0a-90349703b35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ec8b04-06ca-4760-8bb6-8caa9010159a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd81bf0-74f6-45cf-9356-94aa0d0ae789",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab42397e-73c2-4bab-9ae6-e9845c5121a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa87bea2-0911-489d-958d-e8b53eba9a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3837d3b-f1b0-43f4-ab65-2d0b2491659b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8faf48-8374-45ff-9e06-3bd7f1021d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720b2ae2-2d82-416d-94b1-b41c855d66b1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bfc466-70f2-462b-9d8d-5ceb6d03123d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4592569-fe67-4a7a-bad2-bee6cbbf3a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6426e06f-688e-4f97-9532-622575dc7e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8d1e00-3c7a-4b93-aa72-666ff4c0c0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ddc8b9-7d34-43da-9d65-01db14719e3e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdece4b-67c6-457d-a0b4-cdbec9abffdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8574c2-5d88-4f4b-9d31-d182e0fb123c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d038ce99-9b1d-4760-8e24-ea59e4586c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "24796a0b-b9d9-4e0f-ab49-255344f85577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbd2868-8e6c-4245-ae93-6c413cf7b346",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecf2906-c08e-4fe0-baf7-3c7cede50660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3f7b5f-830f-4533-9536-131735fa7bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1111f4a-f12d-4d93-87f0-282e5090498e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "46e6b216-3326-45d2-bf27-0c51c02de303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aac613b-cd44-407e-abfc-a8fe3a28c580",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad90af64-41f4-4109-a0f2-dffd9f17eee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05798739-e32f-40c8-8799-83cdfc96cd68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6164206d-d772-4bca-850b-fa86163412db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1cb1d1-42b8-4c45-8d5b-36116909936a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342a41b3-6e3f-458c-8b0b-f95ef1f11532",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f891d1-f929-4d7d-8123-0ade3ee2d5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e8375f-fdaf-4913-883c-3ebb5405e1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03dfef4-663a-407c-b505-9bf1fb0fafe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a54dd5b5-b2c6-4b01-92cf-f44b4e88638a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ef464d-bf8a-41ee-bfb2-930d75477415",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e29f139-9b50-4017-96ab-04bdb87d7f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9ae857-358e-476c-8c90-342d949de0d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78369c7-dde2-47b1-bcb2-f63446d481ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dbf44d4-2c21-446b-bcc0-afb6d31060c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290a33cc-b5e3-4ec5-978b-3bf997986811",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d70537-0e32-4e1e-b07f-5f5142abd8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84348be6-bb99-4c91-b93e-ae11bf6ed255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5feee0f-ccae-4e55-b1d5-020f3f048452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9eb2337-936d-441c-a1fd-ad297b367207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3dbdc9-8967-4048-915f-c0a0fe523db6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11866c84-08cb-4fb0-8b87-55c7d1e1ffa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d941f7f5-9d02-49d8-9767-11e877bc3c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cc5f8d-def8-4006-881e-a65cb8fe7a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2179916c-ea07-4bf4-9378-a0bfabc8728b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6946638a-2027-47b6-9951-75755dce5700",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f2af4d-1e99-49d4-ac10-11f85cd7a728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd694093-e188-442a-869e-5c15ccdd81fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485f9b2d-21ff-45c0-aabf-79343ae97523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b052c8-3344-4ba7-a602-67ebe68750b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4904b2e8-48a0-41fe-a6a8-c990ef7e02e4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995bb77e-24e4-4552-9df6-a3de5392777e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91df80f5-760a-4d42-b755-82555c8f7882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe496cd-61d5-4b80-a49a-f72588e5834d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94f02356-3b37-40ee-9b4d-aeaece026c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a704d91-734d-4dad-a674-96b3efdba1b4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80d56e0-d730-4150-b7bb-ed90241a083a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010b448e-6494-4908-8ac0-1b420ba1c66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e1f2a4-bd66-49f3-a4f1-8cfbea3766b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "086ca838-2b8e-4a8d-8c53-7c536a00d803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a789b517-a773-4954-a2a6-05be409fada3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a8afc6-6f30-4eab-a9a7-23907b275881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4facb587-d1f9-4ad3-9bc5-f374882160c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1cd7d6-a6a1-49f0-b6ce-05abe8fe0dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e52e026-1798-4878-bfed-a6f7d4c51639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668f3f85-284f-4a48-9f87-174181e5e275",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9470e87d-f770-4700-8b09-468c1ae1bdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610bd7cf-842e-491d-be7a-5f0aefce470f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7378de-d29e-4504-ac43-e54961e638a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db94e2d9-8d17-40ac-ba48-2698a5772c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b103628-44a8-4824-b2cf-9b34dfd0cc81",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0ce6a1-a3c1-44d9-9e38-38f4acef98d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba3e840-97b6-4349-a909-ac8aaa167fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c927ef7-9080-4ef1-a90a-d7b4ea1ed7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8c5c3e-a3c8-491d-a26d-5cefd0c2ad1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7553489d-c5b7-43c6-8700-0bb37188be25",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f8b7d9-d282-4d13-a35e-420ac4b4e41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f033bd-c6bd-4158-b096-3e0ec2131e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21ebf07-3b66-44b9-b9fd-dfffe4b42c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39c8d7b0-cfad-4fc4-98e4-f4ed87663523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947f4f00-0a80-4c99-945b-76711a3d07fe",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d7a271-afb3-409a-a5cb-bbdea38cdce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ecb394-81a9-4cac-a219-7d1d98d1a188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77843191-5688-4382-aea2-feeffd1d9aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2ef433-ca3b-45f1-ab1f-ffaf37c142a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7852a9a-1300-47a7-966b-503e705b5f47",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4fa877-a789-42b1-97a2-a8ac349e52d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4472a1e0-4133-4688-9b92-89445e292db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e94ccc0-2a38-4193-95a7-5d05691bf733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ced5803-a035-4ba3-b4c3-57ee2b0d6a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c505329-6a99-470b-be1f-1ad46393f0e0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4210f8-b09f-4219-b5f8-f08b896b8aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc0b09e-226e-4380-af85-02c52d61ba9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2671c8d0-4c23-44b6-9b89-5b1a3d307ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d227eea9-c1a4-4864-9fea-311c632537dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8a0f49-3c16-4f9f-a43f-678fd720a229",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ea4bb0-0c4e-44bf-ae69-27d33e4fdedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc01bb95-2416-4739-a425-fdb83fef4906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c9531b-83d9-4b8c-a7e9-95932264d5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "413645c1-4a60-4e1b-aaac-d329f0ca2f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fe1130-08e2-4212-9942-6ce953c78a18",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fc99ec-b3d3-463a-a1ab-ff9f1893f5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ac455f-23d2-4053-9473-4758d1e8b29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b5d9a1-dcc7-48f2-87b9-6510c07a3c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f375fc90-067e-476f-be7d-06bd072293e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e830fd3-ccc6-4547-b35f-409535212beb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734bb94b-7d30-4ac7-8f38-03611fd3397b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5ba1ad-893d-4bb8-b15b-1ab91ed73c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f112271-9652-44db-a9e3-f1aac9441b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c57d4ccf-1bd9-4f6d-87e1-0ab5927c11a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba24687-744a-46dd-ae80-5007291a071d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a29084b-ad94-4a87-bea3-7cc797fdc627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbe9714-38ed-4fe6-bae4-53b0f22be1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c887ada-fcb4-47cc-a162-497d6cc7ad2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebf6247-0a21-418a-93f2-9fa96230b3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14496d1-80e0-4c0d-add4-d142936900ef",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5219a6-1259-4aec-965f-30b9d0c8c347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322d67e3-0e5f-4258-8827-c07272a7c75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdb9a00-4ebe-4854-af4d-896e9711e7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cba89ac-572f-4e2a-a201-8b889c5e0fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7422fc-9c05-4f54-a96e-55ade8722d89",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770a3601-fe52-4a20-915b-a36587d90143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a57275c-9270-46e6-8fe8-4d0b34aba694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74be4a67-74a2-4710-a78d-f3d3f0ef7783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "134464be-3193-4b0c-bb02-9718f9a72a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36e0365-e0df-4705-87e6-16ffe28f7434",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a75bb3-a4a9-46cd-999c-851a7ab4230f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ec87ab-6d83-47c8-b134-287d4ff83c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c6bb00-7227-44b6-9b64-3b9ca48bb3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55ce5fa8-1089-44c2-acbe-c1d512bdfa61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe99d6e-2036-4c05-a136-dd44d2c1a2b5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d738c1d-cd94-41b5-ad27-6a4e13f0cee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d35dc66-8458-4db8-8be5-b127c9e7f8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e7e0ae-53fe-4f8f-8545-ef2d760858b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5f2cee-1be9-4d52-811c-4386bf3b8477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9459e875-4ac2-4931-aae2-2e740509a34c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ac2142-d519-4674-8528-d2572b276487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ca67f7-660e-44cc-8cc0-627452442951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81fc53c-d60b-42c5-8a20-01f75ccfbebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39adb8ad-8e3b-4c1e-9014-1b60960568a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748e9923-b5d5-4594-8da3-dec116b5d71d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22761c67-19f7-45c4-aba0-d02827f247ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a28b52-9536-4f61-8fb3-63ced046cf6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e079d68-70d6-413d-8c10-72cf35e085e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc89b3e6-1ce8-4529-817b-6b6f331dc696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76442880-d911-451d-a31f-24660c9f6937",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66701254-e46b-4566-9788-dd40de606945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86229d81-ba0b-46a4-8711-fad29599d3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e050b8-895a-462c-8f52-93c0cbf20778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab598388-9168-4b06-ac9f-28ac644a313f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91704a5a-298f-409b-9cc5-91bfae7a893a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12becab7-3895-4001-a86a-e932332a70d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7486af80-2c21-433b-bc48-5f0e91cf17db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc6b16f-d9c9-4873-a28d-6dbe1774d910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c636fff-54ba-4a44-8dfb-fb1e0f352b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bc5642-6fc1-4657-974d-e23d309df212",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002bfb8d-1d4c-4703-bb5d-4fd732cef8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5f030b-ddeb-4e6c-8e81-da18ade745cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7203a535-b791-4c4a-a2d5-5e2d70a5da39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "686ec123-ece2-4444-82a7-361f2b62b7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146ae01b-7762-4f4c-81fe-caf80a8f0430",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd69d5d-ea26-4560-a973-f458fd1f27a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2a030169-063c-4ab7-8d18-165c4d2e63f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76224dd8-6c9f-4b81-9f71-6acc95abad6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0643524c-f37d-49f7-b7f1-8e6bfe6a3621"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7be698c1-4d4d-4f41-90cf-151a7f2b7dff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d85c5e73-9df5-4cf1-a129-0afc70d39f9f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d17f3ab-6545-4fb2-978d-52dcd7c48143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d219db5-36d1-420f-8051-5d33c20c9283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a8240a-c037-47c9-8318-1fab0df4d3e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50138505-3d1d-4f0b-a9b5-a3b4d645b1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65204a1-a95e-47eb-bbc2-2008d90deb1d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f85e9b1-c8f0-48be-b207-69d1dc5ba071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a33f49c6-78d5-4cfc-90c8-a5936bc3eb0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9878258b-764c-462f-a132-f2b886c39c18",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62ae2427-cee1-4190-a1ed-06387da53527"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0810bd4-7b3a-46a5-986e-80f771b8a33f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef262fd6-fd59-409f-a99d-124c7f801c01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19b44a4b-d469-4afd-87e6-710c30129d76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3617bcf-15bd-4122-874d-6d23d1dee19a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9273adc1-5170-488a-b3b9-333afc8606e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f25255b-cff7-481e-b09d-eff4e12915ce"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ec9f302-c5d6-4c06-88f2-be0d464157a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9c0a7e2-52a2-469f-a658-ffca64988444"
                }
              }
            ]
          },
          {
            "id": "105baa7c-1d72-4e36-a951-60cb7ba8c68f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc0a0e2e-8ae4-4a00-8f0b-c7adcfb54671",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccc7d1c8-48f9-4e7e-880a-ab9a83f9d189",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "997ba7dd-1be5-4605-bcda-39fe32476d9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53c2a94b-8535-403c-a850-f738ba2d39f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fc4b5f75-86f6-4276-9325-8ddaf28a0300"
                    }
                  }
                ]
              },
              {
                "id": "4b20419e-8a06-472a-ac7a-0ddfbd6bc6c2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c502c55-6a2d-4033-b678-9836e5921e25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "408aa969-391d-4414-9416-ea4c810e382a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46bb1eca-3e6e-4fe9-b7c7-d30ee369f0e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8d13c8ae-16b3-4f65-b5fc-e91c2a16d637"
                    }
                  }
                ]
              },
              {
                "id": "06c3b023-ff32-440b-ac95-d58b14402a9a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "970c67d4-d21c-4fcf-a507-ca75c536c1e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bafbdb0-2c5e-4b1e-80b9-b4d2a4e97058"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2df1be7d-e982-4ba2-bb00-f29747ed5723",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "593b66a3-80f2-45ee-8cb1-190250f29688"
                    }
                  }
                ]
              },
              {
                "id": "981ea842-7ce8-4745-99bf-471694992442",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4157eef-cd8b-4071-8fba-3df3d8130ee4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8b02306-62ab-4bb2-bf64-e05f6a7bddd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00de783e-ce16-41ac-b4b8-97a4fd88d74d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5903cf12-5c31-43d3-b651-055e9e792528"
                    }
                  }
                ]
              },
              {
                "id": "1cea7017-b446-4467-a3f3-3450f1f05b4b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5a5d1d9-d4a4-40fd-900e-6de5eb7d82ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56cf08a6-bd00-4ffa-8fd6-ae542a4554ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cae9a61-ec00-42ee-a28f-cdb63ce47bb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5dc28e3a-ba6a-4ba8-a740-cc588dc9874d"
                    }
                  }
                ]
              },
              {
                "id": "90854d22-aeb3-43c5-9001-ddcb4b0ca23a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c8f6748-7cb3-4dd0-a2c9-5b5b5d2f1739",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5298aae1-b527-4fe5-a4be-e1e23eedd14d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29160eda-a286-412e-b986-4e2f2551c049",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "088a3f82-f5d8-424e-b28f-a4181936d0a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b727c4cd-0000-46f4-9761-7e21196fe51e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c17f7ef-3eed-44d8-aeee-fbbb32b16496"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "26b443d2-d9c7-4b5d-b32f-1503e4183653",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1b4971d-c408-41c5-8e0e-6c611bc29fd4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c18eee1-3bc7-4cca-aaa1-18e23ef3854a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "01f479cb-87af-4af0-a33c-623532b6c78f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c13ecea-b2fe-42cc-a375-b5c62c9fe7f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2ce3613-4825-4eb7-a836-1ca46c7deeb3"
            }
          }
        ]
      },
      {
        "id": "ebcd301a-9547-4c4a-a184-16aaf9bd1999",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1c280a0f-a50f-44f6-9638-a6c3b0fca86e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b33d4755-589d-4807-bbb5-a0f26e80d392",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "67dc826c-1554-48da-8431-b5cbda16297b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a832ac5-3016-4625-b5df-83bb189033f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d851a575-3809-4bdd-b6f4-6a888497c665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c46596-11b5-408f-a40f-e59383895d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "98035e1d-db3a-4778-b3a9-a24b8bc0b056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b3f515-a4ab-4832-a612-5e816ee6893b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a656e16-22ec-4256-a789-b2221f4432df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79c3047-919e-4f21-8cb3-c49317a174b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aac3069-5e35-41f6-9ae0-96c7e0417e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bccb8dfb-d3d6-4842-9bca-c934ea4de8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b340e3dd-465c-4fc5-9770-dda27d432705",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46577863-3222-4c58-89ca-ab07193339b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaca294d-1731-46cc-b27f-13d7df26e902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61521c98-7da6-43d9-a6af-a4df0c722c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da289608-125f-441e-a86a-442186eddae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b63e354-58d5-4a3b-afb7-b34e256d200a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa66da7-cbb9-4da9-bbaf-7168f01cba68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0001487-ca72-4d0a-ab4d-3c485e819c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b64810d-8c8f-41e5-b966-3c17790a575f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5fdeb00-7f4f-4619-a7c7-2478a0b60a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e2e619-3fb6-46ea-9daa-2ec0db50b47a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754bfd65-7cd7-46aa-9923-8ae66acdf1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54088ee-3cd5-4797-9695-adf28f421c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3deca184-44dd-4c96-a2f3-de850fe70d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6eb9ac2-fc8d-4e84-88f7-d3b7cc0a8f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc3b3fc-bdb4-4eb8-b069-babfcaddbb3f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d723829-262a-470a-8cf7-f24ab485488d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48aa392f-b279-4a1c-a7fc-a006d5c49f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8a8d6b-45cb-40fa-a77f-35b7e767154f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5567edda-fab7-4a50-8f03-509c3ecee2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27515b4-9696-4401-94c0-4e4ed810f222",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274cebfe-3b77-4dd8-857f-81ffeb27e3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffae75b8-dfe7-47d1-83f7-9a7111d399fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d8ac9f-ae07-4906-9b52-69ba2b341e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "62477419-1579-4ace-b6eb-a00cee07c57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b07be40-ffc5-43d8-a084-4754bfeabcd8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5b2012-d405-4758-a13a-193365010e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c30814-a535-4101-b2f5-0a13fc24045a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c009f4f-c6a4-4842-a87b-8d32e3a6131b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54513af0-e138-4ce2-a16a-311438f1cf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36fa4c0-aa4e-47fe-9680-516820fe172e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77c4b1c-ea22-41bf-a36e-3950338aff63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c43ee2-2cf3-402e-8b77-b7cb22b364bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc0b93b-8663-4bef-a911-d3e810867e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46657d72-f0f9-4bff-b727-e0390cdc643e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b3bf2f-5eb6-4a0a-a829-15f702e4cd83",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0291b90d-b04a-4cce-a351-c77ce6c8e926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a68fe3f-2bce-40f6-a858-b4fb9c47eb8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fa7e64-1d68-4e83-a4eb-255908efc9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "267d4df7-0175-4d08-ad71-d10b9ca72d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820f714d-0c50-41ce-9614-2bd0e7079a8e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0a075e-21eb-47b5-a18c-175c53e17040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b5e685-8877-47d0-8d1e-f09bc87977e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649fd28c-eead-48c0-9f5e-3dd774816183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9edb417b-c51c-4fe0-923e-793aa76a1a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9de7f35-0958-4ee1-b7d7-87b32a7e2942",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6725004e-f514-4960-b983-4aacf36f0adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f95872-44b4-409d-98c8-80826ed06c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0141e9b1-fa1f-4839-b7da-2a1095f9e1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4faf584-0e36-4437-ae93-d3b2db131e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b6d657-147f-45fd-9fe0-6e007f13bacc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bc3322-f817-443d-bb17-95e590eaf2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7c3506-baf2-4ef6-ae00-14d945409ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29425b07-3455-448d-a3e2-85ecada7abb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96ee259e-65b2-4a36-8d63-f60c015a311a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95af3bfa-29d5-4260-a461-10968bff53ec",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d233449-e4d1-49da-935e-94697eaca41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2859808b-dee3-4146-b833-79de9a216913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953c79bb-251c-411f-b2c1-6110a0b752c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "210d1adb-6cb6-493c-8ebc-018140d44691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a2a90b-fc38-4c69-a265-0f75dcbfda2d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbf99e1-e492-48f5-9d38-f63ae40da35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f616dc9b-ba55-4ed7-a396-330599fa86e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852c0f4d-ebe2-449b-ad76-ab97de2f82ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f730bd03-6455-4942-a2cd-d5cef7dec1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3910d0ee-1a7f-4b44-9ada-b89bcd921841",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca6214d-871c-4083-a8bc-53f6dc8136e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bdefa5-6829-41a5-97d9-688131dcfc2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7156c8dd-1fcd-4d41-b933-7420572018f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a17b56d-79d6-4b76-a239-a21a00ec3238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf69753-029d-4b20-9fac-aaa2976a29f2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda752cc-7a7c-4068-b627-dde4bf5964bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87185f2-ed43-4d89-ae74-4f9d165aac01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a899254c-105b-4880-91b7-48eb7b0879f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed6e498-ad14-4c5e-8463-bf1ffc823499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cade51ac-14b9-4835-a7ea-4ebf62c435ae",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ec9ced-a86c-4de5-8db1-89b519019dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae07997-71a7-4e2f-9b20-53823e474f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368c03d3-119f-4445-bd40-10ccb4e52f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae435e2c-34fe-4f5d-841f-490a094c0d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b837aa1-c363-4bc8-81ea-c0f8665fe858",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5f53c6-c9da-4f63-92b7-600c65b3abdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95ebdb8-bb3b-451f-81f4-3562ff2b7bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8636dd86-1cdd-4f2b-991c-68fdd5d921df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c650fb65-31e8-4d6e-8389-179400abc9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c11fc9f-7c04-43ac-b6e4-b8819f93661d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5821b85-f472-4e20-9dad-49874d62699a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d68804d-961b-4867-851e-f27902c3c7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3917a16b-aa71-44a1-baa2-2db753b9587a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac8215b-1f98-4136-8b74-1da639f5cb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5c1679-0703-431b-a8e4-88cf4ccd6e08",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d3bdb2-78e5-48a0-a260-9bf54b4eb258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734c36df-4d25-4fb0-9d4c-f994626f85f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb13f95-f8ec-4a6d-8f51-9c2605675b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9872e033-19c4-4809-9ee5-d3dec6468779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ae5cb0-cbd8-48b2-82f3-1513fdf6ccc8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918cd459-ca18-405a-a795-ac7e64886fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf4e946-ed80-491f-9955-35c17689b942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb2e754-d53a-4243-a8dd-82dcf76c1e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc0aa17-b2d5-47ec-b640-fceeed294c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c47bbf8-4ca6-4a2e-9051-562f0ac0e339",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8efb9a-ff23-476b-8992-d5823118a3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c995d09f-0d92-4f06-8c1b-43c60bb9586c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372edbd9-285e-41da-b687-dcf7f4f83309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6a09ce-b59f-4d52-8b9f-c5c007d57352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e6ecbe-5f68-4fd4-8011-961925ddcd30",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b396a56d-cb93-48c1-a1ca-cb1cd7bb4f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3dff57-7fcf-4179-946f-c4ec0ad7dee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21edb12d-c434-4d50-93a4-eca7a910296f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a665f1b-d901-4246-8f47-e63b16d35ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a9b444-d01c-4e54-91c1-e072e5e32772",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d496dd-5c81-45a9-aa4a-7426b34c4396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c60910-f064-4080-8966-5ca8c1cf7bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7236e85a-5a4a-4e37-8c9b-a1ba60be30fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1fb6d5-d897-4f30-90a3-ef87a6d654d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15390699-464f-436a-9aa9-e1a065f98b00",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4b9127-bcc1-4325-a08f-2a15bc1fa31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4013c6d6-3239-4ae9-a2de-10727645ac7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbf136e-e52c-43e3-aaa8-f7ab92caed40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26524ddc-5f95-4f43-a384-ac402a14783d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacb463e-5616-48df-b0c1-f24ba10049fe",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bbf404-bde2-40a1-a731-30143b7fe3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b092faa5-e320-4520-841f-9461ae798d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3238d2b1-eb8e-4d56-87dd-b9e96c00e816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c2a995-ecdf-4348-95ea-51a352b8ddda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ed59cc-2813-4361-87e0-b2faffc85908",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f2f770-8b9b-4cc6-8ad8-e85ba2f01c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3611e36-370d-44f1-9ec4-7430e1c70cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fd9691-5368-489a-96c6-bf595bd58a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a6e2814-f5de-4a73-9001-112902f012a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6f94e3-de63-45d6-8ff9-a45a2ae16f96",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f7dd6a-4c66-44e0-8a4d-34d36010c40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f0a6be-2e65-4e0d-8845-5120af8e22bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4185cd-0bd8-463b-a01c-943f2c4a1be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7793dbe7-8339-498b-9a07-e7cb516192ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e8634c-785c-45a4-99ed-f1cb04d627f4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7e54c8-0ae1-4848-9883-87da3a202494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30f6ec7-2eb3-42c7-9986-69bd676fc515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b628a4-0ffd-4e8c-9bfe-de2548727f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4ac74f-c83f-4176-b039-d18c95c81af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a721dc9-21cd-4a36-8653-22b442a1da6e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96aad3bc-d60e-47df-b604-9dde15b3176a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80ed2d0-683b-4aee-9509-18a1d4d4a03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688c011b-d825-42a6-a879-c10aa1fa0cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "590a6a84-e9e0-4c20-b0da-f198b5aa428d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4a2a1e-9047-41fd-80ac-6bd9ff56deea",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc1df46-a67b-4f28-8b38-8d76616bc664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af3dfcd-905e-455c-a0a6-264538fc5ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba895d5-05fa-48db-a796-ec3ac44ab039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59714701-ea3d-4669-98f6-d3c70931f073"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "315146f1-9249-4876-a4ca-4391711b9593",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba994877-2b6a-4a38-9766-276225e10ece",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2adf6c2-fac7-4741-832b-22e1b2c25474",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e5d06e-791f-4c78-94b1-7e9c8db2b8f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4609cf34-052f-4fe3-8649-b43fa4d134ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8a4298e-038c-4d4d-ad29-434d70bdbbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68d90fa-c7ec-48e9-9e81-9a995dac1cc1",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c8bd21-1931-41f6-85a6-a484528b58d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "677bf05f-9c46-4fc7-8eb8-a0695b0938a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "732e15ce-0828-4394-ab6b-3145cdac2eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "986420f6-5190-417f-aacb-697ad26efabf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd92c1c2-f057-4e35-9b5f-b8798d0f8de3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "259d1127-26f4-4a12-bd4d-b78859b26c3c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1eae3338-077b-4fd5-b682-fcb01b347db7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bba49778-5809-466c-ad85-5bfd3a28381a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fe48fc7-3d4a-4a8e-8cfb-0c2264a53806",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "44b33741-4bc7-4c75-9210-5f13ae22a805"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db22b19f-af77-4425-a627-609f4926c099",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3af9b3b-029f-40df-a676-6ccca6370594"
            }
          }
        ]
      },
      {
        "id": "ee6df769-46e2-48ca-a3b0-93518ac5683c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b21f4f56-7423-499b-881e-4c43d811ca04",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0806ab6d-2036-422d-8c1a-0050691c07db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "51ee1c3f-b853-418a-bed7-e5cbde2e6ad3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b43ee16-078b-426a-b556-79327ff6c326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8aa15d-2242-413a-9060-aa428e269288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7b7858-9d72-42af-a7d2-cd815a483d6c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95eea796-53da-4496-af92-6517d6a3b070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff82d00-b9a5-48bd-bf8f-cfbb4b8978fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11603883-fdf5-4af9-a23b-90bc4a155776",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01696fab-6292-42b2-9137-6e57d411c8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c05233-e6c0-4fbb-978f-86bfa3916cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d34969-5a5a-4b88-a914-3a070ce8504b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887f0dda-c340-4336-868e-9354ce95ace4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246fd8b2-9f85-4b98-8324-ab4f4b77d5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160c349d-2250-43eb-81eb-265a5248056f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb5a915-de05-4090-a6f5-91eec3a0bccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f87e4b2-a600-41e8-8518-ddfa9b58efd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be3b85a-a1ac-4158-b97f-dde771309ada",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cc2977-6716-4d94-96fd-6b8ed0b4dae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fb31ef-19ee-4a85-91db-93abf81b67b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7977724-1a39-4681-98c5-5deabd647822",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85837f8-7530-44de-829d-531c94ffe8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb25fdc4-9a27-440e-a9a1-fe4447f4cc8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5874f5e0-b9a1-4340-9f2f-76f694a20ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9409e2f7-ca8d-4b82-a0c5-2463532fd8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4427d1aa-6987-4a3d-9c36-530a11d335eb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4c965d-1ae9-4725-b8d4-b90773aaf5e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6a4b9d2-311e-417f-96d2-cf4c333b92f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da80b5dd-ff05-4e17-af18-99c28b99d220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c794c9-f227-485f-8319-1a76bd8f246b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18eb5162-1207-4ab0-8c38-6537af527a1f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1acf97d-a477-4ced-9e7c-bb18d1bbbd11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de22df6f-1aa2-4778-9c4f-e96f05ab73c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4741e453-886c-4bdf-a6ef-404bbea0c7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233ca652-bc08-4789-a2b4-197dffe2c0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f51b926-2bb9-43cf-b7f3-87b4b48b353f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fefe5a1-5c41-48b2-b16f-929ecf78ad7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af1340e5-f077-4336-9e85-c8b64cb34390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e42e339-e13f-40ed-a58d-11588dbc9c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4e2196-146f-4103-bd3a-dff65e49c9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb805719-dd48-44e4-95b7-7be14a25e25e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb399cfc-1058-4eb6-92c3-7279bfd340c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54670a7b-d382-4b6a-967e-1774b2b3089b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ffee72-ad23-4adc-b9ad-8b96c535c475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af26f56-f46e-4015-81a3-4e97a7889b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f17e48-fbdb-4971-a994-2e8aa61062a9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1dfb05-c952-4f62-9168-c9dd11c004f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458b3892-0359-4784-bc9a-f389eb4016e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ebc496-5585-4902-acc4-7a94e5e2f3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7987dd0c-8a32-457b-9dee-9b1a5fdf3be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd25710f-3ae5-4ddf-ac84-265741813f61",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ab9f50-24e7-4acc-99d3-408e791e9c3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c35764b3-331f-4665-961e-702e3cc40c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e543045-8338-484a-97dd-a988d29d23b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80da9920-429a-4eb3-a41c-3b9676aed84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5dd073-a023-4670-85bb-a1aefc538d9a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0918f78-86ca-4130-9d5e-24fc7038a7ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a141f45-75ef-4115-9156-27da7240a58b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b128fa0-acef-4b6e-9e4d-b9f0f9d8d8d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c19193-646e-44cc-ac7e-5656516719d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403010fa-abf3-4fe0-b9a0-5c684d87a96c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0d17fe-dbf4-4303-8732-4a44824cfb53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0eabfb5-0d88-438b-b915-ef397ac1edbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68c2b55-98c3-4d74-99b3-bb1fa3391243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d705e8-f139-4d99-a034-a8c9fc7b5ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6feb68cb-b687-42a5-85de-eca73934aad3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2559db76-7c37-4228-986e-62a12f788422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a85eb0ac-db91-433e-8d50-c313c04c42aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5a3969-086c-428b-91a6-e1b3df00ce43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904b73ad-8e7c-444b-a195-a2d19d3f686f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5048ad-f343-45c2-a879-d3619914235b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177b36be-e831-4668-8882-e6b280a68f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d6aa70-5d9b-471d-8aa4-89b11e7419b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116bc9cd-3e7f-4fbf-84be-7dc2ebb3627f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9ee29b-b05b-4ff4-916d-4cbac3dbc8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22fc225-b925-43ac-b4d1-0d02b8627aa7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72dafb8-f208-4182-a001-551ae65dd6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f16a03-b216-4954-9c1b-9ffe030f51eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7a479a-03da-4418-8427-e108f3500171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9cc8a73-30c1-4d55-b6b0-557f79d840ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aff6804-9061-4021-8d61-173aaadebe38",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f384ce-d7f0-4a9a-a825-8ed8569c836f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f5b695-647c-4076-a016-aa6bf3eb5ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a237d49a-e4c7-45f7-8607-31ef1a9c3a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b3dc84-d296-4475-9bd6-162c5b2b5895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7429b8c7-3d2f-4745-88f9-2f9a5bb0e943",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d46c55-e960-49f6-8234-4eaa5eec1677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9cb622c-3cd1-4f01-8926-b461e297c8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86820b76-caa1-4bbe-8389-6907e8dd2206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04261a0-5604-42a9-8bc6-534928bace34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4ffccf-0adc-4d1e-b501-7264a0254847",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3486f9-f266-41d1-90ce-4cf2b2310c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd46028-20ba-4a91-b05e-a55aff79c968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a627850-c2e0-4fde-8b4e-4d7388de4828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198ee8c1-9eae-4c1e-ab1c-13159f71205d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da54154-1d03-4d21-a07c-4f6ab64eb3b2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0ec171-99f9-4677-9e97-bf24d5e913b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee787577-3b14-43ba-ab4d-b513e4445908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8205d3c-7804-4e60-8dc8-c29feac9ad29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3c3dfc-bd02-42a7-bee7-d2334e691b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab182b69-069c-45af-956c-1baadf559863",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52baab80-38c0-4dad-bf9a-1f9697a94cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e5717f-bde9-4f39-b0d9-6abd0fac5be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1acdb3b-dad5-49de-b98b-acfbde26d011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf34e489-7516-49e6-8826-5482b562dde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c3e0c2-2c21-4529-a65a-4ff4bc98dea6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8e5285-1aeb-4a27-a6a2-9b436b88ed86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d9c40c-fdde-412a-9439-68c5bc07970a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f2a7da-4141-4024-b457-60d25b8a3c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9396dbd6-0673-4f53-a658-ed0ed2a9c7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051cf62e-4b4e-495a-b5be-0bc4b3c240b0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ee35a5-a47f-4681-bec8-2faa76fae8ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25c71f34-2e88-4e43-914e-3da8866d5cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e5f7c0-6403-4125-9e30-97efd2ba10dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4e1592-586e-418d-8679-99311385e602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f5c126-a747-4ea9-8aea-52cef6fc7cfd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f57eb6-6846-464c-9a3b-32f58ca89e1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b211f49d-af98-4b50-aafd-3da712052657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4433df-9b99-498e-83fc-c05f4e23a2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297d14fa-e1d0-46ec-b660-bca502e7b308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efab5034-4a29-485a-ad41-c0b883830d13",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5ecb5a-87be-4a9c-bc3e-7fc9cde480cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2afae53-8bbc-4686-b73e-835014ac43a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7863a644-c081-4faa-a0ab-fe0548547595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f47a200-0334-4671-b596-92bcf1cf1fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309b103a-d63d-4345-a279-6a02e357d1d1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2244390-5a84-4750-81c4-e23d5c9451b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7dafcd5-1dde-47a1-8130-2cb4c559500b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf52153-fdbe-476a-a367-0368c52a92c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819ef376-3095-404a-af22-5643f97155ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a241adb-618f-4844-aba4-450bcf94d6d2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e217b9-d78a-4288-99ca-d3c6bf21cfac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dff1eb2-3c52-467c-9d2b-567801b7c75e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0420270a-532c-488b-b996-5a8459628e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05fae6e6-3ae6-47c1-863a-5deb928502da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35521f5-ea44-4660-a2d6-f9af31d20c77",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4672b45d-2fd1-4fcb-91ca-e5e509fd9816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71886c93-6380-4ce1-b7b8-569659dae8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de67ac3-fedb-4cd6-a89a-9bd895db3a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdc6368-9dae-41d5-bf70-c03b2821ad09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918670dd-487d-4af7-b348-946a5d4a51a2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2af1ea9-54ae-4e0e-a08f-1a4a5d4000e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2703e06-f57d-484b-917d-21bd78124e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadc8a48-271a-4fca-9211-407ca201f77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f53749-d1c7-4aa4-9e65-f530259d76f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de969276-73f6-424b-bb8f-1522abe9512c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ef8946-3b49-48b3-9579-383fbf38bb72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f79517e-699d-416e-8a16-4019595eedf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb845721-c845-4535-8ffa-0946fbe0a504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701b62d7-e83d-416b-929f-1e0b68b11843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8187617-3eca-4438-b1b2-67e01c357d59",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471d2ee2-c518-4987-904d-e2756490303a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4531cca0-ca1e-489f-9e13-277e05f54026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824a315c-5691-41ac-a8de-39e0503793e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d37b4a0-f731-43f7-b5bd-e5f9b9d65d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e85d704-6c0d-47ac-95a2-cfe944253340",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc4e1f2-e65d-4c4e-9dcc-eb8598dfef92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "524f075b-b315-49ff-a249-f10f8b2a838b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e4d7fe-f938-4b89-a8b8-8c9eb166ae44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8001d763-5981-4ecc-9d0c-d8a6de756cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d80f80-74e9-42ee-88f1-f1f96b2b1406",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dbc670-b20b-4d13-a5ea-68a031ed88d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762d571e-05a2-4b2c-b7a8-17097d8b88cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45e44cb-d357-42dd-a2af-b62c22ffb8ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c995df-5f7a-4ba6-9b1c-0a2499e094c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1278388e-088c-4718-bf95-96213312a268",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7824624-e135-4623-b95d-b11b77b19de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a014a771-3a97-4f49-8434-679a60585542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96de4cff-8680-4c0f-a5be-07dc0fc7af1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7522375-4877-4a57-94ff-0d96a0c00f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2559635a-274c-4241-a5cb-f6cc8756e651",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3a493c-1f2b-40c1-a7e4-1f58c8d65ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec08e4d7-4c6d-4999-bf03-47d97600209e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802416d6-7619-4265-adfe-11a181849496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8b5158-c5ad-42c2-b307-d62c908d55d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb720dd-686f-453b-86e3-1123c6ef070f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b97a9e-ec0a-40dd-8c92-370e1f38b69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84cfe584-f7c1-4dac-8692-47b9d34eee41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d984f1d3-4d02-4f3c-9629-6d20e44fcba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841ee7c6-1806-4f02-b0b4-184bd0d93554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3458b92b-de65-441f-86f4-fee8810909b1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838b56ae-90c6-4ee6-b3b2-8642827bc353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae85a90d-e7bf-4e74-a66e-eab708344c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e98f28a-fe46-48f6-a6dd-a96117688a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414ede06-bb85-4f66-8733-3e0bc40753ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a68235-4d97-4219-bfd6-78bcc5096028",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f388d2e-dbe8-46ba-b4d3-3f97876b8994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb30137-ccbb-419f-b9ac-cb3c9c354bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17089dc8-1ebd-4dc6-85f4-c5653bee803f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c867d0-89fa-4e68-a4c6-e4c31fbdf1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf65b97-635a-4924-bb76-959e6eee353b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21eb4351-3d2d-4e52-9096-95a4a3227833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51e5ff1-ea83-4e19-9af7-da1bc8a5ea76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22b01b0-613c-4b56-97e7-8a6e7a536b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85ff527-6550-41fc-9cee-765f2c24aeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9420cd64-f853-4777-84f2-7d844f3033a7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b0f8a8-16e0-4f16-a4a8-58b5eea9dedd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0f5404-b058-48f9-8ce0-e7082e3746d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5a8b0e-d550-48fa-898c-37deca7ee9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac44d619-6c0e-4fe9-9ef1-01f455b3718d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a90e21-9786-4ebc-9174-586e77b9a67d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7381e3-0972-4342-9c91-99f8b4936412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2587333-20c4-4fd8-ae5c-55a891d4c240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b9676a-e93c-4ec3-8478-161c5bdc4c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805d0ee8-cf97-49fe-8e41-95cea748930f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997da168-3348-4a59-8347-8411a6d927da",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ba37c3-5408-4593-a7ba-0293ff47c9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a20662-b316-410c-887b-dfe79bfc16af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42902cf-4ff2-49a0-9ad6-5e8d522c9045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc17359a-9e05-4cdd-ab36-11955d1f3e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8bd4ec-136b-4e7a-848e-59a215f4b4a5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90aeea0-3129-40dc-8795-527e8d4964d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b57c002-9e8c-40c8-9b3b-a339d8c8ef46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48b2862-8434-425d-9a2a-7aab41f62b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74086e86-d7a4-426c-9410-70dca4a527ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b810b34f-d25f-46a3-946e-11bc4ac1bce4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac9788c-659d-4fcc-b90e-c306eb416e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be87fd4-6929-4d03-9e37-62e261040c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30d7628-6401-40a7-b711-0b1dcaf0b027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e437bfc9-0163-4303-8ef2-8e767cc09dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40870420-8842-4093-b336-072d72e656ef",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db771d8-4786-49c5-ab74-90eb885d8895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb59f86b-c33e-4097-9ba7-20927f95b295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8604a577-ba80-45f6-8524-35671576eeee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0a43bb-556c-4947-b354-464e0c1d2ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accfad98-20fd-49d7-aeda-9a9a9ea104b5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d876a7a-f567-4f6b-8c85-c24e2417380a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844eb0b8-c5e2-4b5b-83ab-214b65f97cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a3fcd6-1ddd-497c-a24f-fd02985db2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47795e49-0d5e-482a-b27a-1cdd474edcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1576936-b707-4b76-adc9-db55cbbebe64",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd622fd2-2ae0-45bc-b470-f784687f2d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695c686e-f56e-483f-843f-afb5e0b37fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b641fc64-72f7-49fb-9f3e-838f3a65736b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6770c89-0ea2-416a-8d4b-4761776e242d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6f2a2c-5274-43a3-bfa8-a277e27372f7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742609d6-93a4-4671-a958-db6f9f62c3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33743a0b-37f2-442e-8c45-2760abb77f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e766d580-0792-4943-96f5-3e9c50cd3d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e69cf5-0d39-4ea9-9c6e-3f0712432dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8668d0a-0cb3-41aa-87d6-dbc533f18eb8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c225d3-062b-4a75-af0f-171de38627fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9098181-e748-4d52-8b08-035e575eb85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6634d33-62b4-47bd-a78a-1f49466a4825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91dc86ce-76df-4f98-81df-76b6be26f8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544cdd18-4b65-4f8f-9cc9-9e3f9670d35e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104b9b4e-105a-4e07-b47f-925780b0e987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e99d5fd-f3df-4d82-8af0-397bcc244f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459bef24-266d-4e48-894b-1e98c3f59f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfb8f02-a40b-467a-a318-47a1bbe16585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8dd71d-5425-470e-b0d9-50ea8fd4f903",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6c83d3-2354-4345-a0aa-fdbefad956f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8f692b-736b-46a3-9ada-bb34f6cc02d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47387d6c-6ca8-4e56-9570-a60e88182a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab254ebc-0f01-46b2-8adb-4d9d666c47bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f14c0cd-f7f9-4096-83c2-4893b2f8b10e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9addc7a1-a69b-4bee-9fe3-f7d7aef09fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6200c1a-e11e-40f8-b260-9ff562c2f5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d129e7d4-c909-4363-9778-7b99d11b7f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692be00d-5359-4809-94eb-1e39dc6e096b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a17904-a042-440b-afa3-d674f8ceaa16",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349dac5f-5ee1-4e5f-a525-2608008890bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b74374-513d-47d9-b0d1-86fc9c306c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6551936f-6063-4af8-9f7f-19a855655079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96d2a06-76a0-4126-882f-fb9d81fb7477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f0a00d-a705-41f8-aa9b-4d79f9959d51",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d03b14-4d5d-4ee6-a2ea-93fc0a46c418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e092fd48-2a05-4657-b77e-088c67b0ff4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b715e9e-f5a7-45bc-b9f1-8fe795cb9599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa2daa6-7dde-49e3-8460-94ab54451a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd37723-e580-4e04-89c1-2d51434d1938",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb44380-3b32-4171-95e7-844449bc0339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922c22d0-8046-49fc-aaec-b3112736adf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0573d93d-5ddd-448d-bc46-a829627998a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293b7a78-00bb-465c-b15d-38d009b75c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bae0e02-d745-4850-ac61-8f57f73f6860",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c136b5-c914-410b-97ff-d0c7e7634be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835f1920-c634-4583-af76-235ab334a962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de505d38-3bf0-4c19-ae9e-3c2c471c6882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403dd80b-e7b6-419a-b274-903df77199cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391c5254-f884-4de6-b47c-b5d00d9adcd2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3dc20a-6897-40b6-b57a-6d48f6c67160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de98d34a-3bc9-4b2a-bcd1-868cff66e5dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fd2290-29ff-4354-ac9d-be6e1d31dd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88fcd45-9a34-4e0d-a271-fafac7662739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bb9ffb-c56c-40c4-b156-6321c0a9aed3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492e8fa0-7edc-41f5-bb69-78c7eb9c308a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6151ee3e-a025-41d6-a2ea-6862e8cf55be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b90712-5630-48f4-8721-8e4321235ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8d952a-4d6b-4149-ae23-3246e61edae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec92b5b-3a43-477c-8456-383cbdd22ef6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b644c2-7f22-4cf2-a717-43a15f059097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab7162b-a183-4174-9779-5a84c21cce0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afc3f39-7bea-4a33-bf4b-b311e3c5e7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b15069b-25c0-45b5-8186-cf91f07f36f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8e6bcf-da38-4c2a-a03c-96e6232137c2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68eb2de4-6356-4b3f-867e-33b4fdd9d853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347494bb-f6b1-47f3-848d-bfecb170d504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cdc850-7227-4a40-aa08-30e2900d9296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c64912a-b3b6-4bfb-ab47-b67699bf1c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bca6b9-9810-40bb-8483-cbd6debdc5be",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffd1472-011d-4c8b-af01-555fdf58b2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393e03b6-52bf-4eae-9709-163da2428d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c28a09-26d3-4051-80ab-4c81b421255b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80114ad1-9352-46d2-850c-d40b15f740ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0a4e95-f3f6-4eb8-b791-79b48e38a05f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a16767-8bb6-4fdd-b0d8-7655904a7711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c1fdd7e-c790-4e8d-baea-f01c786af20c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "815ff13e-418e-4ef2-8130-c0790998b687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4557cce5-7d26-4f00-9667-0a5d8ad80dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dd43a4-0f0b-4cd0-88ce-d2b0eaab2d23",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e70646b-112a-47d3-860d-4593ea69a0cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00986377-fe54-406a-9cf5-d3fcb3149b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0606af-7259-4729-9522-b36d0c0d0eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332a2e90-f67b-407d-bc13-496dc2716399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02caad4-f5c6-4ded-9a15-7c24acfbed1a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b4b487-8e36-4dcc-abb7-45bd376ba761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d0a291e-3f21-4c62-8546-4ff7bb5eab9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9dbce9-00cb-404c-bb4d-1887ade8aa4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f9f71e-ac0f-4173-b239-766ed6e41009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611c727c-5e56-45e0-83b7-f05fe15628fc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a903cab-c71f-46b9-9e92-8a85d05d16b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d56888ba-5c6d-420e-aa99-a6264f8faf59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1202238a-1e21-460d-9e8a-6c4fb9f9a0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43489f87-f006-4eb9-acdb-828b8b4d53ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203f2833-0dad-4f0f-a2cb-1a2004b3ee54",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4f2603-a58e-4a49-8f9b-a4962662641e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f854ef9d-8594-4d79-995d-adcec72f0534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22019c18-3db2-4d31-be15-4162abecdba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d796fc8-dca7-4175-b880-16795b6dfbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b2fda9-3bf0-4b04-9bca-4c5cb8641154",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3e242e-497f-4789-8c9a-1c16ac300a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "404a8864-a646-42fe-a8af-5079252ae2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aff6bf8-0233-4316-9030-5820c36fd293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77c1ad1-cba3-408b-b571-7fff231ce29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c27ba2-849d-45f5-bb14-5be2722348c0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa63aea2-cc8a-4a30-8253-aad8fcae5467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a80ebe-52fb-4da2-a253-fd3288ec26d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c361aa44-40a1-4165-8eaa-d6bb12f194be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d815baf6-069d-42db-8f00-2409757dc1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513d7941-3b3e-430a-bd2a-a513cd7fba8b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a190ab4c-6454-4d85-a1cc-24d864b43d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2564099-c507-48f7-bcef-8c407b7de7d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9fd8f5-5913-4316-a166-5ceaef9de9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d679e40-59c8-42ac-bff2-528bb6d55114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dde8730-ab47-447d-8819-c981767ca56f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9982716f-2293-41b3-8f43-d64acb26bab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a5d238f-8abb-4bdf-acc6-9fdc5b99c335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f24233-34fb-4212-a559-81842af9ec37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9e058b-6c04-4b9b-9cf7-c81727328e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdd6090-35d4-4ce1-81cb-49cbea408942",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb7b1f0-58bb-4535-8bc2-24370f42cb4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae7f86c6-ab15-4d42-a1bf-54954f2a28bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c955e065-f725-4976-a669-8f45a40f705d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e180091-e4d3-431d-818e-2bec7eff0cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ab6a69-f6df-452d-811a-fc38062bf5e4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447ee53b-2579-4a9d-8a41-e56a28b120a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05b163f5-00bd-4138-9490-5a5aedaf3750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331b4279-61a2-4591-98cb-62250ae52ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d76c0c3-9964-447c-98c8-c8f914425391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59c580c-2755-4ff5-b9f2-54d38052c0cc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bac2a3-3693-492b-8892-9ec2f5633301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "287a353a-a660-4ed7-a090-70904b4d0ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816350c8-8c93-49fb-ab64-13742a0cd04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8366e7c8-df98-4ec0-951b-16e1cfcd9896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2218fc08-33ea-4267-b122-4f66a89c41d5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6436a857-278e-4646-becf-2c3bfa4a7645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e604e9-f6c3-4b60-840a-387af4391b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7bb829-732c-4a0b-9256-7cc518e05306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901f4bf0-74de-474e-a187-ff70c8a2d565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7afcb6-2739-4224-baef-c6dc7769ca83",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a78b54a-1e5c-431e-87ff-09efea0bf0c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f41ca8c9-40c3-4a06-a004-24734b7ab8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "136c9438-44dd-4e30-93e6-ffd3af74f238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abd7a6b-4fc2-4ff5-9b55-a746b474c280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84d0278-4023-4f0b-be9d-83a24eea772a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00788234-69ac-4d6e-b15c-13fe4b423e7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1339c18-39cf-496f-af5b-a309e7c1a598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98d8d53-12f5-46b9-a684-56e073a7819e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc485d2-ab47-496a-97d7-ae580c01e200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4724967-82a9-460e-a5e3-8db2cbf7399b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8263ed8e-e738-41b4-937c-92e992896869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39d2c94e-c34c-42fa-8e0b-27a6c3f98b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d4c904-3c73-444d-93e1-9e14c8de41b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fdd2ac-cf00-4dd5-8d65-cd4653d92170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06f015e-df97-4637-a9ac-2949b925f06c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126b50a2-2966-4804-9153-647522087e6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6e9e8d5-19ca-4ee8-b3ec-f4fac6ce25b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f87d258-95d9-44c8-ad64-6b0b59669dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431ebfae-85d0-4d06-9cc4-93c8a6db01c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e077e9a1-7655-4772-b719-44376a473b9d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721b1cc0-34bc-4056-b04f-9e7c4003442c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06c276b2-7b1d-47ea-a929-24f668457ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b42e3c7-4e69-42a9-b356-593cafab0ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759d8d11-d8b4-482b-93df-8f322968dc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624cb695-5575-44e4-8fea-5b6b8b501bf5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558a01f4-59f4-42b1-8f16-418e90147dfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa0a1e0-371f-456f-a751-c9c2ef10c07b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23b9d0e-9fe8-46f4-963f-32ff6926464f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400a3b2a-0321-412e-bf88-5ae13b2c190a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966ff155-168c-49b1-9656-35c719b5057a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0d5099-d140-40d2-b7f7-953596b96f7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be4778d8-1cd3-4523-b1e8-7e4e95f5c8cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfadaa3-83ee-423e-aa15-5985afdb8a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1354da-5047-4e15-9d9a-b3c846f16d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35c81fb-15ab-4424-84f9-8cd5e0fd6cc5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb743ff-600d-4356-9859-63b65ba3489b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4d4285d-7612-48bd-8efc-f64fc535f573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32aa289b-68ae-42e5-bd9e-3188cd7fbdcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41b66a1-dbc0-47de-b33c-da255c554c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106e5468-b60f-46ea-a5e0-734f2aad9571",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c6fb2c-a9b8-48b8-8d45-76ee5d3e7ef3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61ccdd6b-8b07-4092-8305-c46410d07eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839416e1-34ef-4aa1-8ca5-0c2f630b347e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b116e486-11d1-4da2-87a4-bfcb276304f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775f4d26-8053-488a-8b02-3d08e6de7277",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f08937e-1eb3-49e2-9e5a-d1e589fa3cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1e448e0-df90-42eb-a662-152caf41eb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470e2fc7-4c85-44c6-8c12-0b34bf956e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fa4609e-6c10-49f1-937b-69e094b8fd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8301fea7-ae4f-4f2f-abbf-0f971019e73c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3289d041-03fb-4fad-956e-4ba4c75b0a7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dd9d0e2-7ca0-4658-9529-53033262874d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b88599-cfc0-4298-b0c9-c07ba8eac2a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1367ea10-0933-449d-a217-e798e4ff834b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dfe0cc-fe8a-47da-af6b-5d0f4eb1ef9c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec71bfdd-9262-4c80-a744-383634255e9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c661d6e-ddeb-44af-9851-9d8b571a4d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44898cc-e7ec-4c5b-8ebb-cc9bbbaca3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8827df-13d4-4632-8aae-98241a1be478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184255ef-2aca-4e35-b5bc-06369384733e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0eee88-5725-4bca-b42c-78a4a32a673e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c426ba6-ceb4-40c0-90de-b307d73451fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8580992a-374a-4ce2-88b3-1fcaed0a339c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6baa49ff-faf7-4ba0-9db7-dbc961bf213e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93facb58-592c-4689-96bd-4e5b2a55639d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b716019a-d458-4ad5-8353-8db152ba7ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbbf540e-d812-48f0-9323-5fbf1fbe40f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1739ae8-a22c-4197-8bc3-937a35482f7a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7037e6e9-84ab-4eb0-9017-e0aa5a41e8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718b8862-385c-4d88-81fe-ed38b4deca87",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f0466d-b697-4b26-b4ec-1a184b4aad5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98991f9e-970b-4c1f-902a-07666a1f4825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf463515-2afa-456d-9643-f06d5feb6e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca95d589-35c3-45af-90de-10cb2d34f2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2ffc0e-2337-4e66-b5a7-1b7cc5921a13",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4416698-d8a8-43ed-9c06-909bd71d469b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d683523-dbfc-43fe-ab2f-e6671b5dd7b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf63db1-0247-4f50-ae68-9b9e321ae4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681263fa-b258-42f8-960a-2969b4bb082a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cdc4c4-2d94-4557-83d9-9816f309beb6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fd3bab-234e-4234-bf92-526980ce4a7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "960a95da-d5a7-4dcc-886d-ea00a5473a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7114c8-7315-4326-8019-504e9bffebbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157c9019-9463-4aee-bde0-8b72f5c48cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f37f01-c11e-409c-a84a-b1c8c781aaf9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7b9ca0-58a1-4601-90d5-f549a8d51348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a24ce81e-7b67-45d9-b375-01d3fd877be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaca711-d4ef-4aa3-8088-cd522c50cc40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec42a759-bdad-46e6-b617-1052d30d610a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f6875e-5317-4e37-9aef-a8357e5a15bc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c50323f-f7ff-4c64-b3f4-f038d1bd28f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1bf7c66-1290-4d05-9169-ddb8638e20ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3623df-0c96-4640-974e-f0c4527478d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf700e9-698b-4ff0-a298-35afe67a086b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5f713c-f1f0-4d5b-8798-fa16ac2ec0cd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8589bc5b-96e7-4c2c-b4ba-e9d9b67d29f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "954750af-50dc-4b7e-9899-617969912f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab22726-fbc0-45ac-83b9-948e0089e039",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5420e6-3537-4644-a8b8-31df06f7b075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27079450-8041-47ff-8efe-4d3e0e1267ae",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a991031-539a-4976-ad99-b4b2d819a1e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71bd3f2b-881a-498c-b2e8-a2be8606b5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78510dca-bf6a-4d25-8a40-2c03bd0e9d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f407c36-f412-4af1-9a9f-01e4575824ab"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "664adbdc-9931-4f9d-a241-bcc445415839",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "730d2e46-3bc5-4344-9618-d0efa4a4c245"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "034078ff-0158-4e40-ab90-30657094987d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee12f2b1-bda1-4bb7-97b3-c3d7a2f1ca57"
                    }
                  }
                ]
              },
              {
                "id": "57db2d43-ce57-46d5-bb2b-7e9e1366aef7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e94c24d-db28-4ee3-aa5c-664605758a5a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e27b9d-01db-4664-b792-21527f3e33c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ff2440f8-6e61-42f7-987e-379dcadbc8b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c449a922-92a6-4cde-94fc-4990d81af0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13918cfc-446e-40c4-a4a5-ec8019a5f098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb784b5-e1c4-4d35-b266-26b0e4ce2ad5",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20faea85-951c-4250-910f-c03d4cc96943",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ef2bad3e-9388-440b-8ae8-3d2d4815a044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0a3922-dbc2-48c0-bd46-55357028e511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e8c567e-c1f4-43a3-9c7c-5f83c157bc49"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef60f257-d63a-4ef5-ac4e-9202ebf038c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16dbf3b0-7da1-4a23-8883-182183d93949"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a0c2e8c-fc42-4603-9e00-e249625f1e9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efabc8b0-e0bd-4206-bd1c-3bd9dd66d5a0"
                    }
                  }
                ]
              },
              {
                "id": "b7bb3d65-0308-4293-be55-45dcdef1645a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4c9dadf2-a780-423c-b0cd-1d82b9249b09",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708c63c7-e80e-4a66-b957-63a5c90539e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e096ec7a-fa76-4ee8-9e9e-0a6704f794fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1907ea-2c60-4cd2-ab0f-605650015220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb032a8-0d69-47d2-bd36-f96ae03f4b17"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "97effbdc-dc2c-401c-bccc-83eb23e91475",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1039d79c-6f47-4ef6-99ff-6c596ef10166",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffb4471d-42b4-4fa4-b186-dcbb2f95f4e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5617a89b-1855-49ab-8449-fde5cb7b9afd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fece471-f459-461e-9248-2ad85d2b1b46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05ebaa8d-0afa-47d6-a5bc-3959817eded1"
                    }
                  }
                ]
              },
              {
                "id": "b463875c-e8d2-44fe-b490-666ecfee0e86",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b9f5e94-263c-4d9d-ba21-f15991e205da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f32e02a6-0b7b-44e5-b20c-73d5e3e9f6b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e0cd779-1900-4ff4-a931-2cf845161ba9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc5f0d05-2d7d-4cb2-a7a1-ef28683bd795"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2acbe1c-6ecd-4f73-8aa7-4fe2ae133049",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aeac072f-4a1c-4700-a1bd-4f633ea478dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8a0d29b-ef80-4ca6-bf32-4159c209292c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59f7686f-3051-48b8-85ef-df123b3d89c4"
            }
          }
        ]
      },
      {
        "id": "47043998-d4ff-424d-99df-8475e7b8db29",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "26116073-044d-4be2-9836-f050ad563aee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9946b7d-29ec-4b29-baa4-757fe5fa6bae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "519f52e9-064c-4ac3-a56b-7a9e38d199cd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2235a49d-596a-4d41-a173-cb47e144aea0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d9ced5d6-cb08-457c-8a86-7527d719cb0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94feb2ea-732b-45ca-8426-5f7e8cebf2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad0f564a-a961-40f0-9f70-e6c875928eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54b4709-6288-4171-93fe-2faaf3d4591e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b60dbc1-2b63-4772-899c-e11610a62aa4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "940323f7-adbc-4826-8dc8-cf6437db479d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f38419-617a-4480-874a-a5ed635e6644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf5aca97-4dfd-450a-89cb-522970d1565b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b89b999b-ec86-434c-bf26-38664ecefdda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "582c125b-10d9-4a7e-83f7-9a204ad0acde"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c980152-cce7-4b16-b1f1-565810688913",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a15ebd12-d122-460d-995f-11dcfa71ce6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20f9b0b2-ded4-4413-a3dc-400943ee6e17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5617c807-e1d1-4e39-98e0-149bcfa1860e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c6ae65d-0a73-45f2-a18d-c67d538889a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eedd40a2-66fe-4c4b-8185-d737e8b82259"
            }
          }
        ]
      },
      {
        "id": "02a8c330-4f09-4042-8d71-c4aa70056601",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a3c6c84b-ee7e-4bc9-b29b-8595e1051229",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f10d1f45-b2d9-4851-9b44-e0fd3e0daccf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c895b9e2-84d6-4617-b8d4-d17a9863d6a4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bd5e68-6cb0-4ae0-817e-e73425c3280d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8829dd19-d21e-4476-b992-4086eb7a1d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839a4369-f187-4d63-a228-f67ddd14bfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "928c5996-f5b6-4415-898e-ca1bd9394c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cce2e1-501b-4798-8776-6e62b986814e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b569c0-a776-4019-8598-0e45516f2ae3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc6671d-f4c8-48fa-b4d5-20b84d8e7225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f85a86-b5fa-424f-b746-133bca97e722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b90f4819-6f59-470f-aafa-e8ac41350006"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "204c81c8-27b7-4038-9a0d-f9f3efae664d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39ac2a44-472a-4d61-ab42-e55ebb420f7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faa10580-b531-4a13-b8da-420a65247fbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c3785e9-ac48-437b-a0d4-fc938911aab3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09766586-7d94-490a-8657-361869513890",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "578a94da-a08b-4817-ad72-403dcfb9c6a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "942ce2e9-9bef-40be-bc8a-b8a844d02bdb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "224d3323-f24c-4ccf-a41b-3ea893fffdcb"
            }
          }
        ]
      },
      {
        "id": "76e42b7e-fd3a-4574-9654-9493fff26d97",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "649da719-2148-4171-a5c0-d0466dadd258",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5612ab10-2b4e-42aa-9009-8cd09856ac1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c297199b-78e7-49bc-997e-8d7ab02f6ae1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c451bc79-d254-4220-b2fe-178e6e3d3536",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3614cc03-4a8b-4fcb-b962-6d3eb2bba157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ec990b-563d-4675-a0fe-2a50e8429da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33bac436-e64e-426e-8773-86692bb8e2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7817a9e8-fd0b-4247-8c2a-a3466f616f96",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87756bbd-cfc8-4249-8474-04103fc8b6ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "681adbee-7855-4147-b203-fbd94d3cefba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11c97bf-ac48-46d4-9042-25c1614bfd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3bb3a4dd-4072-4740-9d75-47099030d983"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27483f28-0827-4837-b48b-01522a6cf94f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89161fac-5e11-41ab-8195-64e3416e0883"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "144df56c-82a3-4c31-aca5-b9526e91d047",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b411d79c-4270-4722-aae9-4403ebe65c6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffc11622-8e15-43b7-bdb7-45bce20c4496",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e39a129-0368-4b2b-b477-07331504ca98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "553c16d9-cdfb-45f4-a0c3-c4f7f8e99c9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa2fa691-001f-4a51-aae4-f4eacbd354d2"
            }
          }
        ]
      },
      {
        "id": "7932a4a1-903a-4d6d-a847-1587c2d457a9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "131d170a-64bf-4510-ab78-0cbb662d67bc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9101317c-375b-4e8c-84d5-fb10579b17d9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "86cf0a7f-1990-4ad2-8e0b-44ea6dd3c6d3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86066929-8848-48bf-8de2-5275781382f4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bae339a-e93a-47f2-a267-5e62c19d8fd9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 72.36153846153849,
      "responseMin": 7,
      "responseMax": 360,
      "responseSd": 32.47176379236249,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683938108390,
      "completed": 1683938140924
    },
    "executions": [
      {
        "id": "da05bb77-6d38-4c85-a741-643dfc69c395",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3a78ecf3-f5b2-459b-824b-8949cc069649",
          "httpRequestId": "58f399c1-7bc3-4019-b565-5cb0968d89fa"
        },
        "item": {
          "id": "da05bb77-6d38-4c85-a741-643dfc69c395",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c8f7db1d-a9b7-4683-b2d5-42fd69f9410e",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 0
        }
      },
      {
        "id": "3ff0e410-a27c-45b7-8252-7bd4ff7e2b6e",
        "cursor": {
          "ref": "eb90769d-5807-40b2-bdfd-0560673b0427",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "afcd7152-146b-4e69-8ad2-91ac7d0adeae"
        },
        "item": {
          "id": "3ff0e410-a27c-45b7-8252-7bd4ff7e2b6e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f170556a-b130-47a9-99d3-573570565046",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "34ba8d43-146c-4cba-95af-f2d0b4e0a36c",
        "cursor": {
          "ref": "0f6c8245-2deb-401f-a1e7-1659dac2d195",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f0098c00-aa4c-411b-b6be-252c08364f53"
        },
        "item": {
          "id": "34ba8d43-146c-4cba-95af-f2d0b4e0a36c",
          "name": "did_json"
        },
        "response": {
          "id": "dfbf2ea8-0378-431c-9ad1-6c45124f72e6",
          "status": "OK",
          "code": 200,
          "responseTime": 360,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393db8f2-ce00-4c0c-a60f-8dd0be9c325a",
        "cursor": {
          "ref": "0152e174-ba76-4aa5-801a-a9ef96015faa",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "76e28b07-0800-4c46-85e1-12b4285982b4"
        },
        "item": {
          "id": "393db8f2-ce00-4c0c-a60f-8dd0be9c325a",
          "name": "did:invalid"
        },
        "response": {
          "id": "ffd1a280-c339-487f-9f61-9de8334cd185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393db8f2-ce00-4c0c-a60f-8dd0be9c325a",
        "cursor": {
          "ref": "0152e174-ba76-4aa5-801a-a9ef96015faa",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "76e28b07-0800-4c46-85e1-12b4285982b4"
        },
        "item": {
          "id": "393db8f2-ce00-4c0c-a60f-8dd0be9c325a",
          "name": "did:invalid"
        },
        "response": {
          "id": "ffd1a280-c339-487f-9f61-9de8334cd185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8842e27-d8f2-4f0e-9edc-beefbf7ab5dd",
        "cursor": {
          "ref": "ef3a4e62-7bab-45a4-8969-4ec2ba37584a",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8aac748e-9cdf-4221-b9f5-777173c11962"
        },
        "item": {
          "id": "a8842e27-d8f2-4f0e-9edc-beefbf7ab5dd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9ccfb63b-fee2-45e4-9268-cf656eb997af",
          "status": "Not Found",
          "code": 404,
          "responseTime": 104,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449919dc-099c-453d-969c-c992990297f8",
        "cursor": {
          "ref": "8d665639-22ae-47bd-ac34-f69687def264",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3ceb8782-95d1-4199-98b0-4010594a2a89"
        },
        "item": {
          "id": "449919dc-099c-453d-969c-c992990297f8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8a27dcbe-4484-4d84-8bfa-da8298548155",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a17c679-e78b-4e5b-b763-183be853f2eb",
        "cursor": {
          "ref": "6b6ac9a3-9e71-4bd3-88ff-ab8f3ce97116",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "822b2411-42f5-45e6-8633-1133b426273a"
        },
        "item": {
          "id": "8a17c679-e78b-4e5b-b763-183be853f2eb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "080bffa8-7551-4178-8939-570ef7b41833",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af45e1c7-e949-4136-ba06-3c249412841d",
        "cursor": {
          "ref": "8f1c5d2a-87fb-4f64-aeda-640baef8ffd0",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8255e306-1ba1-4317-8db8-59fc5962c645"
        },
        "item": {
          "id": "af45e1c7-e949-4136-ba06-3c249412841d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a4786cc6-a77a-4538-a0e8-bfd54b8eda87",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 66,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af45e1c7-e949-4136-ba06-3c249412841d",
        "cursor": {
          "ref": "8f1c5d2a-87fb-4f64-aeda-640baef8ffd0",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8255e306-1ba1-4317-8db8-59fc5962c645"
        },
        "item": {
          "id": "af45e1c7-e949-4136-ba06-3c249412841d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a4786cc6-a77a-4538-a0e8-bfd54b8eda87",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 66,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dd9d5f-ac27-4b30-a689-3c293870f3f4",
        "cursor": {
          "ref": "9e979ef5-549a-4b84-ba24-192e990b3bce",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "20064ead-7af0-484a-869e-41d3f19d24e1"
        },
        "item": {
          "id": "84dd9d5f-ac27-4b30-a689-3c293870f3f4",
          "name": "identifiers"
        },
        "response": {
          "id": "f4bc3f97-4971-4bdc-a4d0-a7204dcfc852",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c5fc91-c578-45f8-af69-327a3d4a35e2",
        "cursor": {
          "ref": "e715add7-492b-4459-a7fd-930a6cd707c9",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "59a52aa3-3f1f-4c16-8047-1f3dd8a74b25"
        },
        "item": {
          "id": "34c5fc91-c578-45f8-af69-327a3d4a35e2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3ace3fd8-e0a2-44cc-a887-c6f650b5db21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c5fc91-c578-45f8-af69-327a3d4a35e2",
        "cursor": {
          "ref": "e715add7-492b-4459-a7fd-930a6cd707c9",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "59a52aa3-3f1f-4c16-8047-1f3dd8a74b25"
        },
        "item": {
          "id": "34c5fc91-c578-45f8-af69-327a3d4a35e2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3ace3fd8-e0a2-44cc-a887-c6f650b5db21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f3211a-0bd0-4cb9-950a-3fcc700acc3d",
        "cursor": {
          "ref": "94f3de7b-cb00-4ef5-a704-f40b16ad3117",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "773ae839-0c04-4ace-9fa3-e0312aaf4f90"
        },
        "item": {
          "id": "35f3211a-0bd0-4cb9-950a-3fcc700acc3d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "974996cd-3041-49c6-890f-5bafb0dc9139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2cca73-d32d-496d-90d9-fe1c385b4e1f",
        "cursor": {
          "ref": "c2e5b724-b315-4fbb-86e6-68903d731ec2",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5a064d47-8a0f-4eb3-a53b-2903091e952a"
        },
        "item": {
          "id": "dd2cca73-d32d-496d-90d9-fe1c385b4e1f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3f904039-cc35-48e2-8df6-14281b106e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55470def-30cb-42a3-bd32-691959c7e66d",
        "cursor": {
          "ref": "dbb4b276-b74c-4331-b00e-26a619500f8f",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7d1886cf-cce6-44f0-b65b-856c8514d108"
        },
        "item": {
          "id": "55470def-30cb-42a3-bd32-691959c7e66d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c812c6f0-d030-48fc-9cf5-50ef0482b62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af7f655-9a09-4080-a37e-0f93e09138f2",
        "cursor": {
          "ref": "563216a1-4ea9-4da7-82f3-f8b681cb139f",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d8cc5091-f9ec-49a9-a9b7-c1a8c27de44d"
        },
        "item": {
          "id": "4af7f655-9a09-4080-a37e-0f93e09138f2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "da444ed8-923a-457c-b4b4-57310c835b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6389aa13-02e2-4e21-9e4d-39414f43ac11",
        "cursor": {
          "ref": "937153a9-380a-4002-b75a-ea3177089248",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2a2e6201-9e24-4be4-974c-b469e702ca94"
        },
        "item": {
          "id": "6389aa13-02e2-4e21-9e4d-39414f43ac11",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3e7863c5-a0fc-4841-b946-ed6c76e9f98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcf75c0-6e0a-4c25-88ec-a08c50af08b4",
        "cursor": {
          "ref": "630d55c9-9d89-4300-8207-3f7c3a88ff1c",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f3bad95c-398f-4282-921c-6ee043d4edbe"
        },
        "item": {
          "id": "9dcf75c0-6e0a-4c25-88ec-a08c50af08b4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4326fa2d-68d8-416a-ba07-a622c24d02bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7cca5c-2173-4fa3-8dfd-d0f929c4bd10",
        "cursor": {
          "ref": "d42a5aaf-7464-4d08-aa44-b9b605d31226",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "553df203-7b99-4a60-941d-509213f45ef8"
        },
        "item": {
          "id": "5d7cca5c-2173-4fa3-8dfd-d0f929c4bd10",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5090fc14-9144-4e61-a792-373ece466fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0578cf81-a540-45d1-b26c-477cf2835f1f",
        "cursor": {
          "ref": "371a9c39-e6a2-42af-a703-24b97af51e70",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7d837d51-3bb3-428a-8d20-cca58a5d7068"
        },
        "item": {
          "id": "0578cf81-a540-45d1-b26c-477cf2835f1f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a447399a-7d8f-4dab-917c-5409d97b26ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43ea7be-4e7c-4c65-8307-53075a6969f7",
        "cursor": {
          "ref": "8b944148-3bf3-40af-bd09-83e5f75f90c3",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a0a296ac-d08a-4ef3-9ca2-9ae6f46209f3"
        },
        "item": {
          "id": "b43ea7be-4e7c-4c65-8307-53075a6969f7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a44a892e-d252-47d8-afbf-9c0966ce3b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c742d3d-d6cc-4176-b301-52eb3b61df88",
        "cursor": {
          "ref": "da5954ed-e0d7-4eaa-9c18-350a4ae914f9",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "39f90813-7bd7-4f36-9eee-fdc1a4a395dc"
        },
        "item": {
          "id": "2c742d3d-d6cc-4176-b301-52eb3b61df88",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b535ebef-2715-4b0c-912b-09f4f69587e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68dc1967-6d51-43be-b694-d7b8e99bca14",
        "cursor": {
          "ref": "a77a6469-b8e7-4656-88d2-51ead263fa2c",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cbae861a-0fa2-4f8c-879e-64dddf6d578e"
        },
        "item": {
          "id": "68dc1967-6d51-43be-b694-d7b8e99bca14",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "810550c6-9bd0-4921-ac04-4d9b5689ad38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4fde0e-5f78-49a5-a548-fbab0cb06321",
        "cursor": {
          "ref": "1e06fe08-fc37-42ab-8b88-4d4fd141bfb9",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d9e5147d-e146-4985-b28a-7c054c0687ac"
        },
        "item": {
          "id": "af4fde0e-5f78-49a5-a548-fbab0cb06321",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3f551b79-e5df-461d-8615-c2469d1c277c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b71c8f5-6a8b-4a01-ba60-873029822c3d",
        "cursor": {
          "ref": "ea5005ed-cf33-40e1-9ebc-bf1ed0bcc34c",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ead5a0dd-3dc6-4cbf-a05f-9c87c2bd2f3a"
        },
        "item": {
          "id": "3b71c8f5-6a8b-4a01-ba60-873029822c3d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7c0f52fe-ae9a-44ee-b6ce-7e382f912056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef539fe9-b01a-4110-a218-b42dcae41076",
        "cursor": {
          "ref": "b3f73ac4-8560-45bb-b89a-8b12e2af9155",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "720259e6-2b4c-4774-856a-8a7836faa2a4"
        },
        "item": {
          "id": "ef539fe9-b01a-4110-a218-b42dcae41076",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4d131ea0-c7d5-407f-bfc9-9bca66c304cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4bcf1f-a1c2-450d-bcc1-d9dca9465af1",
        "cursor": {
          "ref": "621c79aa-1881-4323-aab7-a31306fefae7",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7df1b7d2-83aa-4667-b1a5-419a1f350d58"
        },
        "item": {
          "id": "ab4bcf1f-a1c2-450d-bcc1-d9dca9465af1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "14d7cfe4-f4f9-419c-8d20-b73a1ddfce8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7e3981-3dbd-4090-9be2-bbdf6737a376",
        "cursor": {
          "ref": "8b365326-7c0a-43cf-b285-71508cfa26c1",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ab181500-5b2b-49bd-99ca-0b4a847ed8d0"
        },
        "item": {
          "id": "3b7e3981-3dbd-4090-9be2-bbdf6737a376",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "eacff028-f95b-4d0a-91da-c8265bbb6cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c4dc7e-b8c0-4d61-ade1-0632e9de5604",
        "cursor": {
          "ref": "86e15f5a-e427-42a2-b316-cd5a9994a54e",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e1ac5007-3342-497e-ad35-4f2d92b5327d"
        },
        "item": {
          "id": "38c4dc7e-b8c0-4d61-ade1-0632e9de5604",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5f8e79b8-ed81-4a2c-82d0-1fe34c620e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd7e1fe-bd87-4582-8d7d-028de963b49b",
        "cursor": {
          "ref": "2e8fe45e-fac2-4ce9-987f-d3d87035f9d3",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9a6ec44d-420a-433e-97e8-ecfdce49808d"
        },
        "item": {
          "id": "9fd7e1fe-bd87-4582-8d7d-028de963b49b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "76c13623-4c61-4dfd-8e86-a0e9d0fa58a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97f844b-0100-40dc-ab3f-16a7b9b7350b",
        "cursor": {
          "ref": "a00e880f-ceb5-4bcd-bc97-518ca00303d8",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "06ca01e0-daa7-47c5-9b9a-c5f89bf0e033"
        },
        "item": {
          "id": "e97f844b-0100-40dc-ab3f-16a7b9b7350b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "29ca9386-d2c0-40b9-a70b-0b97e4354ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc14f4de-8d52-44ab-9c96-d3def555ec66",
        "cursor": {
          "ref": "af363ba8-16cd-4b6a-bc8b-9c94f247f54d",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dc22e372-b2df-44a8-b31e-cbae4f5d1590"
        },
        "item": {
          "id": "fc14f4de-8d52-44ab-9c96-d3def555ec66",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9750353b-80ed-4ea2-8831-5795c9f666c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e59534-7b37-4908-a043-cb3a835d0845",
        "cursor": {
          "ref": "c9851f86-a805-41da-bce9-909b705b1183",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a09c3928-3398-4e6e-bc77-7d1b16beb274"
        },
        "item": {
          "id": "82e59534-7b37-4908-a043-cb3a835d0845",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "11fc93e3-ce07-44b3-a23a-571970a23a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214989b8-eb30-43b7-b624-73b9203ab6d6",
        "cursor": {
          "ref": "a0b2b39f-8d6e-484b-9f9a-dd7d533bb348",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2030abf9-3285-4fc4-84b6-50ee05a9be1e"
        },
        "item": {
          "id": "214989b8-eb30-43b7-b624-73b9203ab6d6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "03a94f51-f9b1-4682-852d-bc990a9e3411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b219ca-64f3-4b5a-a56e-816f6a109942",
        "cursor": {
          "ref": "7959b6c6-5253-4d08-92bc-89583f5b89dc",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c71ae6d3-7e57-4dc3-8ee6-105b3382fa77"
        },
        "item": {
          "id": "65b219ca-64f3-4b5a-a56e-816f6a109942",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f5dcffcd-f035-41e2-9750-0c098d34e2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dbf239-fd3c-4870-a56f-21f94f8d7c60",
        "cursor": {
          "ref": "8e94d37e-08cb-4746-a717-1253d5dc7fb3",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "471ede52-5f6f-4b34-add5-99a129d445e0"
        },
        "item": {
          "id": "00dbf239-fd3c-4870-a56f-21f94f8d7c60",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "be36cec0-4450-4518-a22a-2f57be051e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92911df-a15d-45b9-8bd0-7b2e87a662f8",
        "cursor": {
          "ref": "29096c18-1b24-4861-af6c-4c20e247f245",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9c7ae772-a7ed-46cc-8426-f4709dff10b9"
        },
        "item": {
          "id": "c92911df-a15d-45b9-8bd0-7b2e87a662f8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f3f8c734-6e6e-4719-96b4-6c9a4c19fa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e629efc-98fd-4c0b-92a5-93d2e6e0bbab",
        "cursor": {
          "ref": "e5ef7b0c-dba2-4d47-8b34-ee6c12f6c2b3",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6808f049-9788-45ee-b2e9-aca09309cf1a"
        },
        "item": {
          "id": "0e629efc-98fd-4c0b-92a5-93d2e6e0bbab",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "268308f0-bc6a-4619-aa6e-ee41bb0cf363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba29d90-5c75-41a7-8dc6-4e00cc000bb1",
        "cursor": {
          "ref": "84b4b04e-e40c-487c-99b4-33591fb94805",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b53f7877-8c74-46cc-a758-397908735b50"
        },
        "item": {
          "id": "dba29d90-5c75-41a7-8dc6-4e00cc000bb1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "38d08dc4-467b-40f1-a953-16ab6ede986b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b12410-a1dc-4be9-aa74-98f3cca1a0de",
        "cursor": {
          "ref": "58218c33-728d-4431-8df5-cf51f6b7bd2f",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9f763c9c-8bdf-4f7c-9324-bf5a428bfac3"
        },
        "item": {
          "id": "99b12410-a1dc-4be9-aa74-98f3cca1a0de",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "24b7f2aa-c2ad-43ff-b123-bc5d12e074bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8034bfa8-be55-454e-8f97-62f728ff97a0",
        "cursor": {
          "ref": "4357668f-8c2b-4266-9f30-fbb0bac440fe",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b972e85f-f5c6-476b-8975-2f5373fc0548"
        },
        "item": {
          "id": "8034bfa8-be55-454e-8f97-62f728ff97a0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "965870e9-2f33-4e62-a875-52ecc4b5c555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4346d5bf-1d23-4700-9130-6bc4cf476f78",
        "cursor": {
          "ref": "67472e50-1d9a-4cdc-b78f-375646d102ec",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c764bd35-2954-4ca1-bac9-d665a61f872c"
        },
        "item": {
          "id": "4346d5bf-1d23-4700-9130-6bc4cf476f78",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "99c906d8-75c5-4453-994d-02797aa24e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fc7c1c-3cc5-48c4-87b6-de4a852aaac8",
        "cursor": {
          "ref": "813c0a96-72b3-4cc3-a993-69cab1b97c07",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a6024352-f155-4a57-9508-f0ad1a800fec"
        },
        "item": {
          "id": "e7fc7c1c-3cc5-48c4-87b6-de4a852aaac8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2edd3eea-5d38-4c04-96b5-b303c78b1e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa85dd25-0434-40ac-b3c9-89dcff9e4cf2",
        "cursor": {
          "ref": "0e599ee4-5d44-4bff-89db-294c146dc361",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c5f20523-c8bd-46fa-a5fc-6ff0cb4c225c"
        },
        "item": {
          "id": "fa85dd25-0434-40ac-b3c9-89dcff9e4cf2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8442a97d-a37d-496b-a846-64e24e7fe502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34446906-e678-423c-b078-35aab8ec5a1e",
        "cursor": {
          "ref": "3b05d4a5-473f-4d24-b9a6-382835eab7f8",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fd0ccc14-3496-4b21-9e87-4dd48564e561"
        },
        "item": {
          "id": "34446906-e678-423c-b078-35aab8ec5a1e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a0e2e20d-3663-4a17-bbda-15c7464a631b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47e27bd-8e28-4042-aa56-eb31c4ad68eb",
        "cursor": {
          "ref": "d5ef6347-9d4a-4196-b595-49b1b86f2aa4",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d568ae6c-5e09-48a7-a7c3-c859a40d53d6"
        },
        "item": {
          "id": "e47e27bd-8e28-4042-aa56-eb31c4ad68eb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b1d31bd8-4247-4a0b-bbea-e992b509cd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614dba33-8f4f-41db-8b65-fe9831e5ad3a",
        "cursor": {
          "ref": "f6be80bc-c7ff-4f1f-a419-9996a7a7b21e",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "acb24d6b-e52e-4216-86c0-448e255a207c"
        },
        "item": {
          "id": "614dba33-8f4f-41db-8b65-fe9831e5ad3a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c3ecc520-24b5-482d-ad3d-8477a4e5f5b5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7803664c-c2a9-43be-9cd6-d7016a6b4ec8",
        "cursor": {
          "ref": "6b11d139-f756-4f29-a5e1-0159283a7850",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fc74df9f-4f67-4f93-9c82-57e7164838e9"
        },
        "item": {
          "id": "7803664c-c2a9-43be-9cd6-d7016a6b4ec8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e55746dc-d399-48a1-bf45-145753c24348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850180e4-5efb-4536-89be-e5299ccf6b8d",
        "cursor": {
          "ref": "e68744cc-7ee0-434d-bde8-9e00d3d4b6ee",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "05210198-ae29-48dd-a85a-399578c48995"
        },
        "item": {
          "id": "850180e4-5efb-4536-89be-e5299ccf6b8d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fc35fea0-1717-4fde-9842-ead5ddd733de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0e1d26-802f-4c9c-aa55-7277325935f5",
        "cursor": {
          "ref": "4e6c6c15-fa0b-4906-a31a-65af294a9766",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a2790861-2c59-4718-ac58-4345c09f5ae1"
        },
        "item": {
          "id": "1f0e1d26-802f-4c9c-aa55-7277325935f5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "37beb15d-cc1a-4559-a131-d889b05aac3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628daafe-291f-4e70-b256-711ecb623b63",
        "cursor": {
          "ref": "a31a74f1-ce98-44e0-be9c-9f32b9326fc2",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "63ef9be1-d9df-4adf-8975-7c6f4fcc1a83"
        },
        "item": {
          "id": "628daafe-291f-4e70-b256-711ecb623b63",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a1e33cb7-64a5-4713-9624-9540c82c9343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24f4bcb-6b2b-4d2d-914e-e885103247e0",
        "cursor": {
          "ref": "9bfff3e0-08ef-4821-8253-e30345d80bd9",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a7853cfc-607a-4ba9-a1cd-f8207823efd3"
        },
        "item": {
          "id": "b24f4bcb-6b2b-4d2d-914e-e885103247e0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2ec0af0d-ce9c-418f-80c1-fa5850a8105b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa2bbf5-7142-47da-8b00-40cfc035c75b",
        "cursor": {
          "ref": "85543e8c-9d0f-46e3-b3c3-773acf7117a8",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "972f8431-74da-4732-8a68-252802422723"
        },
        "item": {
          "id": "9fa2bbf5-7142-47da-8b00-40cfc035c75b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "195884e5-2446-47bc-a53c-08898e6f106f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a0382f-347c-4794-a682-520d58ca1340",
        "cursor": {
          "ref": "1597a44d-1e67-430a-8685-bb442d84b4b1",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "10d2f3fc-fec0-4209-9b4c-91cb44bfccff"
        },
        "item": {
          "id": "55a0382f-347c-4794-a682-520d58ca1340",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bbfb2efa-bc07-4624-a479-15d49cc29334",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 75,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa9069a-64f5-44b6-9c6e-276ddc40e008",
        "cursor": {
          "ref": "1687d924-c797-423d-8118-c8ceadf39f06",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6fc456cd-5b8f-403f-8e03-013501b5781f"
        },
        "item": {
          "id": "ffa9069a-64f5-44b6-9c6e-276ddc40e008",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "14e903e7-ff22-405d-b293-2f705b149421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46677169-045e-46d1-9868-a5d5ec975c63",
        "cursor": {
          "ref": "251a0908-ba7b-429f-9681-f67a0f878015",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c5c657ee-092c-4fd5-bc6a-22a94a328fd7"
        },
        "item": {
          "id": "46677169-045e-46d1-9868-a5d5ec975c63",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f76f5549-d3a6-4186-a6a8-0fd19bcde021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d902ab-253a-4ea6-ae1c-46f15a10d256",
        "cursor": {
          "ref": "8d6a8c58-1612-4b9f-9dc5-9b0ffcbbab6f",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c91d3a33-71c0-496d-a628-330664b7511c"
        },
        "item": {
          "id": "48d902ab-253a-4ea6-ae1c-46f15a10d256",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7d21cb36-f5ea-44f4-a2bf-014e8d349108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333ec5e7-9cd8-44dc-9ef8-3ea9b71601ef",
        "cursor": {
          "ref": "cce0ea26-acd0-46d4-a343-158c874a0daa",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "59ba08e7-c949-4c0b-8276-c1db52dd5a08"
        },
        "item": {
          "id": "333ec5e7-9cd8-44dc-9ef8-3ea9b71601ef",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8900a70d-78db-4bb4-8c75-df3f4c12dbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe34076-bdc3-49a8-bc10-94bb96c9f9d5",
        "cursor": {
          "ref": "de0aad35-d53a-4de4-b626-dda37feab790",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6efe1387-48fe-4e35-9f53-00d739dcfb43"
        },
        "item": {
          "id": "ffe34076-bdc3-49a8-bc10-94bb96c9f9d5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c65ec0b6-7fee-45ca-b68d-df532440eba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347f7b98-90d3-44c7-9752-5408b099ffa5",
        "cursor": {
          "ref": "9ce404cf-c4e4-42d9-b2c9-ce7cd6b0feb6",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e547939e-5ecc-46a6-8ef8-38431f852b79"
        },
        "item": {
          "id": "347f7b98-90d3-44c7-9752-5408b099ffa5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d3cf204b-ecbd-44af-9f3b-8a0e13fe1def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf4edc0-3be0-4ceb-b2b8-290e81c257d4",
        "cursor": {
          "ref": "76cde846-27f9-4b7d-88d8-7e480339d334",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f2bc7b59-c5bc-406e-9165-e99590c75ac7"
        },
        "item": {
          "id": "5cf4edc0-3be0-4ceb-b2b8-290e81c257d4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a6a24f39-4b3a-4e7e-9a96-38e96c82a5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce859ed-e9bf-41af-a177-85aa5a0234e8",
        "cursor": {
          "ref": "52ed8ee7-9029-4316-aa7a-afbead0eabe8",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "231df63b-2858-420d-a8aa-d8a4e467f685"
        },
        "item": {
          "id": "2ce859ed-e9bf-41af-a177-85aa5a0234e8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2f158d9e-19ab-410c-bbff-d33dd89c254e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5126ff36-674d-43b8-a142-95500cbccf3c",
        "cursor": {
          "ref": "dfc618c3-5958-4b11-ac15-e53c60a0292f",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "567b1776-ea8c-41b0-b47d-51039987751a"
        },
        "item": {
          "id": "5126ff36-674d-43b8-a142-95500cbccf3c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "54cf1d9b-c1b1-495d-860d-fbe174b5d802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c7972e-2a7b-4287-981a-a4d9dcad78fd",
        "cursor": {
          "ref": "ddc44786-610b-4fbf-9b3a-3304329b402f",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3f56a87a-65ab-4460-9af0-b67306945493"
        },
        "item": {
          "id": "04c7972e-2a7b-4287-981a-a4d9dcad78fd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4e4c3d73-25d7-49d5-ba50-6b45b6cb495f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3e66e7-bdbb-4ab0-9524-942921c15dc8",
        "cursor": {
          "ref": "774226dc-91db-42a6-8a8d-17b277a6a57d",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "85bb140a-a452-4a7f-80bd-21f51a1715a8"
        },
        "item": {
          "id": "0a3e66e7-bdbb-4ab0-9524-942921c15dc8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "504f973b-f89e-4a43-8d6f-66311960d9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ada2fa2-42c1-41e3-b7e5-e22a4f141775",
        "cursor": {
          "ref": "1c5c3b88-47eb-420f-afb4-d3024c1e55be",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "18c14f2d-5233-4683-96f0-bdd4edcfb81f"
        },
        "item": {
          "id": "3ada2fa2-42c1-41e3-b7e5-e22a4f141775",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e0ade437-cdca-4d3a-abb3-c31f5e03d5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9696ec-424f-475a-9371-a35e70482a40",
        "cursor": {
          "ref": "0eab7865-9def-4be3-b2a3-151f8bce9d30",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5458ad7d-6807-40e4-8bcd-6fe59ecba9f7"
        },
        "item": {
          "id": "ad9696ec-424f-475a-9371-a35e70482a40",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "94bf4394-2c8e-4646-b41f-214773e5df8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b1d32c-0c7f-4da4-af97-485c97352cda",
        "cursor": {
          "ref": "2c22d21b-a3c5-435b-b05c-7946a0cdf092",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a9cb273c-ff39-4993-ba0a-4937d70bf549"
        },
        "item": {
          "id": "05b1d32c-0c7f-4da4-af97-485c97352cda",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d228d5db-cb75-4394-a7d8-82715644698a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3657e5-371e-41d6-a7ff-54f4006622fa",
        "cursor": {
          "ref": "694ae23b-1630-4a7e-aa11-b5f3eb4c77c1",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e3df3a26-812f-4992-b02a-daeaf87e4d8e"
        },
        "item": {
          "id": "2c3657e5-371e-41d6-a7ff-54f4006622fa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3427c712-2715-42ba-a587-eaef4f0e34dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7219abb4-38b0-4f41-80c7-5bca2b85bf02",
        "cursor": {
          "ref": "cc17014c-e7be-4750-91e6-420e381eef86",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d5aa2fd7-d278-4821-9d3a-04c3d2e6e5b5"
        },
        "item": {
          "id": "7219abb4-38b0-4f41-80c7-5bca2b85bf02",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "13ea0bf3-b184-4052-a79a-27e163536ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd81bf0-74f6-45cf-9356-94aa0d0ae789",
        "cursor": {
          "ref": "7dfc698f-8e6c-4784-84e7-5a51a86bc33b",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ea820d5c-d836-4a82-a70f-9661c057fd06"
        },
        "item": {
          "id": "5dd81bf0-74f6-45cf-9356-94aa0d0ae789",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7df4aeb5-c5f4-4aba-9ddd-eca60e5347fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720b2ae2-2d82-416d-94b1-b41c855d66b1",
        "cursor": {
          "ref": "e569bdc5-99ef-4dff-a033-b0913e7c3003",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "23c2c3bf-436f-4102-9533-f92f858286ba"
        },
        "item": {
          "id": "720b2ae2-2d82-416d-94b1-b41c855d66b1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7b2da239-677c-4767-ac13-f30550958c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ddc8b9-7d34-43da-9d65-01db14719e3e",
        "cursor": {
          "ref": "6400b77a-130c-4e06-b469-49e2f1a15125",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "51678ca8-c339-472c-9b0d-4d0eee4dfae7"
        },
        "item": {
          "id": "37ddc8b9-7d34-43da-9d65-01db14719e3e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cea810f5-cc61-48eb-9db3-e4713402056d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbd2868-8e6c-4245-ae93-6c413cf7b346",
        "cursor": {
          "ref": "997b387d-4b5b-4895-985d-8bfac1d05874",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d73b4e2f-1a17-441f-a253-b4525453112f"
        },
        "item": {
          "id": "fcbd2868-8e6c-4245-ae93-6c413cf7b346",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f58b453c-2970-4cee-8c4c-60d6b6752386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aac613b-cd44-407e-abfc-a8fe3a28c580",
        "cursor": {
          "ref": "b04442d2-2538-40a8-a087-7f6206f77614",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1861a41a-67e9-4ddf-9eeb-a04962e5c90d"
        },
        "item": {
          "id": "9aac613b-cd44-407e-abfc-a8fe3a28c580",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "48203426-d69c-4f9e-9085-5ffc00d212cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342a41b3-6e3f-458c-8b0b-f95ef1f11532",
        "cursor": {
          "ref": "94abe9b7-5389-4ab1-bd92-3b486bb3cc52",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "726ee04a-a7ad-4895-9540-3021e2362a47"
        },
        "item": {
          "id": "342a41b3-6e3f-458c-8b0b-f95ef1f11532",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9f8a230c-5e87-4f54-badf-2192e24ffbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ef464d-bf8a-41ee-bfb2-930d75477415",
        "cursor": {
          "ref": "6d9d07e2-8243-48b3-a57a-eb220dee02f0",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2be22ca8-afeb-421e-96df-c2a7eb8b05da"
        },
        "item": {
          "id": "71ef464d-bf8a-41ee-bfb2-930d75477415",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "677d715d-b244-4a15-918a-a87b8db37295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290a33cc-b5e3-4ec5-978b-3bf997986811",
        "cursor": {
          "ref": "e72a87ed-3ec7-4913-8e1e-74d0609a6258",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fa62fe75-fd1e-4ad0-b22d-c61c342632e3"
        },
        "item": {
          "id": "290a33cc-b5e3-4ec5-978b-3bf997986811",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "669dfd84-27f9-4b38-a8fd-f66a49c76dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3dbdc9-8967-4048-915f-c0a0fe523db6",
        "cursor": {
          "ref": "8d3466df-2009-4018-bb4f-9e226a69b542",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "651a148e-6faf-4b5e-adfb-e6fbc1da6ddb"
        },
        "item": {
          "id": "7b3dbdc9-8967-4048-915f-c0a0fe523db6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9dd220a5-8981-434f-8fc0-98e77823a638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6946638a-2027-47b6-9951-75755dce5700",
        "cursor": {
          "ref": "b69e0286-88d5-431f-8eff-50ec30cb99de",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bf146850-2964-426d-bd3f-0894aa8343bb"
        },
        "item": {
          "id": "6946638a-2027-47b6-9951-75755dce5700",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "75b99b5b-b5a2-418b-aff2-e19aeb9af988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4904b2e8-48a0-41fe-a6a8-c990ef7e02e4",
        "cursor": {
          "ref": "b5fe205c-482c-4350-832a-7bcf05c0d168",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b56cc761-1f0a-4e91-b327-0c101af3119a"
        },
        "item": {
          "id": "4904b2e8-48a0-41fe-a6a8-c990ef7e02e4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "07ceab67-1aec-487d-95e7-d6fb7182a893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a704d91-734d-4dad-a674-96b3efdba1b4",
        "cursor": {
          "ref": "0fcb18c4-0db8-4119-a406-9c60e4852020",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ef4a67f5-fbd9-4775-8c70-52edd62605dd"
        },
        "item": {
          "id": "7a704d91-734d-4dad-a674-96b3efdba1b4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7ad5362d-b16c-47ff-ba9e-a2ee9f842375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a789b517-a773-4954-a2a6-05be409fada3",
        "cursor": {
          "ref": "07254562-c707-4693-b00f-5a0f6a4f9b4f",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ed3da598-a90b-4db2-b966-4f9693bb928e"
        },
        "item": {
          "id": "a789b517-a773-4954-a2a6-05be409fada3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a200c623-6d99-44f9-8c36-3d01cd0fd621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668f3f85-284f-4a48-9f87-174181e5e275",
        "cursor": {
          "ref": "a61cc73d-5be0-4e61-a78d-d80c68d375bf",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "05c846c0-81a6-460b-b095-cd52a4a01dec"
        },
        "item": {
          "id": "668f3f85-284f-4a48-9f87-174181e5e275",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c37beec8-3338-44d5-aa73-d19a9b5f1139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b103628-44a8-4824-b2cf-9b34dfd0cc81",
        "cursor": {
          "ref": "6092e5f6-a05c-4b07-813a-976d04b586af",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2883820f-c092-4c14-a784-53f6578e5f1b"
        },
        "item": {
          "id": "1b103628-44a8-4824-b2cf-9b34dfd0cc81",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fad0970d-4380-46fa-bb68-7cfefcba7c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7553489d-c5b7-43c6-8700-0bb37188be25",
        "cursor": {
          "ref": "b1e0490a-1819-4e0a-9f7a-2383d4dae67a",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c151575b-5317-4753-89a1-847f768cde31"
        },
        "item": {
          "id": "7553489d-c5b7-43c6-8700-0bb37188be25",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cb521cdd-f934-4b82-890c-df1d49b17c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947f4f00-0a80-4c99-945b-76711a3d07fe",
        "cursor": {
          "ref": "c13575c7-37ba-48e8-896e-073230c9c0ce",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3a025efb-e45f-49d8-86b1-15d4c8b8e4a3"
        },
        "item": {
          "id": "947f4f00-0a80-4c99-945b-76711a3d07fe",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "522fdac6-e9cc-43fa-8691-39c468f9e069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7852a9a-1300-47a7-966b-503e705b5f47",
        "cursor": {
          "ref": "5fa5c866-7355-42cb-925b-7adab9c3bdf8",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f1100a2c-1f13-4edd-a54a-cf62e7f29546"
        },
        "item": {
          "id": "f7852a9a-1300-47a7-966b-503e705b5f47",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2b488f9d-e573-4d1a-992b-c397b8ffd7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c505329-6a99-470b-be1f-1ad46393f0e0",
        "cursor": {
          "ref": "137cd8d7-7e37-44fe-9f9b-8c5353e03c00",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f1c79eb2-3953-4165-8892-d84e37694c74"
        },
        "item": {
          "id": "9c505329-6a99-470b-be1f-1ad46393f0e0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d8f579fa-fd46-440d-8830-879d154883f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8a0f49-3c16-4f9f-a43f-678fd720a229",
        "cursor": {
          "ref": "c8d26783-e36e-4b70-8755-5425c7bec2dc",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f5fe1640-3eb6-4c48-a7e6-ac371cbeb533"
        },
        "item": {
          "id": "1d8a0f49-3c16-4f9f-a43f-678fd720a229",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "931c1b77-7e8f-45c7-9cde-391295bcf412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fe1130-08e2-4212-9942-6ce953c78a18",
        "cursor": {
          "ref": "c1eea8ae-696b-4b5b-9df6-2b77ab06f0c9",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "90a092fb-8de1-4462-878c-4286de1f76bc"
        },
        "item": {
          "id": "45fe1130-08e2-4212-9942-6ce953c78a18",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "acd983dd-8354-4107-b2e4-32609c54016f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e830fd3-ccc6-4547-b35f-409535212beb",
        "cursor": {
          "ref": "d639ebf8-7151-4ebe-af8b-89c468ebb0cc",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "82caac6d-cf53-48b5-8177-650ed9adb0c2"
        },
        "item": {
          "id": "5e830fd3-ccc6-4547-b35f-409535212beb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9434b3c6-8980-4cbd-88f0-225c17d15220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba24687-744a-46dd-ae80-5007291a071d",
        "cursor": {
          "ref": "5266a9b0-55f9-42d4-a569-ab9bcc1f2dce",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "aec98c42-27e8-48e6-9fdb-8ae06abf3b11"
        },
        "item": {
          "id": "5ba24687-744a-46dd-ae80-5007291a071d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d9930e95-5e19-4b5f-85f8-1bbcc28572b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14496d1-80e0-4c0d-add4-d142936900ef",
        "cursor": {
          "ref": "04e1f7c1-44a6-408a-92e3-68ed9884c412",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "35b73eaa-519b-4576-aeb2-8d65475264fc"
        },
        "item": {
          "id": "e14496d1-80e0-4c0d-add4-d142936900ef",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a2a9dcf4-fdfb-4b7f-8738-254fae46ccc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7422fc-9c05-4f54-a96e-55ade8722d89",
        "cursor": {
          "ref": "bcbc06fd-8c6c-4466-8dae-1515685bb4e5",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "079c9ef8-67c9-444b-bef9-e8f218ff4e4d"
        },
        "item": {
          "id": "7c7422fc-9c05-4f54-a96e-55ade8722d89",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1f66802e-490b-4505-b0cd-fbde4c3b9ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36e0365-e0df-4705-87e6-16ffe28f7434",
        "cursor": {
          "ref": "25a6be0c-965c-4e18-afa9-b100db0f85ff",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "41a490c3-02c8-4855-a7aa-cabd113146dd"
        },
        "item": {
          "id": "b36e0365-e0df-4705-87e6-16ffe28f7434",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fd1b8753-1420-4f2c-a10a-4d4cfd1670bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe99d6e-2036-4c05-a136-dd44d2c1a2b5",
        "cursor": {
          "ref": "cc84517c-bcdc-4eef-a4f6-21dce0f9fb35",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8e593a9f-4adc-463d-8bbc-7bd8e24c0970"
        },
        "item": {
          "id": "ffe99d6e-2036-4c05-a136-dd44d2c1a2b5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2882cc17-a3d7-4c11-b0b8-69fc0ed7c003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9459e875-4ac2-4931-aae2-2e740509a34c",
        "cursor": {
          "ref": "f277f953-ed80-454d-a58c-94bd462eefc9",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bd633ebf-a88e-4833-9ccf-823633296a77"
        },
        "item": {
          "id": "9459e875-4ac2-4931-aae2-2e740509a34c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "95dc306b-fdcb-4ed9-8072-b01faf83cb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748e9923-b5d5-4594-8da3-dec116b5d71d",
        "cursor": {
          "ref": "81358d86-49d0-4914-9b97-0f52d989ac48",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0100fb88-8923-4ec7-ae74-e3b1af074281"
        },
        "item": {
          "id": "748e9923-b5d5-4594-8da3-dec116b5d71d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "234a89d3-c1ab-49c4-9c9c-959f2a1a1224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76442880-d911-451d-a31f-24660c9f6937",
        "cursor": {
          "ref": "f555f7c4-a8ee-42c9-a264-86a0c3c4a017",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "acab825d-fd9d-4b43-91cb-10236bd061e2"
        },
        "item": {
          "id": "76442880-d911-451d-a31f-24660c9f6937",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "32fd4986-8426-4322-9d5e-9ba01125b591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91704a5a-298f-409b-9cc5-91bfae7a893a",
        "cursor": {
          "ref": "74782402-966a-4f72-9157-ff547ff3ad0d",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "04cc4133-5686-45f4-9a0e-8ebccd059799"
        },
        "item": {
          "id": "91704a5a-298f-409b-9cc5-91bfae7a893a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a7f3eb1f-a0fe-4147-a76a-8f5e71ea036f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bc5642-6fc1-4657-974d-e23d309df212",
        "cursor": {
          "ref": "5f63dbc9-d6cb-44b5-b263-9f0904ea0fb1",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e29a7251-55f7-430e-9417-ce53edba24f4"
        },
        "item": {
          "id": "33bc5642-6fc1-4657-974d-e23d309df212",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a0853313-0c02-4ac4-952e-4927a88e21ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146ae01b-7762-4f4c-81fe-caf80a8f0430",
        "cursor": {
          "ref": "4cd6ca42-982e-43c6-8445-804e2b2742cf",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "46d342e5-6a1c-4518-ad49-a8575ec4abd6"
        },
        "item": {
          "id": "146ae01b-7762-4f4c-81fe-caf80a8f0430",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e49b0e03-f6ff-4154-89cb-f2e5deef4a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85c5e73-9df5-4cf1-a129-0afc70d39f9f",
        "cursor": {
          "ref": "2f7ebf85-93c2-43b9-b01e-ae528e926681",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0aac1222-e318-4594-86c4-8dc44471534e"
        },
        "item": {
          "id": "d85c5e73-9df5-4cf1-a129-0afc70d39f9f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3c59a196-5ed7-4ccb-9154-5e4532aa19e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65204a1-a95e-47eb-bbc2-2008d90deb1d",
        "cursor": {
          "ref": "ac27e75b-7b9d-4bd0-8ea2-5dded8c23c7c",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f17d9c97-cdb2-4fce-9933-0fdc769230e1"
        },
        "item": {
          "id": "b65204a1-a95e-47eb-bbc2-2008d90deb1d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "31eec4e9-815f-40d6-94ce-a087078b7161",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 216,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0a0e2e-8ae4-4a00-8f0b-c7adcfb54671",
        "cursor": {
          "ref": "0fd2c926-ed91-4c83-8aba-9af7ae9adeb7",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "95e2929a-1a07-4c9d-a09e-7f5b8508f32c"
        },
        "item": {
          "id": "cc0a0e2e-8ae4-4a00-8f0b-c7adcfb54671",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e9c8d8f1-1cff-4468-9497-5120e15e67d4",
          "status": "Created",
          "code": 201,
          "responseTime": 121,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b20419e-8a06-472a-ac7a-0ddfbd6bc6c2",
        "cursor": {
          "ref": "b9ea3e03-e809-4bf4-9cd3-6a27adcd4de9",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b4e2b3ce-e1ed-4ef3-a1da-450d3d7de60d"
        },
        "item": {
          "id": "4b20419e-8a06-472a-ac7a-0ddfbd6bc6c2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d657210d-a6d8-4d20-a2b6-622b58419ef7",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c3b023-ff32-440b-ac95-d58b14402a9a",
        "cursor": {
          "ref": "458fbf92-1166-44e7-a4c9-32569540eac2",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b6d209d4-ee61-473c-a1d9-3df519c3f2fb"
        },
        "item": {
          "id": "06c3b023-ff32-440b-ac95-d58b14402a9a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c9f26ace-cd9d-47f8-ae01-dc021615e54d",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "981ea842-7ce8-4745-99bf-471694992442",
        "cursor": {
          "ref": "4290817a-cf95-4a2e-a00e-c313d9f2a059",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f9b7ad32-1fc3-46f4-91eb-df48371b805b"
        },
        "item": {
          "id": "981ea842-7ce8-4745-99bf-471694992442",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "25b60363-082b-46fb-aabd-a0be51c07c71",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cea7017-b446-4467-a3f3-3450f1f05b4b",
        "cursor": {
          "ref": "64976bb1-19af-4955-bd8d-9d4cc803e9c5",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "59792d60-c263-4b05-8870-b20bcf633ec3"
        },
        "item": {
          "id": "1cea7017-b446-4467-a3f3-3450f1f05b4b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a6645bc1-7fa7-44fe-a15a-ad31eccb8871",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "90854d22-aeb3-43c5-9001-ddcb4b0ca23a",
        "cursor": {
          "ref": "cfd54f28-7f16-4057-97ab-2b7ece8e2809",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "aa4128b4-f3dc-498a-beb8-e996cab24b9e"
        },
        "item": {
          "id": "90854d22-aeb3-43c5-9001-ddcb4b0ca23a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "86938e1c-38cb-4765-886f-210f8db4554e",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dc826c-1554-48da-8431-b5cbda16297b",
        "cursor": {
          "ref": "08c2d384-7494-4a8e-b126-eb3daeb1ebf2",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9e766542-ed8d-4735-8fe1-0e07c5d2f369"
        },
        "item": {
          "id": "67dc826c-1554-48da-8431-b5cbda16297b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "17310c2f-6452-4224-9e6b-20e2e9dcfdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dc826c-1554-48da-8431-b5cbda16297b",
        "cursor": {
          "ref": "08c2d384-7494-4a8e-b126-eb3daeb1ebf2",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9e766542-ed8d-4735-8fe1-0e07c5d2f369"
        },
        "item": {
          "id": "67dc826c-1554-48da-8431-b5cbda16297b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "17310c2f-6452-4224-9e6b-20e2e9dcfdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b3f515-a4ab-4832-a612-5e816ee6893b",
        "cursor": {
          "ref": "aea35b3c-f4fe-46ca-a8e1-83517a12be4b",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b6fa02fe-0972-4dd8-a5b4-7263eef4da24"
        },
        "item": {
          "id": "e3b3f515-a4ab-4832-a612-5e816ee6893b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9b880706-ba19-4a49-aa27-8d6de8e2433b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b340e3dd-465c-4fc5-9770-dda27d432705",
        "cursor": {
          "ref": "cada8681-c3a4-49bb-837d-b76b41b9722d",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "272924f4-c2f4-408e-8f61-b97e57e35545"
        },
        "item": {
          "id": "b340e3dd-465c-4fc5-9770-dda27d432705",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1792dffd-6cc5-4c5b-9ce0-619511edbd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b63e354-58d5-4a3b-afb7-b34e256d200a",
        "cursor": {
          "ref": "ca82c8cf-ab64-4871-bc1f-6d90fccf0e9c",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bf787e39-e8e7-4c5f-96e2-9767ee30005f"
        },
        "item": {
          "id": "6b63e354-58d5-4a3b-afb7-b34e256d200a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "41f404f7-25d5-49c1-867c-15bb6d6b0d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e2e619-3fb6-46ea-9daa-2ec0db50b47a",
        "cursor": {
          "ref": "19221f54-632a-4f03-8a23-3937a63548d8",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "74557b2c-617d-4a7b-bebf-b05747bde491"
        },
        "item": {
          "id": "c6e2e619-3fb6-46ea-9daa-2ec0db50b47a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e469afdc-1985-43a5-b29e-f60a89809e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc3b3fc-bdb4-4eb8-b069-babfcaddbb3f",
        "cursor": {
          "ref": "66ca96b8-6976-4ec9-a070-df32f5efa1d5",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6b5c28ac-e7b5-4a11-a293-4c9448ccc5ab"
        },
        "item": {
          "id": "cdc3b3fc-bdb4-4eb8-b069-babfcaddbb3f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7fca0fe3-20f9-4e7f-87d9-ffdcfa4d82ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27515b4-9696-4401-94c0-4e4ed810f222",
        "cursor": {
          "ref": "98d1749a-af56-4f1f-b309-14609d21249c",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8b7ac27a-7beb-4bfd-94b1-d784224618ae"
        },
        "item": {
          "id": "e27515b4-9696-4401-94c0-4e4ed810f222",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "668fb7c6-5d09-4a02-bdef-2272fbc0cbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b07be40-ffc5-43d8-a084-4754bfeabcd8",
        "cursor": {
          "ref": "9a5b309a-232c-4ae5-bcac-1fd529e661d7",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0b2c7c2b-80e2-4032-b53d-0ef78c6b93ec"
        },
        "item": {
          "id": "0b07be40-ffc5-43d8-a084-4754bfeabcd8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a0126254-62b0-4b4d-8118-79369adb37e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36fa4c0-aa4e-47fe-9680-516820fe172e",
        "cursor": {
          "ref": "9caffc14-02c6-4895-800d-43fd150fd05f",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8f69279c-44cb-41b2-b5fe-3d0979c56d3b"
        },
        "item": {
          "id": "e36fa4c0-aa4e-47fe-9680-516820fe172e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6560d2e7-3b5a-4f6d-8b92-a371926c00a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b3bf2f-5eb6-4a0a-a829-15f702e4cd83",
        "cursor": {
          "ref": "5c2244b1-1c5d-4da8-8ec6-d67e8e70f104",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b15af196-98e8-4b97-a164-c58f2d17c39d"
        },
        "item": {
          "id": "40b3bf2f-5eb6-4a0a-a829-15f702e4cd83",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e113d73f-d476-4fde-83cf-d607523ce394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820f714d-0c50-41ce-9614-2bd0e7079a8e",
        "cursor": {
          "ref": "98f6e1da-ae9a-4f25-82c0-5fb2c93a8772",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4f6074b8-e1f7-4d28-a7ad-20cd3edbedd6"
        },
        "item": {
          "id": "820f714d-0c50-41ce-9614-2bd0e7079a8e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2d23fed4-d0c2-4cf9-9888-e94176f176e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9de7f35-0958-4ee1-b7d7-87b32a7e2942",
        "cursor": {
          "ref": "c36fa211-23c3-472d-91fb-342e314c7c4e",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bd66aa54-a524-4f54-b386-4de6d4819323"
        },
        "item": {
          "id": "f9de7f35-0958-4ee1-b7d7-87b32a7e2942",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f9f0c5e4-e4f1-40ca-b351-9650eb7192b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b6d657-147f-45fd-9fe0-6e007f13bacc",
        "cursor": {
          "ref": "f6544995-87b3-4ed8-ae89-e9a081dd697b",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "89c45240-4dc1-4810-9322-b7b23d02ff88"
        },
        "item": {
          "id": "b8b6d657-147f-45fd-9fe0-6e007f13bacc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1ef14ce5-59cf-4e04-9686-0be6836fd585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95af3bfa-29d5-4260-a461-10968bff53ec",
        "cursor": {
          "ref": "521af99e-72fe-4318-86f6-53c6312032be",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c5b959a3-ab13-4748-bffd-a4d1a7957446"
        },
        "item": {
          "id": "95af3bfa-29d5-4260-a461-10968bff53ec",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fedbdef7-cff1-4e7c-a65d-b1b466757e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a2a90b-fc38-4c69-a265-0f75dcbfda2d",
        "cursor": {
          "ref": "3345b56d-752b-4cd9-bf05-1e1252a50c20",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9dabccf7-4b1f-466e-9cd7-9cb85d1957ca"
        },
        "item": {
          "id": "a6a2a90b-fc38-4c69-a265-0f75dcbfda2d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e4baa97a-c148-4476-a88e-39dd92d15fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3910d0ee-1a7f-4b44-9ada-b89bcd921841",
        "cursor": {
          "ref": "750ab67d-69e6-40af-bc84-483d90d95068",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e753500e-45a8-44b6-b1cc-07a7b32122c5"
        },
        "item": {
          "id": "3910d0ee-1a7f-4b44-9ada-b89bcd921841",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3ff352ab-db75-4b8c-9471-cfec8061131d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf69753-029d-4b20-9fac-aaa2976a29f2",
        "cursor": {
          "ref": "74a4f5ff-b650-494f-b35c-57d0b7e9886c",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8876805d-fc97-4a9a-9bed-6706f791caac"
        },
        "item": {
          "id": "2cf69753-029d-4b20-9fac-aaa2976a29f2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "634b0026-9e0d-4b2c-9f05-a6edf920cb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cade51ac-14b9-4835-a7ea-4ebf62c435ae",
        "cursor": {
          "ref": "b73f2a66-9476-45d9-bc84-83b062b79d0c",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2405d5f8-4c33-45ff-809c-b0910abfd00d"
        },
        "item": {
          "id": "cade51ac-14b9-4835-a7ea-4ebf62c435ae",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "317960dc-2e6d-4db7-961a-a8d1e0a51b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b837aa1-c363-4bc8-81ea-c0f8665fe858",
        "cursor": {
          "ref": "6b6600b5-ebd6-4d72-b52f-35290c01352c",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5c513f56-423c-4354-a6d7-1da7dbc65a00"
        },
        "item": {
          "id": "9b837aa1-c363-4bc8-81ea-c0f8665fe858",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f2d8f46b-4bf7-404b-9523-dc51f2adbb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c11fc9f-7c04-43ac-b6e4-b8819f93661d",
        "cursor": {
          "ref": "33c7e40a-62aa-4fcf-bb29-12f3fae8e466",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b0c6b100-8b37-4230-99ea-5bb5995e4c61"
        },
        "item": {
          "id": "9c11fc9f-7c04-43ac-b6e4-b8819f93661d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "619c47e9-bb82-4cc8-9057-a1845782c396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5c1679-0703-431b-a8e4-88cf4ccd6e08",
        "cursor": {
          "ref": "33612ff6-6dbb-465a-943c-67bc7631f4da",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d5eb60d8-232f-4aef-a622-b4f8dd45d60e"
        },
        "item": {
          "id": "1d5c1679-0703-431b-a8e4-88cf4ccd6e08",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d6a2c002-ab1e-42c5-bf79-651591844641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ae5cb0-cbd8-48b2-82f3-1513fdf6ccc8",
        "cursor": {
          "ref": "258bb4f9-8691-42ea-be01-937feec0506e",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "320260ec-eaa5-434a-86bd-1c9ea4aaa620"
        },
        "item": {
          "id": "41ae5cb0-cbd8-48b2-82f3-1513fdf6ccc8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "76c90eac-1f55-4591-8802-6219edacb9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c47bbf8-4ca6-4a2e-9051-562f0ac0e339",
        "cursor": {
          "ref": "f2e1d387-93db-4e1a-a987-5b2fc3094bfc",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ae9184e3-5821-48a4-9750-626153720e7f"
        },
        "item": {
          "id": "2c47bbf8-4ca6-4a2e-9051-562f0ac0e339",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "58e5e81d-5845-420a-bcf0-a2679a6ecece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e6ecbe-5f68-4fd4-8011-961925ddcd30",
        "cursor": {
          "ref": "27736ab2-cd7c-4cba-bb5b-a028f7758340",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "73c887b3-327d-42c6-be6b-43eb78150db0"
        },
        "item": {
          "id": "95e6ecbe-5f68-4fd4-8011-961925ddcd30",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "97e2a7ec-02be-4fb3-80ee-643bafcd686f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a9b444-d01c-4e54-91c1-e072e5e32772",
        "cursor": {
          "ref": "8e802b85-093e-495d-be22-e8d322bba45e",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "744c189b-3d53-4ab6-8c3a-1b9cd66a0bb8"
        },
        "item": {
          "id": "13a9b444-d01c-4e54-91c1-e072e5e32772",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "98043e60-a4ff-486a-9eff-01a9181e90f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15390699-464f-436a-9aa9-e1a065f98b00",
        "cursor": {
          "ref": "4fed28f1-52aa-4f0a-98cc-a1f0d73cf958",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f915ac60-2d0b-4094-b8d2-6b65dd59e56b"
        },
        "item": {
          "id": "15390699-464f-436a-9aa9-e1a065f98b00",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3278a20f-b253-4e8f-bd47-d8d0243fa96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacb463e-5616-48df-b0c1-f24ba10049fe",
        "cursor": {
          "ref": "24adc994-9ed3-4e6f-b85d-064c75d6ceb0",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "af9fad0c-05e3-4ccc-8d51-c58671a36bc7"
        },
        "item": {
          "id": "cacb463e-5616-48df-b0c1-f24ba10049fe",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0106a629-76d2-451b-95ee-8ceb753e608d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ed59cc-2813-4361-87e0-b2faffc85908",
        "cursor": {
          "ref": "12a13ea4-4293-4930-b78b-a02ddc950e70",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ad370a3e-dc05-4437-b528-cd65ea3a3abe"
        },
        "item": {
          "id": "f4ed59cc-2813-4361-87e0-b2faffc85908",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5d7776e0-4cbc-4e3c-977b-f537a2026ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6f94e3-de63-45d6-8ff9-a45a2ae16f96",
        "cursor": {
          "ref": "c29064a8-793d-4f75-8ed6-587c735ca894",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fefcfb78-5ac5-45b5-9df6-079b5ba14d85"
        },
        "item": {
          "id": "cd6f94e3-de63-45d6-8ff9-a45a2ae16f96",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "65d6660d-86f3-46ff-8325-8aff26b6a7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e8634c-785c-45a4-99ed-f1cb04d627f4",
        "cursor": {
          "ref": "08e88481-96b5-4a01-b1ce-6bf41a2af309",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dd074428-16e2-4029-a3d6-600ace02f3e4"
        },
        "item": {
          "id": "84e8634c-785c-45a4-99ed-f1cb04d627f4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "170087cd-047e-441c-ae7e-601112bc4eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a721dc9-21cd-4a36-8653-22b442a1da6e",
        "cursor": {
          "ref": "1ac7fcf6-19a9-41a8-8c0b-8476bc26952b",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6a7ae748-2818-4562-b3b5-a66eaf66bcf4"
        },
        "item": {
          "id": "0a721dc9-21cd-4a36-8653-22b442a1da6e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c7b1dc5a-7168-4be5-81fc-a19e9d51e40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4a2a1e-9047-41fd-80ac-6bd9ff56deea",
        "cursor": {
          "ref": "2ba4a47e-a177-41be-8922-99aa65a72680",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f5f61b85-2405-4734-a268-0f623fb4bbaa"
        },
        "item": {
          "id": "4f4a2a1e-9047-41fd-80ac-6bd9ff56deea",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "df7972d1-faec-42d6-9928-75f50fb459c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba994877-2b6a-4a38-9766-276225e10ece",
        "cursor": {
          "ref": "2bd768d5-3f7e-435f-a10e-01e7c0dcfb07",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "87876674-b9d6-4547-9232-b9b0deb946c3"
        },
        "item": {
          "id": "ba994877-2b6a-4a38-9766-276225e10ece",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "eb9bc88d-b971-4521-9601-f1a1afe56b9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68d90fa-c7ec-48e9-9e81-9a995dac1cc1",
        "cursor": {
          "ref": "b08f9bc0-d9f9-4135-a8c2-bfa67a9f1acf",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f28f497e-78af-40dc-a251-a6ffb5a9d7ec"
        },
        "item": {
          "id": "c68d90fa-c7ec-48e9-9e81-9a995dac1cc1",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "6fc520d4-1c5b-4a45-9d1f-df48529ab20e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 66,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ee1c3f-b853-418a-bed7-e5cbde2e6ad3",
        "cursor": {
          "ref": "072cc51d-c385-4aca-9af4-fc8b1128deb1",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dcd252ce-8a67-4b68-a4b1-2b09db39af42"
        },
        "item": {
          "id": "51ee1c3f-b853-418a-bed7-e5cbde2e6ad3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d42118c1-1748-4eeb-9ea8-9902f9399f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ee1c3f-b853-418a-bed7-e5cbde2e6ad3",
        "cursor": {
          "ref": "072cc51d-c385-4aca-9af4-fc8b1128deb1",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dcd252ce-8a67-4b68-a4b1-2b09db39af42"
        },
        "item": {
          "id": "51ee1c3f-b853-418a-bed7-e5cbde2e6ad3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d42118c1-1748-4eeb-9ea8-9902f9399f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7b7858-9d72-42af-a7d2-cd815a483d6c",
        "cursor": {
          "ref": "ee1ca26e-b519-4749-9202-f414e51c26fa",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c3db6347-83ef-4139-80dd-b9c79b81cbd8"
        },
        "item": {
          "id": "6a7b7858-9d72-42af-a7d2-cd815a483d6c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f3534ec8-f17a-4598-b359-068ee7fa8ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11603883-fdf5-4af9-a23b-90bc4a155776",
        "cursor": {
          "ref": "2b80bef6-e172-4d02-b7a0-79f85d3bcfbe",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8f20e1df-5b05-4e66-b140-2d83103169fe"
        },
        "item": {
          "id": "11603883-fdf5-4af9-a23b-90bc4a155776",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e1867f69-659a-4e26-aeba-19c7ca00a406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d34969-5a5a-4b88-a914-3a070ce8504b",
        "cursor": {
          "ref": "7bba1bab-4a9b-4dd1-925b-617cae6edb39",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "34991934-4e27-45fc-8f47-35dcd37776c3"
        },
        "item": {
          "id": "01d34969-5a5a-4b88-a914-3a070ce8504b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "393906f3-37d2-4b4d-a3c4-37c5b85bc4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160c349d-2250-43eb-81eb-265a5248056f",
        "cursor": {
          "ref": "5cc00858-7782-4d15-a7c6-c4ddd76fbffe",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4643f743-40d7-43a5-a96d-c6009d47daf2"
        },
        "item": {
          "id": "160c349d-2250-43eb-81eb-265a5248056f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bfd189e8-b44d-4db8-a5ce-e1db519bc7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be3b85a-a1ac-4158-b97f-dde771309ada",
        "cursor": {
          "ref": "0deaa753-e0a3-40e6-8248-05821a05fa67",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a05af6d3-3091-4177-9f5f-ae1678a528ee"
        },
        "item": {
          "id": "2be3b85a-a1ac-4158-b97f-dde771309ada",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b206724e-055d-44fb-b5be-e906a219638e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7977724-1a39-4681-98c5-5deabd647822",
        "cursor": {
          "ref": "93052e3a-3f6e-4c38-ba22-b93504f3a1bb",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0ce305c6-8f54-422f-9e0d-d7b3cf536256"
        },
        "item": {
          "id": "a7977724-1a39-4681-98c5-5deabd647822",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5e9a0dc6-709b-4056-811e-1d0ad054d59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4427d1aa-6987-4a3d-9c36-530a11d335eb",
        "cursor": {
          "ref": "dd869702-579d-4f7c-9762-44fa7cede69d",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3d5402dd-245f-43af-9317-bd39f17c2e06"
        },
        "item": {
          "id": "4427d1aa-6987-4a3d-9c36-530a11d335eb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7cdea82b-deb6-4cd7-b0fe-17ba4ef09aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18eb5162-1207-4ab0-8c38-6537af527a1f",
        "cursor": {
          "ref": "163f3384-067c-4be4-823f-e904451097e3",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b5da00df-1e09-44eb-b0ce-80accb40d647"
        },
        "item": {
          "id": "18eb5162-1207-4ab0-8c38-6537af527a1f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b83613b9-4e8a-4abb-8896-638f3b41d807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f51b926-2bb9-43cf-b7f3-87b4b48b353f",
        "cursor": {
          "ref": "c8652cde-8a23-4547-b7ec-06158fc1cdcd",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3bbd1076-c988-48a5-8f4f-b5e0ddd23d12"
        },
        "item": {
          "id": "7f51b926-2bb9-43cf-b7f3-87b4b48b353f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7b4a9faa-7b30-41ac-adbb-24da3229be63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb805719-dd48-44e4-95b7-7be14a25e25e",
        "cursor": {
          "ref": "7c1483bf-9864-4d4e-862a-e3c9ad1ed8b2",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b12d1da5-eb4e-4afc-9883-142fb495d7e0"
        },
        "item": {
          "id": "fb805719-dd48-44e4-95b7-7be14a25e25e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "226ab30c-02bd-408c-80b5-84e5f3fd6521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f17e48-fbdb-4971-a994-2e8aa61062a9",
        "cursor": {
          "ref": "dbb06ceb-9767-44c2-a16f-35ecb7f3d146",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5537fa68-201c-431c-8f00-0d5ead895d69"
        },
        "item": {
          "id": "07f17e48-fbdb-4971-a994-2e8aa61062a9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "73b5ff39-6c74-4cbe-a2b4-099c22284c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd25710f-3ae5-4ddf-ac84-265741813f61",
        "cursor": {
          "ref": "a337d629-93ee-4666-ba59-21d67f1047a8",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "66ec358b-00c2-40fc-8642-4ad92ec0db3f"
        },
        "item": {
          "id": "dd25710f-3ae5-4ddf-ac84-265741813f61",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c67cd5f9-a98d-4b5b-84b6-64011a5f6da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5dd073-a023-4670-85bb-a1aefc538d9a",
        "cursor": {
          "ref": "7d56cfb5-da53-4cad-bb3d-82b7b2d07f09",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e64c917d-d70c-46ea-81a3-1e05dd8ceab2"
        },
        "item": {
          "id": "9c5dd073-a023-4670-85bb-a1aefc538d9a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9f2bcb97-14f8-4ff0-b431-9d26d8eee39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403010fa-abf3-4fe0-b9a0-5c684d87a96c",
        "cursor": {
          "ref": "f00aca48-9cca-4f67-abe5-63ed2e7bd4ea",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "35db7b6e-72ed-4ab5-b2c0-e5b076de25b8"
        },
        "item": {
          "id": "403010fa-abf3-4fe0-b9a0-5c684d87a96c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "49ddede8-3c48-42a7-b90b-3f8cfc352aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6feb68cb-b687-42a5-85de-eca73934aad3",
        "cursor": {
          "ref": "9714d91d-318e-457d-be94-1e24afa544d9",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bae265a6-b604-4c9e-8350-9e80c6ac152e"
        },
        "item": {
          "id": "6feb68cb-b687-42a5-85de-eca73934aad3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "af3c7908-a7a6-42b0-9a0a-89aa78dd08f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5048ad-f343-45c2-a879-d3619914235b",
        "cursor": {
          "ref": "b595fb05-4569-488f-9f92-953111c06f4e",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "eced3a8e-4077-4ffe-bf92-6dd3519bacc1"
        },
        "item": {
          "id": "5b5048ad-f343-45c2-a879-d3619914235b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f8eb622f-8817-47de-a736-14190d361cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22fc225-b925-43ac-b4d1-0d02b8627aa7",
        "cursor": {
          "ref": "49440cc4-09f9-4197-93e3-a9cc9185057d",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "63e27210-85ac-4b15-8832-91f85dcb1412"
        },
        "item": {
          "id": "e22fc225-b925-43ac-b4d1-0d02b8627aa7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a3c7dbc9-47ac-4c56-af21-9cf834f58143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aff6804-9061-4021-8d61-173aaadebe38",
        "cursor": {
          "ref": "83b8cc4a-5544-44c2-927e-ea35e6c35b1f",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "68345bff-4be1-446b-b3ce-d9ef603bc6ce"
        },
        "item": {
          "id": "7aff6804-9061-4021-8d61-173aaadebe38",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2e740e52-bb34-435d-a890-d1d3fc4f9a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7429b8c7-3d2f-4745-88f9-2f9a5bb0e943",
        "cursor": {
          "ref": "83f2b995-aaae-41dd-8457-8ac8e184cb11",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "809e0a85-d3ee-4b58-aef9-5dee61a29f5d"
        },
        "item": {
          "id": "7429b8c7-3d2f-4745-88f9-2f9a5bb0e943",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "88fe716c-1196-4eb0-a621-50d08181f6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4ffccf-0adc-4d1e-b501-7264a0254847",
        "cursor": {
          "ref": "42d67386-973f-4340-ac35-130812f733ee",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e66b5f07-92f4-4e71-8ffc-8fd58be6c4b1"
        },
        "item": {
          "id": "2a4ffccf-0adc-4d1e-b501-7264a0254847",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "537e3073-5387-413f-a4a3-5c33cc9ba8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da54154-1d03-4d21-a07c-4f6ab64eb3b2",
        "cursor": {
          "ref": "5c18ad13-080d-49ee-8e1b-a6cdbace4530",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "725cae7c-8a31-4a1d-9517-0aafa14871b2"
        },
        "item": {
          "id": "0da54154-1d03-4d21-a07c-4f6ab64eb3b2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ee8fe54a-54d9-48b8-a0e4-e9b3c1f0fdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab182b69-069c-45af-956c-1baadf559863",
        "cursor": {
          "ref": "86592db3-2273-46fc-a2f5-53e6a7ad0df6",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ff0da8a9-e76f-4ee5-8844-48b4485151ea"
        },
        "item": {
          "id": "ab182b69-069c-45af-956c-1baadf559863",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "61b4c3b9-eeec-49aa-89ae-84b454287450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c3e0c2-2c21-4529-a65a-4ff4bc98dea6",
        "cursor": {
          "ref": "75af9dbb-fe3a-4aca-bca1-eb8c3c9237af",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2144f50c-2829-429c-bda5-34817571068e"
        },
        "item": {
          "id": "96c3e0c2-2c21-4529-a65a-4ff4bc98dea6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0349d230-9f97-43ff-95bb-2e971bef3259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051cf62e-4b4e-495a-b5be-0bc4b3c240b0",
        "cursor": {
          "ref": "db169b72-9e94-4691-8828-20ed10891327",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "db95e5d5-8cfd-4173-aaef-12fbd07be565"
        },
        "item": {
          "id": "051cf62e-4b4e-495a-b5be-0bc4b3c240b0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0474b097-4942-42a2-b5c4-5f18c2a4a83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f5c126-a747-4ea9-8aea-52cef6fc7cfd",
        "cursor": {
          "ref": "53e474ac-90bb-4214-aad3-9e81d2c65365",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "015fea54-3954-4f0a-88a2-ff7eb64eeb4c"
        },
        "item": {
          "id": "82f5c126-a747-4ea9-8aea-52cef6fc7cfd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e77c7986-1046-4635-8cdc-394b2738f154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efab5034-4a29-485a-ad41-c0b883830d13",
        "cursor": {
          "ref": "1348933c-3f53-462b-8214-955fd3b224d2",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "902d45c6-4b3b-4b08-b37b-3b27a3f59f27"
        },
        "item": {
          "id": "efab5034-4a29-485a-ad41-c0b883830d13",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "04ae221e-95f3-450b-9bbf-18acab05734d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309b103a-d63d-4345-a279-6a02e357d1d1",
        "cursor": {
          "ref": "b4caca2c-ea09-4654-aaed-c013b5a0b4dc",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "868aaca6-22f7-4865-b1bf-4fe09af767b4"
        },
        "item": {
          "id": "309b103a-d63d-4345-a279-6a02e357d1d1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "43490bfc-ea2e-4024-a143-4402bf74c55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a241adb-618f-4844-aba4-450bcf94d6d2",
        "cursor": {
          "ref": "b97415f5-464c-4206-865f-860ea2208345",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3db4d96c-1720-4c46-b9ca-993a0a92708b"
        },
        "item": {
          "id": "7a241adb-618f-4844-aba4-450bcf94d6d2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "77b3215e-83af-4ece-b0c0-45d41900af50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35521f5-ea44-4660-a2d6-f9af31d20c77",
        "cursor": {
          "ref": "5448c879-4415-4aa9-ad85-b61237a5dfd0",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bd2f45a2-3865-4566-8637-d0be0ebb893b"
        },
        "item": {
          "id": "d35521f5-ea44-4660-a2d6-f9af31d20c77",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4ca14791-b1b8-4f99-8aac-d16f0b232112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918670dd-487d-4af7-b348-946a5d4a51a2",
        "cursor": {
          "ref": "4dc8fe94-30f1-4801-8ea5-4eef803c4e9e",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3cfa5450-8380-41d4-b90e-4123a0114daf"
        },
        "item": {
          "id": "918670dd-487d-4af7-b348-946a5d4a51a2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "69c86baa-513b-40ae-94cd-d7d160d15a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de969276-73f6-424b-bb8f-1522abe9512c",
        "cursor": {
          "ref": "85987614-9612-4873-bff8-86a94d5e9e52",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "417c9f8b-ce41-4d98-b155-49712824ede7"
        },
        "item": {
          "id": "de969276-73f6-424b-bb8f-1522abe9512c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "309915f8-3045-42b4-81ec-1e3457b767f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8187617-3eca-4438-b1b2-67e01c357d59",
        "cursor": {
          "ref": "60b8a76a-c72c-46cf-90d8-fc959a45f015",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d03616ab-f492-46e0-a08a-00116eeaae0d"
        },
        "item": {
          "id": "f8187617-3eca-4438-b1b2-67e01c357d59",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "87031856-dc26-4a96-a1ef-825ce08e515f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e85d704-6c0d-47ac-95a2-cfe944253340",
        "cursor": {
          "ref": "aa4b60fa-288b-4d46-9e4b-1ad22856e81f",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "941d3500-c705-46c0-9f79-d72247bda1ed"
        },
        "item": {
          "id": "2e85d704-6c0d-47ac-95a2-cfe944253340",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "56f2775f-ec31-42ca-bd34-6ff0f24b6458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d80f80-74e9-42ee-88f1-f1f96b2b1406",
        "cursor": {
          "ref": "cc81f236-a6ce-4538-854e-48f27dffa32a",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "98aab99f-010c-462d-9d14-b2b0aca242de"
        },
        "item": {
          "id": "f4d80f80-74e9-42ee-88f1-f1f96b2b1406",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7a3ed9d9-8423-44a3-ac5a-310b0673623b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1278388e-088c-4718-bf95-96213312a268",
        "cursor": {
          "ref": "1156c1c9-bfdd-4234-8b0f-2e6ab885edf7",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2d6100df-f6e1-4e16-8be5-504b7bba2429"
        },
        "item": {
          "id": "1278388e-088c-4718-bf95-96213312a268",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d3461fc4-92ef-4622-9fbb-66756a6151b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2559635a-274c-4241-a5cb-f6cc8756e651",
        "cursor": {
          "ref": "ef488b9c-1791-4758-a957-e5fb5b82e79d",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "88dbbf94-76f1-4a5c-9e58-51b457cd0913"
        },
        "item": {
          "id": "2559635a-274c-4241-a5cb-f6cc8756e651",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ad7a78af-afb7-450a-859e-eff439ee5481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb720dd-686f-453b-86e3-1123c6ef070f",
        "cursor": {
          "ref": "b69bfacf-d167-493e-a005-2a0bc4796943",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "76909dc3-c468-49f4-9177-f4130bad5bb8"
        },
        "item": {
          "id": "4fb720dd-686f-453b-86e3-1123c6ef070f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6166577a-e3d3-467f-9e9c-31175fcf89ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3458b92b-de65-441f-86f4-fee8810909b1",
        "cursor": {
          "ref": "95d5523d-66a0-4a8e-9e67-d10cfa27a955",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "dbd38824-13e9-4a0c-bb83-6e12827d5a9c"
        },
        "item": {
          "id": "3458b92b-de65-441f-86f4-fee8810909b1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "87ab087c-2471-45f8-848c-fffe13738470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a68235-4d97-4219-bfd6-78bcc5096028",
        "cursor": {
          "ref": "a2efc17f-b1ee-4973-91f0-c000f3fb1259",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "afc84671-6a1f-4969-8bc4-e2b25f77eb39"
        },
        "item": {
          "id": "40a68235-4d97-4219-bfd6-78bcc5096028",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0e6052ef-bbcf-4a86-9631-4b8b378bbb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf65b97-635a-4924-bb76-959e6eee353b",
        "cursor": {
          "ref": "a74bf2fa-2eb0-424a-8d0e-9ee4f8d212cb",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7710fb7e-e1be-4777-98e9-2a523aa0b524"
        },
        "item": {
          "id": "4bf65b97-635a-4924-bb76-959e6eee353b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cedb00da-9e9b-4c8f-a917-b62528f45fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9420cd64-f853-4777-84f2-7d844f3033a7",
        "cursor": {
          "ref": "80da97c6-70e8-4e1d-9b88-d06190114188",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d6c07e22-a8b9-4dfa-8003-c3e46d9a26b3"
        },
        "item": {
          "id": "9420cd64-f853-4777-84f2-7d844f3033a7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f6d19e3f-09b7-4ea5-bf61-56434b8ff565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a90e21-9786-4ebc-9174-586e77b9a67d",
        "cursor": {
          "ref": "03a63b29-86bb-4220-8ccf-56c53e3b8c0c",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "669f28e7-88d9-4e58-9bd0-bc85ff2eaa8c"
        },
        "item": {
          "id": "a0a90e21-9786-4ebc-9174-586e77b9a67d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a2676679-40d0-4a41-97c0-25a6d673c431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997da168-3348-4a59-8347-8411a6d927da",
        "cursor": {
          "ref": "afdf365d-71fd-46d7-a9e4-35a501fa7dd9",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2fb82640-18a8-47f4-80d4-0ed596c8e54e"
        },
        "item": {
          "id": "997da168-3348-4a59-8347-8411a6d927da",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8589b2e9-ca32-4862-83a4-9b56077c5662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8bd4ec-136b-4e7a-848e-59a215f4b4a5",
        "cursor": {
          "ref": "212fd71d-f31a-437a-af13-6a9380f1be7d",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6a7aca7f-8ff9-4cc9-b4aa-ad8d08623b2c"
        },
        "item": {
          "id": "0b8bd4ec-136b-4e7a-848e-59a215f4b4a5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fd073844-90d2-4944-bcd0-1dc09b43dea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b810b34f-d25f-46a3-946e-11bc4ac1bce4",
        "cursor": {
          "ref": "491983c6-85d6-4ff7-b1de-bbac20e64731",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a119d95b-baa1-4779-b353-5219de202d15"
        },
        "item": {
          "id": "b810b34f-d25f-46a3-946e-11bc4ac1bce4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8d0c0064-edcf-4086-bd20-96b6495f950b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40870420-8842-4093-b336-072d72e656ef",
        "cursor": {
          "ref": "b01a6132-c845-48bf-970b-21d0045d0d20",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4439819e-b4d9-438c-8e0c-9e20c42b8c9a"
        },
        "item": {
          "id": "40870420-8842-4093-b336-072d72e656ef",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7a328e99-87da-4104-9e1c-afa97a59ef05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accfad98-20fd-49d7-aeda-9a9a9ea104b5",
        "cursor": {
          "ref": "736c4555-7533-4c84-ba78-d58a47b661b0",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "03c410ad-eba5-4a8e-9b79-8832dc760654"
        },
        "item": {
          "id": "accfad98-20fd-49d7-aeda-9a9a9ea104b5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d94f7245-b8eb-4ac0-8c42-bbe4893df265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1576936-b707-4b76-adc9-db55cbbebe64",
        "cursor": {
          "ref": "26565f0a-9f15-4549-b2a0-7f953ba026e2",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e4d01063-2500-43da-a791-2bc2f7b8f3ef"
        },
        "item": {
          "id": "f1576936-b707-4b76-adc9-db55cbbebe64",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a0f2d549-ee39-4f9d-bc80-b3754ea174c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6f2a2c-5274-43a3-bfa8-a277e27372f7",
        "cursor": {
          "ref": "55656786-94b0-417b-a3e6-50df36346235",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d3cb3f6f-d949-4738-ba9b-fad6166f9c2f"
        },
        "item": {
          "id": "1c6f2a2c-5274-43a3-bfa8-a277e27372f7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "23fc65a6-bffc-4149-bf0c-d8d4ef15257a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8668d0a-0cb3-41aa-87d6-dbc533f18eb8",
        "cursor": {
          "ref": "6b680099-1fe2-4708-813a-304687e33a87",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8b7b1607-7d26-4029-8cd2-f8f7db5c10b6"
        },
        "item": {
          "id": "c8668d0a-0cb3-41aa-87d6-dbc533f18eb8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "87229819-3a2f-47be-af5c-06a03cb88b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544cdd18-4b65-4f8f-9cc9-9e3f9670d35e",
        "cursor": {
          "ref": "d9aab208-4483-43f3-be02-5af6160814cc",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7b1eb970-41f3-4340-992f-a3e8837f255f"
        },
        "item": {
          "id": "544cdd18-4b65-4f8f-9cc9-9e3f9670d35e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4bb1cff8-221b-487a-8ec6-0a4805118fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8dd71d-5425-470e-b0d9-50ea8fd4f903",
        "cursor": {
          "ref": "b0737473-37d3-44ad-bd06-12c350c90935",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6905695e-5c0f-49c6-b213-e23f11402854"
        },
        "item": {
          "id": "ac8dd71d-5425-470e-b0d9-50ea8fd4f903",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b13f6ef6-f9cd-4fd5-a177-477d2838ecfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f14c0cd-f7f9-4096-83c2-4893b2f8b10e",
        "cursor": {
          "ref": "a75550a2-67ad-4c7a-8ca0-3e2e6dfbe9f8",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c3e2727f-f2b8-4db4-a2a0-d8e0185a404f"
        },
        "item": {
          "id": "1f14c0cd-f7f9-4096-83c2-4893b2f8b10e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0848dc16-82c0-46e9-8f9f-c4508197e685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a17904-a042-440b-afa3-d674f8ceaa16",
        "cursor": {
          "ref": "137c5260-3568-46d8-9b24-23f413148cfa",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "880eb0cf-8c64-4cad-9574-548e22711111"
        },
        "item": {
          "id": "34a17904-a042-440b-afa3-d674f8ceaa16",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cfed18da-2dc8-443f-8320-de9f6e566816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f0a00d-a705-41f8-aa9b-4d79f9959d51",
        "cursor": {
          "ref": "a1eb2368-7def-43dc-904d-4fe4e502e14e",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "67315ed4-b633-4a14-9d5c-320741788893"
        },
        "item": {
          "id": "c5f0a00d-a705-41f8-aa9b-4d79f9959d51",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7d208347-6b51-47e6-ae50-7404699f833f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd37723-e580-4e04-89c1-2d51434d1938",
        "cursor": {
          "ref": "4e7d2f4d-8868-4c46-ae20-662981b33712",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6c408bfc-a21e-448a-8e4d-927b6171806b"
        },
        "item": {
          "id": "7cd37723-e580-4e04-89c1-2d51434d1938",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cb713c2b-9eb6-419b-9b42-91ca3f6585ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bae0e02-d745-4850-ac61-8f57f73f6860",
        "cursor": {
          "ref": "0eec4474-858a-4cd4-bc38-c4d18ba0c35e",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3363d975-89d4-476d-aa44-5f7cb23a7efe"
        },
        "item": {
          "id": "5bae0e02-d745-4850-ac61-8f57f73f6860",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a703d6ab-ff72-4b01-84f2-a7ab43fedfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391c5254-f884-4de6-b47c-b5d00d9adcd2",
        "cursor": {
          "ref": "040364ab-955f-41f7-bc6a-c2acb2d30eb0",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d41fb75e-b399-43fd-818b-f5729a3515a7"
        },
        "item": {
          "id": "391c5254-f884-4de6-b47c-b5d00d9adcd2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5690c896-2d35-477f-9f6c-fe89ad0cab96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bb9ffb-c56c-40c4-b156-6321c0a9aed3",
        "cursor": {
          "ref": "95b8bed8-a6ae-4e05-8b33-136731429cb9",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "456c0d1b-a75c-4492-8e08-0d6fad796402"
        },
        "item": {
          "id": "d0bb9ffb-c56c-40c4-b156-6321c0a9aed3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "47938887-cd69-465c-ba51-ce5cccdfa4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec92b5b-3a43-477c-8456-383cbdd22ef6",
        "cursor": {
          "ref": "3655a06e-533f-4a7b-91a6-794044b36235",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "da8c5c9a-bcf1-4a01-8ccb-a098cdca6847"
        },
        "item": {
          "id": "1ec92b5b-3a43-477c-8456-383cbdd22ef6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "20fcd733-221b-4a27-9663-e1ce655e3cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8e6bcf-da38-4c2a-a03c-96e6232137c2",
        "cursor": {
          "ref": "52179578-a7b0-42d7-b09b-8fc243bfcee6",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b2334276-2dbd-46e0-8a17-a70ed1cb532c"
        },
        "item": {
          "id": "2c8e6bcf-da38-4c2a-a03c-96e6232137c2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "95cf06e9-ed1f-4031-9cf8-0e948fda320b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bca6b9-9810-40bb-8483-cbd6debdc5be",
        "cursor": {
          "ref": "a195d70d-98a6-412b-935e-d5507cc4ca09",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ee4627cd-0ca4-4a49-871d-87edc34090cd"
        },
        "item": {
          "id": "c3bca6b9-9810-40bb-8483-cbd6debdc5be",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "030dea16-ece4-4fc8-ad71-c54e129ae41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0a4e95-f3f6-4eb8-b791-79b48e38a05f",
        "cursor": {
          "ref": "fc872274-4328-473c-af75-61b6a02e80cb",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "adfacb44-17e7-4b96-ba44-8164225eff29"
        },
        "item": {
          "id": "fd0a4e95-f3f6-4eb8-b791-79b48e38a05f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9b8f6963-6680-49cc-8d58-2a4eac594e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dd43a4-0f0b-4cd0-88ce-d2b0eaab2d23",
        "cursor": {
          "ref": "2a2171ec-bda6-4c9b-8074-7acd8f4d3102",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d9ef1714-a052-48d6-ae3b-4666ad03bee1"
        },
        "item": {
          "id": "f7dd43a4-0f0b-4cd0-88ce-d2b0eaab2d23",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "24b80545-56ea-4552-b9f5-5b0adf0bcefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02caad4-f5c6-4ded-9a15-7c24acfbed1a",
        "cursor": {
          "ref": "f34aa17f-c68d-40fc-91d8-13590ed3c31f",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "02f7c650-ffb5-4da1-8f2a-e5f2bfb591a9"
        },
        "item": {
          "id": "f02caad4-f5c6-4ded-9a15-7c24acfbed1a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "85982f5a-dd2d-4914-bc9a-4d834393b6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611c727c-5e56-45e0-83b7-f05fe15628fc",
        "cursor": {
          "ref": "95d1c807-78f4-4444-9d89-f419ae6c5187",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f02042d1-2399-418f-a3c0-e1da4215c8c7"
        },
        "item": {
          "id": "611c727c-5e56-45e0-83b7-f05fe15628fc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0de19f32-e643-4dbb-8863-e1baad124bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203f2833-0dad-4f0f-a2cb-1a2004b3ee54",
        "cursor": {
          "ref": "9f2da96e-3be1-48e4-8982-b74be8748286",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d938302b-0fc3-4b27-91b2-a64775ef9a68"
        },
        "item": {
          "id": "203f2833-0dad-4f0f-a2cb-1a2004b3ee54",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3e43d972-52b9-4f13-8068-334c3be0051c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b2fda9-3bf0-4b04-9bca-4c5cb8641154",
        "cursor": {
          "ref": "05863048-d79f-4c1d-b2a4-71b7242bfc1b",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "feb34a83-ef76-4328-b7fb-94cec3a30af8"
        },
        "item": {
          "id": "b5b2fda9-3bf0-4b04-9bca-4c5cb8641154",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e299f555-f4d4-45d4-a80c-013a31ca516d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c27ba2-849d-45f5-bb14-5be2722348c0",
        "cursor": {
          "ref": "543f12ce-cbf8-4ccd-8a4f-9ce30cf6c9be",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cc9a4944-fc13-4d7b-9c8f-effd0b5ebd6b"
        },
        "item": {
          "id": "d7c27ba2-849d-45f5-bb14-5be2722348c0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7afcc9ad-0133-4c6b-b699-194c3432dced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513d7941-3b3e-430a-bd2a-a513cd7fba8b",
        "cursor": {
          "ref": "e0e37d23-1154-45e9-8b71-b983b5cb316a",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "06afdeea-56d1-4971-8203-5c69ae96c2f1"
        },
        "item": {
          "id": "513d7941-3b3e-430a-bd2a-a513cd7fba8b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d31a660d-4d93-4536-afda-7f0be1625003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dde8730-ab47-447d-8819-c981767ca56f",
        "cursor": {
          "ref": "acd8a0c0-5bc1-43d6-be92-8d5c4a92cfd1",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bd7bc51e-cfb2-4e44-a719-2ddce9ad31b4"
        },
        "item": {
          "id": "7dde8730-ab47-447d-8819-c981767ca56f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "62a8304f-84e0-4164-aaef-b26d44016d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdd6090-35d4-4ce1-81cb-49cbea408942",
        "cursor": {
          "ref": "d38b9584-2b3b-458d-a003-fd61c0afc47a",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5845b5fb-ec78-45c2-8ec2-429675875f91"
        },
        "item": {
          "id": "fcdd6090-35d4-4ce1-81cb-49cbea408942",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9b89f3aa-ce73-447f-8d62-f617fb11fd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ab6a69-f6df-452d-811a-fc38062bf5e4",
        "cursor": {
          "ref": "99b4686d-9379-48b6-bce4-394b4e2948e5",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "91e8a676-0913-4c2f-9033-ad3122e94041"
        },
        "item": {
          "id": "90ab6a69-f6df-452d-811a-fc38062bf5e4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2fc6146c-f993-4e03-9b21-681bb68f2656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59c580c-2755-4ff5-b9f2-54d38052c0cc",
        "cursor": {
          "ref": "f4f33a51-58f2-4cce-9c65-419dfc1e2bf0",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0c52905c-1c60-4276-af9b-8718ae9cc29b"
        },
        "item": {
          "id": "c59c580c-2755-4ff5-b9f2-54d38052c0cc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a2c1ea8b-0a60-4f2e-98fc-70c4244cf4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2218fc08-33ea-4267-b122-4f66a89c41d5",
        "cursor": {
          "ref": "08caffc2-46f3-481d-8c5f-b09de420cba4",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3f7aeccb-2830-427f-96e9-438e31183469"
        },
        "item": {
          "id": "2218fc08-33ea-4267-b122-4f66a89c41d5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cbf91da6-a776-4e6d-87c7-bae3952f011d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7afcb6-2739-4224-baef-c6dc7769ca83",
        "cursor": {
          "ref": "2c06c95a-0ad7-468e-acde-e428160c2c77",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "654aff0b-268d-4be4-ac33-2076c9ac42ef"
        },
        "item": {
          "id": "9c7afcb6-2739-4224-baef-c6dc7769ca83",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7dc7394e-28f0-4064-9b7a-a74f07ce85ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84d0278-4023-4f0b-be9d-83a24eea772a",
        "cursor": {
          "ref": "24ac4b59-fa32-4a48-97cc-376101459fc6",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "935a881b-1b40-436d-a3d1-153b1dd6204d"
        },
        "item": {
          "id": "d84d0278-4023-4f0b-be9d-83a24eea772a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9f34cf64-0dc6-4ff4-9991-5e7ea36c4f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4724967-82a9-460e-a5e3-8db2cbf7399b",
        "cursor": {
          "ref": "14730b1f-8793-426f-9043-d20b340e4aa7",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a3b80583-2f03-4a37-a00f-fea75b6124b6"
        },
        "item": {
          "id": "c4724967-82a9-460e-a5e3-8db2cbf7399b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b8551805-fb61-4a16-9fae-4e534a02e4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06f015e-df97-4637-a9ac-2949b925f06c",
        "cursor": {
          "ref": "a859c83b-bba4-4d2c-a06d-c478c08c5dde",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4755b51f-fbe9-4c8b-8bf0-cf70e93961de"
        },
        "item": {
          "id": "a06f015e-df97-4637-a9ac-2949b925f06c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9545b24d-ebb5-431c-b86e-1b47d516e02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e077e9a1-7655-4772-b719-44376a473b9d",
        "cursor": {
          "ref": "4b6cd8ed-72bf-40f1-9e33-258a1d3a00b7",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ce73b2d2-52dc-4de1-bbb3-1ceacaeed599"
        },
        "item": {
          "id": "e077e9a1-7655-4772-b719-44376a473b9d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d06c8a4a-630e-4f78-abd7-a4f1d86e778d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624cb695-5575-44e4-8fea-5b6b8b501bf5",
        "cursor": {
          "ref": "99a5b8ed-8000-47b9-80ca-69c2fbceba57",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "da8553a2-ea3c-4e7f-b1aa-6f1ac11abc76"
        },
        "item": {
          "id": "624cb695-5575-44e4-8fea-5b6b8b501bf5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d4a57097-fc7f-44d6-8e45-5a8a609eec03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966ff155-168c-49b1-9656-35c719b5057a",
        "cursor": {
          "ref": "a1f9f0fd-c58d-493f-a728-69c0040c79e7",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fde31643-6bce-4f62-8fac-3ec855551495"
        },
        "item": {
          "id": "966ff155-168c-49b1-9656-35c719b5057a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "56c70340-966a-4e71-b5b2-a3928d1724f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35c81fb-15ab-4424-84f9-8cd5e0fd6cc5",
        "cursor": {
          "ref": "48fbceb5-cd6b-4a1f-97ab-6d822e23d3f6",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "21b02a75-a553-4dbf-8ee2-3645a6210cfb"
        },
        "item": {
          "id": "c35c81fb-15ab-4424-84f9-8cd5e0fd6cc5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "be206d69-fc3d-4453-9c68-01143cd082dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106e5468-b60f-46ea-a5e0-734f2aad9571",
        "cursor": {
          "ref": "412ea69e-4196-41c8-8b78-7b6723e7693a",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4c607c54-b0e9-4a92-b920-0256c34bb701"
        },
        "item": {
          "id": "106e5468-b60f-46ea-a5e0-734f2aad9571",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "22c1e1e7-d951-4cb6-89f8-d779c62a8bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775f4d26-8053-488a-8b02-3d08e6de7277",
        "cursor": {
          "ref": "f6c721ea-3b8b-4672-8b7c-eef4dc40d867",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "933774a5-9538-4023-8f41-e35c60777cd6"
        },
        "item": {
          "id": "775f4d26-8053-488a-8b02-3d08e6de7277",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0bc0faa0-80e4-47be-a2f1-be46bd720fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8301fea7-ae4f-4f2f-abbf-0f971019e73c",
        "cursor": {
          "ref": "ac75620d-1c22-40bf-810c-df5667ff28d5",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5bf1e713-10e3-4543-929c-ab884555ede1"
        },
        "item": {
          "id": "8301fea7-ae4f-4f2f-abbf-0f971019e73c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ce1e5a83-17ec-400d-a8ec-1eb1b04f8744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dfe0cc-fe8a-47da-af6b-5d0f4eb1ef9c",
        "cursor": {
          "ref": "e3ab70b5-b805-42bb-a177-897e65a6c8f0",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c909fe96-a8a5-4ce5-9ba9-048a8ddd6c4b"
        },
        "item": {
          "id": "e0dfe0cc-fe8a-47da-af6b-5d0f4eb1ef9c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ceed1876-e254-400c-8075-3930d935dcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184255ef-2aca-4e35-b5bc-06369384733e",
        "cursor": {
          "ref": "cef7b4bf-f7af-4aa1-aeab-9460f1f9fbf4",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ec90f96b-a859-40be-a346-602e8bf8a9c3"
        },
        "item": {
          "id": "184255ef-2aca-4e35-b5bc-06369384733e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7e432545-ad67-40e3-9744-074a5a7f7480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93facb58-592c-4689-96bd-4e5b2a55639d",
        "cursor": {
          "ref": "40d9def8-4c1c-47b5-9298-26d3fbbe3e49",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b0cee7b8-3415-4f4d-ae4a-487177ceaf76"
        },
        "item": {
          "id": "93facb58-592c-4689-96bd-4e5b2a55639d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "11ebed44-89e8-4ef8-8bba-c95bf2c2fb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718b8862-385c-4d88-81fe-ed38b4deca87",
        "cursor": {
          "ref": "08032c68-1765-4163-811d-bfbe737910b7",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1b38b606-d4b1-4fa1-87af-03856f5310a0"
        },
        "item": {
          "id": "718b8862-385c-4d88-81fe-ed38b4deca87",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bc7fec16-74e9-42ff-b1ce-6a509291488a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2ffc0e-2337-4e66-b5a7-1b7cc5921a13",
        "cursor": {
          "ref": "928ded8d-5aaf-434a-84a2-cbb5aa8840dd",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "100f9b88-6b23-4955-b736-fdcf43e7cc35"
        },
        "item": {
          "id": "2e2ffc0e-2337-4e66-b5a7-1b7cc5921a13",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8a8eaae0-1aa7-4783-85b0-dee47a9a5349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cdc4c4-2d94-4557-83d9-9816f309beb6",
        "cursor": {
          "ref": "07bbd6d9-4f84-4e53-b5f9-e8d33be6951f",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "02b94f20-4bc1-4a5c-9289-0a1364fa0f68"
        },
        "item": {
          "id": "39cdc4c4-2d94-4557-83d9-9816f309beb6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0b07e32b-14a9-4841-bff4-68430f86f2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f37f01-c11e-409c-a84a-b1c8c781aaf9",
        "cursor": {
          "ref": "5c1dd098-ed4b-4f17-9d23-331c3e2c8591",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "38d5669b-8482-47f6-8145-c7b90ff46ca5"
        },
        "item": {
          "id": "c5f37f01-c11e-409c-a84a-b1c8c781aaf9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2d9f8952-1448-474d-bbea-7db653a821f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f6875e-5317-4e37-9aef-a8357e5a15bc",
        "cursor": {
          "ref": "6d10350d-fbbe-4853-8ea9-950323c50cdf",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1a656ff6-685a-49a1-a19b-e5df709e8c3d"
        },
        "item": {
          "id": "84f6875e-5317-4e37-9aef-a8357e5a15bc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fa690ba1-016f-4552-9a48-1fc60e767cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5f713c-f1f0-4d5b-8798-fa16ac2ec0cd",
        "cursor": {
          "ref": "3d2bff16-9ba7-4c11-bfc5-14f6120bc576",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7c5ffcdb-099d-4131-b0f9-847fa0672ff1"
        },
        "item": {
          "id": "eb5f713c-f1f0-4d5b-8798-fa16ac2ec0cd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "be4a8545-8888-4419-8d0d-d227e2596a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27079450-8041-47ff-8efe-4d3e0e1267ae",
        "cursor": {
          "ref": "ce765748-a2b9-479e-bd6a-90799d3fc08e",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c9b422de-91e8-4eb5-8161-c7b87f29efe9"
        },
        "item": {
          "id": "27079450-8041-47ff-8efe-4d3e0e1267ae",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7af92a3b-88df-4b3f-97ff-077e3e42b03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e94c24d-db28-4ee3-aa5c-664605758a5a",
        "cursor": {
          "ref": "ec8950c9-cd95-43a9-8991-ca697acf7bf1",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "75e76c74-daa5-4be1-b97a-f81b89061bc6"
        },
        "item": {
          "id": "6e94c24d-db28-4ee3-aa5c-664605758a5a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8d1d012a-0f77-4ca4-b43b-c31baf82a0bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb784b5-e1c4-4d35-b266-26b0e4ce2ad5",
        "cursor": {
          "ref": "7a1b5846-d206-4b70-9189-2209d2fea487",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "30fe76f0-515a-4bb8-81cc-a23e08241330"
        },
        "item": {
          "id": "ecb784b5-e1c4-4d35-b266-26b0e4ce2ad5",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "f486d5c0-35c2-4f6a-bc41-ec95d1c48cae",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 67,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9dadf2-a780-423c-b0cd-1d82b9249b09",
        "cursor": {
          "ref": "6780cfaa-7e67-4599-8f78-5664c0e4fd76",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "daad5571-1a28-40f4-a1bc-15ac62d86ca6"
        },
        "item": {
          "id": "4c9dadf2-a780-423c-b0cd-1d82b9249b09",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4a5d2673-4d4a-4962-8ec8-ed9d9b2ff744",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1039d79c-6f47-4ef6-99ff-6c596ef10166",
        "cursor": {
          "ref": "8b62d056-6e39-4665-83dd-f0aff3a45254",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "59214835-f476-48f2-857c-a4c925694518"
        },
        "item": {
          "id": "1039d79c-6f47-4ef6-99ff-6c596ef10166",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3dc43e26-663d-4998-9989-6654c7da7fae",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b463875c-e8d2-44fe-b490-666ecfee0e86",
        "cursor": {
          "ref": "710c9848-4bb8-435d-8010-5f1d80287981",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "99e48fde-b852-4d1a-821a-a645c54f532f"
        },
        "item": {
          "id": "b463875c-e8d2-44fe-b490-666ecfee0e86",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "83795073-93da-4a61-be55-99a34715b105",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "519f52e9-064c-4ac3-a56b-7a9e38d199cd",
        "cursor": {
          "ref": "bc4f0333-996b-4d0c-8888-6253e1f08dcb",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c3250a3c-2839-4a64-a8c2-386f28c6db1d"
        },
        "item": {
          "id": "519f52e9-064c-4ac3-a56b-7a9e38d199cd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff3473b7-f879-4274-b9c5-c51cd6794580",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519f52e9-064c-4ac3-a56b-7a9e38d199cd",
        "cursor": {
          "ref": "bc4f0333-996b-4d0c-8888-6253e1f08dcb",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c3250a3c-2839-4a64-a8c2-386f28c6db1d"
        },
        "item": {
          "id": "519f52e9-064c-4ac3-a56b-7a9e38d199cd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff3473b7-f879-4274-b9c5-c51cd6794580",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519f52e9-064c-4ac3-a56b-7a9e38d199cd",
        "cursor": {
          "ref": "bc4f0333-996b-4d0c-8888-6253e1f08dcb",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c3250a3c-2839-4a64-a8c2-386f28c6db1d"
        },
        "item": {
          "id": "519f52e9-064c-4ac3-a56b-7a9e38d199cd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff3473b7-f879-4274-b9c5-c51cd6794580",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54b4709-6288-4171-93fe-2faaf3d4591e",
        "cursor": {
          "ref": "b9ca4cd6-25e5-4a92-bf42-e3cf996dfe0f",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f01d7276-a5d5-438e-bd7a-668368bc4fb4"
        },
        "item": {
          "id": "b54b4709-6288-4171-93fe-2faaf3d4591e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d6232486-6183-47ce-a0a0-c01015a5b46a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c895b9e2-84d6-4617-b8d4-d17a9863d6a4",
        "cursor": {
          "ref": "5f2eb941-0164-454b-90a5-c1b288238e5b",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dda133cd-cc63-432f-bcb3-90d41b931b40"
        },
        "item": {
          "id": "c895b9e2-84d6-4617-b8d4-d17a9863d6a4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6ad31fa7-3beb-4c9c-83c4-439dcfdaad93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c895b9e2-84d6-4617-b8d4-d17a9863d6a4",
        "cursor": {
          "ref": "5f2eb941-0164-454b-90a5-c1b288238e5b",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dda133cd-cc63-432f-bcb3-90d41b931b40"
        },
        "item": {
          "id": "c895b9e2-84d6-4617-b8d4-d17a9863d6a4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6ad31fa7-3beb-4c9c-83c4-439dcfdaad93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cce2e1-501b-4798-8776-6e62b986814e",
        "cursor": {
          "ref": "29175ffc-d57d-4495-bcf7-5204e8cad58d",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e57ffcee-3061-46bb-b262-3e37fa57a7e2"
        },
        "item": {
          "id": "f0cce2e1-501b-4798-8776-6e62b986814e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "497d0b64-c136-46e1-ada8-ad83fbfe24ae",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c297199b-78e7-49bc-997e-8d7ab02f6ae1",
        "cursor": {
          "ref": "cda95a68-9bf7-47bf-b5f6-71bf609d3e61",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fe7c4bd8-7e93-4b2b-bafc-ee6210f104d8"
        },
        "item": {
          "id": "c297199b-78e7-49bc-997e-8d7ab02f6ae1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0674349e-2c27-4ef5-a0fc-3a8d3d76f858",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c297199b-78e7-49bc-997e-8d7ab02f6ae1",
        "cursor": {
          "ref": "cda95a68-9bf7-47bf-b5f6-71bf609d3e61",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fe7c4bd8-7e93-4b2b-bafc-ee6210f104d8"
        },
        "item": {
          "id": "c297199b-78e7-49bc-997e-8d7ab02f6ae1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0674349e-2c27-4ef5-a0fc-3a8d3d76f858",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7817a9e8-fd0b-4247-8c2a-a3466f616f96",
        "cursor": {
          "ref": "82d23d49-618c-43dd-b2bb-2bf79a70f874",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ac4733fc-8972-4cd8-8fd4-f1b90d35712f"
        },
        "item": {
          "id": "7817a9e8-fd0b-4247-8c2a-a3466f616f96",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "2c600dc2-ec82-45a0-8c81-e03e9c72e951",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 66,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}