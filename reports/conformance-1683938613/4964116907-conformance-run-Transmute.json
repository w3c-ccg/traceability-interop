{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d51a9bb5-2bb7-4ed7-a93f-faee9ef4f647",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b5fa0da7-183b-4e6e-b27c-41a3240cfd54",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ec8e7a3-81bc-4b57-b3b2-c4ec52cdea5e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f8995304-6544-4a56-9aeb-100ec9fe7581"
                }
              }
            ]
          },
          {
            "id": "359ff5c7-a359-4c5f-9705-b7ec318bed7a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "222e420f-7b43-4304-8d88-362a12d8e0a5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c629a92f-38ff-4819-9c3c-fef68ba82502"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a1aaa3ad-4d57-42a4-b662-ee9db3ea9595",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c89c79d5-d366-4b4c-a9de-4484d863b438",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce8d0f72-0e63-4ce8-8d8e-377a0e7ad484",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af48baa4-7814-4b26-a96f-ed914918e5d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b864530d-6c01-47d5-a03b-46e3802750a7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64aee8a3-f3a5-4675-851f-07cdd5f88da3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f56e1cc3-e248-40c1-bd5a-cdc8ad454b79"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ff305be9-2875-486e-a97b-7c124a473b4f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "671b5c92-7d02-4f21-a124-5bddaacf8f41"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a78cb698-22ec-495e-a159-e154c98f9652",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fd2a16de-fc16-4c03-9e15-1c409021cf21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf074b6b-3910-40d6-b61e-e4f3c1c6e7ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf7db371-2ea3-48ed-bf36-af9df7ba88b6"
            }
          }
        ]
      },
      {
        "id": "6ca535ea-bdfe-4ee3-938e-284b573d5cb6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0dd9caf6-b29e-4e31-ab0f-d5662ddd9610",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a8e7866-70b1-4fea-8e4b-6b24cd9c9d8f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3f8dec67-b42c-4969-851c-6bb9a526d3b9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1826f66e-5f63-4145-a464-0dff4104dcd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1306741c-83bf-4f08-b0b3-92ce640f8227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0270e6c4-afac-4f8b-9663-46f116bb09e7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d69f85-0038-472b-ae3d-f6b48a945279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13c9c376-134a-405e-9d5a-d90007e58110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dcc31f-c3e6-4a80-bda6-a17d85540e1a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfe366b-6a37-4326-a570-4d3583f9ad5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ab077ae-9163-4717-b7da-9bd84dd70677"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "132882ba-e9c4-491d-8f66-496ed10e5868",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab82b0db-92b9-4c61-81b2-20939a6127bc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43895277-4df3-4192-be15-d396e1dfeef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d276683-4f2e-4378-8090-2cdd53851832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a916b39a-12ec-4d98-a521-1db52cdf458a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56d6c3c-f7fe-49ea-9fc5-bc169d5dd3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7511b56f-1de9-4a48-98cf-811448c0bca8",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2072810d-5444-49ed-a8b9-33359028cda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28da3516-6832-4b73-9bb3-929d181cf702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef990097-0016-46a0-9ade-5aa43bb087f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "886795d4-6396-42a3-b374-8f9e17fc0882"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1c1f2fa8-e0d7-4ea8-9512-f2da31e43e66",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0f8d6053-fc08-4384-b22e-9bd578f014e9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e5d2a45-bee5-4a7a-a1c6-8d238e5efb08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d460d8cb-4290-4967-b29a-649167b00f19"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43f69cdd-6407-4c5f-a0a3-5015248d0a6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "89402f18-8293-47e5-ac34-21fd08738794"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c95855b-6eda-4b62-8a5e-046de5a2f4fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11801635-30f9-45bb-84c0-9242404b7747"
            }
          }
        ]
      },
      {
        "id": "dd4010bd-fc8f-418c-b888-1ce01e87118d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "553abb81-30f7-4f72-9e06-133e854dfa1e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50788b08-419d-47aa-8add-a31a0597a31f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0f81fdae-274c-43cf-88cb-1d97c5979afc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b052a2-2bd4-4662-8858-cda927a5da8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac37f53c-5957-4946-92b1-3630a2167e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07144c6-136b-411e-848f-8780c73ad43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f384583-1862-44d1-bf8b-73ab6fe7bffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87af7216-8a25-453a-acc5-db22557bad40",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a613c65a-1953-475c-9404-06f7d65aa19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b8cd55-5233-43d3-9423-49c37787264f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910e0d4e-5da7-48c2-8c87-d2d3e18ffcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19e98050-42f7-4aeb-846a-27cc1f757cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d108315-e71f-4432-83b5-7cac3173ddef",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9333fc7e-5df2-4625-9203-a0540f624280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26530cf-2dee-4df5-b834-49469b5ff6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd91c37d-6b63-470a-9b75-b5cd9f0b7585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5eb08e72-daa9-4932-bb87-26b349dd48f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da471e3d-bfa3-4aa4-b384-79f606222624",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da96dff6-7103-404e-b3d4-07948c7f9de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2627cc-48c8-428c-82fc-0ba526c836f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791b18d1-c7e3-4682-aad1-09cdf7315c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f22e67e0-6cd6-4103-9345-fbe84728294f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0031ad0b-009f-488f-b848-92839544761c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3feec2-2d67-4763-aaea-3ab1274b726e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d085ba1-78ac-4775-b10d-1fa96c8b980c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd03939-25ea-4559-a7fb-f5af52110bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb21e2bf-a0ce-43ed-9f9f-14414abe67f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619f6ad9-54a4-4828-9410-1990e840df8f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c524b0d2-f7a4-4fc2-8a3b-e813715878dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f653caa-02b9-4883-9d5b-812761ed19de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d244a052-5d95-4dc3-afe6-2247a9992ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e32a49cf-4a17-4b7c-a518-1d0a454ce946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efa120b-c4c7-45e8-a272-71448b3499ad",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4ad13b-8c81-4846-912c-dab8d28e8657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf6917e-82cc-4ac3-8427-0294b3793b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8554698d-d41b-4e39-9900-2c6218b1c09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1510689-4fa1-48d1-aee9-6a71db653c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c054639-7cc1-4af2-ba7e-19262cf3b586",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce61a1f-7b3e-4562-9158-3959d8a33411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e76e7c6-901f-4ced-aa23-1416fdc9d116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a89f743-6154-4ed9-a44e-2770ca19df94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8ae69aa-b805-427b-aa5f-4ff9e5fdeea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f63360-89ef-40f1-8f8e-7cf6ba5a006f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8c3f76-5052-473d-90ad-8956c06cfb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8202cf12-28e7-458f-9682-fc0a1d0a110a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e19ce4-9cfa-4e3b-990f-6a29ad523cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0dcb14e-9087-494d-b2de-697a1026dccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cb4cf4-955f-4f33-a201-d4badd56a6d0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af811220-dcd1-4d59-9f64-1d75dce85bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4bd56dc-2726-4d0a-8595-b64ffb22a403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a46f8a-59bd-4b1b-a65c-f16cec4eae04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62ea624e-c0fa-4530-859e-0e8465a0a317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5de467-0600-4ad3-a35d-c82b1a3e19d9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3aa3fe-7e9b-4cb2-ac5b-4cb066c9d7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03ab7a5-a985-4073-b689-58cc841d2ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df59b6b5-fdf7-4148-8d1c-004f43429938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a63db42-126a-41ee-81b9-2028a733c75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8373d9-d63b-4176-8fb5-3c855a067891",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493b623e-ddcb-4927-b501-c8faf6eb11b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6012a272-88f4-414c-bd7d-a1989bec2aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205abaad-09f2-45ea-ac5c-a72b12d47d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d62ce6e-507d-43ef-bbdd-8cb6f0c7c257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cf68cb-546d-4b38-9d78-4106a685e7f4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c717cbf2-9083-4e7b-8c86-22e576aca538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1932ac49-6326-47fd-b207-68698c61d479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c681ae0-7cbd-4142-a1ad-cbab1f134859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a3b2d47-f882-4c04-b2b9-aa24ad720bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12555804-9ef9-4d31-8a0d-c7c99f0c67d3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304c3bfe-7c32-4d4a-9085-bc4882c2c77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5331f296-39a0-41ae-8b54-5b189ca43e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6da34b3-5818-4a98-af33-d58112a56f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de4f0c58-e664-4d23-82ea-855acd70c506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f076633-4d4b-44f7-b974-d59ebc8673be",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4773c6-e93e-4dc6-8a88-2a72110fd8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4acf6b-84e1-4806-83d5-efc24ba17fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f555682-39b6-403c-9df4-1d54d7131018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90c97a6d-76d1-4b0a-a0c6-f958cb65d6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9b4897-6c7a-4d6a-a85d-25c71ea15f1a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b79972-d853-43b9-9f8b-3ead47253428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e5247c-1741-4cdd-ad2c-589107a04c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaad7c59-fdc6-49a7-b752-8c8028aa891d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a768b53-d1d1-4a85-b0ab-69bd00e0aa82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436cd292-c432-43b6-bd20-e00b9e9b34c9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6727c5-7b15-4543-9981-d173b4809577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cc7296-c73d-451a-b51d-26ca808b9c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df2e102-4084-44f7-bbcd-9dc247ed2e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e21b22fd-cc13-491c-8e61-9c42a4be6dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff097b61-0c65-43bc-905e-0b2c28167cce",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3472993-f603-4b33-94b9-04a296643e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b682c1-c4cd-4cf6-a3ff-58086102fd4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a73fec9-ddfe-4118-9a49-ee38d8145b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a9543d-1252-4337-8501-c0421c87d32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6991b920-e157-49fa-8ae6-ba522683c0de",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b598b070-5fe7-4328-bf01-67ba79ecfc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c728da51-9ae0-4f04-91db-3947bf3e2714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d90334-2f8b-4e28-ab8b-8a2e9680ffee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4c1860-184e-45d6-b3b2-ff48ecd631ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020e969f-3dca-4ac0-9fed-5c08de48b875",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df9d9d0-1262-4fd6-93be-5d1f27999f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8aab6a-d607-4a25-b031-fdb570382c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb73d9d-ffb7-4f95-ada0-89145806c63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee364bfe-c72e-443c-a0c7-05128f3b7c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed76c3c-c1d6-4209-9891-23c544805395",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1c3388-1bed-42e4-b1fd-7e2f62e7cc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0648043-1bd6-464d-9d9a-c7165f2f979a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676fc126-a13d-419c-b250-dbbb639c2ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34bb6dc2-2ce2-43a5-9f96-dfad03918826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fc8570-ec5a-4078-be1b-11306b8bdc9e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7b483a-144c-4e75-ac85-a9ba0289240f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31583527-8965-4b0f-8032-b6d67a05eecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6761f36-d2e3-4a67-8150-b85948eb5d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f563074c-d1fe-45ee-b14f-bafcb2015fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fb1e23-d031-4d8f-af58-773208158812",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7207b350-a6bb-4dd2-8c63-dbb329361172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2bac5cd-5797-426b-96f1-1cb9ebcd754c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a0d6d4-9c84-4bdd-99d5-e2b2cfae8a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "649e9d46-83f8-4b61-bd13-bae90cafde38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f567b1-66b5-4da6-9ab0-20a64d28ee99",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d103e5f-e2f0-4d54-bdc7-5d21b3002f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd87d199-e3f1-4da5-9180-bda6ed4bad63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56937dd8-9095-4f1c-a45f-dc270c5ce24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3de8148-3e54-47f8-92eb-717abf666ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c799b35f-22bd-4f0e-81a0-5ad0f044c075",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b26465-f463-42aa-a5d9-11b1683ad2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819c21de-d16d-4e18-a09d-489a61caffea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43b5813-cb5a-4eaf-ab0b-c38e72517401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c55d8eaf-33d2-40e4-92c6-c35b17fc3c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac04caf1-8d14-485e-aa95-d5123282294a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f532dfcb-168f-47f5-8611-77a2a78062e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6947a383-a892-47d6-8740-e523cf222c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74eb344-c777-4d62-ba8b-7ab990b514ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a81ac66-8627-433e-8255-16a6db1ee91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340908f1-f5cc-4473-a1e5-064774fd7578",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252b6632-3310-4e19-86e7-2ef8034fc2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bab960-e33b-4c7a-87a3-ba0ed896c4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12beac71-4ab5-4f2d-abaa-bf947eb27b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74cdda96-f14d-45bb-9b0f-39c26546773a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd69fdb9-e7fb-4c78-b8e3-7ae485425309",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29121eb0-b4fd-45ec-a9cc-31eed5f038c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6693ee1-7326-4535-b184-f7ee672d3eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee3d09f-0bed-4b33-b55c-6687ef066970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cddcafb-f3d6-43e2-9e9a-a4038ca5fb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad73542-28b5-4d27-a81c-d073558aed18",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f1e082-a165-48fb-a368-61fe076fef64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b2854a-18ae-43c5-b165-b50de4ddccaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a31744-71f3-4db4-9f48-3f746fce60c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ea2498-fef8-4ef9-a0af-c318174cfde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e924e57-8870-43da-bd8c-0cb0e1beea2d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bace9e7-d4fb-418f-96f9-aaf1149d98e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38b7ca5-56d0-4595-a982-24ea7959edea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ec80f5-8d34-4f6a-8c48-b77156b3f3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e085e5cb-bfac-4ac5-a43b-702b41fda991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf91157d-d9de-4934-8681-20883b759f97",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045cb7be-bbd5-4935-b127-d10ec6d81f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af09202-cfa8-4ac3-9c7b-ec935d4ef8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfdc7b8-a5d7-423f-acf5-3908106a46f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5af03a0e-4a3d-4f91-b49a-4d0b5339de32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8830e45-3e43-4fff-ac9f-dea5cf998b32",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa6bcfb-1beb-4081-8e35-f3d9329cf8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e80d8124-f801-4caa-8c02-ff9cb34498aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f12e46-a736-46f9-9756-facc0318da6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b9d2367-e81d-49fc-9ffb-69369df0fc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed35c10-5562-4402-8c38-d618a551b72d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb2fa46-92b7-40fa-8fe5-45b8f255b0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316b89a1-f587-4490-8fb7-bf5bd429e37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f708716d-b8d6-45c0-82c9-6aadc71da913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1c7496-046e-4c3e-a8ef-11a194fcbcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f3bbc4-8246-45ae-9cc6-ecce14b22541",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1cbfa2-30de-42b2-94ed-44b91ed3f0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e93e0df-18f1-4e32-a902-24bf0ec14840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fcc8e7-bab5-4dc7-bb02-4519207d85d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1fc9ead-b6b6-4f45-b5da-e8fe2d96e036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356c95cf-bb60-47bb-b9b4-4733586053a8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372cf664-5108-4641-9916-502603451fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1189d0f2-411c-47b4-9bf5-fa8b9545abb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d529207-de18-41f4-a125-e168789c5911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b031e652-1373-4f60-8d1c-045dab4b08ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e47d8b2-e3a4-4e37-832e-7556713cc444",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d826d10-e8ce-4095-a801-7c47097ed498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eddab888-69b7-484c-95e1-72693548a027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44db2db0-56d3-4149-b4d1-bbad11e8a0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a41ea8a-76e5-459b-9b0c-57f049b8ed2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f33145-b004-48b8-926b-d2f854da641a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9f9b1f-fdef-49c2-a264-3cafc487b7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9138ee-985f-4538-87d0-afaf6a01350e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2c1805-a404-4ccc-9e22-768ed5d97fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27a02169-5af0-4e72-96e1-372f361fbe05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6345f10-33a2-4657-8f78-739fd797597e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12df9383-751c-4db4-a92c-c1debb3346f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8a6263-47a8-42ef-8bd5-7a2e138ce755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1888ead-605a-47d2-b2a7-7477a7d597de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a1229d1-5e1b-4aef-869a-b9734ae6a62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fa9f22-3c21-4356-916c-93b4af9bebe5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994811a0-61ec-4cd3-9c5d-19234966851c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f720a0df-ae3c-4b71-b319-d61a6a82e16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0535bccf-b170-454d-929f-9fa5dfb2287c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "200eedc7-e204-4c27-8a96-4c8b705cfa1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7bb67b-e85a-470b-8a14-29771affaf5e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdeed81c-4a96-48c6-8a1a-4db49bf56868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2944ed36-fba7-472d-94c7-12c9fd785fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb3f976-d07f-4d4e-9983-8d85200e152e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91eeb14a-74f7-4df8-aecb-a545309cf2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835cc6a0-d2e6-4592-8443-663209caa09b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837afaeb-6f32-4508-bab2-6ed694c4c823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c956dd48-b342-4d84-b456-08d1338c8c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd63bd3-eba6-4ba1-8f33-ca67eca2b2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8224b81c-5acb-4aed-bdf3-f99cafc9bf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91124f11-5dc3-4874-8ad1-c7281f13eeec",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1a4193-8544-4933-9ae1-44c1025c687e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7caf3453-036b-4506-8264-47ca6c19bf16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11522c38-12a4-4bf3-92fe-1e8ce633fcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f210d5-fb3b-47ef-b7c7-70c25a7ea0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3555a50-2fd2-4186-ba4e-e16f8e6afe09",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a006b2-45af-468d-8465-68118ac99f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a40ddb-fe51-4cfb-b3e8-8e3c2e6b5c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d4d5b3-b3d5-4445-a7fe-6a62d52d5453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "94a1065f-a211-4cdc-9716-304aad189a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf1f8f8-302a-4076-a290-4f78ba9aa621",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd4a5d1-4142-46c5-b3f5-2064f74810e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a130d3-896f-439f-a4c5-697c5fd3953e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45850ecd-dea3-43d8-a44c-7820d393aeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "70c4e886-b7a2-46fb-9b78-7d7bf207db9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fbc35e-1830-4a04-ba70-f5e3aef37e89",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6600016a-5c82-4fbb-9546-040b0b97c87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98257dcf-5431-4f74-ba04-975a514abd34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e596037-958b-40fd-a5f7-68bd0abcc22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e053bc4-a94a-42a5-b164-63b752056a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8dbfb9-4712-463e-ae72-4ddee93ceaff",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57b8340-4d11-471c-8a8d-1f1c83b78596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4919b8-4b2e-4b74-8dda-15d809b73ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f556ea3c-5618-43f1-aed8-4e3060961631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "006c8896-32d6-476d-b2a4-98641c2277c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e2eed9-ec26-4e2b-9ead-79e214786aef",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f94e82-3931-4045-b3a1-9724680ba9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf686667-a211-4652-99cd-43bf6ce9bee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdec32d-87a2-488f-b1ff-788d8539d2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "835454d6-ee69-419d-846f-9303d6d25132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d8ea79-2291-48f3-8506-5047d7652398",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9867521f-83b1-46b1-934d-5b7d726fc629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ddc684d-636e-46c1-9395-48430b31e370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563ce5bb-e643-42eb-ae9e-eae6133dbe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8aed5d7-5b70-43a7-a58f-2416d2808c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52db0eb6-5768-4ba9-b90a-79d2cf63181d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8651179b-65f4-4b3f-9be3-cf463970f825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7b3991-61cb-403b-883d-499b3c7297b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1072142f-afcd-48c1-99d0-d3b649f3df1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2887286c-7090-4abf-babe-b8b3c714bf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcdd2bc-5328-4621-bae5-e631cfa82309",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa87758-5567-451c-b73f-c87a8f91cf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422e7718-62df-48c4-b4f0-eca1949e099b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffc5140-3673-401b-93df-48e5c1e03a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "117b04ea-b96e-4a4b-8a3e-ab501e857993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209c75f0-515a-4f15-9903-98d325e16a3c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698df88d-86a6-4f1a-b88e-8f2f1c52f3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9270d8e3-1ebc-49c8-b1c7-0d01ba76adb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ece61d4-afe5-4d83-b184-f1be8280de2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3973ae99-620d-4f91-906c-a4458d472e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d1688d-2085-4744-96df-186da606e41b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899796b2-c585-400d-810c-2f2a952aa4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eefd9b60-b067-4d6f-989a-e79946377def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d30b58-c53d-4eeb-a69d-7836d1f981e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9657c08f-bc65-4c96-997b-1a477115d319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e380d02f-6fb2-4c8f-b5da-4c8609382a9a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb0acd2-9a8d-49c8-9bd5-1a442adebb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19227ec6-1060-47c7-a2f4-865642daed10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c112504e-2b65-4f77-93e5-f82467e3d4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1895ea2a-fb4a-4de2-83c3-86a365f3ddb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84318039-4ac6-4649-bce8-92db48b8063d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0707bea9-870d-418f-8286-c3502843dccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c980d6d-57d8-49db-9a76-c6bc3e242341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27969530-d2eb-4d99-8cd4-adaa11059ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aeb9f57-669d-46ee-a247-1b7f79de41b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cda71b8-8b4f-4c20-9cb2-e93514db9032",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d665ea4e-aa97-432c-ae85-4ee882bd9a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43715d3c-0d48-4e01-862f-989c61c34347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44606825-3407-4d87-a5fc-01dda3c00b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1644e3-55a6-40bc-8e24-1e9ac03fcbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7931baaf-d976-4970-9624-55e17536d73c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b7f9ce-6946-4ddf-a6f1-d699c2951096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b4886a-5e43-4cf0-867c-bebd046a9dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3714e12d-6a45-4bd5-8fd8-995f36b5060d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0be3fea8-d4d1-4561-b5e7-69ddb8dc19a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1748bc5e-28e8-4fcf-bc22-aaa46eda01b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50eb3d6-5996-45b3-a839-96c4c20d5341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2400aea2-f3fd-4ece-a88e-f5a4c1b5deac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd8193f-8372-47d9-bc60-9b7d9dcd2b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0630786c-47de-4ffb-82ed-51d4cc4dd5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00760910-5935-4629-8b71-25467fabe382",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbabd34-7661-4133-9853-35f1b695c97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a55d146-b873-4557-90b8-3bd32044905b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27ef150-34d3-46c8-a0c9-04c7099e53d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "02aa7e49-1731-44d4-a6df-8874b1f22d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef33a45-1aba-4311-886f-f2775ade30e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d411e3-570e-42f6-86a8-16d48606c5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba54252-cba4-4d7c-b6f3-1fa876804c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e343c4f-cac7-40ce-a542-433ed9cf8795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "46375551-f4bc-4952-9d0b-e81bfe8091f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958ac989-72f9-4e26-97d8-d62e942b90a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb7c670-e42c-4b22-8329-38c76e93f175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de906597-372c-4bcc-a9b1-9e409989d370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe40d71-11f0-4723-9b76-83f3f14bd672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "06252a75-ba04-48ca-b950-f9f5fb129c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7deeaf84-ee1b-4810-b399-4135d41c7169",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5766d89-8b8b-4f83-9a74-88ddf41c196a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7218b7-4cbf-43d8-86d3-7bd57761e8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6fdff7-e706-4046-9ea8-75728fcf755c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "da208dd2-7029-48e2-aa9b-856fbaeaf34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a73e09-4866-4087-b908-834200e7674c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78a1398-e97f-482d-9ba1-bef7c81c0ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eca2182-4694-46c5-b6bf-5be68cee4b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095d05e3-1a98-4c2c-b868-046ad599b2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7374c044-c0d7-44ab-9c4a-e0aecb10a186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e62d87-17e8-422e-a07f-b1bc36a1fd2b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f51cda2-6dc2-4cc1-a893-344784f06e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99d690f-c20d-4233-90e3-432755523d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ecceb3-2d2c-41ea-922a-014e039d0421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "38e9f41e-97af-44de-8835-432a0b8bfe9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88bdc4e-0e4d-428f-93d1-81d2148b1ec9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0358a3-ca02-40bd-a381-ed2dc5ba7170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e56b70e-e1d5-4c2a-87f1-9bba5e850d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f24417-7abc-447e-9fce-6c2265abe808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04743985-b3b5-44fa-861b-8ead60298fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0f7aec-6d2a-4886-ab63-59883a7bd803",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a33b3f-fedb-4054-937a-48997ba23a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6c51bc-5e2c-4d2e-8ccc-1e5e3041469b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddef6417-c94b-44d2-bb9d-22494d93ff86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c11705fd-bbaf-49c4-8389-fa447bfa3cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373776e6-b842-482c-9330-f35fb2513e51",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4003ead-29f0-4bc6-8e5c-5499b84064b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f346aa-0796-4c73-8e5f-1d4700b74954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2d0b10-6779-446c-a97e-84dadde6e435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61abad4b-2833-4437-99e7-e7042e27d09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7a45a2-98f9-4e1b-a940-699e9a7bfc35",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8edadb1-9601-4dc5-a4e1-8b69e468e653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fbbe60-356e-4a0a-93a7-88e013756783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6235840-0b49-412e-bd2c-45c6d1481abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c66a06-45d9-4d38-a218-998a9b6d2c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019cde70-2295-48e0-a88c-c75c86d45b9b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c74f852-641d-4dfb-bef9-c0d423607e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7d83f0-50cd-4e9a-903c-08b7a6458a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38777ace-dd26-481a-baa9-a196a4164be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3891b362-9728-477f-9094-4a7f8533e113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3d4419-1523-4669-bb24-04e43b26e35f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee0fa37-2e18-47d1-a276-aab660e5b9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e55efe5-dc03-437b-96f0-3b14459f312d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06871547-b0e8-4b0e-8531-4b4c98768f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aba50db-1d08-4cc2-9d0f-ed210d5df52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075c7b24-2a02-4fa3-97f9-0cdc0549cba9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeeb70f5-8c3c-4783-ab81-584bb9d0a1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cecef75-101c-4a8d-87ef-3c466594b587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b56d21b-6b4a-47f6-8400-6c98dd79e034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbebdd4a-366a-41dc-a25a-9eca2104965d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a07bc42-dcc3-4c90-93fb-e41608296f0c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e08639-6a3a-4d6c-ba86-b2d0aa458244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ba08fc-5b49-4787-b56d-f24d3775fb38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3545ff6c-c7f0-40b6-868c-38003f32c96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be05ce45-20d5-4878-8cef-7bc5318a39d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ecf0ce-7104-4046-b831-b9dfa8b7aaf1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a959b5-a11e-4fb3-8f19-a9a17e16d9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d213d52-46c0-47c0-b976-c4a40f5eb531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68e26ac-3925-4166-a278-d4def4d6221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38170639-d60b-4221-a96f-e68d1c1f11e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69aeb7c-e10c-4d24-8d6a-10ba5d3b82b7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc92dae-fde7-4c8c-acaa-4ed7388c6ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1495a5b4-7f4c-4240-880c-20fa60094a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f2b14b-97d8-4d7d-99e3-990bd33ce438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "820d65a2-4e12-474d-870b-07565926f25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977fed8f-208a-47ba-986d-662336efde35",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1571d8-d846-4c41-8ba5-db431d680c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036b0bb1-049f-42d7-b80e-ec704796fc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb41cab-aadd-4287-9e03-646b1da88390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f05d18b4-2738-4886-8bf6-14e6591f7419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb26bb2d-a9d8-41a3-85bb-2b562c6ed90c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93352e3-0d34-4940-9757-e18ac6312c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1db5dee-9410-445c-964c-73393b22d7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c049f21c-d08a-4a5f-af51-1bf1a3b253d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "066914d7-412c-4047-921f-88398a9363fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd21852-fa64-4612-95c3-e863642e3672",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496ae76f-dbd2-4c8e-b1da-f589efed0a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b3d0cf-ae3f-4870-b8e0-bb09a715fb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b060b7d-39a3-46f0-996a-bfc1f8175caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66f95102-9005-43ec-9b29-9c1930e9a90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb468e0-3e8d-4406-80ba-f6140fb63012",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d426c15-aae9-4161-b576-34862a1be234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d260f4b9-b364-4fb0-b87c-b5bcd7da4eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b32f4ee-6572-45b8-879a-b33ef4536543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f88805-4fd2-4897-86d7-c75553083699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f942ec2c-d01f-4c1f-a7dc-3054cfa6143a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745951a6-993d-43ad-abcc-f2b50e02559a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c9444e-9458-472f-a9ba-6f770bc5eb08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09bb7be-46b5-4b64-94f0-f1dc17e8b8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "239c1df7-4374-46d9-9738-4ce7c6ad23a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c11f87-9660-4d8e-a5ac-3e5a225d519c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6488681b-1daf-4555-ad95-c6c2f25d1c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d630b0-7a95-4576-893f-95aa8fa963b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bbf97a-eb6a-4ca2-8409-a6858d3050d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1616d9a4-9895-4fcc-a853-6f50fcfe25e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc88c967-4ba6-46c4-afe0-88d007e330c8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbd28fa-4be1-4e35-9267-811d08e501ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d575c8-1a32-442f-acc5-60f7d78f7253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70f8875-2d0a-494a-b8dd-76fa55e59d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "110d7490-1f50-4dac-b509-1a965d3cfcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c7cd43-645b-4118-afe3-09adecdac410",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f1a2e3-361a-4def-ba5c-5090395bd27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec9604a-7c34-4add-8d63-6f4e8311b984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50dc4ea6-5712-40c8-9d57-81169fb0efb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b851ad-c4a8-47e0-8030-c090afde02d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07d7443-043c-4f78-8abc-8ccfef21ea9d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db72792-1fa7-462a-9d50-e688c7c6d723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64c57a4-6ce7-4c46-b52c-40d9f10b8c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16898b00-35ea-40fd-89a7-94f8dbb3a707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d654fb58-610e-4d7f-a1d3-d3dc5373d4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98920fce-363f-4aac-a8e0-a508a915348c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d881a0d9-d8e7-4379-9111-bd0b0950dc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3152b896-78ee-46d4-9c37-fadbc2b3f8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e8b7bb-e024-464e-8a61-f611222da0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80645202-2c1a-45c5-962c-8a5bb2c8198e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f7caa9-c2db-4249-afc6-d300328565e7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90245462-b1d1-46d3-aeb0-400387cfc0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc6d0e5-18dc-43c1-85c7-33026b9663b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0d0a0d-8f29-4b07-827e-f05eb79b25e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d5f3d5-f10f-455a-b606-ec2c35e0dd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afdf4e3-19dc-43fc-b2dc-d1193c1f1bfe",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec5fa21-b87a-46ed-9359-13b338042d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a87ee40-31e5-499e-9c1a-808104717005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26ee838-5741-4184-8281-490120cd5fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbc9905-1972-42b2-89ee-20907a5a7503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87252f5e-1f18-4ae5-91c5-ec905758708f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec43c9b-e3c0-4c50-b0fd-3cc8b1a21006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acab5739-f2da-4001-9931-e910b4762518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023d3ae7-ebe9-40cf-aad6-eab02d2825e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6037c1ae-13b0-4873-8180-de44bb9f482c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96256a58-0a62-4e90-8d55-b237aaf0d19e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b02dac8-14f4-44ec-94d4-87ebf930d21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f870b738-034c-4371-8cd2-a897fec250dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a814a2af-54a5-4b85-8e42-afb2880a66df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "94954240-f003-45b0-8a78-5bee5d38bfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6154ab-ce98-477d-9d05-f271e861c6a6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2d2be7-eca9-4497-a9c3-054b139706bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda9f5d7-e189-42cf-9098-998086fb73f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1509ca71-70cc-4f0e-a57e-3bcf069d91fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b7c22c-75c4-4f63-8ece-706fc2cd6cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4d90e7-abd6-4ffd-9029-b8f375e8cd9b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f8cadf-f17b-4b3b-aaa6-3e82e1b4bfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f647b35e-5f62-4354-8f06-b33c1cca5d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7180d7-af5e-4b3c-8bca-ddca7f315b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6936c92c-a9f7-4ba6-9f7a-eb7a94600b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37851337-df5e-4019-a319-589403cb7f96",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cdb279-901d-465d-ab24-f5bb17530a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d20810f-c065-48ff-8b7c-60414c3f891a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e51503b-05de-4d4b-b4a7-5b804adb8217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "78a04aee-60de-403f-b64c-29de84f5ed39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851051e5-4539-4da8-b862-bbcade325707",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b471b86d-ad2c-4405-acd5-82a7d0f44bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0ad173-4a89-474c-9d64-a3ad893c39f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c28cf59-b315-439a-828d-666add25c455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "24e586e5-f016-45aa-9339-2d43e0603333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7134914-0bfd-497a-8a95-b0cda8b478a8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced9e1ef-0d53-4e09-a14b-e31bd6e5151f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b2c553d7-a144-4e79-ad92-d6492142e074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b44e243-4a65-4059-8193-744a908d2648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "73e4a47c-4a5d-4766-89b1-183e61779ee9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "219a5dbb-2246-4288-a5a8-97d861a66fb3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19210889-6743-4dc6-9b1d-fb294738e45c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa6a0dd-d1f6-469b-a737-7693f5822d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e77f5579-06ac-4723-9241-6ed61949ac5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b883eb5-fb02-4f2e-8761-6e5ab12d86e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a64e2a38-8b70-4e26-bca6-6b0a472a7ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c6546c-94d4-49dc-b7b0-f6cd1ae67384",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b133140c-b580-4e6c-9629-d646a0dc903d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64cb6aff-dcb3-4252-a36f-7273e0a558fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a834f48-240c-43b5-adc0-96e724c6e60e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b810879b-0c65-4b8b-b474-bd696a943f3b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b24ef5ec-b193-4626-bced-ee54ecb37c11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d73e6d86-da31-4e85-beb8-5f0a7517a904"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8762fe0-73b6-4a2d-ac06-92f10480b8bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "947851ef-2373-4d8f-a041-966d00def2aa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac6031a1-1d8a-4c38-885d-bc8eb7b9fe54",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1281a067-d010-4ca2-a1ee-4c0bf0d18bf4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4ee746c2-7323-4c1d-8b74-b841d73e5942",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1610529c-2d6c-494c-af83-281218364639"
                }
              }
            ]
          },
          {
            "id": "145e3658-9541-4dfc-8be6-2944bcf887d0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "27110f9e-27fe-4c33-8a80-78da4bec6577",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83c047e8-54a9-4fff-8d43-6d1417473bd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fda2745f-9a7d-45f6-8143-104256266e51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c48b8e6-e1a3-4307-a093-6bf570982f6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "72ea8c11-fc52-45e4-b3cd-aa26c16f3bbd"
                    }
                  }
                ]
              },
              {
                "id": "67148331-94e4-411d-93d8-feb71821b9bf",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad0d0911-f173-418c-ac7a-efb38c13d865",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69c83f02-78b7-438f-9221-5df922dac3d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3f09647-0b26-4989-a846-05670ec02d91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8bd22797-c0b7-43cf-99d0-552e180a5701"
                    }
                  }
                ]
              },
              {
                "id": "202b1038-45ae-4e02-9e86-286ce7cfad43",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e951760-38ba-4da8-9f62-3c316e6daa23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "efa9d835-e69b-4b3e-8de2-defc1a939d19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eedb4494-d4c4-4155-84c7-69c92365519b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7dfbff16-4cec-4bc6-8399-56b6f564f74c"
                    }
                  }
                ]
              },
              {
                "id": "cf96c1b7-c27b-44d1-b4c4-ab138fc5afbd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b887991b-8548-4455-924a-926f746e379b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d32c242-c833-4113-b038-60060faad633"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ae30fde-6839-4d81-851c-a7e86014533d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f2c64879-2867-4fb2-8939-f21b6a526d4b"
                    }
                  }
                ]
              },
              {
                "id": "bf1abdb3-2fc6-4dca-ac08-36b4da5a9a02",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1cf7d4e-91ed-47e5-904f-2335ff200223",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05e14de8-7d12-4ae1-ae3a-583907d38804"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4419110b-29bd-49fd-b383-8428928a9805",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c54c9616-81f5-4c2b-8ecb-c807c194f330"
                    }
                  }
                ]
              },
              {
                "id": "e4606191-f058-4d2b-b6b4-3aaa28bab204",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7972c85d-fcb5-48d8-8848-47926aecad39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4eb1ced3-7c58-4b45-92e8-f5b0bb26c3fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab4fba29-6df8-4380-ae2d-12fd2f7ff34b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fc99cd28-6551-4859-9932-0ee2551f5320"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "643f807c-9d35-4c56-b927-867a972bfdb4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7c8bae0-df9f-4c57-9f9f-f5190bdc6d97"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "738c4d14-b2ce-4871-b259-277d5f3b4b0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7538434b-19c3-4904-968e-f38a7c7461f3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b71e2b10-b6f0-4920-a3a1-76bb20f0d0eb",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "66cad1d7-6cde-4357-a986-20dbf659b053"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e0ca2e4-ec2e-419f-8f4f-2cea28b5078d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "897bc652-2bfd-4d81-b361-a5cdbbf72619"
            }
          }
        ]
      },
      {
        "id": "740db549-3351-4b43-995c-972cc0f14845",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f07c09b2-6595-4194-8d0d-3fb432ab30a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14897c3b-8839-44b2-9a0f-cce3610031f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "085c320f-2d18-429c-8bd0-add504d6c339",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2293baa3-269e-40da-90cf-7bdf79168e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e28bcce-5057-4f0d-a0d9-10fe58168f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc567f1-5f5b-464b-924b-4cfe524794a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7151891b-cdc1-400a-9178-56c125528858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6d31ef-3543-4ff5-bd1b-66de9996aa4a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d201ceb5-e50a-46a6-bc9f-22d2d42a45d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44da0571-bc5b-4c11-b0f1-002e336710e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf2a762-9e2e-421e-8cf3-416566a48bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "487c0399-9519-4d45-9a60-32966c96639b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9c226c-f70d-45d4-a945-a3b36775a3b9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689b0fdd-8175-4970-a07b-e0aeeb35de75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86ce088-e073-4eb4-84d6-a6357179bc81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55d83cc-49ce-4d49-9a10-9232c5347bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e58bee61-5c3d-4c6a-b800-3592ef32fee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e8c3dc-ecfb-43af-913d-d01650b58228",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1372cc-9cd6-4eb0-8500-ce9da5112f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3301ee-201d-41b7-8814-e58b84b52a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd520c6-9a41-4993-a5ed-23aa58357b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02d8bab4-d1f3-4e47-bafd-50241ae11fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9695c3f9-2e7e-4a40-8c16-215f34ef1461",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51c847a-b7d3-4ab1-b68b-a62893b53a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9886588-f8e8-40e0-bad2-e7a51c2729ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9222ab-b484-4fb2-aefc-5fb2e8b6331d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37ca6901-2a42-4f99-8968-2f017ac5d2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e09ad2f-ecb4-42f3-a60f-0f9e8a3ef958",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e380dc-223b-4118-8943-b4fb76e4d677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5e7b7c-f762-4d30-8a9d-9a964c105a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c9b698-65bd-4243-b785-98ab202f9229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2117388b-02db-43a0-8a42-5206ef9869e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d842c84-8408-489a-8bf5-af78e25f1f57",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d236131-db68-4471-869d-b702e6f06adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189db589-cc04-4933-8d43-d3b242ac167c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fa423e-5830-4cab-a22c-815f9628f219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2800b015-8aab-41bc-a5fa-d891c38dadaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3799b9-264a-4a1e-be45-ad258e491454",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fe9443-021e-4d9a-9a01-d65ef364d244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea00c10-65b8-4afa-bb8a-5b9fc1663b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8741803-aa4f-44a6-bccb-f1fff0d31d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98352984-ef59-4925-8d22-eb0a77bc0302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27338900-2ecb-483a-aeca-c305327d5657",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b40ca7-d2a6-4341-a66b-46a3885fa87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a997f0-3c02-4d8a-a8c1-7f5d77c2f03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e4a3df-13df-4a06-9cab-cb060f1f5159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8d5034-1922-4b97-bfba-623071658bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b69f07b-0293-4d88-8be6-f53a92a16459",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b548193b-bec0-4fb3-ac41-cd77e4283e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bab51b-e9af-48d2-a8eb-aedaaa2a2d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f3dec8-5c32-430d-8bf3-c0422e82eae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfe5827-1341-4066-b5b9-ac5c9df02e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16842ee0-46d9-4d73-88ee-61bc9dc16255",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0005c9-7a60-4f39-99c8-d800051f19b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4378a9d4-f91c-42a2-8df1-f68815c79956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bdf67f-98f9-4938-9392-71b2430981b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7bc822-de43-4a1c-a59a-5835bbe5de13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7528e60-ff97-41f0-9a26-70721a5a5b6b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6373debc-30c1-483d-bc3b-e7c28cc8b141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7b2d32-695a-4b8c-be41-a7907b9508cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cc76f1-604d-41f2-a594-dd8056ef0347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e0a5c6-b36d-4fa9-ac38-c87d745f22fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098f59ed-eebc-44d3-94a7-e87ebc3d48fa",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b3bcd3-0e06-40cb-9692-282bc1c44bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52eac561-77a1-4fa1-8e09-adce1b32452b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cb874b-8df2-432c-bbe4-37a00e972467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb5241d-f4f7-4178-bf15-866b7adbea96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff069fab-f334-4cfe-af4f-335934853ec1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a458c88-8665-475b-bad4-03933fc3c362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a41265-dc0d-486b-841e-8893f37f88df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f34355c-b31e-4e17-867c-e88e0934390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d479d8e4-a72f-4f5e-8bc8-40bd1a2c7d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43a6572-c42e-42ed-8ed9-07a63da66887",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e04c80-43b2-46e6-a94e-6248ee9cf507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b90adfd-7ba9-4bc2-a349-f1d02b746829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ed81d9-a430-43bb-8acb-4843accd702c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "30dd7c43-e48e-4017-a5ab-6bab759267db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d74dcf9-3192-49be-b3cb-6100d39c230f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7de6d03-318a-444b-b6b1-006c91388919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567f0ab3-f5f2-4955-818f-ba060b71407f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd2a429-bb27-48ff-9de9-2143b0880073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0faf868-74c4-481c-aaff-813afa02d80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f44abbb-447b-4579-b94e-fd488c4f3eec",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f944e0-2896-43af-8511-9d696dfc45d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad64ebdf-56f4-4a5b-818d-b3f3b6658c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19967fdd-b7d1-4141-8794-1a37186bcd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "eda67dc8-cf9c-4f75-a358-429661d8d5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3965b8ba-ac01-41f4-9351-7d8c4be0dcc0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cf6fdd-7f4c-4847-b2ea-2a17799d31df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c05a923-d613-4b12-9252-a36debbdeb08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3a93f0-a111-473f-b1a0-cf466cb7619a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d41cd56-3b66-4249-a8ca-f8e991709669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a177f6-7aaa-4f2d-9ef6-bbefbea3b9e5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b345df-079f-43fe-a84d-2805672b0d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7822db30-0a3c-4273-b97a-2f5ca776d8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6933fa-850b-4ac6-800e-caca7cd6f0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0225bbda-3a9b-48a2-99c4-531d71c6418a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7456ae-bd32-4dfd-aaa1-f47892e428d7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84aef1b9-7661-4335-aa46-ce38a788a9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6244ac95-039f-42fd-b812-5d43280c4312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea26136a-ff3e-4617-bb5e-4d320194f16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa012de5-0cb2-4504-9b45-2262a18a36c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57851775-9053-40a0-a047-791bf984843d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12281b5-7172-4e3c-9b92-46fcd7a1126c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee59b85-0579-4ee7-8b51-d97d9d626f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfa9760-e00d-42ff-b1f1-7bf54808e762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71a6b50c-2b5b-42d5-addf-3dd5151d2298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748cfad0-3a72-44d7-9d40-57fe9b010d10",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3093b05-f624-4287-b394-e63457c1f62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda745c5-7945-4da4-9767-1f0256bc1fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270d483e-0c42-4fd6-9dd3-8ed598bfb602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa855f40-aefc-47bc-b4d8-23de93b3a725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5781e55a-897c-4572-9838-f89267f42978",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb70343-fdc9-49f5-84d8-87d7cb5d6f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da22d13-dbb6-4e14-af6b-c7731b2b98a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f363b1a-1864-45e8-9073-02297260373a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e46a25f-d70a-46bd-a619-1dcc7c406369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cbf46f-3d38-4b7d-a974-25fe521b3f34",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a598af-1817-469b-9c27-25a8ed214362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b176227-42d8-4b2f-b34f-c2a312400805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c89078-3e34-46f8-8ce3-6b420fb883e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49466785-ef6e-4d9b-8b54-813e497a2f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79575289-0be0-47d2-8e54-8a6073fc4a30",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ca8b3a-37f7-4b41-bbb2-a67c5fb5e996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd13c46-fb35-4643-8815-6e61eaa0c134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b37b08b-d747-47e5-bd5c-8fc94b3137ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93821c30-a8f0-4afc-9572-7af23f6674f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed11761-526a-4aed-9ea9-20ae27c7c0e6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09918fd6-11b6-4f09-91f1-54b79be7d995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1c0a0c-872a-4144-a118-b1e5b808a2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39d1db0-6406-4a0f-be55-febf2b559d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed65e7d5-8c0f-4995-a1fe-ee5a36910161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7676fe5-8f0e-41b2-a243-b701706a3e0b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bf4e50-5af3-4fb5-a72f-f5da55a2ed9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80030026-200e-41a4-a388-c69338f3c829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c935fe3c-e9d5-4bc8-8092-8de9cd1093e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "938a3806-b90f-41fe-ba1e-170fceb2e34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d20f979-90da-406b-a4b6-3e715a4a9e38",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05021ba1-0138-4f28-8b2b-e90bd4e59966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e810b74-42cc-4e50-8e19-d02642ecff26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d69f533-49d9-4c04-944f-a3aab1ceb859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bae4b44-17d8-4727-918d-083ec135043d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cfd84d-e53b-470f-a026-bd3fc68fdc71",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebb75f8-6fe4-46c9-adc2-46b4f7f62331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54427930-0cd5-4cd7-af03-18d771d0bca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29725a6d-072a-4bd5-b261-18e9af8614e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4708bc68-ebcd-4ccd-83ed-76c2edf5d7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f4e722-5db5-4faa-95af-a08dd97d49c1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c16f1cd-6e57-413c-9a24-756aa6a255b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2e6e3e-00ad-4afc-9a68-a3bc110a9b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf3b9bc-1cb0-4f59-be6e-053b861c51c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65174e1c-caa5-46d5-b288-44e86ebf627b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80630d77-56cb-493c-9c86-9ff674ad7599",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1be248d-6a5f-4bf5-af64-e0750419b1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd4c62d-3828-4f8a-885a-cc9021ec0ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0d66fb-6cca-4022-954a-b90863d349d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b44f7223-f43f-4833-bfae-7683fb1cc3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b857adf-c886-4528-8a2d-56cb7c2a1a92",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62c9700-6055-463d-ac65-0d28c638b485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b562fd7-589f-4b46-9c1a-0a6f2bf5a818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b099d9a5-c4a7-4e20-8c2f-7a820838c5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b374796-d8f5-4d06-aca0-609c30be6928"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f01982bf-7efe-47e3-b89a-1837a2c31940",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01236f2c-38fd-4ada-aebd-4c53e417e19e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976a0447-f3ac-4b22-b004-545b788a4e47",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9d49ec-ecc5-48ca-bc5c-13528ccc01dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c162b0-1b36-4a4a-94f2-32fd04834ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d4b8d8a-a439-45d9-8825-5bbd597c8d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff752be7-dda5-45c7-9858-ed7dbf8ee99c",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f37e55-f9b9-4a05-a59b-849733692b83",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bc98fc54-3c5f-437e-a0d6-7eb77f569da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ee2de3-f85b-466e-8032-ec6116df897c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d4202d4-dd5b-47b0-ad1d-bf653b5f0ff6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36cf8f34-ff02-48d3-969a-ca4e2937cd8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd992d7e-8c79-4beb-b219-5eea6a3b23ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1728262-773d-4038-9b09-c71044c6a294",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b02c8c8-9c46-4dd0-8a73-e9728f153154"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0aa31982-8aee-48cb-b55d-493cd37c0783",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bbc32fc1-77a9-477d-aea1-9afce9b0ba1a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "273372f6-2841-4e40-a03c-fd0242016fae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffe4b96d-6ec1-4ada-84fd-6a3499a7fcac"
            }
          }
        ]
      },
      {
        "id": "c6fb1219-68dd-4130-96a3-e8377b37a3c7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8c04577a-ce88-420f-9b81-b585afb080da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc9f2efb-7e19-496a-8dfc-422fbf20f8f0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "47ecfe16-8230-4a14-ae15-7b5c46c81ae5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba9bf8b-1ab8-4a05-8ced-cc6f4fd0096d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d66b434-81c3-4a52-99c3-99731a1760a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e418a9-6051-4869-9925-7ae5c6bc029a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481bd207-b92b-4399-8ac5-b762e6e0a7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e40c25-b13f-44ae-b018-6a78cc9d153b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f9f59d-02db-46ae-b8e0-02079d6191a5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0352c500-35b6-4547-a59a-b74009fc9cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f20e99e-87e4-40ca-8264-1479684ab2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a5210e-30ca-4b82-a9c0-bed89f747f04",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4221c2-0318-470e-aba1-6043b6a5eb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b7012d-67a4-43b3-b8f5-6a47095da32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e90b66-990b-4890-9b2b-2ed7e3596ca5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942acb4a-43d4-4c55-a8f3-c6d275d5fa04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4a0310-bed9-4a23-8c16-c7dc9ede006f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e258ec95-05d7-4c61-803f-d985e6e0fc95",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d51d5f-3c4e-4a74-8a2d-c624e14d59d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088f7cd5-d9ba-4257-86ea-8dc94368d71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84651f04-0fc8-4566-8364-f1f411414e4e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c91baef-7e09-4c63-8169-e0f4cb3b0dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63fd8cb-6db2-4323-a930-f4ab2bb25a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5342bad-edc9-4faa-9a72-cadda46ba7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72a580d-0752-4d79-bd04-8668dc0cf344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3632c323-20f0-407a-ab36-22bb465c380d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b18193d-9784-4742-b565-7c4820a761bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0ea315e-be4b-481d-a71e-a606546b4d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d2c16e-aa7b-4214-b4f3-f7723e8d1316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83238b4-61ce-49f0-b572-8f3aacb81c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71753c47-7ef2-4532-8ef7-2b240923120d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54136b3f-55de-4a81-a9c7-2b7f184bf6cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3da3f3-3a16-4952-830f-d41f138fe6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37fcb9f-b2a9-4311-b00e-4842d84cc973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd46088a-234a-495c-bd07-036c4bd8ed80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b943ba9b-be7d-48a6-b48e-dac935cdd9af",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba333c49-8449-4580-ba11-0054537de514",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c88603b8-5004-4551-a456-b585cc02b059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c4587d-8e8d-4f8e-b5bc-b05e95993b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea051142-a6fe-448a-a153-de7412b12ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe019607-a81b-4a4a-bda8-d9b00e6a7d3e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08caf728-2d3c-4af3-a6d3-36934d56ad25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e18e6c1-ee44-49ed-8212-7994363a1ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d9ed8b-38ed-4713-880d-ab364707380a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7bbdc5d-21c5-448d-9ed7-e744e42dbe4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c357d0-ae70-4809-8d6a-5bfe5cdfc81e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109b2dad-3410-42d9-adc9-cf190589dfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e7b899-1c44-4d57-ac44-3736a988135a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "266d362c-bcee-4fbd-946c-b721201b92dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9446c74-1ef6-4367-b1ba-449a7c0bfac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5df02d-d20d-4dd4-a857-5cb3ab45d206",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929fcf9b-131b-4010-8435-9414f5e7bb89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfa4a98a-c625-4ea3-a27e-d75895f8ef31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda00c9f-62f7-4503-805a-e2c7669bca38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009ca48c-6185-49f6-b380-89d736517f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2a6b7c-1a3c-4c38-b54a-500e58201832",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1457541-5d07-4825-831e-e571fe285267",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4faadfef-b344-4f72-a986-9c6f819d1f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393ab2e6-b62f-4234-812f-e45f7cc8946d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15812ae6-aade-41c7-9397-9ade8a8e87fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7032c49d-7ca8-48b9-bd9d-7242a731497a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf14224-5f74-4f10-9070-aa60e68f039b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "565e2dd4-9e48-47db-8c0a-01178e58f948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678a38c0-3d0f-48bd-8976-935b032cbab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61870b0d-ccf7-4bd0-981d-3a5d82185c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a4a3dd-55d4-48a0-99b0-e275d4f35373",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8e6baf-8194-4165-872f-ee87d00b873e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b03164c-eecf-4dc6-9f4a-f7da5bcd00d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c371b7b-d5ac-464e-806b-2e20776c3992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee1816f-002c-4be2-b062-0f32576dbeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30ca31e-1b57-4b1d-819b-e030ccf44305",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3d5f74-0185-46a3-a620-3e0c052f8352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91645696-189a-46c0-9d25-156aff39e057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8929581a-6afa-42fa-b780-f4cef435c68d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1cda82d-37a8-4607-a6ff-5f2126fcb568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd4de63-87d0-49fd-af35-e4d93bd14098",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a8c2dc-0ff3-4f12-9697-b447e8123426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72eec552-f3ab-4215-8b1f-742b73bfe31d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1503aa0-6c2f-407f-8958-3bc329332ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa8ae06-396c-4bcb-9fda-d7345c4b0003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3d268f-9865-4913-8a6f-4f4e311c854e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8258a654-5134-4ffd-971f-031a503fa259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b07a9bb-5436-4cb9-8b12-ad04fcbc44ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f04b66f-ad08-41c6-84d3-446a8c604607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a69ade-1200-45a9-bbf4-3c9e6aeca8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31105b4-2003-41f0-a627-22e611934cf9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c4db70-30fc-47cf-a239-9dc5389450c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e27829-2a89-41d5-8a0d-6375bdc7fd02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2fa634-ee00-4ddf-927f-20fd5125add0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c98d78-915d-44bd-8321-fb8ac3cd8881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51722921-81e4-4676-8a14-cf2fba98a953",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e144bafb-42fa-464f-a08b-e1b6bd928982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c5c401-5e2f-4807-a590-6a045865bd79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "865aeca3-205e-4b87-8d0a-3484cfda3ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5485247a-4d1b-471c-9e5f-fc57af794ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e72e679-613b-41b9-bd4a-4a191238df34",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd53bcc5-2cc1-4722-9f32-0d10d02ce664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e563770-ff4b-4657-90d6-dd37936cbb41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bba2e7-362b-4d72-8db0-332191dafe91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82212577-d09d-4da0-b745-82f9d211446e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d36e4f-79c2-471d-bb0c-af8e754844c2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f31341d-a4d0-433e-a10d-c366ae1c03e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943b3644-e738-44f8-8ae5-6ca57285378c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e457ab-7cb9-48da-9bb9-e19692987da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e13076-4fc4-4787-a51d-9cbf61ee4f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e83204f-c4c2-430c-a828-5b6fb919d6b9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634b06fd-42b4-4417-b164-eef9c717c0f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99a1b23b-e919-42f0-acf0-dc8a448c00ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8233d8e-e693-41de-8f15-4d7bfac1f627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf88ff4-4f38-49b1-9955-9f0aea18d9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2bf5f9-28b4-4bea-b4fc-21edefd85007",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6252e6c9-73e5-49b8-a661-49f10e7254a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f316a6f0-6506-4dc7-b44c-fd253c8c082d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fd87ce-897b-4f22-a107-ee30d0b0df37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32300ef4-dbe1-43b8-966f-9fee7c1631f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a1192f-c8cd-453f-a261-373e5b4f8e0d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a264343-f67a-4d58-a188-8dc8dc11bf75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a36b9c88-c1d8-4578-b681-e62d4e6d92e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f37eca1-861e-415b-b409-fa56167dc1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c7e25f-b446-490c-89a0-82401e4392f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f006adba-97b6-4c34-89e8-bf13a184bd65",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e4c88b-91e1-421f-b133-b0f4dfa906fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5acdcb5-4354-432c-9d50-b32d1227fab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff746876-64f9-45a8-9bcd-eb0ed3e4794f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a546779-5a84-4555-ba74-44c8160a5c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013659da-b0d1-4bcb-b2a1-dbf1c1788046",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ae62ce-4f1a-4566-862e-242675c252be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391e69d8-4ada-42d2-abf5-e7a806a40088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a84c3fb-ea60-45b2-9dbb-f39b6a2b5c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6e6efa-9a0a-492b-aaf2-cabfeb36cc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0533d7ed-5941-41db-b69e-2edb69a4b07c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24381a27-10e1-4adb-8407-5656fea3f12f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaaf5e7d-f725-43e5-8eba-469c0fa51650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b12cd0-5f03-48ef-9218-1292ba69a02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509bde55-0b20-444d-8b74-a1fc3909a53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e296b9-19f7-4607-b641-0c4eb8b8a158",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7d44d7-8326-421d-b1a4-f3c38422e8ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a429f2a3-f439-455a-8814-cfd85244c9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60edde8-375a-43f5-a8c5-a5c979981604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc1c07c-47fa-4a44-9bb1-61e75c88a8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6127bc77-745b-42ff-bfc1-c661a9996d68",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f01e949-690f-44ec-86d9-21ad1f2c3e49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94de21ab-1302-49fb-a87a-f1c21bb16b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ce8d75-b6e7-405c-9f7c-e54f6fe8bee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75ac182-4065-4f71-9927-4ce2194d3b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3355316c-a018-4fb1-bd60-a5e995440175",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4180970-e306-440f-ad9d-1f5a5d3c6dc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e839fd9-165c-41eb-818d-4a5140d9e41e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "132192dd-fee1-4d28-9360-be187a08ef93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a2ac42-65e5-4851-af60-fc5763b51319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff07d38-92ab-4e19-bb49-33fadc79d95d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c993f5b3-ed07-4ef2-ae52-7ffa6f3d1cfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faecc679-ddce-446c-825f-b384f614f7b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc823b84-1ad1-4b75-bdc0-7e99d70cafab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5769dc05-4a19-4aee-b09d-09286ac01abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d4c712-8290-4a23-8cd3-1579bb9d3568",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d28dfa-5adc-4a89-8d65-7efc991bb8bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "222a2128-ae51-4300-9008-a8cb984e1e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f436157c-5550-4329-aabf-758ec272f140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b0f435-c83c-46a0-88c8-6180613a754b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51aae03f-2269-4241-baad-e0b654eec184",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdc1a7b-f921-409a-b87a-206f442a5c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a30346-9c84-4ff7-afea-58b35d28b4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2565fa18-848e-4693-926c-2a132a313b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3537e406-cd06-4b91-8195-4815ee41744f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecec52a-69df-49b2-b0b3-c6d841cf8a1c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8827081-e2bd-438d-8e1c-c1b36517455a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de32c253-acae-42b1-9674-fcdcae9d2281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbef33d-eb84-4e3c-9d97-5150f681f27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9786edb6-d29f-45a7-b294-fc551c4e6550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48932a1d-4f0f-4d95-b7d8-72fd15576e63",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4191d064-474e-4bc7-810d-aa1cff0da914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1aa6ef7-b865-4f22-998e-e6900506a00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e10d0cf-b547-429a-8ddf-157a73cf485d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67afdb51-e9ea-4b15-b21b-1e84bea34005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d40469-f7e5-429b-9b4a-2d548a46b8a2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cd6b4c-0ae5-4dc8-8710-0b0632f1bca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c731360b-a394-4ae3-977e-6336d11283f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9248d05-dfab-46ef-bf39-3d2c494df20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e707253d-fddf-41c8-9e3d-b7af24a09143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44070df3-9b4d-4f7c-a816-7c64be5c4dbc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4214349a-056c-468c-9f20-b7d4bc89d9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec7d227-929d-4f57-9914-7aa0b07826c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca621c5-bebb-4bfd-a058-05a5c4e233a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c14721-8ca9-41d8-a7f5-4ba91a3a9111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3dcb1d-db82-4507-aa1b-ece9da7cddef",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2f3441-9e23-4fbb-b9d0-4196a0622e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90261fe-1222-4539-b893-94adb6db7a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "144e23ee-422e-4460-bb5f-b1fbbc1714ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e04fc74-ab6d-4b97-9c7a-bf224712bef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e34502-2ba9-4c6e-afd4-8c31daa2f987",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f93dd32-35cc-4979-af3f-fb3692057298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7835e0-3925-4137-9bae-8e6105b39cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f426eafd-2da7-4bf3-88dc-b4d20cabbe69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8beb246c-c267-40cc-9fce-cb9f36f425e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2e66f9-244c-476c-9b1c-7ea707c8d943",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b6e6fa-15bd-4c3d-ab84-2dac269c5ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff341868-3616-478a-b7fa-cefe1561a443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746f36bf-f566-4631-84cc-0a6e98f2c139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0e59a2-281f-4390-b7c0-242f0972363c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36513821-a335-4149-9c15-dd5f4c06dc00",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05861454-3e89-486b-a19c-4dce9ee051a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c6f075-2d97-4567-88af-d5549630a79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ab37b2-9af3-4bc4-9349-139243e65356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72dd3034-0f2c-4158-a529-36c811f98aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4720443-ec19-4b75-8fe8-91da28f14362",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c01804c-5239-44d6-97f2-c6ec32ad931e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e431ec-d8fe-4b3d-bb94-7f354486356c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd901c3-ca7b-4fbc-8191-43ff3ac50662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3075152-ffac-4bf9-b180-7c2f4c8787b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23b279f-2174-4c3a-9fa4-1602db10bc2d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45232b67-933c-462f-87df-4d4c026155ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056ba538-ba8b-4e52-8135-290ad5bda76d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395fc95c-6e30-4834-8bb6-b6833e77f007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d57b189-504f-432e-8aac-b0852e97ff7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31d80d9-96b3-4b3b-8404-5a223b765aaf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30294356-8d93-4e82-b6b1-96cb80bae4bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2701c52-c216-4c09-8b0c-eee367a5ec02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a7354e-bc1b-4bb5-b0dc-24666afd5711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50500e24-af2b-4a7a-aab2-a424d814ce63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75034c12-d197-459c-a067-40be08d4b48c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9f8f09-fe9e-44e2-8cc0-dd1d90dce30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2646682f-95b6-4119-8639-092c42e1b256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5df32e-6af6-495e-a0b2-f9a23d2d46ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414cd8fa-fbc6-42bd-8641-a40c67bae626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6fe76d-c26c-443c-9591-871e8692d182",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d819e1-14aa-4a09-9b09-20f8d25ba91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf141d4e-888a-40c4-b76f-d36b86a50cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d32e58-eb94-4bdd-835f-505739a49fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daae1bcd-1dcc-4331-be7b-3cf5b9b10010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32579f04-e59a-478d-9919-08b928d7fb4a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b6c477-c51f-4271-927d-470db4dd49b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b48bda8-25a7-4ad5-ac15-004897a7ff71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e718084-9ca3-49c0-acbb-c4921d7c7a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293cabfd-9d2d-4129-8dde-025ca72c1ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6242d44-e1e4-4d46-8101-f62845148c2e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5588336-cee5-423a-b01c-439e84c5ba88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8837fd48-2eb5-43c0-b597-ff83d6b48b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a154cd-8477-470b-8407-85e996b51666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756363f8-26c8-4caf-b95e-c51cd0b55ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf82742-d8fa-4f8b-9f22-8040b532d4ae",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd41c68c-cf8d-404e-a786-1ebdc8c17101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1452771c-826c-42c8-8b4b-d78ea17aebd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff58590-cc0b-4b8c-ab48-3d912358120d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fb7fd5-260e-4f00-b708-5570064a9dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3392a3b0-ea07-4e1f-837f-07b8f351b4e4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f021b138-a497-42e3-9526-31341aa1cfba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d72329ff-3472-485f-8297-4fb7b678634e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721c0a7a-189f-4087-85f3-cbc14094c2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c41f2e7-6c99-4815-8a9b-cda093fcabaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269d11a5-765c-4c78-808e-b49a793b842b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa5ebb6-35d1-4c66-b1b4-ac171d92943e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d49299-cb7d-4787-ab8d-7de657f2161e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c944b9b9-a1bc-4c97-89c3-31d27b9c5128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec073dd-c86d-419e-84dc-53fb09fe191d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a67a556-f06b-4760-b47f-c5cdfea6aecd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e445e4-68d4-4f3a-be95-83186aff9131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a9ced9-7ef0-4d08-9672-975c2c6bfefc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf61ada-c72a-410c-a360-2cfd5efa40f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1cdf05-d8e1-4dd2-a037-4003586f4176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d507e6-b56f-4664-b7a1-1baf7f1c901e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87149bbd-c560-4d25-a764-af68d2707c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19f29ec-b994-432d-85c8-b415ef28ec43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea546539-8bc7-4682-a042-65c3c3fb4a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19840f65-e2f5-4f63-86db-9a8076fd6d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b91b74-7772-4a29-808f-395ef24c256e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbae05f-9c19-4ab6-95cf-bd4e890de976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3582b922-18ad-4660-b4d1-5cdd2ba568a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa372664-8af9-44dc-abb0-fa7c144e786c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d62d202-96c3-4791-aa62-2922008d61d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72d202a-c590-4072-aaa1-7283a2f336f3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17917165-78d1-45d5-81f7-6895ee5a32e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d7a516-de81-4124-bf6c-bf8b1e36ebe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bc4dd7-a1a1-4612-8a93-309c87fe7d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be65d963-8ef9-4bcc-a81f-bb91a2f8124b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc2f3cd-9acb-476c-93e1-80c6dae038aa",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff128ecc-c508-41a4-be5a-9600f2714fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c3f888-1b7e-443b-86f1-5039255bfacd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a0aa61-77cf-43fc-9a2a-7dd72571997c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec37b3f-e6d8-4835-8eed-0180a1e2a4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4b00b9-2df0-49be-9cd1-669dced136c9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3278c9b5-9f19-4c18-9ecb-126191de9b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c091472d-dbad-4116-b537-9f139c553f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb7b4a0-b663-4e5c-a0f3-d6ac357e7a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38925055-de84-4c6d-88fc-cde1793abcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac2d696-9262-4486-b4dd-6d5c33f21b5d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7254170d-edc2-4003-9265-c38deb09dcec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778c7641-cc2d-4688-9271-1ba88be4a851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d287379-83fd-4726-9e83-76bebc6b8d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a59d66-3fd1-41b2-adb8-b84e90be93d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e2b35e-d4af-41a1-bb5d-89649f923c97",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa090fe-c1a3-4375-81ff-cfe95852e798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e7a6e6-3ebe-4082-bb46-d32848ec914f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "420bc27e-99cc-49c3-a0df-c7874d6d0d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a42fc9-bce0-4c09-9af4-e4da33740be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052cee96-da3f-41ca-9d76-062f89f575d5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678cda28-dd1f-44e9-85b8-d5cb5b52bc60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2a0c43-7529-49ed-bace-a6c28324751c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5306e05-eeb7-4bd7-93c9-489256403c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344c891e-7989-4a64-99e6-240ac1fcd7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb36316c-c641-4fc4-a757-505bb51066e8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7db992-8795-4e74-87fe-a6e5b4051779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14213815-ca12-46a4-9e8d-50d843f5ac9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2cade7-bba4-46af-bf01-736e5b740308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1976faa5-5aae-4c2d-a917-c70084a1660f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6604a94b-c7f3-4745-aecf-1ea4eaa10f7d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d097cb-dcd6-41f7-8737-e80f62079966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a955d8-9d48-4ad9-90f0-b2a0ed8d808f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6968a0-c55e-4efc-91cf-96d687c5d026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27e88de-2634-41b2-baf4-620a69b0eb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e802c21-3802-432f-ad27-6f5967231159",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c017c09-9cf5-4a42-ab46-f3cd5ea0cfb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54028d2c-494f-4954-be30-f72f12b94c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52cfd19-dcb8-4fd4-9ae2-4fa3189c88cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45293545-06f6-4f6c-abe2-0e571ed52ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e13952-9061-4cca-af0a-3511f68afbbb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5c4367-10a8-494c-b5a3-8d7cd1d7b6b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26496034-0170-412e-a66f-554904058148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf43f1a8-6b56-44d2-a132-dfbb1a75a770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7b58ce-078a-4cdc-8e69-2f78738cd883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498f03fe-4952-4f3b-82ac-eeb3d3609f17",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4805aab6-9388-42e0-8c1d-774129df0f73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77717512-f69d-4f73-aa71-54cb2abb3f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7921961a-b719-4023-a435-0a6bc27eb539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc12f090-59a3-49f0-b52d-7f5fd3a23c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f512ae1-50e5-4ce7-a6a6-390506cc5665",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470002a0-5130-4f05-8157-7259705e457d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ef365b2-da45-4434-ab44-9c21c3fc1748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf31dda1-232c-407a-97c2-e190b36127e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b39d73-5802-4327-9e92-19c32984622a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089f8ca4-0538-47fc-8818-0f865383262c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bc4fc3-68c0-4666-ae10-b2151ab25427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17f60aa9-1e21-4abd-af5f-96d23670ff4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d32133-e2e7-4a5a-b6e8-748b5a250456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549c7d6a-de25-4b43-8464-f15d13ccd20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810569ea-22b4-45e4-af7c-087b4b898664",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27508ba-7c55-406d-9320-438349835047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d22545ce-a2aa-41de-a356-47ad7c80048f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432620b5-67cb-4b92-986a-5a23845e8ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac11c9b-54a3-4261-b238-41e539a92b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cf642e-625a-416c-b290-7e4297e795a5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5148cca9-c942-44f3-a9a6-59349ed6c7cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a53806b-f746-47f2-a841-308e8ca3ebfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd043d29-557c-4608-a5ca-6f0977c2b2e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da95823-0348-4008-ad7f-cbaf28118a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac7839e-df43-4bf3-befd-b8f326d3f4c8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d9d6c2-cf33-42d4-a952-63a894481665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6371fee8-c7ed-4132-8d18-fa603a4b8239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cf9835-bc45-4095-9509-698291df8515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d3bf0d-b89f-44af-9a60-b075a3589839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cafb77-0f26-4959-b105-611d57f0c6ce",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93840272-44fa-4c7f-acfb-b549fd950c55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e12dd69d-3ca1-4df7-a708-fcd63719c4c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6017fc-a176-4015-a234-4c1a3e272d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb06428-a692-4f4f-aa0d-48da10934bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b841d135-67ac-47a1-84f0-9ac2d84cdb7d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8870294-daca-4865-9845-a8c165e037df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e8b0840-cd4c-43ea-9fd5-c2e927e469a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6716d35b-b5f8-4b0e-8a7b-02927dfaa5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69254942-9a05-4534-95c1-d3bbed49f8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cc4ca3-9dec-4b83-adc9-9a3c74a70d84",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c81047-0a61-4a14-afcb-953d8531e47d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85460ef6-0bce-408d-83b3-f81a508aad87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b039eae-e47e-4473-9315-eb15d148f04e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad0f6ef-a105-4857-80c3-3b67bc66b4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c72d180-d6d6-4733-a9f1-cfb5655300a8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c06e67-298b-45e2-adbd-03c44241ae75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "955ece4e-c0ff-403f-bf14-0021bf5295f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c36648-a29b-468d-a0e7-29fc234c80e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f228d9c-369e-4cb9-bec1-1ca1aee6d8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bfdd86-6a2d-4ca0-a17f-6025eb2f1129",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47a2bdd-9601-462e-b869-990a5d478851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81032960-b6fb-4607-8f80-e46125b14340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bc72b4-9aac-4871-bfee-bfd1147493a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01096eb-a06e-45ce-add9-7bc2ea5ecf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c353ab34-8a2a-43ad-99b1-1883904ad64f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef54390-2325-4e98-bc3e-60777d7e0b7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dcf9f5a-f0e3-45f9-8ac3-53b45b450907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1409f9-125a-4f20-b1f1-8cf36bb8a11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6fca8f-3c75-4db4-9232-7732ac5c6dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd132ed-a5ab-4091-b6c7-4eedca370ad0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d577da-dfbe-4e7d-85ba-26fb6900daf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd8f5400-6abd-41dc-a9ab-32af61e40942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14efb85c-8e7a-42d0-a9b5-56d5f6c870c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa19687-1a1c-4988-bdf0-6c3fdaf285b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e1a096-1238-4cd7-8798-07c27cb9bf6a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150d7475-6850-4e56-a8d6-1517b27c57d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "066236da-dde1-4733-9267-f43aaa00e3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c5e37f-7b62-4612-8f0a-bdb4d4cbf221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e84dbd0-95c4-4a1b-9f76-8b258ae100d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731205c9-a72a-450e-82bd-815f0a88c4e0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478bcb91-f992-4fdf-b021-29095d541d07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b13183b8-1f4a-4c82-8caa-4c875e87eb9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c222f4f-78db-4d44-b36f-0c3cb5374d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26cc83c9-715e-4b3d-9513-2a5d652ac3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adb09c4-7201-4947-a6d5-f97017be3cfa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a33a2b-bddb-4526-93b4-7ed0e2fd5b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f10673ad-74cf-4320-9949-c52d69fd5e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63edb73c-a69d-484a-9353-89464002806b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee9a3e7-d0d8-4118-8958-2cc0c3ddfa2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c83e44a-8f21-403b-a233-9008b2d31a7b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551c1ed8-aae8-4a26-832a-a84921411ee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e7f7e20-5d4d-4158-85a7-f1a1337a2fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f36f657-3dea-4e37-8046-cf974c4f78fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1a6bcf-8a66-4b09-bbec-8e0fa1ceb41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bfef83-97c4-4aea-a9e3-9ca8ab08b2ef",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066d23c5-2cfd-48d0-8763-5ff6edd9c46a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0731458e-a588-4c6e-b519-e939ec5b54c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a84f9ea-bd2a-40d7-b07d-a98c243af4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d44720c-5520-47e6-9055-852095077f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835ce9f2-47ac-4026-a36e-c48fb9eef3d1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2cb6c2-66d2-4958-8518-474d84ed6be8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0328c581-64e7-4fd2-92a5-c17603c07d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1fae4a-4302-4f80-9ef3-72f16c7edc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6b1f30-bdd1-4133-acb5-9ccf279ff798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b274cb1-0370-4bf3-b54b-0957d164b3b6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3c7168-fe21-4686-879d-84a50ac38bba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e7faaf-41b9-4af1-80ef-1be81e36c9ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27fa8da-a8ff-48bd-a834-8557b8d010ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91be86b4-4c87-4b2e-86c9-961c8dcdf82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4970af94-1dbd-44c8-ae84-f1c6b15fb2a1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d2a4ba-1bbf-4233-b40a-f37f0d0dbc9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad928ac0-e33a-426f-a63d-d633d0cf94eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cf6381-edcd-40b0-a875-a772f236eace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6b8206-1723-4ef3-a1a1-43ee88a5babe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac37126-b1eb-4ef9-8ddc-3753d8fcf723",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a63123-2a42-438b-9bd5-5ae56271c54d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfd9107a-36e8-469c-ae6c-86211b550951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11646fb4-3537-40a1-9937-3d948cf3be8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82105288-a346-4225-9bbe-d73bbfd8d90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b619c2-3c89-453d-9f8d-534e632a4815",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1338e3d-80aa-4576-b8a9-77eb6afdae65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef88a579-2738-4e0b-8c0f-1491cb024222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090ba33b-e54d-4b23-93ae-4c3f4efdd136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ae1faf-9d02-41dc-81d2-bd5ed58deafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cff1ef-9b85-4516-bc90-b7175c398161",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56abce1b-973e-48a9-9232-62639c69e1bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3997d925-bbb3-4a6d-9801-f6ac18b4137f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f902506-65ac-4d7d-8426-d7322df4d294",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d0e253-ece9-4375-a752-17c496203693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e5ae17-58c3-4ece-8223-f35cb4a4529d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3862ce8-932d-487d-9c78-c1a7807d1a21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39cc5a1d-6fd7-4480-a6e3-14abdeea500a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ab4960-e348-4a40-9be7-dcb2dfa84063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adca46b9-9a5f-4800-b299-80a666d60988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe965da9-051f-4a44-a44f-24fe731e72f2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71be517-fbe5-4d44-ae0d-b93e059368b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47887464-8469-46a4-a182-eb51cda26d38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f52c0c-691e-4f31-8b56-13e4f8f5b613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53fc7f1b-16c4-4222-b6c5-72098289ac4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3764f0a0-b887-48d0-9871-b1d2fb21d48a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd5d04d-452d-4c0f-bc1f-1a24647b68a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c403fc1-8e83-44d2-9b1f-d7665d56d471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91da55c-ddc3-4093-94f5-9151efb23434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aec6b84-3d8f-4ae9-8ef5-b558eac1cec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670dc84e-0b66-4a09-8482-2db2e855db9f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142c3670-beb8-47c3-8b12-96ca557fccc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3666a514-2c6f-4627-8033-dc757c97a5a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f09d6ee-1e2d-4a09-93b3-598be567dfe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028e3234-b24e-4c3a-a17c-8fad39944e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f267002f-cb8e-4bd2-a3de-4932e75362a1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54ad508-b641-4aab-a929-4b68d937dedb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d9d20e8-75b0-4515-b444-13c1b0ce6e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce28809-e890-4247-990f-bfd3c5e35aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0973b5-484c-4998-a1ba-8a06632b9cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d648242b-b6ec-4515-8898-4e7b6ab0a2f0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b935a39e-7bfa-4e4b-ab9e-b180fd1b9660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2169ba4-5826-4ba9-96be-6021e7a0c14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dda0002-f78b-40ce-b3af-5ec2a11e1664",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2f12a3-0e5b-4577-8a1e-48a54618e8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3e7084-a877-4708-9038-e15615abf7d7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c613e2-fe2b-480c-a385-c5773efeebc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b552469-070c-425b-9371-ad11fba9b1c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0690ba3-6e40-4d58-8fe2-79fd75f11e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b2aeb3-1d39-47cd-b678-a2fa73a9f421"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cef9701-9038-4a65-866d-9e8a1805d591",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b774007-f509-4218-90ae-e9ef711d08a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ce3cca2-3e60-477a-b991-a1c7952a86e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ea2f2ed-f7fe-4718-9975-213d0fd149d7"
                    }
                  }
                ]
              },
              {
                "id": "040a86a8-85eb-4cad-a9c9-2c2b11770ebf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b2dc979-dbdb-4223-8625-04b7ca6b70d0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba16897-4a1d-450c-b5e8-d76b007b20a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7cf48a77-ddcf-406a-9d50-2ca89d5a3cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7f86b6-322a-44d1-a4e8-0d1fc857ae34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06cdc4c9-3a8d-40ae-a7fd-e74f22984292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f621cd3-5bc9-4ba4-a706-dcac26c62199",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ee322a-53ff-4b1a-88d2-af629a5d0cd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dc765e32-e80b-47b4-88e0-9a7762313dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1028a4-b773-4498-aef7-6675f6e596b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "108ff81b-3dd7-424a-b5e4-968c654b34fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a527780-1785-456d-8ba5-ef4702f7e8ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ccf7fbfe-39c5-4950-8d57-97c926556518"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88a25f4e-4a49-4fb1-b0fa-2aa181e650e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37c31812-c880-4bf0-82b5-06c6d590f237"
                    }
                  }
                ]
              },
              {
                "id": "cf16d843-b879-42a6-83a4-734b5f50af22",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0ff7d77a-86b4-42ed-bd32-a6c4562804c8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210507ea-1c31-41d7-b5f7-6b759e5aac35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3d81c9bd-fb5d-457c-89b5-631eaefb1645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30212539-623d-451e-b764-65032e451f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6635b6c-17c0-419b-89d2-d0b979ee5e53"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bbccbdea-b795-4e01-b857-780c57057775",
            "name": "Positive Testing",
            "item": [
              {
                "id": "80d99bab-8fc1-4d19-a602-6efe23d8aa1a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0f5a19f-719d-4c5e-9d5e-ba8104c8ae7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8b88b128-8da4-4743-84d8-2313ad75c4fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbde68a3-3585-4536-a552-92719318cf08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd89582b-c591-4122-b555-8d7d0a02d688"
                    }
                  }
                ]
              },
              {
                "id": "374e8f2c-ce28-4152-b8f0-a2b781fe8280",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a72a48b9-7720-4e3a-bcb1-ae8afdbafe3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "caff96af-c2da-423d-b142-00e5f5ea343d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0681a7dc-01a3-4134-b7c3-5fe5ccdaf4ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0560fed4-eb30-4c22-a0da-f17b4dad22c9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86743d42-7d4a-42a4-a477-b48fa21ea311",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "974d5c88-a454-4920-9c94-bb6f2edbcc9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17bb18ea-efd2-4a61-b517-44213c559472",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59f0ecef-99f7-4e27-a7e4-5cc5bbb01161"
            }
          }
        ]
      },
      {
        "id": "5cac94a1-6086-4cd4-8382-04ea92bfcac4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "25e9f66c-be8a-4dac-9769-5dea67791865",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82c2e25f-a8b2-4c20-8bcc-b5da7820d6d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "053debc0-989b-46d1-862e-f00a8aa20d31",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa414967-1585-432a-98cd-1187efd647f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "565c4e5f-701d-45ab-bb9b-4c15196075ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577567aa-ba90-4ef8-8257-e37a8c430b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a20f4f79-c79d-42da-949d-ef8729d3682e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8abcb1b-e740-4f06-9b77-ef858e5c852e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19aff385-7aa7-483f-88d9-aad6f28d0f8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "275d29cc-46f5-4105-8334-7809dd54ae4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2789862c-49b0-4bd0-a74e-86dde2b3fcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a68f955-fc6f-40ba-89b2-2bfdbe813bfd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1488f965-f8a2-479a-9aea-bef865467302",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cede2a41-8cc5-467f-9b4b-99340a875d47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73e62260-7812-4aa9-9a92-ca8083abb5db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55180455-df99-44dc-880a-2ea2b58dae5c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73928e68-c4f0-48ac-b5b3-2aac31429afe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "da77e434-5062-46e0-80b3-ed6bee55c978"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ba07efb-9329-473b-8081-455a05391698",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "656dab21-7517-4ad3-811d-272e4b7f94b3"
            }
          }
        ]
      },
      {
        "id": "b0b01c41-cf15-42a1-add5-815c33d8d7b3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "13c3a891-c8d4-4ac7-8840-217c6cb19ea8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3464d56e-de96-41ae-8220-20ff5420851a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8563341b-7758-47c4-a506-4cf9f5975ac5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f04291-e403-4ca7-8572-3c5854c3c24f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a203ebdf-ce4e-4925-b288-3de32a5a0e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "394a2ac8-8349-4f95-82fb-7fabf10f4081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc072a1c-ac82-4bdf-9119-2b1eaeefc96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd0b1fd-076c-4689-8909-d793941cfecd",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bdefb5-6cfb-4c74-93d6-440689f62bef",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "52d07642-53b6-4835-abb5-2fb9c5707cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39227041-5375-41d9-bfff-0166ab004c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5543d405-448b-4b1c-8af9-29031d09799e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79db1fa3-5ccc-4fe4-86fc-9171a919c1b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37b6f03d-6ba5-492b-89e0-08844a663e3c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e20c157-309c-4ea4-a37d-43cc4e4cad46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7470f72-7b84-4062-a901-386e1ae3f90f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9db383df-c024-4183-96d3-23aa62d3a303",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e530d0ec-7cec-40e9-be1a-a06acd1f7455"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d104b79f-ba3f-4cc1-8ef2-fde0ecbcdd1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "927cfe64-0e5b-43a5-808a-5d96296bbb8c"
            }
          }
        ]
      },
      {
        "id": "e7b26aa5-b7d5-483a-ad96-4c228ccad52e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b1d8792b-34dc-4b1f-8c93-5497ff4eb46b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ce4b070-4dc5-490f-9058-310bda9e0d71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca0ecfbc-94b9-4cc0-b45f-705574ca5710",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c2832e-7851-44e1-8ce8-1bccec73b865",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49b67f42-7154-43fc-90f4-36b7cd8f4fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3a3a9f-15cb-45d6-a1b8-81fac44ddaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b8b07f1-0e75-454a-a4fa-0e3b113108a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c10e95d-98e8-4e3c-a958-e865cc42908b",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6652f4-16ed-4b33-a1c9-b2917ef6c23e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "33bb95bb-b905-4a9c-b839-1fa6b1c2ac0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331e098b-8be1-43e5-8bc7-d336891fc582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "414b4135-7692-4824-8e4d-3a8c2fbc374d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6170e26-b057-4045-86ad-2ee73b7d2a62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba76ab45-d876-495a-aea8-b3700eebf644"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "104c1e58-ca0f-4dc7-96e1-7ae15914f93a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d3738b6-f00e-4dde-b9c7-3b1046604498"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38c4b9a8-fc9e-4927-8d80-f0c9e1479494",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "958b33fb-242c-470a-b1ba-b92de02a6045"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a1b3acc-ab11-4ec2-bfc1-c1576aaa1ca7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf8dc0df-dbb2-43c6-8019-45e369af7bc4"
            }
          }
        ]
      },
      {
        "id": "7dfabf82-9722-44ec-8167-45b84bc3b590",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cb515c0-df97-487a-9ea9-71dfda97beb1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a7b3634-4d6f-4073-8f2f-191421e3050b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d2494387-f9bb-4173-a2d8-4a8a3a91e93c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "438a086c-9871-44e8-8ab5-ddb1b2107ade",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48eb82a5-2cb6-40bc-96ae-d74edb992a2e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 1023.6192307692307,
      "responseMin": 21,
      "responseMax": 7809,
      "responseSd": 1019.1918542571005,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683938097550,
      "completed": 1683938374135
    },
    "executions": [
      {
        "id": "b5fa0da7-183b-4e6e-b27c-41a3240cfd54",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f08b9623-9726-46c6-951f-0fded7d4a40d",
          "httpRequestId": "31866834-168a-492f-952b-6e88a5291954"
        },
        "item": {
          "id": "b5fa0da7-183b-4e6e-b27c-41a3240cfd54",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f6d7d30b-d401-4fdb-a87e-0585af88f08d",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 0
        }
      },
      {
        "id": "359ff5c7-a359-4c5f-9705-b7ec318bed7a",
        "cursor": {
          "ref": "87818e6d-3882-4263-8633-a8409174fc27",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1f244725-de85-44f3-aaf4-deb20ff47e84"
        },
        "item": {
          "id": "359ff5c7-a359-4c5f-9705-b7ec318bed7a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "143ebbe6-08fc-4b9a-9772-0fb38502aafb",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "ce8d0f72-0e63-4ce8-8d8e-377a0e7ad484",
        "cursor": {
          "ref": "a454df71-0423-4b96-89dc-1840f3a7e192",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4c033335-4dfc-4c1b-b767-b6e3b08e7725"
        },
        "item": {
          "id": "ce8d0f72-0e63-4ce8-8d8e-377a0e7ad484",
          "name": "did_json"
        },
        "response": {
          "id": "3e386253-41dd-4e65-ad1b-1ded2881bfae",
          "status": "OK",
          "code": 200,
          "responseTime": 1209,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8dec67-b42c-4969-851c-6bb9a526d3b9",
        "cursor": {
          "ref": "a4518cf4-7325-4b0d-9e84-026a28382eec",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fea9de81-835b-483c-8b65-1071456c848d"
        },
        "item": {
          "id": "3f8dec67-b42c-4969-851c-6bb9a526d3b9",
          "name": "did:invalid"
        },
        "response": {
          "id": "8df7d0c3-02d2-409b-ba39-1afae1b8af86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1068,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8dec67-b42c-4969-851c-6bb9a526d3b9",
        "cursor": {
          "ref": "a4518cf4-7325-4b0d-9e84-026a28382eec",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fea9de81-835b-483c-8b65-1071456c848d"
        },
        "item": {
          "id": "3f8dec67-b42c-4969-851c-6bb9a526d3b9",
          "name": "did:invalid"
        },
        "response": {
          "id": "8df7d0c3-02d2-409b-ba39-1afae1b8af86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1068,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0270e6c4-afac-4f8b-9663-46f116bb09e7",
        "cursor": {
          "ref": "58838cb1-5c74-48e9-916b-63e66919d3a0",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a1598334-f568-46f4-b143-05a6bf0bf2b3"
        },
        "item": {
          "id": "0270e6c4-afac-4f8b-9663-46f116bb09e7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7eb8b777-e945-4d23-add9-f527b8325e78",
          "status": "Not Found",
          "code": 404,
          "responseTime": 892,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dcc31f-c3e6-4a80-bda6-a17d85540e1a",
        "cursor": {
          "ref": "449dd79e-9758-4538-a336-4243946e905b",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9ebd4ca9-f049-4bb6-b4b5-8f4b96a0f0d3"
        },
        "item": {
          "id": "64dcc31f-c3e6-4a80-bda6-a17d85540e1a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6d63e929-e6da-4200-bc0f-7178c8dbfb6f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 817,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab82b0db-92b9-4c61-81b2-20939a6127bc",
        "cursor": {
          "ref": "87a2a5e5-3142-4062-b00b-a72bd68be181",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5ae7b95f-9503-4ee0-94e8-b49f9e981355"
        },
        "item": {
          "id": "ab82b0db-92b9-4c61-81b2-20939a6127bc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a073815a-3bdf-4974-8f73-2b7ca393514f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7511b56f-1de9-4a48-98cf-811448c0bca8",
        "cursor": {
          "ref": "fd93050f-2980-4544-883a-1a543082766e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "df5954cb-923b-4693-9e6a-2d23ee7c9cdf"
        },
        "item": {
          "id": "7511b56f-1de9-4a48-98cf-811448c0bca8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "175c1d3d-664a-4430-953c-441b168f3400",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 809,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7511b56f-1de9-4a48-98cf-811448c0bca8",
        "cursor": {
          "ref": "fd93050f-2980-4544-883a-1a543082766e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "df5954cb-923b-4693-9e6a-2d23ee7c9cdf"
        },
        "item": {
          "id": "7511b56f-1de9-4a48-98cf-811448c0bca8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "175c1d3d-664a-4430-953c-441b168f3400",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 809,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8d6053-fc08-4384-b22e-9bd578f014e9",
        "cursor": {
          "ref": "4a4d7811-0d0a-4c83-a1b7-f6364d1c0376",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6e272b33-8f8c-4b29-92a9-b387d82f4730"
        },
        "item": {
          "id": "0f8d6053-fc08-4384-b22e-9bd578f014e9",
          "name": "identifiers"
        },
        "response": {
          "id": "0b29f89f-acd6-4673-b222-2722c5d4cf3f",
          "status": "OK",
          "code": 200,
          "responseTime": 1574,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f81fdae-274c-43cf-88cb-1d97c5979afc",
        "cursor": {
          "ref": "cbb7a245-1b5a-4db7-bb16-f3c09866fa34",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "75f05760-d429-47ed-8341-38a208d80a6a"
        },
        "item": {
          "id": "0f81fdae-274c-43cf-88cb-1d97c5979afc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ba813354-830c-468a-8f73-5c1f8c829868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2329,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f81fdae-274c-43cf-88cb-1d97c5979afc",
        "cursor": {
          "ref": "cbb7a245-1b5a-4db7-bb16-f3c09866fa34",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "75f05760-d429-47ed-8341-38a208d80a6a"
        },
        "item": {
          "id": "0f81fdae-274c-43cf-88cb-1d97c5979afc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ba813354-830c-468a-8f73-5c1f8c829868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2329,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87af7216-8a25-453a-acc5-db22557bad40",
        "cursor": {
          "ref": "5d30ceb3-6f5f-4b10-a18d-9a2e90b3e335",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "345eb63f-1e54-424c-850a-fecb0f779d21"
        },
        "item": {
          "id": "87af7216-8a25-453a-acc5-db22557bad40",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "13e7696f-7b79-48a1-b0a7-225b881995d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2820,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d108315-e71f-4432-83b5-7cac3173ddef",
        "cursor": {
          "ref": "44ba2c86-27b9-4fd9-8f03-70e94dccf71a",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5f8d8eec-0d2f-406f-8df0-dab29d7db926"
        },
        "item": {
          "id": "6d108315-e71f-4432-83b5-7cac3173ddef",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5ff19afe-2e46-4875-a3bf-476f47768aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2774,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da471e3d-bfa3-4aa4-b384-79f606222624",
        "cursor": {
          "ref": "c651a8d2-aa91-4811-9395-1b8826862acd",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a25ef6c9-0951-410c-964c-72bd15a45ef4"
        },
        "item": {
          "id": "da471e3d-bfa3-4aa4-b384-79f606222624",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "54f7fc71-af3b-461b-b599-91cccc1e4597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2144,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0031ad0b-009f-488f-b848-92839544761c",
        "cursor": {
          "ref": "bc973062-5d8d-46e6-ba8b-40ff6c20cb83",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9b4c7d5e-9fa3-4e83-83ec-fca5bbcd2345"
        },
        "item": {
          "id": "0031ad0b-009f-488f-b848-92839544761c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "263e36e9-0548-4c65-8bda-75606c431628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1262,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619f6ad9-54a4-4828-9410-1990e840df8f",
        "cursor": {
          "ref": "d4ebb868-4e01-4d3d-9f15-a8f832fa62cc",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "619130d4-676f-4c30-b15f-aa3fe79d715a"
        },
        "item": {
          "id": "619f6ad9-54a4-4828-9410-1990e840df8f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "26a59d59-3470-4cb6-a323-9d20dafdc559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 942,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efa120b-c4c7-45e8-a272-71448b3499ad",
        "cursor": {
          "ref": "d27a4a5d-0d57-415d-bf71-e57dc6455582",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8d11061c-3bc8-4bd9-8df9-7312e0b67f20"
        },
        "item": {
          "id": "0efa120b-c4c7-45e8-a272-71448b3499ad",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2a4ab4e3-0970-4d77-89fa-08a689fc3565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c054639-7cc1-4af2-ba7e-19262cf3b586",
        "cursor": {
          "ref": "8556444b-ad15-478a-a9c9-7a62a8c6c32d",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "350d0c9c-bcbd-4fe6-875d-aa9dae87017d"
        },
        "item": {
          "id": "4c054639-7cc1-4af2-ba7e-19262cf3b586",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "49a20ca6-98fa-458b-80e4-e82cf8c8caee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f63360-89ef-40f1-8f8e-7cf6ba5a006f",
        "cursor": {
          "ref": "a75d4f9f-a8c3-4e07-9b39-fa5845b827d1",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7723cce4-c70c-4398-84ca-50f9c465d58c"
        },
        "item": {
          "id": "82f63360-89ef-40f1-8f8e-7cf6ba5a006f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "848ecac0-8698-4fa2-b5d2-2701b30ba32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cb4cf4-955f-4f33-a201-d4badd56a6d0",
        "cursor": {
          "ref": "861ff8c9-6040-40dd-9ca9-f9f51498370c",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dbff5e06-094e-4f55-ac3e-0e1a653a39d8"
        },
        "item": {
          "id": "89cb4cf4-955f-4f33-a201-d4badd56a6d0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2e3e091b-362b-4e23-87bd-293ebcad6b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5de467-0600-4ad3-a35d-c82b1a3e19d9",
        "cursor": {
          "ref": "c9bf9fc2-62ee-4da6-bc80-eceed666a402",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "11164fc3-fc2f-4006-8e6a-722c86dd2065"
        },
        "item": {
          "id": "cc5de467-0600-4ad3-a35d-c82b1a3e19d9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c4facf60-20db-4e02-9dec-8d4087164dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8373d9-d63b-4176-8fb5-3c855a067891",
        "cursor": {
          "ref": "6f5d9c70-042b-440a-8b7e-9f9023cc81b8",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "dbb40e69-c190-40f6-bf03-81cc6eadefbe"
        },
        "item": {
          "id": "eb8373d9-d63b-4176-8fb5-3c855a067891",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "521838db-729b-464a-b58a-6ebafdc1e230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cf68cb-546d-4b38-9d78-4106a685e7f4",
        "cursor": {
          "ref": "44bcea8f-f1bf-44d1-a37d-30190eb7d2c7",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "460aa165-ce0c-425a-b8f2-9f559920550a"
        },
        "item": {
          "id": "a8cf68cb-546d-4b38-9d78-4106a685e7f4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e36d25f3-6392-461e-a3fd-5caf361898e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12555804-9ef9-4d31-8a0d-c7c99f0c67d3",
        "cursor": {
          "ref": "7de88d87-22da-4445-a077-ea87d4980f14",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c58fe38c-098a-4e1e-b6ce-bc3d93b16271"
        },
        "item": {
          "id": "12555804-9ef9-4d31-8a0d-c7c99f0c67d3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f3c1302d-e8f7-431f-a790-3046884e6a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f076633-4d4b-44f7-b974-d59ebc8673be",
        "cursor": {
          "ref": "679f0bf9-87b5-4c79-819a-4b86d4ab01e0",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c702e12c-2b74-4a95-9845-d5ff2922fee6"
        },
        "item": {
          "id": "4f076633-4d4b-44f7-b974-d59ebc8673be",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "52fae375-3c08-459b-be25-53aa62e5cc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9b4897-6c7a-4d6a-a85d-25c71ea15f1a",
        "cursor": {
          "ref": "915f1db9-8ff7-42fc-ba23-c00167f1b588",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0f4272d6-f896-4dc0-9c95-f2391c1a3f29"
        },
        "item": {
          "id": "bc9b4897-6c7a-4d6a-a85d-25c71ea15f1a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ca6ff859-b8f5-4668-a14d-b8a9b84b1e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436cd292-c432-43b6-bd20-e00b9e9b34c9",
        "cursor": {
          "ref": "0821864b-87cf-4ec5-864d-91f84b60a5b4",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1198913e-6867-481c-8f19-d641c7f8c991"
        },
        "item": {
          "id": "436cd292-c432-43b6-bd20-e00b9e9b34c9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f3128de1-8a93-4094-a1c3-1a770f7cd461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff097b61-0c65-43bc-905e-0b2c28167cce",
        "cursor": {
          "ref": "e9b492ef-2bf2-41c4-963c-c68c681465f9",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4e823cfd-798c-46bf-837f-17b03513bae6"
        },
        "item": {
          "id": "ff097b61-0c65-43bc-905e-0b2c28167cce",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dacc7e8d-6489-48b2-afdb-0170360eacd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6991b920-e157-49fa-8ae6-ba522683c0de",
        "cursor": {
          "ref": "d48e2df4-13e0-4454-b697-54b6b29b6f8d",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9355c964-4185-45d9-a451-47adf5030d5c"
        },
        "item": {
          "id": "6991b920-e157-49fa-8ae6-ba522683c0de",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "95d4771f-471b-4efa-aef3-021e133e1fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020e969f-3dca-4ac0-9fed-5c08de48b875",
        "cursor": {
          "ref": "3f2d4bc8-ba22-4883-8c3e-324546d3a2e3",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a5cb1e01-7ff4-4c42-8217-ddabb9435e3c"
        },
        "item": {
          "id": "020e969f-3dca-4ac0-9fed-5c08de48b875",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a677167e-1acd-4508-8c20-5fee3f8a1311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed76c3c-c1d6-4209-9891-23c544805395",
        "cursor": {
          "ref": "000ac4c7-942e-4f04-a81d-cf7c8d8a3b2f",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b52c81b4-762e-42f7-916a-13944a85d1f8"
        },
        "item": {
          "id": "1ed76c3c-c1d6-4209-9891-23c544805395",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "361535f6-f6d8-4373-ad3a-1b3ba6b38d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fc8570-ec5a-4078-be1b-11306b8bdc9e",
        "cursor": {
          "ref": "f4f574c9-1ae5-4f78-8c40-bed117ee8073",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7cf36943-97c0-43d0-b603-e5e79841a718"
        },
        "item": {
          "id": "e6fc8570-ec5a-4078-be1b-11306b8bdc9e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ac7484dd-c1dc-40f9-9bc0-e9b66b441877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fb1e23-d031-4d8f-af58-773208158812",
        "cursor": {
          "ref": "65cabe96-4f41-47b2-b6ce-a710877064c2",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7057ca87-1b9c-477c-bd5d-48ec06009e5d"
        },
        "item": {
          "id": "10fb1e23-d031-4d8f-af58-773208158812",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bad8f077-b89b-4d23-9f3d-39f5a577d816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f567b1-66b5-4da6-9ab0-20a64d28ee99",
        "cursor": {
          "ref": "58fdd053-fee7-4e6c-947d-955fb866d16e",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "239da191-4539-4150-9d60-b3860fdb2c38"
        },
        "item": {
          "id": "61f567b1-66b5-4da6-9ab0-20a64d28ee99",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "db404659-a992-4705-adcf-62eb7dd9a3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c799b35f-22bd-4f0e-81a0-5ad0f044c075",
        "cursor": {
          "ref": "c068f888-7d35-4753-bf2d-25162a8d33a2",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b8b0afe0-1abb-4153-ae3b-cc89907e3d33"
        },
        "item": {
          "id": "c799b35f-22bd-4f0e-81a0-5ad0f044c075",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cdec6ef0-173b-4554-8b30-390384562c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac04caf1-8d14-485e-aa95-d5123282294a",
        "cursor": {
          "ref": "80324346-e763-426e-8cd6-638eb3f3c50a",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "64b3d83c-99f5-4dab-b8c6-03f986664cea"
        },
        "item": {
          "id": "ac04caf1-8d14-485e-aa95-d5123282294a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bd2babe8-6225-45b1-ad3a-e3e7cc5d05d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340908f1-f5cc-4473-a1e5-064774fd7578",
        "cursor": {
          "ref": "b84deada-b638-40a3-9bce-224502a24092",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a4140326-b800-441d-8129-32ae730b0300"
        },
        "item": {
          "id": "340908f1-f5cc-4473-a1e5-064774fd7578",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a9b62984-ce0e-4661-8368-d776bc7bc30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd69fdb9-e7fb-4c78-b8e3-7ae485425309",
        "cursor": {
          "ref": "18d9db96-4406-4455-bbfe-32423915f518",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4e64daa0-917c-44f1-b36f-7410343148ee"
        },
        "item": {
          "id": "fd69fdb9-e7fb-4c78-b8e3-7ae485425309",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b5130eff-fb71-461f-bbef-3a8c1094cff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad73542-28b5-4d27-a81c-d073558aed18",
        "cursor": {
          "ref": "39e52bb5-6cea-4078-8fd5-bf39320a4f5a",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7dcb068c-45aa-4e49-85b0-bf0d181399c0"
        },
        "item": {
          "id": "5ad73542-28b5-4d27-a81c-d073558aed18",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "302fcbd9-1796-46f5-95ad-b9c53037851f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e924e57-8870-43da-bd8c-0cb0e1beea2d",
        "cursor": {
          "ref": "73c07770-098b-4769-85f5-b8c7135ce339",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "36e2f425-c032-4c87-a9b6-56bcd2439afc"
        },
        "item": {
          "id": "6e924e57-8870-43da-bd8c-0cb0e1beea2d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8a6b58df-545b-4f86-9803-cfaa081eaf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf91157d-d9de-4934-8681-20883b759f97",
        "cursor": {
          "ref": "4aca4c5b-8e20-414f-897d-086cd0247d53",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "69bd433c-7276-4b9a-921c-80249c91379f"
        },
        "item": {
          "id": "cf91157d-d9de-4934-8681-20883b759f97",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "90cb6298-2920-46f9-9771-56e40898e8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8830e45-3e43-4fff-ac9f-dea5cf998b32",
        "cursor": {
          "ref": "9f40a1f0-3740-48c7-af5f-342b78c1ec92",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7ce21099-6334-40e3-ae43-1312a38d2059"
        },
        "item": {
          "id": "a8830e45-3e43-4fff-ac9f-dea5cf998b32",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4bebd86a-581e-46bd-8d48-cb89fc38abb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed35c10-5562-4402-8c38-d618a551b72d",
        "cursor": {
          "ref": "98a61fca-a2ae-43c2-9010-3148fba31edc",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "eb07de1e-8fd0-4d2c-a947-aeee843cfd32"
        },
        "item": {
          "id": "bed35c10-5562-4402-8c38-d618a551b72d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5ddf63dd-5312-4405-b053-01f10d8875ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f3bbc4-8246-45ae-9cc6-ecce14b22541",
        "cursor": {
          "ref": "f1d4f497-7561-4eec-bdf8-8f2dedb035db",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e4268d2c-ae72-4d53-8b98-3f34f9f9dfb0"
        },
        "item": {
          "id": "89f3bbc4-8246-45ae-9cc6-ecce14b22541",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "47440adc-f436-46cf-88f7-6ce2cc135ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356c95cf-bb60-47bb-b9b4-4733586053a8",
        "cursor": {
          "ref": "7344d69e-67f6-4a83-8a2c-30b2e0bef331",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "23404f76-4486-4bfc-9e84-d12998ab809c"
        },
        "item": {
          "id": "356c95cf-bb60-47bb-b9b4-4733586053a8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c77cfc91-fba3-44f7-98bd-04bf3760eab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e47d8b2-e3a4-4e37-832e-7556713cc444",
        "cursor": {
          "ref": "a13ad24b-2998-4682-a8c1-23029ce3986f",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9b4d1335-cf75-4421-a8b2-8a9aacf57a4c"
        },
        "item": {
          "id": "9e47d8b2-e3a4-4e37-832e-7556713cc444",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b248669d-2176-406c-bb43-8f5fde445fdc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 961,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f33145-b004-48b8-926b-d2f854da641a",
        "cursor": {
          "ref": "99aff7b3-a306-4dfe-ad0b-f8b39c301a1d",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c13e3d31-26c7-4b6d-b824-a75d34d28e26"
        },
        "item": {
          "id": "38f33145-b004-48b8-926b-d2f854da641a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c9368039-54fc-4f72-8bb7-9289b3b09293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6345f10-33a2-4657-8f78-739fd797597e",
        "cursor": {
          "ref": "b1249944-930c-4589-930f-8ce8fd1cfc87",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "12fd54ed-d345-49df-b733-f5ec1cacdae2"
        },
        "item": {
          "id": "b6345f10-33a2-4657-8f78-739fd797597e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0a876cf0-f832-41e5-98e0-06f45a318fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fa9f22-3c21-4356-916c-93b4af9bebe5",
        "cursor": {
          "ref": "3ae54a21-e692-4e4b-8e2e-65e65c5fc241",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bc02e2d1-e6d2-4126-a057-3b72ab884788"
        },
        "item": {
          "id": "14fa9f22-3c21-4356-916c-93b4af9bebe5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6bcb4330-f743-4086-8fdf-8bbb43c3a5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7bb67b-e85a-470b-8a14-29771affaf5e",
        "cursor": {
          "ref": "24871f11-2ac1-4f57-beea-f52371aa5940",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fd55b128-cc96-49c4-93b1-451611a7279f"
        },
        "item": {
          "id": "0d7bb67b-e85a-470b-8a14-29771affaf5e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1e337b80-97c1-4f28-b020-36c19c17b548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835cc6a0-d2e6-4592-8443-663209caa09b",
        "cursor": {
          "ref": "6e518bd7-93ab-4061-932a-c101968d5c54",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e223a919-00ce-4341-9ac2-f8b951ee2cff"
        },
        "item": {
          "id": "835cc6a0-d2e6-4592-8443-663209caa09b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "235588e0-3711-4ccc-9842-a3597274843c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91124f11-5dc3-4874-8ad1-c7281f13eeec",
        "cursor": {
          "ref": "89af0032-065a-413b-ad61-4cb6e54805fa",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "826606b0-f552-472b-9f61-93a93327c743"
        },
        "item": {
          "id": "91124f11-5dc3-4874-8ad1-c7281f13eeec",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ef94acac-648e-4866-835e-b708792315e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3555a50-2fd2-4186-ba4e-e16f8e6afe09",
        "cursor": {
          "ref": "74ee1420-9ce2-4725-9e64-54852d57d10a",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "05bbd14e-4256-411d-8622-1d038c5a86c6"
        },
        "item": {
          "id": "f3555a50-2fd2-4186-ba4e-e16f8e6afe09",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "78eb896a-079a-43e3-bb4c-7e1e0312ada3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 954,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf1f8f8-302a-4076-a290-4f78ba9aa621",
        "cursor": {
          "ref": "706f0b8b-cce1-4d86-896f-8bae720a31d9",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "069f2a27-ea5f-4763-be55-77c3bafa77ef"
        },
        "item": {
          "id": "0cf1f8f8-302a-4076-a290-4f78ba9aa621",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a4104112-4c64-41ad-9a38-cc5919efe8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fbc35e-1830-4a04-ba70-f5e3aef37e89",
        "cursor": {
          "ref": "a551c541-77b2-42ba-9369-8b0cb5c2ec7e",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9542abe1-dcd9-40f3-a6f2-ec9df6b70732"
        },
        "item": {
          "id": "24fbc35e-1830-4a04-ba70-f5e3aef37e89",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f950fb85-e7c9-445b-a52b-b8d5052d51f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8dbfb9-4712-463e-ae72-4ddee93ceaff",
        "cursor": {
          "ref": "5d8bc9af-82e0-42a4-b674-399d531c2e7c",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8c0046dc-b07c-4243-a105-30dbaca76517"
        },
        "item": {
          "id": "ba8dbfb9-4712-463e-ae72-4ddee93ceaff",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "245bfbcf-0992-47db-ad7a-d8f8bbe6a9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e2eed9-ec26-4e2b-9ead-79e214786aef",
        "cursor": {
          "ref": "a4eb8564-de98-442c-bd7d-25bda34d94b3",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ec63c49f-04c6-47f4-ba2a-df5c0a2013aa"
        },
        "item": {
          "id": "c7e2eed9-ec26-4e2b-9ead-79e214786aef",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7baa7ba4-1eed-4e64-ad25-ff962574de20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d8ea79-2291-48f3-8506-5047d7652398",
        "cursor": {
          "ref": "2c9c2137-ce8d-4af4-a366-db9f2b826c65",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0ff9b30f-232e-4f4b-89f9-541e469761f1"
        },
        "item": {
          "id": "40d8ea79-2291-48f3-8506-5047d7652398",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6175baff-f2d9-41b1-b367-21ab72c7d173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52db0eb6-5768-4ba9-b90a-79d2cf63181d",
        "cursor": {
          "ref": "b054c267-2be3-4340-b636-8f9a04dd21fc",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "88904cdf-f11c-4c9e-aa18-09654291f1a9"
        },
        "item": {
          "id": "52db0eb6-5768-4ba9-b90a-79d2cf63181d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "03b4ac72-a071-4ce1-ac7c-fbeb501aed9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcdd2bc-5328-4621-bae5-e631cfa82309",
        "cursor": {
          "ref": "9a08b2c0-3338-48f6-a886-b24139725c38",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a5133f29-380d-492c-b137-d42be1e5723c"
        },
        "item": {
          "id": "cdcdd2bc-5328-4621-bae5-e631cfa82309",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e065fc81-771e-4013-b1ec-ff7e26d3d8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209c75f0-515a-4f15-9903-98d325e16a3c",
        "cursor": {
          "ref": "cbd16d3c-7f0e-4d93-99eb-77a027d16c99",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2a0379b6-8b19-4351-9477-c7d8f3cbc2f3"
        },
        "item": {
          "id": "209c75f0-515a-4f15-9903-98d325e16a3c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dc6ea926-4529-47ba-8e28-26cfd1688f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d1688d-2085-4744-96df-186da606e41b",
        "cursor": {
          "ref": "9ca81637-62b0-4b5d-bfd9-02b6cc80e13d",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e344328b-4862-4d70-b794-31e9f9b2a3d5"
        },
        "item": {
          "id": "92d1688d-2085-4744-96df-186da606e41b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "569b8e64-3c32-4c39-ba5a-4d81416a4ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e380d02f-6fb2-4c8f-b5da-4c8609382a9a",
        "cursor": {
          "ref": "887c9d28-7333-4f62-96fe-95f1494d167e",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d4987dbe-4a2e-4386-b7f2-8d1d4a1f6804"
        },
        "item": {
          "id": "e380d02f-6fb2-4c8f-b5da-4c8609382a9a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a10cc507-fd9a-4615-8a13-06da2d217ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84318039-4ac6-4649-bce8-92db48b8063d",
        "cursor": {
          "ref": "ef426f21-005d-428f-9f16-316ba30d5306",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a20c46b7-4eba-4c8b-b9e7-8b6d350e8b69"
        },
        "item": {
          "id": "84318039-4ac6-4649-bce8-92db48b8063d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2eac389e-a944-49c3-939d-c16024822a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cda71b8-8b4f-4c20-9cb2-e93514db9032",
        "cursor": {
          "ref": "78fd4ea0-2a7c-41d5-8008-4ffb931eeb98",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "eef534bc-3490-4cb0-a262-5be33c5635fe"
        },
        "item": {
          "id": "4cda71b8-8b4f-4c20-9cb2-e93514db9032",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5109bd70-b712-462b-a6d8-0b86ff90bf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1471,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7931baaf-d976-4970-9624-55e17536d73c",
        "cursor": {
          "ref": "85cc48a0-1732-4dcc-8715-6759e2a2e8db",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "54195813-99fd-42ee-b7db-f3a087c36374"
        },
        "item": {
          "id": "7931baaf-d976-4970-9624-55e17536d73c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b46a385e-cf71-495d-b05a-aa49829ff241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1232,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1748bc5e-28e8-4fcf-bc22-aaa46eda01b2",
        "cursor": {
          "ref": "f1d34a20-580e-4524-84e2-f705624700ed",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "878d1e7a-225d-43c5-8e46-469c21205fe3"
        },
        "item": {
          "id": "1748bc5e-28e8-4fcf-bc22-aaa46eda01b2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4508f5f5-f384-4b6f-82d4-32bd06f107fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1843,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00760910-5935-4629-8b71-25467fabe382",
        "cursor": {
          "ref": "f59e3388-8d1c-4413-aa98-7d97f8f9dd0b",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "87c4c343-d584-4b3e-bc48-8554e63c349c"
        },
        "item": {
          "id": "00760910-5935-4629-8b71-25467fabe382",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5c32657b-7403-4e51-98ce-b17b7dea09b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1421,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef33a45-1aba-4311-886f-f2775ade30e8",
        "cursor": {
          "ref": "f4805e25-660e-4151-9f08-50e31b11be05",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fea1a054-e0a0-42b7-bc30-9930aec069a4"
        },
        "item": {
          "id": "1ef33a45-1aba-4311-886f-f2775ade30e8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3744c341-44e9-44e9-9835-a151dd0ba67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1433,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958ac989-72f9-4e26-97d8-d62e942b90a3",
        "cursor": {
          "ref": "729ec155-d2fc-4af9-9b46-490e87797f85",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ed7ba620-0acc-45bf-99c3-707d6457c6ae"
        },
        "item": {
          "id": "958ac989-72f9-4e26-97d8-d62e942b90a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1f9ae79c-7159-405a-bc6f-685ec1ef9b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1313,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7deeaf84-ee1b-4810-b399-4135d41c7169",
        "cursor": {
          "ref": "fcaec503-0ad5-4c7f-89b0-5997969c9abe",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8d6fef6f-8234-46e1-aef4-3dfedfe1e11e"
        },
        "item": {
          "id": "7deeaf84-ee1b-4810-b399-4135d41c7169",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cf538444-2c0f-48e4-9b39-1f498ffdb835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1016,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a73e09-4866-4087-b908-834200e7674c",
        "cursor": {
          "ref": "11afe961-be66-48c5-808b-3b07d11bc132",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b361a6c3-6452-4466-8fe3-4620b7125147"
        },
        "item": {
          "id": "d6a73e09-4866-4087-b908-834200e7674c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c90ce45a-18e7-4619-bb71-d166d11e0ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e62d87-17e8-422e-a07f-b1bc36a1fd2b",
        "cursor": {
          "ref": "2a04c60a-6173-4712-aaa2-536e5fb3a7b6",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fd5ce93e-da01-4da2-a562-56a527df4a41"
        },
        "item": {
          "id": "40e62d87-17e8-422e-a07f-b1bc36a1fd2b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8f577017-6741-4853-8f0b-b83da1bc428d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88bdc4e-0e4d-428f-93d1-81d2148b1ec9",
        "cursor": {
          "ref": "1b0a3016-ead6-4cec-814d-72905c9af65f",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0f6bca2e-15db-4c7f-bd23-52862f33e778"
        },
        "item": {
          "id": "d88bdc4e-0e4d-428f-93d1-81d2148b1ec9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9c17e760-b4e2-480b-a780-46815380a3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 985,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0f7aec-6d2a-4886-ab63-59883a7bd803",
        "cursor": {
          "ref": "cf2270b3-e613-4a7d-9a21-a9cfa0cfdfe3",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "33757ff7-89d0-4007-9316-3fb2dc583a96"
        },
        "item": {
          "id": "ec0f7aec-6d2a-4886-ab63-59883a7bd803",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "28b6904e-4061-44cb-abf4-d7d5e48aa477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1389,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373776e6-b842-482c-9330-f35fb2513e51",
        "cursor": {
          "ref": "2d03473a-5508-41dc-ad62-492fb4a02089",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "57636c1f-a0b0-4ee0-b09c-f3305ad9275f"
        },
        "item": {
          "id": "373776e6-b842-482c-9330-f35fb2513e51",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "02c7ce21-4e53-4a09-bcb4-344ace811340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1349,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7a45a2-98f9-4e1b-a940-699e9a7bfc35",
        "cursor": {
          "ref": "e9f2ad67-db3b-475f-a047-2325be7f0948",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7f35c31e-500a-4023-95eb-0ea904d2e8c9"
        },
        "item": {
          "id": "5a7a45a2-98f9-4e1b-a940-699e9a7bfc35",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a151a8b8-f4fd-41c8-81e4-b2be1a4d31bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1636,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019cde70-2295-48e0-a88c-c75c86d45b9b",
        "cursor": {
          "ref": "9e4e110f-51f8-4904-a748-71e788a97162",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "14e80534-dfac-46ae-9fcc-b1571efc9a39"
        },
        "item": {
          "id": "019cde70-2295-48e0-a88c-c75c86d45b9b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "24803c89-431e-4637-896d-beb91f999b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 909,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3d4419-1523-4669-bb24-04e43b26e35f",
        "cursor": {
          "ref": "acd967a4-59da-44dc-86ca-c2780f84d26a",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b88c49aa-834a-46fb-a575-c0d5cceed430"
        },
        "item": {
          "id": "cc3d4419-1523-4669-bb24-04e43b26e35f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "da3f001c-a7a4-44f3-b880-b2d04f103ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075c7b24-2a02-4fa3-97f9-0cdc0549cba9",
        "cursor": {
          "ref": "47e4a164-e025-45c8-9e9b-b76ea1bb4a53",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1e4b7ca3-6646-4b18-98f2-f7de23bd53b4"
        },
        "item": {
          "id": "075c7b24-2a02-4fa3-97f9-0cdc0549cba9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "25fe9c35-4b2c-4561-bb56-1c542af8c832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a07bc42-dcc3-4c90-93fb-e41608296f0c",
        "cursor": {
          "ref": "385794ce-d274-461a-bd34-3e5d72b5107b",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f4458c02-d1e4-43ec-bee6-752633aa25f5"
        },
        "item": {
          "id": "1a07bc42-dcc3-4c90-93fb-e41608296f0c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3eacc89e-5892-41ec-8d9d-013bed1f85a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 898,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ecf0ce-7104-4046-b831-b9dfa8b7aaf1",
        "cursor": {
          "ref": "e0c199a9-a979-4fb9-83b2-e557b1bf0450",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3ee44c26-82aa-4561-915a-33208cdf8ce2"
        },
        "item": {
          "id": "d7ecf0ce-7104-4046-b831-b9dfa8b7aaf1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "68fac565-563b-43c1-a6ff-d8f0a3f1a4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1545,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69aeb7c-e10c-4d24-8d6a-10ba5d3b82b7",
        "cursor": {
          "ref": "37734394-74af-4345-877e-019211966590",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ad109bc7-a15d-45d6-94b1-70851adfa5e5"
        },
        "item": {
          "id": "b69aeb7c-e10c-4d24-8d6a-10ba5d3b82b7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "999f513c-fe9e-4371-a363-30e73b798f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1880,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977fed8f-208a-47ba-986d-662336efde35",
        "cursor": {
          "ref": "dd19275b-14ed-4228-a5f7-ddff4bbd7d0e",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "56eb74d9-3378-48f7-8a40-b49c9d736abb"
        },
        "item": {
          "id": "977fed8f-208a-47ba-986d-662336efde35",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "19b150e1-bcc1-417b-8c16-b66d6eb0d07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1887,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb26bb2d-a9d8-41a3-85bb-2b562c6ed90c",
        "cursor": {
          "ref": "d85141b9-f84a-4518-b4ae-2505e47fb5eb",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0ad99af1-73dc-4a16-8feb-175775634dbd"
        },
        "item": {
          "id": "eb26bb2d-a9d8-41a3-85bb-2b562c6ed90c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "067c3a60-0b39-495d-b59a-6ef7af25a555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1923,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd21852-fa64-4612-95c3-e863642e3672",
        "cursor": {
          "ref": "dd245aee-469f-4308-aa4c-f3cbb19105c4",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c68d9452-722b-4c6f-a206-0137fe604460"
        },
        "item": {
          "id": "2cd21852-fa64-4612-95c3-e863642e3672",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "25b5295a-e0b4-4ba1-b2cb-c60cca435357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1819,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb468e0-3e8d-4406-80ba-f6140fb63012",
        "cursor": {
          "ref": "fe8774c6-7381-4ac9-823a-2abe29d9d790",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a2d2f2e2-cbed-40d0-b9f7-0f242c2bd05f"
        },
        "item": {
          "id": "5eb468e0-3e8d-4406-80ba-f6140fb63012",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2c433559-fff7-44f0-b2f7-a2bdba564e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 936,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f942ec2c-d01f-4c1f-a7dc-3054cfa6143a",
        "cursor": {
          "ref": "1a347b5c-64a3-40bd-820f-cd96c02d0eaa",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9ef058ba-a50b-4a56-a438-651a920b81fe"
        },
        "item": {
          "id": "f942ec2c-d01f-4c1f-a7dc-3054cfa6143a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "152eb694-f227-467a-889b-f138ff509790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c11f87-9660-4d8e-a5ac-3e5a225d519c",
        "cursor": {
          "ref": "829f6ee8-c23a-47e5-b527-39a39302761a",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "27c932ac-993b-44cf-bbf5-4ba258c5568d"
        },
        "item": {
          "id": "f0c11f87-9660-4d8e-a5ac-3e5a225d519c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4fc1c716-bb2e-4f99-a27a-8223e3729409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc88c967-4ba6-46c4-afe0-88d007e330c8",
        "cursor": {
          "ref": "efe7be38-87c5-4568-86b4-bee7bc22045c",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0eb7f01b-67d1-44c3-ac55-9ef70ae01225"
        },
        "item": {
          "id": "dc88c967-4ba6-46c4-afe0-88d007e330c8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b5e44081-d216-407c-a158-e5649480079e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c7cd43-645b-4118-afe3-09adecdac410",
        "cursor": {
          "ref": "1a6d3837-9b7b-4e17-84d0-5c9863c65202",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3ecce953-b797-40e6-a75d-046869b17ec4"
        },
        "item": {
          "id": "71c7cd43-645b-4118-afe3-09adecdac410",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6fcf4bbf-8c02-4495-8542-6f68d5393c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07d7443-043c-4f78-8abc-8ccfef21ea9d",
        "cursor": {
          "ref": "4660987a-323e-4002-9fd1-e7b3cfb7831b",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b811cc2e-4269-44be-a54e-456ca43a77f3"
        },
        "item": {
          "id": "c07d7443-043c-4f78-8abc-8ccfef21ea9d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a8a16eed-1dfd-4464-9f59-769269fe7cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98920fce-363f-4aac-a8e0-a508a915348c",
        "cursor": {
          "ref": "af5e75d9-80d9-4d22-ae11-50456b21d21b",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d4ebde39-4fa3-4191-ba2a-76d44cbe6aba"
        },
        "item": {
          "id": "98920fce-363f-4aac-a8e0-a508a915348c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6b6320c2-d621-465d-b7d4-198684ee8cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f7caa9-c2db-4249-afc6-d300328565e7",
        "cursor": {
          "ref": "8ed33eee-c53d-4262-a5b0-949d6f453ac6",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d3b7a175-0dd5-4da0-b9a9-7acf601e71b7"
        },
        "item": {
          "id": "97f7caa9-c2db-4249-afc6-d300328565e7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2dea4dd3-66fe-403d-b6d8-6acfa1cdc84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afdf4e3-19dc-43fc-b2dc-d1193c1f1bfe",
        "cursor": {
          "ref": "ccd572ff-c512-439f-adc0-8b30bd349dc5",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "120d1bb1-c288-4927-b8e1-3e4693a92831"
        },
        "item": {
          "id": "2afdf4e3-19dc-43fc-b2dc-d1193c1f1bfe",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "252a4f8d-b4e1-4138-88ce-8b01490cd669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87252f5e-1f18-4ae5-91c5-ec905758708f",
        "cursor": {
          "ref": "7028617e-8bbc-40b2-8c8a-1a9460aaa290",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f8b82302-83af-4180-85e8-5f638ca4e70d"
        },
        "item": {
          "id": "87252f5e-1f18-4ae5-91c5-ec905758708f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7d3293e4-dcf2-4ce9-bf0d-3c084701de49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96256a58-0a62-4e90-8d55-b237aaf0d19e",
        "cursor": {
          "ref": "160f6a49-a558-4080-b0c9-6abadd5d975b",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "008017c5-596b-4ee8-98e5-0b91df29c766"
        },
        "item": {
          "id": "96256a58-0a62-4e90-8d55-b237aaf0d19e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6c0cd0b2-eef9-45bc-91d5-cbd0ad7a06fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6154ab-ce98-477d-9d05-f271e861c6a6",
        "cursor": {
          "ref": "22b097a5-926c-499f-b304-7791b02b700d",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "df133523-3f89-48b7-b227-143888f03727"
        },
        "item": {
          "id": "1a6154ab-ce98-477d-9d05-f271e861c6a6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "093610d1-a672-4340-8a0e-9929f23e93c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4d90e7-abd6-4ffd-9029-b8f375e8cd9b",
        "cursor": {
          "ref": "a795e9f1-6150-48e7-96fc-73bca54714c8",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5b26192b-4f07-4c28-9f86-7ae9eeffb278"
        },
        "item": {
          "id": "6b4d90e7-abd6-4ffd-9029-b8f375e8cd9b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f93ff1be-ada5-4666-bba9-60dfeed3f92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37851337-df5e-4019-a319-589403cb7f96",
        "cursor": {
          "ref": "d4cc8ee6-9c81-4465-bbf6-9a7244b534ed",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "af81495b-f5ea-440d-9b37-7222b518bb1b"
        },
        "item": {
          "id": "37851337-df5e-4019-a319-589403cb7f96",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "17d09ac7-6513-4067-98ce-f35e18a3ac71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851051e5-4539-4da8-b862-bbcade325707",
        "cursor": {
          "ref": "de7efe64-2641-4a93-892b-b99c301f88ef",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "03c75697-81d4-43a7-8b7c-57b6a6d9d568"
        },
        "item": {
          "id": "851051e5-4539-4da8-b862-bbcade325707",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "51bab335-9019-4290-845d-86f7dd51c843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7134914-0bfd-497a-8a95-b0cda8b478a8",
        "cursor": {
          "ref": "fd8a72b5-b3be-4029-8333-bd25d1c3b48b",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "697bfd37-a75f-4423-a051-42e6bb60d970"
        },
        "item": {
          "id": "d7134914-0bfd-497a-8a95-b0cda8b478a8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c90106be-243f-4a7c-b5ae-f655077820a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19210889-6743-4dc6-9b1d-fb294738e45c",
        "cursor": {
          "ref": "2f20c49b-1e9f-43a3-8a36-684d16ad1f02",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f076b892-e0bd-4d1b-9d91-85de21f5b11a"
        },
        "item": {
          "id": "19210889-6743-4dc6-9b1d-fb294738e45c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7d656efc-3e1e-4594-8465-2b0384967f42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c6546c-94d4-49dc-b7b0-f6cd1ae67384",
        "cursor": {
          "ref": "0eefe7f7-498d-46a4-bd5e-26fe5b4f8cfe",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cab8d02f-0581-4f7b-9a19-99730496f77e"
        },
        "item": {
          "id": "a1c6546c-94d4-49dc-b7b0-f6cd1ae67384",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "520b9231-84b6-47f1-b679-7c2704beac61",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 795,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27110f9e-27fe-4c33-8a80-78da4bec6577",
        "cursor": {
          "ref": "37305fc9-cdc9-49b6-8b0a-d3b8a9b33200",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e71bceda-c753-4d17-9917-fc1b965b8639"
        },
        "item": {
          "id": "27110f9e-27fe-4c33-8a80-78da4bec6577",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d662fae0-8d3c-4470-bf0b-a53b2e18a4d9",
          "status": "Created",
          "code": 201,
          "responseTime": 6660,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "67148331-94e4-411d-93d8-feb71821b9bf",
        "cursor": {
          "ref": "cae1842b-6db8-4a49-a146-face05f02647",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0c6d3dbb-f357-4b6f-9528-0aaf6ae0d84c"
        },
        "item": {
          "id": "67148331-94e4-411d-93d8-feb71821b9bf",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d6a64bce-6860-4481-a27d-0c8becb3b4cc",
          "status": "Created",
          "code": 201,
          "responseTime": 6711,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "202b1038-45ae-4e02-9e86-286ce7cfad43",
        "cursor": {
          "ref": "d1d0179b-3d9f-429c-a317-701ab8474cf2",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d818f6d3-8506-4e40-b8cd-7afcef5867c7"
        },
        "item": {
          "id": "202b1038-45ae-4e02-9e86-286ce7cfad43",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "81e52df1-0f78-46a8-ad0b-ff63034a77f6",
          "status": "Created",
          "code": 201,
          "responseTime": 6953,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf96c1b7-c27b-44d1-b4c4-ab138fc5afbd",
        "cursor": {
          "ref": "7bd80431-8f61-44b9-a3cb-89f13c02dffd",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "eff7bdb8-855d-4870-a3ce-ee30a00f89fe"
        },
        "item": {
          "id": "cf96c1b7-c27b-44d1-b4c4-ab138fc5afbd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d920271c-4f37-458b-834c-876a0d40063a",
          "status": "Created",
          "code": 201,
          "responseTime": 7345,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1abdb3-2fc6-4dca-ac08-36b4da5a9a02",
        "cursor": {
          "ref": "c5cbbf15-9f8b-4538-ae15-aeb4089ed42b",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b67d3d5f-107e-4205-a4d4-e523b9002c11"
        },
        "item": {
          "id": "bf1abdb3-2fc6-4dca-ac08-36b4da5a9a02",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9271d6d2-9737-4126-b65e-3da00fcb8bc4",
          "status": "Created",
          "code": 201,
          "responseTime": 6380,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4606191-f058-4d2b-b6b4-3aaa28bab204",
        "cursor": {
          "ref": "330a96c5-ab02-4fe6-9366-238c19488655",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f9d268ee-56ac-4061-96b5-ee7cfe3931e9"
        },
        "item": {
          "id": "e4606191-f058-4d2b-b6b4-3aaa28bab204",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "94db4667-9931-4bc1-a7c2-4bff81e7977d",
          "status": "Created",
          "code": 201,
          "responseTime": 7809,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085c320f-2d18-429c-8bd0-add504d6c339",
        "cursor": {
          "ref": "17d2ce2e-5349-466d-a18c-7f72e9275e41",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4008b6fc-c4d1-46f0-a611-8de8d7d18548"
        },
        "item": {
          "id": "085c320f-2d18-429c-8bd0-add504d6c339",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "97008b18-40f1-40dd-817f-26314501a98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085c320f-2d18-429c-8bd0-add504d6c339",
        "cursor": {
          "ref": "17d2ce2e-5349-466d-a18c-7f72e9275e41",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4008b6fc-c4d1-46f0-a611-8de8d7d18548"
        },
        "item": {
          "id": "085c320f-2d18-429c-8bd0-add504d6c339",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "97008b18-40f1-40dd-817f-26314501a98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6d31ef-3543-4ff5-bd1b-66de9996aa4a",
        "cursor": {
          "ref": "974ef4db-47c4-470d-91c5-fe3ef996e88e",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "54ae73d4-3f61-4bc9-b847-73f26ebf4b3c"
        },
        "item": {
          "id": "5f6d31ef-3543-4ff5-bd1b-66de9996aa4a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ba7dca87-0541-426d-af63-45dc991ee28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9c226c-f70d-45d4-a945-a3b36775a3b9",
        "cursor": {
          "ref": "ab44caef-fcb9-4cd7-b6d5-1acee3b8ef8c",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b294de75-a178-417f-8254-b2209abceda3"
        },
        "item": {
          "id": "ba9c226c-f70d-45d4-a945-a3b36775a3b9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "81166935-163d-47c3-91ad-0fced56a51b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e8c3dc-ecfb-43af-913d-d01650b58228",
        "cursor": {
          "ref": "6043661a-b345-4c64-b15e-4a2b34fa0acb",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4d54001c-b0bc-4d2f-bd20-15715d87c277"
        },
        "item": {
          "id": "e2e8c3dc-ecfb-43af-913d-d01650b58228",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "243cb3f4-3192-480f-8321-c1809da4d624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9695c3f9-2e7e-4a40-8c16-215f34ef1461",
        "cursor": {
          "ref": "8d7d1260-6a8e-435c-bcbc-7959d5c62ef3",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2d890018-eceb-49c0-a125-153cc2316cf6"
        },
        "item": {
          "id": "9695c3f9-2e7e-4a40-8c16-215f34ef1461",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "506c2d33-bd68-4a15-ad36-a91159bcd73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e09ad2f-ecb4-42f3-a60f-0f9e8a3ef958",
        "cursor": {
          "ref": "16c3ab66-31d1-4a6a-bbc9-f17cc76f51fb",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e005ce23-b07f-437a-8668-a68fc874b481"
        },
        "item": {
          "id": "4e09ad2f-ecb4-42f3-a60f-0f9e8a3ef958",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1923ea48-013a-40a8-bf1a-31330324720e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d842c84-8408-489a-8bf5-af78e25f1f57",
        "cursor": {
          "ref": "190eb747-1685-4cb3-975b-9d158b517382",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8b209401-d311-42b1-8d6c-dfc7d0e65193"
        },
        "item": {
          "id": "5d842c84-8408-489a-8bf5-af78e25f1f57",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a1162ea3-7b39-4879-999d-5f9477137fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3799b9-264a-4a1e-be45-ad258e491454",
        "cursor": {
          "ref": "2971402e-5559-4b1d-8934-b1c9b74e1b59",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "40c0501b-2490-4664-b0b0-6d8db3973816"
        },
        "item": {
          "id": "8a3799b9-264a-4a1e-be45-ad258e491454",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "353428a9-8433-4d4c-bd20-338ad3e7514d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27338900-2ecb-483a-aeca-c305327d5657",
        "cursor": {
          "ref": "8e09c116-9f4f-4a11-b61c-6aacc2ae7443",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "87342e2a-a85b-4fe9-bfcb-d9146db37ee4"
        },
        "item": {
          "id": "27338900-2ecb-483a-aeca-c305327d5657",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3c855a6d-f71b-4e0b-906d-1165b5e0f7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1244,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b69f07b-0293-4d88-8be6-f53a92a16459",
        "cursor": {
          "ref": "57448a0a-5b86-4ca8-b22c-a838e1138e48",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "121ea10f-5f46-4bf5-9e69-a63cbddfb05e"
        },
        "item": {
          "id": "1b69f07b-0293-4d88-8be6-f53a92a16459",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6d210f9e-7828-41b1-836d-ae6f51022e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2276,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16842ee0-46d9-4d73-88ee-61bc9dc16255",
        "cursor": {
          "ref": "47277e1e-539d-4545-b06b-284487cb36de",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f75a138c-0ccf-47ef-af8f-beecfc81e420"
        },
        "item": {
          "id": "16842ee0-46d9-4d73-88ee-61bc9dc16255",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "abc64027-53ad-4ffe-94c2-da853eb857c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2094,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7528e60-ff97-41f0-9a26-70721a5a5b6b",
        "cursor": {
          "ref": "fcc399ea-733d-402c-9d3b-3ffa64360aeb",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2c1078e7-2398-48e8-911b-c4305efc823f"
        },
        "item": {
          "id": "c7528e60-ff97-41f0-9a26-70721a5a5b6b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "53466181-f771-4cf1-ad8b-d22a0a586ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1828,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098f59ed-eebc-44d3-94a7-e87ebc3d48fa",
        "cursor": {
          "ref": "62c46889-b36d-4a75-b53c-7478a2604b07",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cd73a2ac-a1cd-464c-8635-c3ae0ffdba43"
        },
        "item": {
          "id": "098f59ed-eebc-44d3-94a7-e87ebc3d48fa",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f3c6b550-3f9f-4588-9f65-fe110bb4c95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1271,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff069fab-f334-4cfe-af4f-335934853ec1",
        "cursor": {
          "ref": "867c5f2c-c39f-453e-bc9a-b2b09daf5898",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "15d19acc-c30c-482d-9a64-23d04e978d41"
        },
        "item": {
          "id": "ff069fab-f334-4cfe-af4f-335934853ec1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9d57dd7f-577f-4608-9b99-f19928add2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43a6572-c42e-42ed-8ed9-07a63da66887",
        "cursor": {
          "ref": "644cbb26-1bbf-4a1b-8a07-607b3948f227",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cbba8fa6-d0fc-4f58-a081-fe9582f674de"
        },
        "item": {
          "id": "f43a6572-c42e-42ed-8ed9-07a63da66887",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e6b678b3-4a86-4cab-9179-c0b94da1ab46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d74dcf9-3192-49be-b3cb-6100d39c230f",
        "cursor": {
          "ref": "7b930f75-ae3d-430e-9f36-47f536621815",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d1185674-f21c-416b-a984-f40e2e150180"
        },
        "item": {
          "id": "6d74dcf9-3192-49be-b3cb-6100d39c230f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1468715b-b18e-4614-bd00-02d302768be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f44abbb-447b-4579-b94e-fd488c4f3eec",
        "cursor": {
          "ref": "4416b616-5cd6-4cf3-aa47-829eb5397666",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4eee9d72-72e9-4b49-bb82-641fe7fb2ce2"
        },
        "item": {
          "id": "6f44abbb-447b-4579-b94e-fd488c4f3eec",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c1a4a635-c513-4f04-9c39-a691aadf07f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3965b8ba-ac01-41f4-9351-7d8c4be0dcc0",
        "cursor": {
          "ref": "37fe776b-9f9e-40af-ad17-dea7ed5e281b",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f2d86d8a-d478-4cdc-99bb-5c04d27b849b"
        },
        "item": {
          "id": "3965b8ba-ac01-41f4-9351-7d8c4be0dcc0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "40dacbf2-cd01-4c47-b1af-8a7b9e15bf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a177f6-7aaa-4f2d-9ef6-bbefbea3b9e5",
        "cursor": {
          "ref": "6c4e0351-e39c-4f2d-a78a-f97195f7a997",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d854fdac-6cd1-4962-b247-1a5b090e14c1"
        },
        "item": {
          "id": "61a177f6-7aaa-4f2d-9ef6-bbefbea3b9e5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "480cdcd7-8e0e-4625-8fab-bc761af40285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7456ae-bd32-4dfd-aaa1-f47892e428d7",
        "cursor": {
          "ref": "8a13cc64-207f-44b1-91c0-422a0ac7e8b8",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ba06b6b7-344e-4ec5-82ac-e8f4bdc69521"
        },
        "item": {
          "id": "8a7456ae-bd32-4dfd-aaa1-f47892e428d7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "77998659-8765-4bd3-b95d-1b1e90cb5388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57851775-9053-40a0-a047-791bf984843d",
        "cursor": {
          "ref": "b5953c5b-f117-4179-8fa0-1625c526170f",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cd0ef0dd-6619-4f07-890f-f58594a13c32"
        },
        "item": {
          "id": "57851775-9053-40a0-a047-791bf984843d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b5c7af68-470f-4b97-8523-fbec63faddca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748cfad0-3a72-44d7-9d40-57fe9b010d10",
        "cursor": {
          "ref": "59a38470-6dd9-4ae0-bfa9-8c2342b0dfc6",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4ccf028a-c28d-4ad9-b6cc-0b8d28b26c81"
        },
        "item": {
          "id": "748cfad0-3a72-44d7-9d40-57fe9b010d10",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "76f87a9e-8407-453e-96b5-7e9be13adc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5781e55a-897c-4572-9838-f89267f42978",
        "cursor": {
          "ref": "4477f47a-638d-441e-b73a-8a9ee4a38452",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ef656410-5fe5-4178-bca4-74bfd02014ee"
        },
        "item": {
          "id": "5781e55a-897c-4572-9838-f89267f42978",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d1ff1009-2aef-45a9-bcfe-3bc7dcb7d473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cbf46f-3d38-4b7d-a974-25fe521b3f34",
        "cursor": {
          "ref": "ee54e7f0-1e61-4c4f-96d8-d5f92690a95c",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3d99e9d0-72b3-421f-9541-36b8e8c23325"
        },
        "item": {
          "id": "83cbf46f-3d38-4b7d-a974-25fe521b3f34",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "90cc1d53-5042-416d-b470-17d8eca80c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79575289-0be0-47d2-8e54-8a6073fc4a30",
        "cursor": {
          "ref": "5e5c3417-a399-4afd-97d2-85183a6519dc",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "955dfdc5-fbb0-4d91-b68b-38270738fed5"
        },
        "item": {
          "id": "79575289-0be0-47d2-8e54-8a6073fc4a30",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "77ec60b5-b4f1-41b7-bb7e-43d0dfdf015a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed11761-526a-4aed-9ea9-20ae27c7c0e6",
        "cursor": {
          "ref": "8968cc2d-f5ff-482d-a929-dd47b0257a9b",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "19d37f27-d6cc-4e6a-ae22-f2a0dca3a170"
        },
        "item": {
          "id": "2ed11761-526a-4aed-9ea9-20ae27c7c0e6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e0ea2498-1551-4354-9002-863a4641d3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1417,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7676fe5-8f0e-41b2-a243-b701706a3e0b",
        "cursor": {
          "ref": "4933006e-6390-4bf1-a537-a2634cb05cad",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "74dba80a-03c8-4f7a-aa45-87226a614e57"
        },
        "item": {
          "id": "a7676fe5-8f0e-41b2-a243-b701706a3e0b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f1ff9429-0a1b-44ba-b8be-031a2acee6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1449,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d20f979-90da-406b-a4b6-3e715a4a9e38",
        "cursor": {
          "ref": "0b11b9d4-9562-4091-af35-6e32eb4cd33a",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c4017e0d-74e6-4d0b-889e-ade0502198ae"
        },
        "item": {
          "id": "8d20f979-90da-406b-a4b6-3e715a4a9e38",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fa92ced6-c9ac-425d-b4d7-ff64876146e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1276,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cfd84d-e53b-470f-a026-bd3fc68fdc71",
        "cursor": {
          "ref": "47babfc0-f313-446a-b334-9b99d47bf49d",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5b406d35-6db0-4d4d-afae-61a59e556cce"
        },
        "item": {
          "id": "c2cfd84d-e53b-470f-a026-bd3fc68fdc71",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "319248dd-1444-4bfe-abe7-fa82d6f8525b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1106,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f4e722-5db5-4faa-95af-a08dd97d49c1",
        "cursor": {
          "ref": "e6814dbf-c282-4805-a7b3-09fa7de5f144",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c7d55f79-20ac-4c09-9472-087760af7401"
        },
        "item": {
          "id": "53f4e722-5db5-4faa-95af-a08dd97d49c1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dbe0b846-adfe-48c0-ab82-f8c91f1b6afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80630d77-56cb-493c-9c86-9ff674ad7599",
        "cursor": {
          "ref": "99d8c2f0-2bd3-4371-bbda-6d4fd03d727f",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "01a0b357-ce0e-4ef4-a652-d59e1511a964"
        },
        "item": {
          "id": "80630d77-56cb-493c-9c86-9ff674ad7599",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "360897c1-1489-456f-9651-e74dd230f014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b857adf-c886-4528-8a2d-56cb7c2a1a92",
        "cursor": {
          "ref": "c1690923-74cf-4117-aa45-c992b8cf3355",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "013d6592-52a2-4cb9-af48-3d113d14e5c8"
        },
        "item": {
          "id": "1b857adf-c886-4528-8a2d-56cb7c2a1a92",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b4c79257-e0ae-487c-bd50-327a284850e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01236f2c-38fd-4ada-aebd-4c53e417e19e",
        "cursor": {
          "ref": "f4a518b9-5d05-4363-92af-35bb9d26b74c",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "574fc829-ab90-4b57-9d39-cbd527ad6eed"
        },
        "item": {
          "id": "01236f2c-38fd-4ada-aebd-4c53e417e19e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7a52d4d5-e61d-4027-a1ba-f3f6d9131bd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff752be7-dda5-45c7-9858-ed7dbf8ee99c",
        "cursor": {
          "ref": "bbad7bd1-39e3-4d97-8f40-1e55a8cc7ca4",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a17192b8-47b1-4c1b-bcf8-ac063ba510ab"
        },
        "item": {
          "id": "ff752be7-dda5-45c7-9858-ed7dbf8ee99c",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "60658ddd-cfac-4040-9efc-aba162c1b1c4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 809,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ecfe16-8230-4a14-ae15-7b5c46c81ae5",
        "cursor": {
          "ref": "3eab62fe-bdb4-40f3-873f-37d470f0fec1",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cf407a55-81e7-4c6b-a5e7-e52b596aa58f"
        },
        "item": {
          "id": "47ecfe16-8230-4a14-ae15-7b5c46c81ae5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ee282dd6-6326-41a8-84c3-ab3e8e95cb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ecfe16-8230-4a14-ae15-7b5c46c81ae5",
        "cursor": {
          "ref": "3eab62fe-bdb4-40f3-873f-37d470f0fec1",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cf407a55-81e7-4c6b-a5e7-e52b596aa58f"
        },
        "item": {
          "id": "47ecfe16-8230-4a14-ae15-7b5c46c81ae5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ee282dd6-6326-41a8-84c3-ab3e8e95cb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e418a9-6051-4869-9925-7ae5c6bc029a",
        "cursor": {
          "ref": "25a00413-0e5a-4e32-a10e-2b06644ad6c2",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ddae9290-40b5-4a3f-ab67-52db0c9b4ba9"
        },
        "item": {
          "id": "e1e418a9-6051-4869-9925-7ae5c6bc029a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e811a59e-d4cd-437f-bce3-2c6fb1bdb7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f9f59d-02db-46ae-b8e0-02079d6191a5",
        "cursor": {
          "ref": "ea9523fd-dc13-479e-8ec9-cf4a59d06fef",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0e76c529-918a-4ba1-85e3-63cbf800f0c0"
        },
        "item": {
          "id": "20f9f59d-02db-46ae-b8e0-02079d6191a5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1477bcfb-e04a-4af7-87ab-450e6c22f035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a5210e-30ca-4b82-a9c0-bed89f747f04",
        "cursor": {
          "ref": "0645d28d-9e24-400d-abbe-f5bc6f9db02c",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0de6ec41-96a5-4b1f-b206-bab00d5cecd7"
        },
        "item": {
          "id": "c7a5210e-30ca-4b82-a9c0-bed89f747f04",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e7be23c2-b704-4849-8cca-d3ef109e72a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2424,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e90b66-990b-4890-9b2b-2ed7e3596ca5",
        "cursor": {
          "ref": "f8080bfb-8562-4fe3-8fff-5efc9f24ac61",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "766a71de-4da7-4c8d-ad2e-3904a0a7a6dd"
        },
        "item": {
          "id": "b8e90b66-990b-4890-9b2b-2ed7e3596ca5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "648bffc6-e3bb-4a46-8fa9-37a488369440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2244,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e258ec95-05d7-4c61-803f-d985e6e0fc95",
        "cursor": {
          "ref": "207cb933-4f94-45c1-8536-7652a445d5a0",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f5c84c1a-4f6d-420e-ab1b-ecddaf63c4ec"
        },
        "item": {
          "id": "e258ec95-05d7-4c61-803f-d985e6e0fc95",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3b21a0a5-495c-4e38-93aa-3d4468bb13ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1856,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84651f04-0fc8-4566-8364-f1f411414e4e",
        "cursor": {
          "ref": "5d3b8f75-e4ac-41cd-bb21-7debfec0dd09",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0eee1417-58e1-4409-a67f-2afe681787d7"
        },
        "item": {
          "id": "84651f04-0fc8-4566-8364-f1f411414e4e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "41e98ac7-c20e-4f0f-91b7-775bec9ab325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1278,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3632c323-20f0-407a-ab36-22bb465c380d",
        "cursor": {
          "ref": "37de5af2-cad7-4f28-814e-60181ea6afed",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "64449801-12bb-4e77-ae7e-401043b36fcd"
        },
        "item": {
          "id": "3632c323-20f0-407a-ab36-22bb465c380d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a38bec10-7b8e-418a-9e72-0ccac3f73625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71753c47-7ef2-4532-8ef7-2b240923120d",
        "cursor": {
          "ref": "947b6090-0cc8-4b2d-aac0-01655e51b0b6",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f23ac87c-9dfb-4ebf-bb14-cc5bdd571b6c"
        },
        "item": {
          "id": "71753c47-7ef2-4532-8ef7-2b240923120d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0b45ba25-f76e-4f10-b219-e8284b9941a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b943ba9b-be7d-48a6-b48e-dac935cdd9af",
        "cursor": {
          "ref": "71c1cc15-de71-4ead-93d5-62b1dc3660ff",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "770ca8c6-4a42-4a33-a19a-cf4556568927"
        },
        "item": {
          "id": "b943ba9b-be7d-48a6-b48e-dac935cdd9af",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0fdc3873-853e-4cfe-b1f3-43d570565c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe019607-a81b-4a4a-bda8-d9b00e6a7d3e",
        "cursor": {
          "ref": "6348e232-f962-4e0e-b0f2-dd8579a1e610",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "473bfbea-cfcb-4849-8ecb-0cf81a501523"
        },
        "item": {
          "id": "fe019607-a81b-4a4a-bda8-d9b00e6a7d3e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e581149b-8632-458e-a454-8d9b0e9080c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c357d0-ae70-4809-8d6a-5bfe5cdfc81e",
        "cursor": {
          "ref": "fac1e473-64e5-4c4f-b81c-d635ddc0c2b3",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "07b0fd4b-4c56-481e-8d3a-43b7140af2c5"
        },
        "item": {
          "id": "a6c357d0-ae70-4809-8d6a-5bfe5cdfc81e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "986a4c21-fd8e-42b3-a905-2a67cf281ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5df02d-d20d-4dd4-a857-5cb3ab45d206",
        "cursor": {
          "ref": "bd28ffad-43f2-4018-b8a7-2994ec98477a",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4a652fc5-5e69-4e7d-ba1e-bb3a5f5b8607"
        },
        "item": {
          "id": "ee5df02d-d20d-4dd4-a857-5cb3ab45d206",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4031d252-d01e-4b6c-98e2-be4d16307f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2a6b7c-1a3c-4c38-b54a-500e58201832",
        "cursor": {
          "ref": "6a3ffa1e-abef-41e0-91e3-3d53222805ca",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b6d81b28-4223-4a0d-8a34-926b4a67000b"
        },
        "item": {
          "id": "ac2a6b7c-1a3c-4c38-b54a-500e58201832",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "712d7f71-e095-406b-98f2-165ea9dddf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7032c49d-7ca8-48b9-bd9d-7242a731497a",
        "cursor": {
          "ref": "6fb5ed15-5c6b-424f-8bab-ce3cbe3e1a66",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "709a3f2a-d603-4197-86c9-25cfb75395a8"
        },
        "item": {
          "id": "7032c49d-7ca8-48b9-bd9d-7242a731497a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7fb561a2-8d26-4b00-869d-ca5119ae49bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a4a3dd-55d4-48a0-99b0-e275d4f35373",
        "cursor": {
          "ref": "4b39dbfd-c6fe-4a41-ad15-383152cd7b04",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "24b878a5-ea4a-4144-b921-7f637ac8d033"
        },
        "item": {
          "id": "89a4a3dd-55d4-48a0-99b0-e275d4f35373",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "01021cc7-0878-429c-ab0a-04a405f180cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30ca31e-1b57-4b1d-819b-e030ccf44305",
        "cursor": {
          "ref": "045b5790-f181-4899-b378-65ae998a7a79",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b551e650-4630-4f5c-a71f-036c341c2342"
        },
        "item": {
          "id": "f30ca31e-1b57-4b1d-819b-e030ccf44305",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bab4888c-fbec-4afd-a67f-91cfceafd18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd4de63-87d0-49fd-af35-e4d93bd14098",
        "cursor": {
          "ref": "eb75b21b-0eb8-4af5-8cf4-fcc822dfbf20",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bc7bce9f-9097-4488-8177-8b28197530a5"
        },
        "item": {
          "id": "8fd4de63-87d0-49fd-af35-e4d93bd14098",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9e4be3ba-d06a-45c4-b842-107f83c59272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3d268f-9865-4913-8a6f-4f4e311c854e",
        "cursor": {
          "ref": "74e74d39-d5d7-4f58-9682-257b6ae1fe17",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2fa5e96f-e8ac-4c43-a657-ac1c980a5d91"
        },
        "item": {
          "id": "8b3d268f-9865-4913-8a6f-4f4e311c854e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f621f29b-3578-424e-9271-bbf112a1149d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31105b4-2003-41f0-a627-22e611934cf9",
        "cursor": {
          "ref": "1ec8d21b-f823-446b-b3ce-88ba8264a02c",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2cc1c3bc-2787-461d-b22c-208670cdbc4c"
        },
        "item": {
          "id": "b31105b4-2003-41f0-a627-22e611934cf9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5255e62e-e380-4b14-bf5a-97749228d6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51722921-81e4-4676-8a14-cf2fba98a953",
        "cursor": {
          "ref": "41e012ca-ecfa-4007-808e-c9a09ab63a01",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9c421904-afbc-4eac-8a30-c2a2e2c9b0d8"
        },
        "item": {
          "id": "51722921-81e4-4676-8a14-cf2fba98a953",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "79766200-48e1-4cef-9f65-f5ff2e48475f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e72e679-613b-41b9-bd4a-4a191238df34",
        "cursor": {
          "ref": "8b6bf93b-5e68-4390-80b9-3d01d1109d53",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "82d3d74b-23fd-491e-abd2-7c744fceef45"
        },
        "item": {
          "id": "2e72e679-613b-41b9-bd4a-4a191238df34",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a454c79d-d8a1-4a79-9a39-2e3873d05a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d36e4f-79c2-471d-bb0c-af8e754844c2",
        "cursor": {
          "ref": "91cd8934-5017-40a0-85dd-ccb52c1b4700",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "12598fd6-8efb-4c9a-af38-e356e074c830"
        },
        "item": {
          "id": "55d36e4f-79c2-471d-bb0c-af8e754844c2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f059c038-cf6e-4cea-88f9-19ae9ec3ea71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e83204f-c4c2-430c-a828-5b6fb919d6b9",
        "cursor": {
          "ref": "0f8763e3-3ac2-4dc4-95e1-98184626c5f7",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "18898658-3513-44e1-a334-af7e4f3f3a6d"
        },
        "item": {
          "id": "3e83204f-c4c2-430c-a828-5b6fb919d6b9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3de9b8fa-9573-468f-96dc-0c3bcff57fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2bf5f9-28b4-4bea-b4fc-21edefd85007",
        "cursor": {
          "ref": "464444c0-f744-4ee4-ad26-c03d6a5abc69",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "822b7237-c5a5-499b-ab1f-1a2805470931"
        },
        "item": {
          "id": "be2bf5f9-28b4-4bea-b4fc-21edefd85007",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6de861a9-c217-4d8a-81ce-b09069a03ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a1192f-c8cd-453f-a261-373e5b4f8e0d",
        "cursor": {
          "ref": "acadb8b2-8b94-4fa5-a099-8888ac435353",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0c572d1c-9108-476a-b031-14dfd1faf0fa"
        },
        "item": {
          "id": "19a1192f-c8cd-453f-a261-373e5b4f8e0d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0eb024ad-f980-4c98-8136-5a3c1e40adc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f006adba-97b6-4c34-89e8-bf13a184bd65",
        "cursor": {
          "ref": "01e9c164-0e60-4eac-a047-e7b20504d91f",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "17c44552-f850-490c-9c69-8dcbc76c3fc0"
        },
        "item": {
          "id": "f006adba-97b6-4c34-89e8-bf13a184bd65",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6bcae79d-3425-4410-be50-9ecdd23285bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013659da-b0d1-4bcb-b2a1-dbf1c1788046",
        "cursor": {
          "ref": "4e78d4a1-5202-41a3-ad20-73147c6e292d",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "05b13184-eb6e-4a4d-b935-c8a21933dadb"
        },
        "item": {
          "id": "013659da-b0d1-4bcb-b2a1-dbf1c1788046",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "18ce39fe-1ed6-4768-a4e0-d63f743dc0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0533d7ed-5941-41db-b69e-2edb69a4b07c",
        "cursor": {
          "ref": "cb414387-d51f-48f1-8841-e4653064bb7c",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "152c36b0-b1c8-4df4-95f2-987bb89eaad9"
        },
        "item": {
          "id": "0533d7ed-5941-41db-b69e-2edb69a4b07c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bbf92e6a-ee06-4e6c-b945-4888ba5e352e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e296b9-19f7-4607-b641-0c4eb8b8a158",
        "cursor": {
          "ref": "bc9320d0-e6b2-4ec2-a189-c7a4828289a6",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f3063b4b-1b27-4d44-b059-52f6ab053e9b"
        },
        "item": {
          "id": "66e296b9-19f7-4607-b641-0c4eb8b8a158",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fa140af6-4867-45ea-9389-24d36a217285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6127bc77-745b-42ff-bfc1-c661a9996d68",
        "cursor": {
          "ref": "8b1c33ac-8c1b-458f-a802-13f270dd7cda",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1a100172-4f65-4398-954d-4a13d9237daa"
        },
        "item": {
          "id": "6127bc77-745b-42ff-bfc1-c661a9996d68",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ac8ccfc4-3546-4b9e-884c-5472973720c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3355316c-a018-4fb1-bd60-a5e995440175",
        "cursor": {
          "ref": "3b198059-ec27-4c48-aac8-c4571cbba2e6",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "28d2e517-795b-4afa-9c54-bcb4e2623c0f"
        },
        "item": {
          "id": "3355316c-a018-4fb1-bd60-a5e995440175",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8d7eef8c-591b-4fc4-a133-a694284b4e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff07d38-92ab-4e19-bb49-33fadc79d95d",
        "cursor": {
          "ref": "33493f88-954a-4870-808e-1d98b8ab84b0",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4db1916e-04f1-4b41-8c0b-58438e1c51fd"
        },
        "item": {
          "id": "8ff07d38-92ab-4e19-bb49-33fadc79d95d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d2f0b806-50f2-4c7a-b0fa-a2658f5bcf21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d4c712-8290-4a23-8cd3-1579bb9d3568",
        "cursor": {
          "ref": "24d06d8b-9a2c-4dd8-b453-ac235555b71b",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4d1dad43-1907-493a-877f-d5715519baef"
        },
        "item": {
          "id": "e4d4c712-8290-4a23-8cd3-1579bb9d3568",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "626f6022-b7eb-42e4-b6ba-dcfc94175d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51aae03f-2269-4241-baad-e0b654eec184",
        "cursor": {
          "ref": "92ec2cc9-3200-4e24-9042-2aae195ebec7",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5392f48e-8be6-4533-a1dc-6f314e7f9f9b"
        },
        "item": {
          "id": "51aae03f-2269-4241-baad-e0b654eec184",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f0cf1294-f5dc-421e-82fa-427d5ba16624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecec52a-69df-49b2-b0b3-c6d841cf8a1c",
        "cursor": {
          "ref": "aca930ab-5858-4d43-80ca-5d1949b29ec4",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "90ab948b-dd56-401e-83d7-b936d7119a08"
        },
        "item": {
          "id": "cecec52a-69df-49b2-b0b3-c6d841cf8a1c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d358a342-f7f1-4e4e-8712-f3bb64e00b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48932a1d-4f0f-4d95-b7d8-72fd15576e63",
        "cursor": {
          "ref": "f9adb14a-c391-416c-b0e8-1ee9ccc34ca4",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "84469aff-7c84-45bf-922b-b74153df3f8e"
        },
        "item": {
          "id": "48932a1d-4f0f-4d95-b7d8-72fd15576e63",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e8229f83-76d2-4b44-8560-e2d095db7ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d40469-f7e5-429b-9b4a-2d548a46b8a2",
        "cursor": {
          "ref": "f619935a-fcae-498f-ac10-d5a24f4e5d34",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5d788559-cbe0-4b27-8c31-e2c390feae14"
        },
        "item": {
          "id": "96d40469-f7e5-429b-9b4a-2d548a46b8a2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b601900b-8e3f-4698-9c74-303b35428d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44070df3-9b4d-4f7c-a816-7c64be5c4dbc",
        "cursor": {
          "ref": "258dc497-1df5-421b-ac7f-f262ab3e0422",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "11ef20cb-193c-467b-9131-f1ed01223b26"
        },
        "item": {
          "id": "44070df3-9b4d-4f7c-a816-7c64be5c4dbc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "008cd9b1-f954-424c-9606-801db163c114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3dcb1d-db82-4507-aa1b-ece9da7cddef",
        "cursor": {
          "ref": "ce97522d-388c-4894-8fae-6d82d214bddb",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "56bf709d-4055-4745-8620-cf438ce399aa"
        },
        "item": {
          "id": "9f3dcb1d-db82-4507-aa1b-ece9da7cddef",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c746cd0c-0082-4cbc-a053-7ce436ff0da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e34502-2ba9-4c6e-afd4-8c31daa2f987",
        "cursor": {
          "ref": "b91e571f-5972-42b0-82e4-900820d197c2",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2e38efaa-11bd-4208-a694-c2bc8b7b6e0a"
        },
        "item": {
          "id": "26e34502-2ba9-4c6e-afd4-8c31daa2f987",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "376c1063-e74e-48cc-8903-b3997d4e0b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2e66f9-244c-476c-9b1c-7ea707c8d943",
        "cursor": {
          "ref": "a0a081d2-6b90-4efc-8380-8c07bf17eb6f",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "851dd54b-b393-44df-ae97-42140be7e6ad"
        },
        "item": {
          "id": "8f2e66f9-244c-476c-9b1c-7ea707c8d943",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5f82f189-f1a1-406f-87d2-80d2b1fed6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36513821-a335-4149-9c15-dd5f4c06dc00",
        "cursor": {
          "ref": "52c830dd-228d-4a6e-97ea-17a8f281a872",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "86557671-5ff0-44d4-9fd0-f80ceacc65b8"
        },
        "item": {
          "id": "36513821-a335-4149-9c15-dd5f4c06dc00",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "894fe2a8-ffc8-4cb0-ad16-470f0ef7c0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4720443-ec19-4b75-8fe8-91da28f14362",
        "cursor": {
          "ref": "95784e99-319b-45c1-a05b-cd9f6cb16fec",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0b9e9e9a-1f67-472b-83b9-02b857f565b6"
        },
        "item": {
          "id": "e4720443-ec19-4b75-8fe8-91da28f14362",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bd3cb756-a5e3-40e7-8d26-8dafbb6231ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23b279f-2174-4c3a-9fa4-1602db10bc2d",
        "cursor": {
          "ref": "0224d5d8-3a8b-4a5d-9d41-5d23f4e8a88d",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b35b3b11-56d1-4d85-adba-cf13475eaa2b"
        },
        "item": {
          "id": "d23b279f-2174-4c3a-9fa4-1602db10bc2d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6963bd35-c0d2-4722-bc20-40509e805765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31d80d9-96b3-4b3b-8404-5a223b765aaf",
        "cursor": {
          "ref": "6ce1d8e4-2dc1-465e-8aca-8bb2cd6734cc",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c893c7ad-fb2d-48ce-b58d-591b7cf441ec"
        },
        "item": {
          "id": "b31d80d9-96b3-4b3b-8404-5a223b765aaf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bc5248b0-da1b-4e03-b6bf-8c270053c42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75034c12-d197-459c-a067-40be08d4b48c",
        "cursor": {
          "ref": "ae6fc07b-5b16-4509-b0b8-5df1a2b23136",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "eae7fe7e-a96f-4f9d-af25-f0523d6a71e2"
        },
        "item": {
          "id": "75034c12-d197-459c-a067-40be08d4b48c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7be9c370-3cfa-4e5f-9df5-c52689a52856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6fe76d-c26c-443c-9591-871e8692d182",
        "cursor": {
          "ref": "b1032516-4bda-4891-86b7-762932b4df0f",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2a7937a3-0f93-46e7-bd59-33895401f452"
        },
        "item": {
          "id": "ce6fe76d-c26c-443c-9591-871e8692d182",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2f2988a3-982f-44cb-9d42-5eb8128e58d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32579f04-e59a-478d-9919-08b928d7fb4a",
        "cursor": {
          "ref": "cebaba74-b1d7-464d-b07e-abfbd78a4149",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9c7bbd6e-fd98-4abe-8f8d-4d4b76f5cfcc"
        },
        "item": {
          "id": "32579f04-e59a-478d-9919-08b928d7fb4a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "25651924-2671-4f93-a914-a47310cd213c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6242d44-e1e4-4d46-8101-f62845148c2e",
        "cursor": {
          "ref": "3b5d2387-809f-4450-88cf-a17ab9965f42",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f69fc219-9692-4b00-b323-314085deb7e2"
        },
        "item": {
          "id": "b6242d44-e1e4-4d46-8101-f62845148c2e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "680566fb-7542-461c-be9a-da90ce9a2c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf82742-d8fa-4f8b-9f22-8040b532d4ae",
        "cursor": {
          "ref": "22b6ac8b-7e22-452f-ba0d-6faa30cd103a",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "eac5a59d-4362-4277-a448-3d813e6f1d2e"
        },
        "item": {
          "id": "3bf82742-d8fa-4f8b-9f22-8040b532d4ae",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "480b1537-20f3-4b1c-b922-81fa56ac2cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3392a3b0-ea07-4e1f-837f-07b8f351b4e4",
        "cursor": {
          "ref": "d6d1c183-e3b2-4634-8838-2593d67570d3",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "47cb37f5-6af3-4b52-b2cc-23381e7b031d"
        },
        "item": {
          "id": "3392a3b0-ea07-4e1f-837f-07b8f351b4e4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "902b4507-bdd3-42d4-81ec-4d1f77e79d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269d11a5-765c-4c78-808e-b49a793b842b",
        "cursor": {
          "ref": "b14e9581-ce06-4b84-aabd-09a552327736",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "887db7f1-a666-4268-9987-ed00a05cbc49"
        },
        "item": {
          "id": "269d11a5-765c-4c78-808e-b49a793b842b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6cb7b97d-38c3-4763-950a-2807d6d735ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a67a556-f06b-4760-b47f-c5cdfea6aecd",
        "cursor": {
          "ref": "3b2ac7b8-63d5-46d8-94e7-831386d5ed77",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fb0ea462-b387-43a8-ae6e-53b5bc215a76"
        },
        "item": {
          "id": "4a67a556-f06b-4760-b47f-c5cdfea6aecd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f652a48c-59bc-4893-9aa2-b9d11c4ce3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d507e6-b56f-4664-b7a1-1baf7f1c901e",
        "cursor": {
          "ref": "3bc70c64-9c22-406e-88e7-8cac3f2b9c89",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "62168a7f-5120-472c-8143-5b1851d56b56"
        },
        "item": {
          "id": "e1d507e6-b56f-4664-b7a1-1baf7f1c901e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4f0310ce-508d-4935-ae19-689bdfaf1531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b91b74-7772-4a29-808f-395ef24c256e",
        "cursor": {
          "ref": "8b8e9f58-e04f-4330-9d71-e0262891225a",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "85606a86-1598-49f7-bdc3-81b22f973f87"
        },
        "item": {
          "id": "c6b91b74-7772-4a29-808f-395ef24c256e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "41f14584-c8c8-4569-8e83-1dd8341fc707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72d202a-c590-4072-aaa1-7283a2f336f3",
        "cursor": {
          "ref": "62bd91c4-ef3b-4c75-ad0e-95fc93580c73",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "61a58315-a31f-4d8d-8c28-9a3d064dee31"
        },
        "item": {
          "id": "d72d202a-c590-4072-aaa1-7283a2f336f3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7b5915cb-0a32-4bcb-a7c1-9d5561c83d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc2f3cd-9acb-476c-93e1-80c6dae038aa",
        "cursor": {
          "ref": "c4ba3830-d120-4362-865c-a11954bccad6",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a5933c64-fd47-48b8-afaf-b01014c349de"
        },
        "item": {
          "id": "bbc2f3cd-9acb-476c-93e1-80c6dae038aa",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "dc3b82ab-5bec-4bc8-b3a9-8b7f55a4a5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4b00b9-2df0-49be-9cd1-669dced136c9",
        "cursor": {
          "ref": "d57fbc8d-44be-43f3-b431-b095fea59b50",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "260ffdbf-8d6b-497e-bcd9-ee2f6db0bb91"
        },
        "item": {
          "id": "1e4b00b9-2df0-49be-9cd1-669dced136c9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a4474cba-cea7-4ef8-8c3a-1806e87843d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac2d696-9262-4486-b4dd-6d5c33f21b5d",
        "cursor": {
          "ref": "abbef925-10cc-4414-8efc-1e679992d96f",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8152c781-9e6a-49e8-b9e6-854ed10b7d1b"
        },
        "item": {
          "id": "8ac2d696-9262-4486-b4dd-6d5c33f21b5d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "800ad809-00d8-4227-850a-0c21dea10f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1322,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e2b35e-d4af-41a1-bb5d-89649f923c97",
        "cursor": {
          "ref": "a7ebc5e4-3e14-4b19-b633-444365b77b8a",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "31c59798-ab57-4488-9acd-464d403433d5"
        },
        "item": {
          "id": "a8e2b35e-d4af-41a1-bb5d-89649f923c97",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fb643519-351e-476e-a5d7-8d1e5af0cb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2450,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052cee96-da3f-41ca-9d76-062f89f575d5",
        "cursor": {
          "ref": "6d10637e-8f2e-4db3-bfa3-e7afb0a1ce0a",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "576b7c28-6191-46f6-9f54-88f69ee14f2e"
        },
        "item": {
          "id": "052cee96-da3f-41ca-9d76-062f89f575d5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a205f230-bcbd-442e-9fa9-9f89e41aa866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2262,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb36316c-c641-4fc4-a757-505bb51066e8",
        "cursor": {
          "ref": "efd21131-8b3d-4ce9-a1b6-a4ba87628f56",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8254c1a2-d658-47ba-a85c-01a08955c28a"
        },
        "item": {
          "id": "eb36316c-c641-4fc4-a757-505bb51066e8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b9b57b18-5aa7-4b04-8187-1287c7309731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1824,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6604a94b-c7f3-4745-aecf-1ea4eaa10f7d",
        "cursor": {
          "ref": "c2ff7d4b-24f6-4227-8d8c-631a4ef815d0",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a39e08ed-1c80-4b5f-8b88-bf3dde017dc8"
        },
        "item": {
          "id": "6604a94b-c7f3-4745-aecf-1ea4eaa10f7d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d3e15b9a-cb5d-467b-ab72-cdf2f4b30900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1027,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e802c21-3802-432f-ad27-6f5967231159",
        "cursor": {
          "ref": "de37dfa7-dd5e-4e71-ba4d-3739f0551137",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "129b47b2-4619-4a1d-b62a-26886098b5a3"
        },
        "item": {
          "id": "2e802c21-3802-432f-ad27-6f5967231159",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8fc4bf5f-adc5-4139-aae5-1786b4554627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e13952-9061-4cca-af0a-3511f68afbbb",
        "cursor": {
          "ref": "87ef42fc-3be2-4e60-853b-800e0522b396",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2e2ccc78-4bd5-46fe-81c9-c9062178aca4"
        },
        "item": {
          "id": "00e13952-9061-4cca-af0a-3511f68afbbb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7a87cd05-fdd2-41fe-9100-a6bd0c30f445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498f03fe-4952-4f3b-82ac-eeb3d3609f17",
        "cursor": {
          "ref": "498af7cc-2efe-4b8d-8328-d207b52a9354",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "71b6e99d-5ae4-4147-8950-8be30dfde18e"
        },
        "item": {
          "id": "498f03fe-4952-4f3b-82ac-eeb3d3609f17",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c962ccd8-8e5a-4328-bd88-12706ac661bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f512ae1-50e5-4ce7-a6a6-390506cc5665",
        "cursor": {
          "ref": "9d7c8704-4575-41a3-b2f0-5eabf26bbbca",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a6ecc75a-f846-468a-9e23-c96a5e38cf3c"
        },
        "item": {
          "id": "2f512ae1-50e5-4ce7-a6a6-390506cc5665",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f74779b3-1b4a-4078-b85a-c314031659d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089f8ca4-0538-47fc-8818-0f865383262c",
        "cursor": {
          "ref": "5b1be1ba-0b0d-4262-a789-429ceb86371d",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "19f77efd-dd1a-42a8-8986-a539f6322edc"
        },
        "item": {
          "id": "089f8ca4-0538-47fc-8818-0f865383262c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5e7f4b16-5ca6-4e26-99be-ce89922aa4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810569ea-22b4-45e4-af7c-087b4b898664",
        "cursor": {
          "ref": "1f65ea44-f335-446a-9ebc-7cff5f2c11fc",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0d20689b-049a-4fc4-bd96-2faa610de16e"
        },
        "item": {
          "id": "810569ea-22b4-45e4-af7c-087b4b898664",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "975e996c-e9f6-40c3-99b9-94f5b81e506c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cf642e-625a-416c-b290-7e4297e795a5",
        "cursor": {
          "ref": "8c2ebd4d-9392-4e55-95dc-63d259f15474",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "133046dd-adff-4ea5-9345-182f5325760a"
        },
        "item": {
          "id": "19cf642e-625a-416c-b290-7e4297e795a5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8e524c8c-cbe2-42bc-8139-02209fffa5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac7839e-df43-4bf3-befd-b8f326d3f4c8",
        "cursor": {
          "ref": "f17c6a0e-9083-4b00-9811-ce9fdd74e5c7",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a65929d1-2a9d-4732-98c1-bc03d5793d46"
        },
        "item": {
          "id": "7ac7839e-df43-4bf3-befd-b8f326d3f4c8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b5eb2afd-9363-4d7b-9707-9209c3aab587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cafb77-0f26-4959-b105-611d57f0c6ce",
        "cursor": {
          "ref": "f78fb081-59d3-4865-8647-59da2863d351",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "640e7882-ee24-4c62-acec-475586dc6eb3"
        },
        "item": {
          "id": "94cafb77-0f26-4959-b105-611d57f0c6ce",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5fe82894-5f78-46f3-afde-31aa785a9fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b841d135-67ac-47a1-84f0-9ac2d84cdb7d",
        "cursor": {
          "ref": "4d80683f-f05c-4d1f-9e05-c5a14b0251f7",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "53602593-4897-47e1-a669-204e37334421"
        },
        "item": {
          "id": "b841d135-67ac-47a1-84f0-9ac2d84cdb7d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a8b9a21c-8b4a-4bbe-b79d-6067a22b1539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cc4ca3-9dec-4b83-adc9-9a3c74a70d84",
        "cursor": {
          "ref": "95cc487d-018e-4244-aa65-868a3b70dfed",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c11a76ed-7048-40a4-bbc3-8793cecca31b"
        },
        "item": {
          "id": "e0cc4ca3-9dec-4b83-adc9-9a3c74a70d84",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f7e6559a-99e7-4245-b494-1ad57d04b960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1093,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c72d180-d6d6-4733-a9f1-cfb5655300a8",
        "cursor": {
          "ref": "0e0ec931-9653-4b41-b7dd-d308b58b8f6c",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d1aad540-9123-4e42-86f7-8e7d03fc532d"
        },
        "item": {
          "id": "3c72d180-d6d6-4733-a9f1-cfb5655300a8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b25c7165-bd6f-477d-8b94-ba539b168ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1270,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bfdd86-6a2d-4ca0-a17f-6025eb2f1129",
        "cursor": {
          "ref": "738ecfef-347c-4369-929a-f02cfe329ba4",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a239a8a7-1e64-4875-b433-6a65e2ba7f12"
        },
        "item": {
          "id": "51bfdd86-6a2d-4ca0-a17f-6025eb2f1129",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e570d9e4-330a-4b11-aad3-5fa7338c3177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1004,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c353ab34-8a2a-43ad-99b1-1883904ad64f",
        "cursor": {
          "ref": "1c77b605-52c1-4adc-be43-3a782d36ef06",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7bf5a0bc-8a7c-461e-97fc-725b458ad432"
        },
        "item": {
          "id": "c353ab34-8a2a-43ad-99b1-1883904ad64f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0093aaac-5ada-4f93-873d-7ad4dfceb0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd132ed-a5ab-4091-b6c7-4eedca370ad0",
        "cursor": {
          "ref": "763f699f-5491-42c7-9a4b-10083b610db5",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "255a4666-0dfe-4dd2-ba7a-4546c6cea1e3"
        },
        "item": {
          "id": "0dd132ed-a5ab-4091-b6c7-4eedca370ad0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5124ec5c-e93e-4a37-88d0-6d5227e4c4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e1a096-1238-4cd7-8798-07c27cb9bf6a",
        "cursor": {
          "ref": "dc892a63-aaca-424d-8522-be558f3ac476",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ff3ac3f7-f252-4202-ac6d-60326a89c076"
        },
        "item": {
          "id": "58e1a096-1238-4cd7-8798-07c27cb9bf6a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "32adad07-3aff-4642-9e2b-6e0eb50d9873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731205c9-a72a-450e-82bd-815f0a88c4e0",
        "cursor": {
          "ref": "aebfa9a4-84e9-4bb2-af55-d5fade83f34f",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6d320cbc-3afb-4b7b-817c-6adc4144cc24"
        },
        "item": {
          "id": "731205c9-a72a-450e-82bd-815f0a88c4e0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "99baddde-d7ec-404b-aa17-84de2bb7bd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adb09c4-7201-4947-a6d5-f97017be3cfa",
        "cursor": {
          "ref": "edad3f19-7080-4bf6-8d27-3eb2366b5640",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c2853601-d245-41e1-b135-3f8f574abb98"
        },
        "item": {
          "id": "5adb09c4-7201-4947-a6d5-f97017be3cfa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5e09def4-4463-4b07-ad2d-bac25c20a365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c83e44a-8f21-403b-a233-9008b2d31a7b",
        "cursor": {
          "ref": "9d61eb55-8ecb-4d82-9072-f8444e4f7078",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b5dcf929-e47a-4325-ba99-b63acb5072d5"
        },
        "item": {
          "id": "8c83e44a-8f21-403b-a233-9008b2d31a7b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9c3f5606-22ae-42fe-9853-f11964cbca9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bfef83-97c4-4aea-a9e3-9ca8ab08b2ef",
        "cursor": {
          "ref": "7d0b4d31-f7f5-4e98-a95d-3b1e57322899",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5da33b54-4867-4b25-b703-ccce6ba67ee7"
        },
        "item": {
          "id": "a3bfef83-97c4-4aea-a9e3-9ca8ab08b2ef",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cc6f1d69-08c0-4681-91a1-d3f2e10ebab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835ce9f2-47ac-4026-a36e-c48fb9eef3d1",
        "cursor": {
          "ref": "7ad3de40-dac8-45ee-87c3-ee28a6026ae0",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c619a2d9-b19d-45a8-a0e1-df87120fd09f"
        },
        "item": {
          "id": "835ce9f2-47ac-4026-a36e-c48fb9eef3d1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "82f33304-d2e7-4f00-a8a1-5e0c1712a5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b274cb1-0370-4bf3-b54b-0957d164b3b6",
        "cursor": {
          "ref": "c3dddfe6-4e75-441c-adcc-29f40be71d13",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "23a1dd1b-37a6-47d4-95be-c6a24b8d0f28"
        },
        "item": {
          "id": "2b274cb1-0370-4bf3-b54b-0957d164b3b6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2d16612c-c7ac-4365-a732-bb40e46d5d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4970af94-1dbd-44c8-ae84-f1c6b15fb2a1",
        "cursor": {
          "ref": "25dc06c5-d450-4322-a5e3-ea15522bfac7",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cd518552-d71e-4e24-b8da-1275c5ffbdc9"
        },
        "item": {
          "id": "4970af94-1dbd-44c8-ae84-f1c6b15fb2a1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5b152468-11ef-449b-8569-86cef8150422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac37126-b1eb-4ef9-8ddc-3753d8fcf723",
        "cursor": {
          "ref": "20e59cda-a783-4586-a71a-c8032639e6fb",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2519c9a0-cf3f-42a9-b2ca-369cb9cfae6d"
        },
        "item": {
          "id": "7ac37126-b1eb-4ef9-8ddc-3753d8fcf723",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f2cc49a5-cd23-4255-a847-a17e7106d31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b619c2-3c89-453d-9f8d-534e632a4815",
        "cursor": {
          "ref": "d8fd5aa0-7dd8-4a32-a310-54660d49e609",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "caebe140-9caa-44f5-97b0-32cf706e01e4"
        },
        "item": {
          "id": "22b619c2-3c89-453d-9f8d-534e632a4815",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4320ff7a-2a9b-4dbd-8b66-f5debcde679c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cff1ef-9b85-4516-bc90-b7175c398161",
        "cursor": {
          "ref": "990d7ce7-db21-4fa5-98b4-5a8617205661",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e4c5b415-ea07-4e8b-b975-d8b1edc4109d"
        },
        "item": {
          "id": "60cff1ef-9b85-4516-bc90-b7175c398161",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "05491cf7-ba38-46e3-9a21-4ff83c19c00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e5ae17-58c3-4ece-8223-f35cb4a4529d",
        "cursor": {
          "ref": "ab73b45d-a1f2-475e-ae2f-3ea881528850",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9459d168-0730-4fef-a3a4-17326d7667ea"
        },
        "item": {
          "id": "e6e5ae17-58c3-4ece-8223-f35cb4a4529d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a32b86dd-f987-4f69-83d8-8d732fb66a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe965da9-051f-4a44-a44f-24fe731e72f2",
        "cursor": {
          "ref": "9b5c8fa1-91f5-45c4-b217-da938f94ea13",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1a7adea8-df7d-4d1d-a606-c7f839aff98a"
        },
        "item": {
          "id": "fe965da9-051f-4a44-a44f-24fe731e72f2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "52c30150-34f5-4b3d-a981-f1051d0b0527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3764f0a0-b887-48d0-9871-b1d2fb21d48a",
        "cursor": {
          "ref": "8989ca3f-68dd-4e22-8a92-63e2297f51a2",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "32c161a2-e1dd-4d3c-8591-36833a2493ca"
        },
        "item": {
          "id": "3764f0a0-b887-48d0-9871-b1d2fb21d48a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b8fafcb5-7c2b-4162-a24e-53aee282ee55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670dc84e-0b66-4a09-8482-2db2e855db9f",
        "cursor": {
          "ref": "0689a411-e77e-425e-9730-e99ea6ef15a5",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6c607acf-55fe-44f8-b41c-4a927f3c6202"
        },
        "item": {
          "id": "670dc84e-0b66-4a09-8482-2db2e855db9f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "247b76f8-1e90-40c0-8720-a456fccf5b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f267002f-cb8e-4bd2-a3de-4932e75362a1",
        "cursor": {
          "ref": "ce7ab431-73c4-48d2-ad11-b1c8e5447c50",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "60ed8356-e022-486e-8d0c-dea4a9b2ec09"
        },
        "item": {
          "id": "f267002f-cb8e-4bd2-a3de-4932e75362a1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "33874b7d-aaa6-4087-9713-eb3da13e1cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d648242b-b6ec-4515-8898-4e7b6ab0a2f0",
        "cursor": {
          "ref": "eaf7d020-19f0-4cde-a997-3c6d86d561ce",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1fece259-5163-45bd-a55a-82b727084c21"
        },
        "item": {
          "id": "d648242b-b6ec-4515-8898-4e7b6ab0a2f0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "27179aa4-c30e-408b-97bb-b71d26593459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3e7084-a877-4708-9038-e15615abf7d7",
        "cursor": {
          "ref": "77c411da-bed7-4754-bcf6-175ba3dcba8b",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4e4cf269-4d5a-4938-ad1e-317a24c29213"
        },
        "item": {
          "id": "4f3e7084-a877-4708-9038-e15615abf7d7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3a4a81b5-6b17-47a3-9acc-8d845428a29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2dc979-dbdb-4223-8625-04b7ca6b70d0",
        "cursor": {
          "ref": "a8ba808d-ebef-4b93-95b8-c1dfd09741b0",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2dca7184-76d9-43d8-9618-d8c994e5ce28"
        },
        "item": {
          "id": "2b2dc979-dbdb-4223-8625-04b7ca6b70d0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e197be04-9a58-4cb7-9cbb-321248783c2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f621cd3-5bc9-4ba4-a706-dcac26c62199",
        "cursor": {
          "ref": "b3de362f-3baa-44d2-a930-34ad30cddbd1",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9aedecdb-01b9-4466-b2ea-06f46ddaf47a"
        },
        "item": {
          "id": "6f621cd3-5bc9-4ba4-a706-dcac26c62199",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "a1a19964-8a2f-49e4-a9b5-f825b4b4cd68",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 622,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff7d77a-86b4-42ed-bd32-a6c4562804c8",
        "cursor": {
          "ref": "d4d34bf6-a954-4de3-89c0-15f76db095c6",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1b5b70fd-0b24-4b35-98a4-d4757986592b"
        },
        "item": {
          "id": "0ff7d77a-86b4-42ed-bd32-a6c4562804c8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d02a3a2b-2f14-4983-8452-a136dcf934ab",
          "status": "OK",
          "code": 200,
          "responseTime": 707,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d99bab-8fc1-4d19-a602-6efe23d8aa1a",
        "cursor": {
          "ref": "32e9035d-9b02-4747-91f2-4cdc82ec5ad5",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0535988f-24f8-4750-9de7-6f9c8f544e80"
        },
        "item": {
          "id": "80d99bab-8fc1-4d19-a602-6efe23d8aa1a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3b23da70-038b-4346-9a6f-b533a880775d",
          "status": "OK",
          "code": 200,
          "responseTime": 1796,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "374e8f2c-ce28-4152-b8f0-a2b781fe8280",
        "cursor": {
          "ref": "82bb47a0-bd5f-4049-a806-3a4e34460e96",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "89b77331-8db9-4db9-9707-3af761f6098e"
        },
        "item": {
          "id": "374e8f2c-ce28-4152-b8f0-a2b781fe8280",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c414d4ae-f1c9-46b1-a0d0-978b5a3dd122",
          "status": "OK",
          "code": 200,
          "responseTime": 1834,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "053debc0-989b-46d1-862e-f00a8aa20d31",
        "cursor": {
          "ref": "ddd03b81-44bc-4036-87b9-1fe5c024d4a8",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "faf29b07-c727-420f-9e96-51a2d119a66a"
        },
        "item": {
          "id": "053debc0-989b-46d1-862e-f00a8aa20d31",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0ba4a92a-d20b-4fcc-9bee-77899b4f9ebf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053debc0-989b-46d1-862e-f00a8aa20d31",
        "cursor": {
          "ref": "ddd03b81-44bc-4036-87b9-1fe5c024d4a8",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "faf29b07-c727-420f-9e96-51a2d119a66a"
        },
        "item": {
          "id": "053debc0-989b-46d1-862e-f00a8aa20d31",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0ba4a92a-d20b-4fcc-9bee-77899b4f9ebf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053debc0-989b-46d1-862e-f00a8aa20d31",
        "cursor": {
          "ref": "ddd03b81-44bc-4036-87b9-1fe5c024d4a8",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "faf29b07-c727-420f-9e96-51a2d119a66a"
        },
        "item": {
          "id": "053debc0-989b-46d1-862e-f00a8aa20d31",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0ba4a92a-d20b-4fcc-9bee-77899b4f9ebf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8abcb1b-e740-4f06-9b77-ef858e5c852e",
        "cursor": {
          "ref": "9a0576d1-e68e-44cf-a1ac-9f7282b2c3f2",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "121f0e50-30d6-4da9-868c-94ae05887c7d"
        },
        "item": {
          "id": "f8abcb1b-e740-4f06-9b77-ef858e5c852e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "43eeb653-87da-4ba4-9188-c47d5ff66450",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 866,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8563341b-7758-47c4-a506-4cf9f5975ac5",
        "cursor": {
          "ref": "c4e910d2-76f9-40fd-a2b0-07bf17b76925",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b346fdf4-49a9-4886-bed0-632b0b655130"
        },
        "item": {
          "id": "8563341b-7758-47c4-a506-4cf9f5975ac5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4f5645e0-3cdf-424a-b96e-fd889ce9acb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8563341b-7758-47c4-a506-4cf9f5975ac5",
        "cursor": {
          "ref": "c4e910d2-76f9-40fd-a2b0-07bf17b76925",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b346fdf4-49a9-4886-bed0-632b0b655130"
        },
        "item": {
          "id": "8563341b-7758-47c4-a506-4cf9f5975ac5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4f5645e0-3cdf-424a-b96e-fd889ce9acb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd0b1fd-076c-4689-8909-d793941cfecd",
        "cursor": {
          "ref": "18be6506-151b-4789-b730-2b978a4c1ae5",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "50979730-a75c-4ce9-9100-ddd21074ff5d"
        },
        "item": {
          "id": "9bd0b1fd-076c-4689-8909-d793941cfecd",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "48dc09b0-d006-41dc-b707-fc411d2fd81c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1302,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0ecfbc-94b9-4cc0-b45f-705574ca5710",
        "cursor": {
          "ref": "820c5470-8152-44f1-8bcf-d0fc62e01537",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "26277858-b105-463f-a89d-aadd09afe67a"
        },
        "item": {
          "id": "ca0ecfbc-94b9-4cc0-b45f-705574ca5710",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1f45eb47-35d6-4bdd-ba36-d42439f17ce3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0ecfbc-94b9-4cc0-b45f-705574ca5710",
        "cursor": {
          "ref": "820c5470-8152-44f1-8bcf-d0fc62e01537",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "26277858-b105-463f-a89d-aadd09afe67a"
        },
        "item": {
          "id": "ca0ecfbc-94b9-4cc0-b45f-705574ca5710",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1f45eb47-35d6-4bdd-ba36-d42439f17ce3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c10e95d-98e8-4e3c-a958-e865cc42908b",
        "cursor": {
          "ref": "90652603-c3e8-4e17-8de1-62772e5bb961",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "181f1153-0033-4980-9e50-b3cc8b6d142a"
        },
        "item": {
          "id": "7c10e95d-98e8-4e3c-a958-e865cc42908b",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "b02583fc-791e-48de-8808-aeb5ddd3111e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1087,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}