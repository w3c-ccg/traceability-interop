{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b5b415f5-d347-471c-bd00-15977f4e48a3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f72cdf0c-d04c-4e14-8697-f5caabd0549d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6291d15-5a0c-46da-8aa9-004029f45eaf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c73f5866-538a-469c-abab-0ec967ab664d"
                }
              }
            ]
          },
          {
            "id": "88af10ef-13e5-495a-b9e0-46cfab62b291",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4f0853ce-07e7-42aa-aac6-a60240868b1c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "967861cc-75c3-4aaa-88a6-dc2e0d182a6e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a2135a01-74c2-4627-ba9b-da86e6da787d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "87c7edfe-fa76-436f-96d9-530ae611191f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b8cfab9-87e3-4ec9-a0b2-ebffc2eedcaa",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1570d4ab-8d4f-4c5a-a2a7-a7e5a68bd7c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d865469-ef0e-4da5-b225-acd5a2eb49fa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80944dfe-2b14-4090-8cdd-182264b971cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "362109b5-07b1-4590-83b1-0cfd0910a491"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6fb86594-1f3d-435a-8c0e-1529cf4c6dcd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9c7d58c-abfc-4960-92e7-56003c377911"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "538b4096-0be6-4f8d-8765-05fa5557c565",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "86ce74eb-6023-4c60-813e-c624d0f40223"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "baf81686-dbd0-4408-83a3-7afb7dfb92fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9db09b5b-927d-4af0-8b77-4a1967d29cf1"
            }
          }
        ]
      },
      {
        "id": "493802c3-674d-44cd-9b15-31ae204ba02b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "647908e8-2bc1-43f3-a225-1c1a55dbef64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d705a1b-1af8-440b-87a0-266890737fc6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5a7cf363-c990-4ffd-83aa-28892e649fe9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb395636-5a84-4763-b5f5-c1c46ba429de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "874b4f4a-99e7-4dfe-a500-97aa8c7304b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0287e924-9271-4cd4-b0c5-6cddfd2f1859",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fad71d5-e813-4646-8565-1064bfe5e347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd256afd-8622-40be-abbc-80dbcb786065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c519032c-fd8e-42f6-a11d-c2e96954b630",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39241dc7-0d34-4344-ab2f-764d19659c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff0aef45-1770-465e-a2f1-eed5dfbc742c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f5feb119-2650-43f0-a872-964c354040d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "875f59f7-b0dd-4e57-be99-b4db8fdd43c1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddff9fe3-ae53-4f77-88a7-0f7545d55774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9468b0e4-7c71-4cad-9560-ead915f769c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3e9158-28d0-403a-b783-894efdaf4e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab35a11-d4c7-44e9-a3a9-f70d2bdcdeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a51565-f426-4325-b94c-a501e1b84e42",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34053641-ec92-410a-b29a-e578fbb08bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ad2cfb0-7795-45f4-8d6e-451885e0267b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f504d17-94f6-466b-92e9-1d0672632285",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "daa004c6-e36d-481b-b938-238a0507b459"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ec984051-471f-4a5a-b534-b9710d0638ac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1c7dbfb5-0c1e-44a3-91e9-6af6cdc5eca7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9be0d34-bab8-404f-8f4c-d490ce30c58a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "789e6734-8050-4814-a2b7-d3d048b93aaf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6196444-d8e4-44f5-851a-9d37b7281220",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "bc5d0e31-ce1f-405e-afe9-9ecc65437e5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd3e0565-dec9-43ba-99d6-01947304f380",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "790de5e0-43bc-498a-9625-77e6fa1eb3bb"
            }
          }
        ]
      },
      {
        "id": "22942c4d-7cfd-4249-b04f-c0151ce13fc7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "35a5f319-2465-4cc6-85c5-762e9973f8bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da740da0-4a94-4637-844c-f7dd706b0154",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e7db3c07-ac6d-4096-a60c-b5ac567b4223",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65fc6e2-3b00-4cc4-bcd5-d98b720d3b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e47e2fc-9a07-4d10-bbdb-1c066edc8256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ee2cfe-4c40-44ce-bc74-f465d2788e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "188167e9-5483-4a32-b5e9-e4112c09c723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c746b77-f0fa-4456-acd7-a22a0c9feb1e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbe0e57-4793-415a-9326-5c8cddde8632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208b39ad-50da-405e-bc36-fb87b25640cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ffa53e-a63a-4a7e-81d3-8352f57c87f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daf1cc2f-6f3d-438b-b4a4-9a3329025c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f382303-ec2a-44e9-9eae-2c0c1688f7aa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8860cb33-bdf8-4107-928a-a606ab7b2547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd6e08b-6714-4026-94d2-a4cac223ca0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c232a71b-daa7-4e88-96da-0bc1b46ebf58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2934f1bb-4d3e-4d2a-bd35-79c0b0ec208b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613d7d8b-64da-4cb1-8851-9302b84e9d82",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31360ae-6ac7-47b4-a96f-b1494b4a9f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32794606-89c0-4f42-9e21-e61f1fef5962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dd1b79-fb84-413c-9ebe-fc595d61255b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0a04f94-bbed-416e-a46e-601a2d4e9f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b4fca8-45a0-4a4c-821d-4fb9a0a1e108",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215e5567-cdee-4e5f-a357-e485f90a5e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9f7476-36ca-4b8d-9b42-26ae49d5fe29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7932a52-d6e4-4d91-9ff9-72be85616a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce5062cd-a2a2-4f9c-9e6e-26e61bb409c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b102e0bc-cabf-429d-a657-bb311e3f3b2e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fd9c23-c3ee-4149-b2b1-061d405fc9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb7bc9f-c3cd-44c3-a7a1-01fa364cae59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2953251-a52f-4e74-b433-61ed1f7c48cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f21eb0f-ff1e-4408-b1ff-2f94b5f6e89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764254a0-6adc-4f10-b95b-bb6f55a69637",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f179ef6d-f468-4074-9e65-3d7b3a8572ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212b1d7d-5034-4084-84e2-dcaa13e0f4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bee054-a465-4bae-849a-71b54b1db7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96e18655-06e7-4926-a292-ce8cc44bace8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dffc2dc-7e80-4fd4-8396-39f166c7ee76",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47b3611-543a-4d24-a983-82b2521f1864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c767e06-9e03-49e1-938c-38b3a76fba3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c61b1d-bb58-4908-b95c-1d7ef2a9a186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dd12cfc-0b34-4c91-821d-1d3b0c9ac9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce49f6bc-10d1-496e-96e8-f813851529fa",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1318c728-d7d7-472b-8274-07a62a42439c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1912361-ff2b-4835-a01b-2b3466025e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ee25bd-8c67-42c4-ba09-1581842395f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc6f8fe9-d7b5-4af2-8328-0b7431813c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3515a443-6eae-437a-9bca-a0ef8279f1f1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cee47a2-5bc2-4acd-9818-7d893af47948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0821271-8125-4500-9095-73957fe9faf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fc8a21-f5c6-4cab-9a69-1bc96bf07dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c06d2789-b670-48b6-bd2b-9de2030d6e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3596b5b2-653b-4373-be2e-cace2a8d4dab",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e78eed-1c9f-4711-b315-fd77fb5f0f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35dd62aa-fc74-42bf-888f-041e450626d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e74f34-efa6-4b0d-b35b-21f3f42e3f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b66020f6-30cc-47f3-8c5c-fa46238af927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46675768-005c-4102-9c26-9d7bf9f00f68",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379a3c27-24e9-4eb1-9c0f-09fed136d0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ae6dab-a4c1-4781-aaee-9ce641f397fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ac86f0-65f0-45dd-9c6f-4747c617a7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3f91948-328f-4575-8653-b11ed1fa3059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb272fc-0737-47eb-8473-93ae253991a3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e3ab37-e801-4403-b6e4-75c650cfaaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1deec21e-a6ef-43ab-ba76-5662fe6b1d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060095bd-2a06-4007-b4d6-904a0969b436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c723bab0-76bf-42ab-9045-f81eeafbb6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dad5de7-26a0-4953-8c16-5fb1cf567e7e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e634e3-bb19-4eaa-a12a-708d3bc52370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15254a30-39bd-4c0b-ae70-4ea3ee156d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce340bb-9d20-4cd8-909f-6d02fc7d0a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "289e8bc5-ef83-433c-a837-13e5895e6267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0437e2f-73e5-45b2-838a-b6e9d8566865",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460a6719-cf7a-4e2d-85b9-311127b2877d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82144d3d-6792-4f68-8128-c6ffe77610cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac03bda8-46ef-4b0d-93ca-1178a48d1bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99d0bc5b-9488-464c-8416-34f25ed2012a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6df7e20-4aaf-4a65-8a60-03ccfcc7a79c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1518951f-bbf3-4943-bf10-6dfc1ebe346f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd84067-7ea3-4ff9-848e-3153b4688262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed0bbfa-6088-4001-ae3f-2eb9d0074ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bad2c504-0d12-4b1d-8f3b-ed4531eed14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94072477-ffa6-4860-b474-1dfae8df8f61",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05faad88-bacc-4d8f-af03-03aa1b62b3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4017e61f-1e2b-430b-bda4-166db14d7ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cbb174-170d-4d97-a0a3-515a7dbbb612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7a7e684-746f-4481-b10c-b8c6177c458e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c8c8ef-a7c1-44c8-8b6f-27e9a460e922",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d403b1-c28b-452a-a514-471b0be7e71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d46d4d-cc0c-4d31-aba4-981a29a9b728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5098031-f656-4771-a566-47bb46f503e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0c5ae0-2cd6-4fc7-8cd7-80548713293c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472ed4cb-b601-446f-80ae-82e8ab39d039",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4601d8dc-594e-4db4-9ab0-a0253060831e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2a9420-2782-4e7a-8a31-3a263213adec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7301058c-f812-4d35-bbf9-281f8701fac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c34d8477-4ce5-4d82-b561-0aed8d0a3de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b820afd-35f2-4d66-a0bf-d68944477ae2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007a4986-ef50-4f1e-a693-f526d0d19de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7943c6-d0b5-454c-85c2-f26149c268ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0e1433-b351-4add-8859-0677163b38e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e17f6f7-2d84-4e8b-a747-91d43bf781ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cab6438-7d48-477f-9ac5-6220e50b0ba9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531755e3-1e47-47cb-9604-5bb7f962d789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d390b89-6dd2-45cb-b51d-556e44c9bfd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c83fb9-e30d-47b6-8a00-6c4632b95a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8f8cea-514c-43bb-9d6d-e19257237e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e88584-dfb4-4e98-bfb9-1e1d9033fe0d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a6cf0d-974d-4af2-99d7-a672531d604b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5656c4e6-b4a5-434e-b7a8-56cc8b45d9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd68806-ed20-4f36-8437-a9cc7b2c94ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0f3255-4032-471f-9ba8-7c175c029eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368dd387-8e6e-4bc3-a02f-3ea726dd11f5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc53562c-a989-46b3-aabe-83e9420d44dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffa28b6-31dd-4967-ab4b-ec3ffbb02342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591265c3-cd75-4901-a2f0-20b8709f6e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0417b319-a43b-4766-acd7-84cb6bf7e98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78f1636-419d-4ef4-82e0-23979e8117fd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3dcb5a3-fd5e-4f09-8119-b8ff78b730ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05118fcd-9358-449e-ac79-6c1e26bfbd91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c574ec7-f12b-476f-9985-449f42ff1b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce2a9afc-9553-4dd0-b455-c99b2f69ea5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff3b8de-2ad9-4a11-94ae-513ceb737ffa",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075e6cc2-375b-4592-aae7-4b6736cbf994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08071d71-a79f-4d77-b5aa-490bd4a87a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc737d21-18a2-476c-96b1-496a4c19beac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd32b94-1ee8-4c4b-8c1c-db19dcabf78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a383d0-c2ba-4141-80dd-03c2d2bf5158",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83185e8-c2ad-4337-9179-a41195598768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c86b348-f375-4b3a-8f06-239a8418aa06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d47853-d00d-40f9-90b5-b124d1d72ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c83f4b9-2e17-4d78-a27a-6fee767333e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3871b3-ad12-4244-a0bc-6e73d390e227",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21775e71-6634-4347-9874-044a5a861330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e35ffbb-7ac2-480b-8f4b-7ef458e23aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e6b22c-c145-4a6a-bf1d-5fb6c044e2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5b433a-f43b-4c86-a58b-85bde4a1ab55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52aa5886-8919-422a-b651-cd5d19dbfb80",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ae53e2-1902-4c64-b85f-15689714e8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe49803-501d-46e1-a445-7b260bc7fffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abeb2a7-5e37-494c-89ae-fdfb995424aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2247ce5a-2358-490c-8718-8dc860f0099f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd597c5-133d-420d-b450-853d666b7e80",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1383648-3b99-40e7-9f8e-94998d10029e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3326bde6-b040-4220-8077-b1076851b3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb5774d-09b3-4422-8fa0-998ee2b26a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49ef7405-4958-4741-8618-48878852f693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe30f73-bbf4-44fe-a819-926bcc6619ef",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e2e536-e726-4c49-88fc-a43602ba6aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24dd3ea4-3b01-44ac-887a-2ad1322b1d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ca1d9f-fc02-454d-a4a2-81d27c92895d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e275c65c-9d9e-4ceb-9e8e-e016edd5dac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6b50c4-ff4b-4c3b-86f8-8f4c7b634490",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7bf079-eb96-4a18-b843-1b38f737f733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add57d54-1976-4b5f-9351-60ff65d1774a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36536d76-f361-4076-8aef-1e868e49e66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d36a7f-cabe-4a81-8daa-7bc0dd273139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1f03fa-416e-4101-9245-b94668c0e51f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3572b98a-22d3-4bae-8723-9b9d1f9e7017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bfb2fb5-7653-4fca-8291-56edf108655a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d791c302-b33c-43ba-bdce-d3c42cfa7bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c256272-be40-456f-b2c7-40f6fc19914c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa6a96e-1010-44cb-93af-f4f52e07a2ae",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da7c590-8e81-4afe-b864-86b07cd2b523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb4a0f1-e150-4936-bfbe-b7ea8b201bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47f9bae-87c3-4e40-8c4a-bb527697f758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f87e25c-f3e5-471d-9a5c-d9785d839abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f1c4c7-e3a2-4dac-a621-ab6715245937",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf38881-a90c-4c32-a5ed-453f97373330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a075d74f-d84d-47cb-bfc7-01209aad03ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53179108-57ab-49e9-bd7b-43d223aa0c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aee5a25f-5361-4894-9754-0895c85be0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8ff530-4597-4507-8388-bac825849c69",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23e3ac2-69ae-4558-9683-59ffc9ce1689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a74853-58cf-4ea5-90e5-34b924988eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2dd9b58-a8e7-4429-8f39-878081dc973d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b2615d1d-63c1-4719-b324-1e8482aa95c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9390e3b5-fd4a-48fc-b1f2-f134f94e7036",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4fef58-2c12-4d6b-b8c5-78a417697c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49bd3bd1-121a-4020-8909-f0d154e2ed61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9dfe7d-3290-4ce0-b96c-bcaa1a2bb199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0dc8420-3c6c-4c66-86ff-35ecdb824a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4753e76b-18fc-41cf-a23d-034ebb432421",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32be4f1-be75-46e3-aa5e-a711cb292a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb0dc12-4f90-454b-8875-0180f2ae4a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d26c6c-d33c-4af5-a1b9-966329a8b48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48012951-089b-4e0c-bc55-f538cfcdf8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cce3003-5257-4d01-8e97-c93cb9dfe6c3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75b50e0-d832-410c-bc4f-31be42f4a307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c4c4fb-945e-4966-aec3-f628a5880a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38509917-090f-4062-9d58-c4149376060b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d10bea32-5207-4b94-a4ce-263eed09899f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a128d8e8-3442-470f-916d-291f450ae144",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de407bd-1f81-4a70-8ab0-a0621f43f0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2746f4cf-4528-49bc-868d-d3868baeac13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7180b7-544e-4228-8021-2c8cbad974c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "616d11b0-50f1-4a61-924d-483466d3d468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dede4b07-feb9-4d3c-962d-70eb588ac05f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe3945b-4ba8-495a-bd35-6c6f65965515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ee05b3-af06-4cfd-8197-c4397f922da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71726253-aaab-4ba2-9ea3-779544640394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1367d921-e0dc-4b3c-93ef-cbe8b6d594ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b977566-33a1-4fbd-8dea-8693a56ba0de",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6dc025-adf8-4899-9dd6-af56d102235b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1868ea-1fe0-49c2-adf0-de7afed95afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add2dd36-7fa6-4c46-987e-2f8f6df11ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3744965-3a2f-43b6-92b6-0724c4dacd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f16c51d-d4d4-4bd0-9de7-599847e91c95",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cc9ad1-5745-4717-8d6b-6bbfd70cf6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbce4427-371d-4bb1-bc8b-4e814b9a4d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e78d83d-8a7b-42e5-8d6b-d036450ae1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ae3d27-9ea2-4316-a67f-aecdd011ae50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dc79cb-1595-4850-b9c3-c3177c2cb5b0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da694a9-9374-42e4-be93-683676076734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9f3fd3-7a90-4e4b-a0e1-4d6c854d58e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad3a1e6-be45-4b8c-a6e6-aaa4010f1b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "44321e36-cdf1-4c8a-996c-e4e2c64311ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156c246e-a1f8-4b88-8fa7-21e10daaef96",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c96e33-d53c-45d2-945f-b5a07015a520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b3a4c4-7c9d-4e66-a995-f27f50695b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be0b0ff-fa8a-4638-ac95-19666a06b21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c48f2a3-2872-4e92-a654-0ef8ece5ee71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3f8bbf-4a1b-4745-822d-71bf5ef1b7bd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02e863d-f920-49ec-9b32-ade10abe25b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737ae550-374e-40e2-b6a6-a610042c9266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33414134-cbb4-4bdf-814b-0e4698815a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d615302-3b7d-486e-a8df-bd078427923f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6e109e-6691-4a73-ae84-29b293a1070d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16eff3b2-53d5-4a83-a915-8e89760d278e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcb26f0-3a79-4aa3-9af8-1fe1a8348ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09830e64-a00a-4dc1-b1ec-17ba27485224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca253dc-c436-4c35-9597-6ae569a00928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba3aa90-0f5f-4c6b-8061-8133dcb4eaa8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc6673c-31db-4123-bd4f-6044668abd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1fa6a8-66d8-4d77-9193-bbab5e66c079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cb2620-0114-4909-a1df-fd6b18f8dcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8890d418-aed9-450e-b0d6-dcdae6119490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4780b767-c09f-44e8-9eea-5719673a3705",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b5909d-eb3a-4935-b9d7-60fe0dae099e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343e413a-ce0e-471b-bf24-e6e7267d3f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54fc0d6-c364-4124-9273-da1f80998755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f548614-0904-4fc4-a404-2ddeb724332f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b45474e-9d3d-4036-8833-2377ec1e124f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb48740-d60e-48df-ac96-d3c85f6bcb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389ef139-d423-4e1e-9d51-cf327851a1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5544fa-58e5-4cd8-b144-233dc40bcb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "032a610c-b7e3-4b58-af09-5be47b6afd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedb5f7c-855a-4a1c-ab36-019f60455056",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb14035-8bae-445d-a874-f8f8745617ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82e7283-d1bb-49c8-b74e-4aed6a9974eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90f2804-6b85-4d1b-bc4d-a57ac6e7c07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e34dadc-4b76-4557-b92b-b1ec9dce246c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adedabbf-bced-4221-8549-f4258855a772",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43704e13-f386-4369-8255-143c737beda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d145f1f-098b-4142-899b-b2fea7dddae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e3417f-09c4-40bc-aafe-e3b50c105392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "89e42c75-99e1-4d9c-862d-d2e909adc051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353d6680-c637-476f-84c5-ee2295dd709c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc18ec4-dc9a-419a-a60d-5a37c855b34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dd8dbe-189b-4861-ba36-6d77b16f935e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ad3460-5360-4827-b001-29eed98cc6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "511c1c62-0951-4852-90b6-38833386e3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253e5122-6b59-4bd2-83ac-ab3347d993ad",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ce922d-a369-41db-85e3-ff8e767a76bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0497ac15-0fe0-4123-b62a-38caf5260107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43efc5eb-0466-49bf-ad8e-bec86d290a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5809c98-a69e-4dd1-a190-60dd68954e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8150e88c-fe77-43cf-aae5-4672b15e5fdc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf15352f-42ae-45ff-8f44-52bc2893aae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880e72a5-278a-4537-a947-2d789cbc0888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144b0c02-e5e4-4327-b2a3-77f6354cfef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fae01e26-7e66-46c9-9b20-405316eff022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d64179-01ca-4aa2-8778-afec1f7e32bb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793f9543-ff06-438d-8d5f-c2e4673a50db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8a79af-3395-4f59-b297-abc6069b9309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707f0acb-5203-42b7-b940-4c64db31326e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "739d85fd-9506-41c2-b4e2-f3269a078284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b76d3cb-9d0b-4b4d-9e4a-3a8195bd0438",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5800c0c2-37d3-49d2-85df-444996023d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec2a473-27f9-458f-a096-61e6e49d4ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851fd9bf-8a9d-4d0f-973d-4a8596236d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "118f4719-6bff-4371-84d9-1deaacb01b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354172cd-0e28-4bc9-a1ea-c7e1bfd7d88c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7195ff-52c2-49ce-ae89-c38211be6ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8c3c2d-376d-4272-829c-a098b4295c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d10ed0-7b62-4037-8943-cb86e9386746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "440ec721-b6aa-4abb-8e22-fde62f6c2334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a9f13d-94e3-4745-ba63-d19197b8c945",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1def8380-db42-4612-a54e-01c965999f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b2cf48-d6c1-4746-882f-b5b3918d1795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ef3248-9dc4-4b4e-8a98-deaa4516f684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f17c503-1590-4272-903f-09190f1648bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1b6a30-f2b1-4a03-96c0-433a0d5f0c43",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85359834-14a8-4dd7-81ef-55ada5ead83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afa6677-affe-4eae-852e-ad02437b3c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac0d72c-7aae-43a9-b721-7b92a14f3f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b815b1-d073-42e6-a246-ef96a1e18381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321d5584-48f5-4d0d-959f-15b92ad5df33",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a14acc-66ad-48b6-b3e4-1f175880e351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf544641-59c6-480f-bbfa-63bda8df3172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6496ec2-f9c6-4083-b5f9-de20ac284f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3c013f-d09e-4320-bdd4-59871327d510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8a15b6-2056-4333-af1c-a3e3fd868e54",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d480ca5a-11d7-4568-b174-f831faccc0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1dc0b6-07ab-4c48-8613-d96b3e6cedc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd6ed39-fc55-4903-a3ee-8903a2b75221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "06f487a5-bb7d-49e6-9982-d43c89b00993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a751e86-57d9-481d-ae6f-663aebbe3f2b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4050bf5f-f531-49b3-89cc-d0bfae0969c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0e4061-53a6-4930-a14a-1751674d7c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051a761f-6ea6-4f3c-aee3-2153725a41b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cedeb670-4805-451a-84dc-8459c516a010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9d655c-05a3-4046-8e5b-7822a2ade70f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e2b27a-3455-4649-9749-d7da433cf5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebc261a-4e3d-4cb1-9f5a-7867e20b8ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827a5ab7-9bea-4412-8855-a49136ee5db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e2b3cb-4557-4044-840e-3b9080791f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c2c022-d0cc-466d-bd75-e2aeacd17586",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fae4a8c-8d2e-40e8-82f8-79422934c89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90c45ea-3d4b-4907-8caf-286861412a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e219c313-1f26-41bc-907d-e000c9e9e54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f46c9b13-238b-49fa-9b78-2472b80f4966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160bc47c-0bce-4a9b-8f7c-f0ad535a0b7c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152b2290-5c4c-4a5c-bb92-3efe2dae6907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a10814c-a97e-4cb9-8962-0f63e88da176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63eda151-9801-47b9-871a-921fee21eca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a78d88d-fe97-46f8-95cf-3249e7c6e04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85dfeb8-a61e-40fc-a696-f1bba5eea23e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a03796-9ca6-4a33-97ac-5e222928bfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcd80be-2f1f-4989-a5ab-31f529deda41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d42b6d-a966-45bc-8efd-f2a822aebfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68f1051c-de9a-4468-8e47-c8e4ede2ddf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef129e7-3f12-419a-92ba-b95600c2cdde",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cdc59c-4ee5-4035-8e66-324d9f60f649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e63c670-6935-4013-8d66-83a6fa997782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590424be-de20-4813-8b5d-05e1ccc25f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec597dbd-c70e-49e9-af3f-e49a9b809927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9d504e-4359-4ecb-b6fd-b92d2a996dfc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764194b6-c725-4cca-ae2c-468688866c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a6650e-eef9-4f84-8f28-c02a3d4fef86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0d9751-5983-4994-851c-7660e5a9387e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6df1ab-998c-4412-ac3a-fafac0626de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af99c5f-90ee-4526-a8e7-546aec569b26",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb19736-4d0e-4148-80fe-18e979b06b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4172ad58-7a71-44e4-a7bd-97e129b0b387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d86366-c445-4618-974b-da6bf529057f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0843484-a767-4ebe-882c-fa729b923e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce06ae7-67d4-4217-a892-fca19012c1ea",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513917f5-3f85-47f2-949b-88a5760fc3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c93117-6a40-40d1-8e0d-14eb5c9534e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881fa433-d636-4a68-890e-ab877bb85d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "099d8ab0-dd52-40ef-9230-89c275e06f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde23fb9-cf99-4952-80f7-2173533347d3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f43b59-2532-4425-8af9-5ea4b4945e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36a79bf-0799-4016-af7f-1c0ff321b257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13905ab4-98a3-4c90-9c8a-91d18c20ee11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39811379-aba1-4cd0-838c-d52ad8e25ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17440e6-1ada-4be8-9d89-41d95481362e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf440da-f270-4c12-990a-a6d67427b99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482d2b42-5386-4bf6-89a5-8bdf5d9bc949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194121ba-231e-4085-a0aa-d515edc1caee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2e82f7-e313-4883-92e4-ecdad77df496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a869e21-b7a9-4431-b517-74caf0440e49",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1346ad0-e0da-4353-8f66-e1b668f8d1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0b7f00-12f5-44aa-90be-279966f0ecd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30f207b-b610-4dcc-940d-56c9ace0f210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f814152-7e7c-4120-9ee1-888c8ad1074e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ced729e-1ea7-4723-9804-1162f2393e57",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badd95aa-73d8-4101-a066-79663bfbe7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27258bb0-de26-447b-b5bc-678a6c900d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28ba003-e775-4bba-abe7-1a034f2e9618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6892b4-1910-47b7-8bb1-2c7eccf58486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4df8c4-3b3a-47ab-999c-22c74a099492",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7359f276-4609-4d80-9de1-5d2f14cf25b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110b64eb-a827-4f70-861e-d2f896d05305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2d5abe-330d-4228-b8c6-42e703d033b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0099e69-a622-4a05-9b34-af1b7f36e215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2838588-7ffe-4ef9-b411-6538f72ae516",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7ed1f7-fc25-4b33-94fd-870b0ea0de0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8d2b85-0bc7-403e-b198-9f26675cde7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb69de6-a597-47a9-9bc7-9fba0548b863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f564fc36-7baa-4d56-acd4-68d78a6c1a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10058c2-7ded-46c9-8302-2e1368e5ea37",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20763ba-cdbb-41ca-94ab-f64ccb20bf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0f5632-c8a4-4a9b-b6e2-c8e5d9c47a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cd0ce7-2248-4a8d-b652-fc9c1ad549b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30203399-ea05-4ebc-a82b-0602e1df7ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a024812d-6b8a-4a73-bab4-e538dfd7ed72",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9dbd67-5b56-42f6-9b8c-566215ab340b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05966bf7-2b4d-4f45-8001-020448e2783f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec647fbe-5140-455f-bbae-0490d4f899ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fac5a7a4-68ad-4af3-8a1f-9a6a22d03beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e767f011-616a-4747-84a0-1ae0ce7dec6a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd2ca2d-6c61-45c3-ad14-2ddc21b451d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08422f8-9adc-4238-9f80-99d805d31948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cd86bc-354c-41ee-94fd-186d8fcce107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5367376-a4c7-4c28-830d-4b55c5d2c51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280cece9-262f-43eb-a2f2-8f6a8a169366",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961fc72a-650e-4ded-b2ff-6d97604dcc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c3b778-8965-4bbd-bdf5-9f75a667f135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95417fc-b078-44f5-a724-5d2ed63749ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad603ab-1e99-4fa0-a4af-4ccecd5fbd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7eac093-e6f2-4e75-9334-6375080f3d6c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61e873f-41b6-4a95-ad5a-97c5cb495987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e021fb-2062-4a58-8290-cb92eeb5a524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e9c3f5-ba5f-46e1-9e31-6c835c3c2f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b3c4d2-c11a-4b25-8db4-f5a18d5fe0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4da204-09a8-4da7-ad63-b6a9257d21d3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8850b9db-3cb0-4051-9d69-2f9047c9d025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b0844c-b4fd-4b5f-bd59-f06bc79eb44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dd2323-cfc7-4cd6-8605-803e5d1df37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e772c40-3783-414b-b96f-5284fdbb738c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf2fded-4be2-4525-86b6-16611e3f055a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf93130-cf87-4a18-b059-4bff36b73d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cfe58d-3166-4387-a33b-b35a408eb85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef893a8-ae5b-49c7-9260-3a1e306ab701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6918ba94-23d1-42eb-8940-b6a8104cddbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902b41ab-f955-4eaf-a7e6-943ff470aac5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c241919-0f54-4639-a4f7-2fe8a12b6ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8378a66e-f98d-41db-8bcc-35eb77d6d7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e809ad8-19e4-4d3f-aaa9-3ceb6937cc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca34c0c9-cebf-496d-b1bc-a484ce28d854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adaa285-61aa-432c-b62b-57cdefd9db23",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2df0502-858a-4dab-9be9-0bd3d174abc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5967c5-aac3-4081-8cf0-e6584942f4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554cc077-f96e-4e1c-9de3-757640c17e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51188539-26bb-40bb-a754-be9ffc9d2539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db4a769-690c-4558-a8a2-506f95861f68",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8080cf1-b2f2-4275-b389-b2fd65feaa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401076ae-a8e8-46a8-b376-9011df684626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2dfc84-471a-4da7-902d-4ec3a95062e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57b24a1f-5e34-4728-a998-eeb8e9cdc1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51b3f96-8bf2-4d1f-9e58-61d05905a090",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345558aa-affa-4d8a-ba3f-b66472337f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620eb98b-f90d-4118-bd02-d4b7092492f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950e4bf1-4dfa-42b8-b788-f0ae5238db58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "52cdefbe-5e6c-42b0-96f7-b6ac2a93509e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d1c08d-7492-442e-b2de-11ad51d4e1d6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6b9b98-b739-4056-9a50-69dd69f449d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b53c65-14b1-48da-b2ef-258340544325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6498300-5f51-4ba3-a0c8-b35a1899084e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1939cb1-7d50-4847-b725-c01cc29db3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0dc6e5-2cec-46dc-ad7f-f62c0d668dbc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7eb911e-1555-41fd-b38f-c5326288f0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a516f2-6feb-4e58-8b7d-e841a1e42e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cae8e3-d800-4135-8def-2dbf4390e1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "30efd50e-e52c-4322-b899-a9c47941ee91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f83e49-7a43-43e3-af26-e7cfc8753b6c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10853ae6-263c-4dae-bdc3-f341f425bdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "831ca4d7-9361-46cd-9b32-4484a0872987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a12ca53-4ca1-464d-a4ab-5079a4c7a559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd7e5a4-59ba-4f43-aacd-991af1afa55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f80ab8d-13f1-497a-a491-d61462519fc6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82589166-e577-454b-a66b-8cc88cdc4444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9c70f2-6c03-4386-ab11-0cac03ca0b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a576431d-46e4-48fb-9250-0d4e15c7e637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "881f8e26-ec83-454b-be87-fd9727c78d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2d3a6a-2655-4d02-9a85-b557123d8147",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ec9563-1741-4cca-9ca6-e7a66a3ed13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dd5e41ec-a711-4c99-986f-4f82afdf8924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dd39c4-a275-4890-8cae-eb4da7aabb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "15ca6653-ce70-4390-af65-f8b2b918a9be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45655721-8a05-4e8b-85cc-8afc4eb4b4b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "deeaca31-15bf-4acb-8624-5b524e6ae168",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cebfe87-367d-476b-95f1-97bce9845c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d58aacb4-5465-4fd7-b89e-2de2a471f6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715b22bc-e383-45f1-ba08-c04429cccf05",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "fff75d01-cff6-4916-b61a-a83962b78b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3675c7-b58f-4c13-be5e-1f29d01e7c7a",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54236722-04ef-49f8-b8bf-b33d6705d6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db76f9da-f984-4dc8-82d2-27fa071ac3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff7ca67-4ac8-4030-943a-a3c88e7e5062",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "81faece6-7d6a-41f6-b50e-da5b703e77f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "363c5441-1434-4b4a-b9ee-1dada91a9bcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4799c772-3769-400c-aa7a-b90fe05013dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c4b070d-55b1-4b41-aaaa-f59b4cec4942",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d091db7b-0d50-4d3a-ae0d-176e99913486"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f34c365c-17bc-41e1-94f7-4b54a82c0262",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb2e0671-8200-4ecd-ad63-7010e57da66a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b1451613-d5eb-4b6b-a6c7-4c99c86805bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b14c9ba6-9e7e-4f45-8ba5-be968cca875f"
                }
              }
            ]
          },
          {
            "id": "6ea9649a-78a6-4c06-8a50-e5464a0e0337",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0309166d-5a22-46ec-a2cd-2f1cf3f9933a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7106149e-08b1-438f-ae79-35aa48b0a1fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef8c7219-f39e-4f6c-ac22-62f5b3856206"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2863a779-c4f8-4f7f-8192-40fe6dd0ee88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0361430c-5964-4861-9008-7fbe0afba5ba"
                    }
                  }
                ]
              },
              {
                "id": "17fa7d5c-987a-4a89-9f36-c180d143d4f5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be7bece5-a9ca-446d-902c-9543557076e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b0c7bfd-c0e4-4f80-a380-a8281b55820a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbe1d4c2-6634-4925-8bb0-899ad9cf77cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b9cd3e69-cae4-41f6-8d72-80c26e089da7"
                    }
                  }
                ]
              },
              {
                "id": "967055de-81a9-4455-b403-c5a71e563d8f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ddf67a8-8bad-4972-aadd-868ce348ad4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41b9a1c0-fb36-4ad0-9912-5d54fe3818fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22a7ef88-471c-4521-9e0b-beff97f48f4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bf0f11d0-7b50-4b61-91ca-e04117ce5802"
                    }
                  }
                ]
              },
              {
                "id": "acd2b5b3-dffc-42b3-8d3a-056eb4b9c5ff",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f54d4e07-609a-47c7-98a6-62de72bcab2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ace9a79-21d8-443d-be6c-d55364715823"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2b75d5f-8d5f-4a8d-a178-c42ead30ee3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d250ec7c-b96d-43f4-99e4-d0a76fa5ba21"
                    }
                  }
                ]
              },
              {
                "id": "beb51f57-fb10-4163-943a-b61d42f428a7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf4b6a42-595b-4924-9f5f-f95662613cbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aadd2a14-7e1f-4cde-af3d-5ae8639cdeae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d0c6308-d70e-40dd-a2ff-ba7b39f6bb63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c1ea74f-6a9c-4492-9772-65f1391124f0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4df863f-40c8-44f1-b232-3b58ca8a7bcf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec38835b-2ca5-4adc-9149-fe8ff23f8e2e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "136e7067-5ffc-40e7-bcee-094b7b8c239c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e566258-f90d-4fa3-af7a-095312985dae"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b7e010c-af52-4998-b5ea-2281fc3bd546",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8fe90790-394f-44a2-ae1c-4e85b72cd340"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2021e1a4-213a-43de-9ba6-4c5d9b93eeab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6f908a7-944e-4df2-8f0c-73f0f29268b2"
            }
          }
        ]
      },
      {
        "id": "47d60f96-fc52-46ce-a750-1b135ee308f0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d689c6de-2d89-49ea-9d34-b5918e6d67a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ec08dfa-83b4-4b84-a2c2-3fe98c943b6c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b629b865-d5c4-40c9-98fd-a20ba7d4d552",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ba24ed-b47a-4bff-b638-611d947d5279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628740ed-dab5-43ec-a91e-465276cab808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d07a1c8-79c3-4f5f-9b06-5ba4c189f44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2665af-d0fe-4158-b9ea-25e7d7d468c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0059bc58-4162-44eb-8bac-b175869c787a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c300d14-7697-48a2-820f-e93f64857393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a7323f-4f96-4ada-98dc-8e39db2cf3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06eadbad-34ea-40d9-b251-2534c84c05cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd66cb12-504a-4351-91a8-17c9ac5d3a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e334fa-1f90-40dc-8c56-e6ef0acd99c5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860007d5-f9ad-49cd-91a6-eed265c7d9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84da5b8e-633f-4b75-b14d-dbd9e49f0e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebacf63c-ca0a-448b-b38b-bda4c62dc569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b337c228-25db-43ee-8f55-8cc221dbbcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcefb9d-3c60-42c1-8b20-80c5a257b148",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04d7c62-5b9b-4cdc-bd28-6daa247efe38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7029746b-fab4-4f05-85d0-d329af4b8bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e2dc66-e6e9-4f0b-ab57-698d678e443f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ddda1b3-1b1b-4f5c-8350-b955df9cfeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06324b5-80b1-4b0d-8f6a-509da5f2a441",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3309a42c-6c45-4c77-927c-cd484cbbc387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54f8637-d48d-4d67-8cac-288b95be42c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0220998f-4e8c-44b3-a006-b79dbe30e568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba47de6-f1d8-49cc-9d86-1778e98cb3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f987e78a-93ed-46d7-b5b4-f5bd07994e0c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee1ed07-887a-4a6b-abc7-aaec1dc12a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497a05f5-f980-45eb-be7c-75c1fe6ad393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84489be-cbbe-4411-962e-fce4e6b0d99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "024bfa00-1e80-4155-920d-00a1a8a7f659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc1968c-5692-42db-9417-9b6614d4ce22",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3145fa00-ef15-4ff0-9af8-c9e534db3e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a550f531-33b7-4de5-b14b-3f10ac793ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b50237-e43d-47eb-9a54-3b73feb73b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d703b0ab-7ec2-4ebf-826a-171dfca8fcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bedd8ee-19e7-43eb-9e43-84888c909cf4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93fa92f-f029-4416-83d4-41886964b1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82aeb782-1ec1-4ca4-a89a-4333d5fd6d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1d426a-b94d-4e43-bb95-16ff8304e550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d888656-f4e3-4bea-80cb-ac775ac5d7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a9bbf2-27bb-424e-8c43-59fdf8c74071",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0278d2b-e06f-46a9-b757-f1a06126c5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9722b932-7576-4380-a00e-d26e148b2bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b720182d-b7ee-4a4a-9c92-8904fd0da9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e93e03ec-bf97-4d95-aea5-730a01e5f921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8c3704-33d0-43bd-b9aa-7bf5ee5e975e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8214bf-a278-45d7-93e1-173766fd981e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4536bbc-c9c4-4ffe-8e7a-e577d4049d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a553c1-2ea9-4795-8328-d664077ee5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea58dd9f-7fe3-49b0-b352-1cb09b2ba7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb17f00-8e32-4de7-9471-efe3c9837379",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6328ce-1e1b-44f9-9620-aaabc11c1c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ff6e76-cf60-4ef1-a771-4782d6517fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f8268d-dd59-47a1-804d-d6157aee30a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ed48c58e-f268-4486-b317-9804b264da55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbeaae35-1e58-4d7f-a541-a674be5948ab",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d09be83-38ca-4424-a669-a22702711910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b8503e-92a5-44b8-92ab-6d288e1cc004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a8bbdc-3ac6-4858-a684-6b87376bcf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9818cc-374f-4e02-99d2-c3e34863da26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b644ab-5f22-4196-90b8-3b2efc6aab85",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0316863f-156a-42a8-8239-0cb06a8eb07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce41a4a7-b9e3-4c41-a478-bb57ee397083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcd3263-df22-4e1b-b389-99c160860d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63052ba2-dcf3-4eca-96c9-eebb0e00d968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77220e80-22b4-42fc-9450-f1fe13c0fc7d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98803705-fc3d-4843-b3ee-ce26eba766dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6dbe28d-17c0-441a-903b-c5ae382064a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68501fa4-8eb5-4683-88f6-895600c5cf4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b49b1fc5-e885-4894-83d0-8a821c81bb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1481372c-88fc-4cae-be44-714dd0f02cb1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758792ac-dc7b-4877-84bd-30e61ad0461b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ae46fd-f249-4a79-b99a-61f74316e78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68258d6b-69c9-4fd8-9812-24b53a94fc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5633907f-182a-45c4-b8bd-01bd646c515a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e77ec5-1e72-48f6-8aeb-5def4ae844bb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3882632d-24c2-47bb-a32b-b7e1933ed0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d571cb4-59d0-4e3d-9a13-75f9f69ca7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e1b48e-4091-404d-9ca0-223b5ecc2be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8038103-9789-4200-9bc4-9121d2b1ce4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6be03bd-f338-4f28-a632-bd03a968deae",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf39831-b350-4a85-ba97-a902f5456200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0876d4d-7d31-4f3e-b94e-90f60c25510a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2b4dff-cb74-4f1d-9fb7-7fc210d7d3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1ec77c-7d2b-4cb7-af05-9ca7bc6b3405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfed57c-f51f-4cb1-8134-c8b47a7fffe6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639538d7-fd4a-4903-83cd-2ad0c2a178fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6fc103-2106-46cd-9aa9-69959f1c8a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196b9adf-7432-415d-b7ff-4966ebe5b0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb37677-e6b1-49c4-89a6-062a58358e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5137697f-1190-4bd6-8b86-d43b90bfb424",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83e677a-499c-44d1-b587-659387558b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af366bd6-5066-490a-b58f-fe8f03901a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08237bb-7e9a-4da4-aee0-dce39264acd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b3d5c4-7837-4392-8f51-401f0da266ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842c619f-78d9-4f7f-ab21-e47a61a3024c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a665f2b3-60ef-4296-8410-1bc53921ca9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964e91fd-1fc8-4ff6-b577-17f0cd6af157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5c0377-2ae6-4b88-9b24-09f4c8d4b10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "338f8d76-c1ff-471c-ac85-b0f937a238c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ea644f-bb35-4535-b419-8e663e918a30",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f18813-6b38-404d-b9b5-9740c218c72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a66b5c-c7d9-4d53-87b6-5a9909dd8462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf35440-0920-4f35-b4f9-bf9631a9d960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26f0c0d6-7721-4bcd-a0d9-e1efd2a785b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d4a70d-d6bf-434a-8b9b-6be07a1a2dde",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5f6f5b-027a-496d-87ef-c516b5f92ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d502071-6e4e-46f7-b47c-757a633fad04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4535f6c2-1e9f-450b-b246-8c96e0951ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13e09be6-5864-4716-b4c0-027221f275bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fd509f-28b1-4974-ab81-f694ddccf994",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9078a00d-a000-4b29-9533-26dc1d3d4877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f80d3db-5ea3-4b18-94fe-051062f6f875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36dae502-d08c-400f-8d7e-152904d68b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a647e2-a008-410b-bd09-a89c4da4c74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ade87fe-2b96-4400-9b90-b7d4750a2304",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb41a494-741c-4987-bdca-a3e07fec6db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac459584-cc41-4442-b2bd-1d1e39f880ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0323f4f-33da-4f5f-850b-273cfb24a6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c64c1e4e-427f-4882-a001-9a5e09ac13cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddab3ae-3e95-4f0b-b8fa-53809325ba03",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3e3c8d-324d-4cb5-a462-e4243cf029b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e3b531-2a51-4133-b2e5-cf84363d8fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b6b066-ace7-4ea4-99c4-a01590fd9a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3985ecd2-e3d8-4d5a-aed5-54f25c9b7f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440aa54c-7809-4c5d-b059-e988872be4dc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6195177-c4b5-4c7b-b80d-777aaea8befe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73354da0-8e8d-4481-85ec-56c2312d83e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419660c5-bdc3-45fb-8aca-86351d29cbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82a0447c-4a84-4906-9785-2f70e27823d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b8edcb-10d5-457e-9565-8544be9e8136",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc0606a-2197-4982-ae46-05ebfa95f9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b73ddfe-cff5-4297-9ca8-a560dba5ae32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7502c647-1aaf-4e49-b35d-31653c841b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d651e529-0c68-427c-988a-ca4431cfef33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57bbd62-febf-4d46-bff2-dbe3b01eabcd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5599ad7c-5a97-4414-8076-a5bf2d427cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b6f44d-ccc1-42de-8942-c5e5da38d4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91429bc-52dc-4295-b1e8-90195a0c0f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dccd3712-868e-484d-8bfa-6b8a6008462d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6b0183-e180-47c7-8643-8698e4296ee7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05612406-3dc7-4e89-9f44-4d7875c55ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3220de08-a2bd-4eeb-977d-a8e7e001d246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618b569a-95d5-4972-b16c-2684138da6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3deeab3f-8fa2-4b6e-bc0b-543b97174074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb6b556-c118-4020-874a-8216b18fb86d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f425a476-e25e-4ae2-88cd-260b43299c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918e8a8e-93d7-40cc-a84c-3251fcf13bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92e109b-7b5f-4595-9f7c-74be86435abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ccf1c0-744d-4bf4-8bd3-2953bc8f110f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34b17f8-dd3b-493d-916d-b73971b42a73",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729ee47c-f257-468f-a91d-07e1a3056d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd1005a-7c6e-4ee0-a707-8adb894abeb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4306d132-1206-4333-b226-c4704d59d153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6b8d67-f6c1-43f2-ba6e-f05621851551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba1be6b-b5ea-44c1-970c-8bcf754ac563",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807ee774-3135-4976-8f46-d654fadb2953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0495b95-8e3f-4bfa-8ef9-81940871c76c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35677a0f-ee79-4a17-b0c3-667f2fda764b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd398fd-1339-4698-89e2-764ccc84332e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e3706eee-4b47-4d51-94d1-aa8f9f7562f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dfead1b0-dfa5-468f-beca-40f5c6b93c3e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4239f26c-0f5e-46d8-8a85-8efe729a7430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83edbac-3069-4c80-b7cb-5b7d943c5e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd09de0c-9e7c-4b0f-8ef4-1cb253f1e4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f926b7a3-38ce-4f96-8f5e-b42e52232d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab38da08-10a1-4653-84ef-3e022e733712",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05eda531-79c7-4c6f-bbef-cc984ca45cc4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "29776745-36ee-430f-b4e0-d1292513bbaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab412e99-a000-44ca-80af-7b70da6d6b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6e49f5d-82c7-4a5f-9c07-8648b6eb956d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4edf3b9f-0e70-4dad-b6b3-e6bacaccc03b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e217f5ac-569a-4bb6-a81b-755e2123ffd4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eeb67c45-e4ce-432c-9e13-3704d3288252",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2cea76f-7a26-4ea7-99d2-8d8d02f5e0ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "741f84c7-0045-4bec-9e66-a299e0bdf42f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8853f27a-091d-4d31-93db-518330926c04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c7808b1-ffdf-4fb9-851a-b605d1159425",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "882c702a-8390-497f-bbfe-a02e85e0e9d9"
            }
          }
        ]
      },
      {
        "id": "6c319190-0ebe-411f-be80-f3e3deef7706",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a455f4c2-1831-431d-b54f-8cf6a22e6345",
            "name": "Negative Testing",
            "item": [
              {
                "id": "867cd474-c50c-4e49-a567-47aacb66adf1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3328a49f-1a95-41c0-b6aa-8db65c4f18f9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6270f9b4-8edd-45b8-b7d6-be8f46619cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b36ee5a-799f-48b4-834e-5b4f5a0dc11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a26640-0560-4977-bcaa-3941a93e3142",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263f96d8-8d51-4d6d-87e1-e89daf653632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5eb39fb-dae0-416d-b8ed-f1b5796bdc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c924d921-cc68-4a22-bd64-efe35c032a52",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c09cf6-9b30-4c09-890f-eb379a564626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b077f91-c15d-4a68-8147-a09d9d1daba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3150e9e-d333-4d5b-9884-13a684e0b791",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b73caf-9819-49df-8d24-a035810688a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b924a68-fe58-4410-bf70-34cd4b4665f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa6b9e7-fa45-4e2c-b2a5-11a67f2aefd5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6134447d-d949-44d9-af14-766ac22cd710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ca7309-0325-4da5-a229-c1b75310c5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ac7e1f-e8f3-4151-90cc-711477abdf43",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c68bf24-6836-47ec-9169-45f59f4ff2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64db959-80cc-488b-b53f-9616f4fe81a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85addf13-34f6-4627-846b-0191eedb2e50",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201ce715-fc8b-4073-a5e1-3a49e7acd168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e29306-5b57-45c0-8c82-c42b075b0a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1ed4f0-feb0-4c3e-8294-833d9cd990f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ca73f0-9869-44f1-a853-9dabda477606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e47a918-b62a-4d26-bd3d-63e68ca9fbfb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149f5c51-afc6-4dd7-a575-b4cf2e545e94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b27cbc6-7c50-472c-b676-9f2b997f1b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42eb2fe6-0d5d-41d4-93db-795e97b9a55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab061bd-305c-467b-bb82-60773286c131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a056794d-5819-4457-8198-5ba9e1914ac3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf92508d-1632-4290-92bd-36f01947a7fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b7ba2f-2cd3-4b7b-bd3e-f8ab438cc43c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10950ac6-a6df-4ba5-a0a2-a157b994b7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657bd4f1-d579-4cb3-9744-2c595a2e5b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534f2f63-dda6-4ddb-bf7e-538baa8fc037",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6b3ac4-5b62-4178-840b-e641262029dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1fe3232-fe36-49de-859c-327be5da45c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbeed94-da4f-465f-81b9-8dd1f9459eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc659f98-97e6-4585-add2-57650f65dd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c358e2e9-2eea-42e2-83b4-e912c7e8fbdf",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e536228-eed8-459c-a759-e686f8f6de17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d705a7d-9042-4671-9e4f-2b142c1ff147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbffd448-ec03-42e9-9566-e6b867a946ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f1ba83-bb67-4c48-86da-28d9b9e25c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4b499a-871c-431c-974b-7ba8bbbd458a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e21336-c2c6-4c3b-994b-5c9fdb7679c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6a96c2-e4c2-49fa-add1-01e68166b30c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00230370-830d-4fa9-a256-e9bb06c008c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7044e2ac-23fa-40ec-a775-8f807b040f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb02115-bdcc-435e-9312-3bb615351b7c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de4ace4-6eb6-4efa-b69b-4e99d4dc193b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "166865ce-021e-4e29-a84e-89b21252b8b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4ea7ca-2894-4907-aa69-2465a95dca62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9473c2f-fa99-4bb0-9d19-f3b8fe19e547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819d6bf7-22f7-4d91-b9b8-e770b7c8fde5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ff2a1a-cca9-4f4b-9356-f9a263226161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aa9500b-ec27-4093-9261-b3d2d7b57811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd698ec6-7e22-4835-8ae0-d9f992575c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b49a8ba-c473-4142-9f09-ee769525dc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41d27de-8f3f-4419-8978-ba7bcfd1d4d7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7bec78-a1ae-4363-98d5-e308faa2670d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9fa8beb-044d-479f-a8af-d9044015255f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e540c59b-f9fb-4793-8c75-6c815b2e4914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf5c483-795f-4ac9-a3e9-822cb2c9caae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b100f82d-55f6-4843-87c4-cd1bfa9e7e9f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81f007d-ab49-4d51-a1ff-b2c77539f728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "782fca14-c7d5-42c2-ae3e-00fa8fc87050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f967725f-38af-455f-ab37-70d3392aee4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c596474-aad8-46ad-aee3-c90591a680ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b1847a-a284-4276-a91d-e48c9542ec9d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78047705-f8f0-4f0e-b0c6-78b65d45dd1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20a5ae2-8807-49c3-a283-8be0ebfdc38c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0fdbf5-7fb3-4093-9ca9-898280c5f525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc15efb-087e-4eab-9507-6aa03f490268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3063390c-7fe8-43e9-926e-210f071568b2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418c1468-6848-4566-8727-a1ca13004ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb97b4a2-ea69-41bf-9bc5-58c90e91cf1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "681c9827-5f8e-42ee-8cf8-e350ccf1ed4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ae2f6c-c62b-469d-b621-43fb32a32fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de35186c-68b4-4041-bde3-120d24214c99",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab68116-befe-4bdb-a941-a9dc07accc34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cfdb7e-da54-4ce6-83b5-d67c51d9cf35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "120fd8da-f6f5-4315-beef-3e3b5ac36f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c289bcf-a67e-4260-830a-2b83674f192c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6127dea4-7299-41d4-9aed-f06203e7d2c8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97864f89-d602-4c2c-98ed-4cf43bd17788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3daf78f9-5d30-4f81-a564-0f04d63f9d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2083ba90-d599-4639-a90e-4f6d43477fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b3767a-0589-471c-a295-dd05364e5313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3df277d-a7ae-49f1-a168-defbb0b3341c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49555973-31b4-44a5-aa11-aa853004d455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541aa6cb-328e-40df-8283-4c6f8b1d01b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36df9cc0-07b4-4318-9c4a-67b89b5ad79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30a9d62-88e0-4fa8-ab4b-222ce9542933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dc07af-c00a-4f63-b995-b1af25025026",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc498f49-371f-4c82-b08e-d1ae78a18102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f0e013-af93-4981-8764-df7d27d654ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719a3b86-c829-4cb9-84e8-25bad33f5295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b68e20-e5fc-4a09-83bf-4e8f640fe3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990d7092-ab80-4e4a-b1ff-010aeb18ac6d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbf847b-78a4-4103-a4b7-f90ebcfff748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d119bc-1971-44f2-aea0-af1d64e7af94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557e8f4b-1cb7-4274-b8dc-c50188298dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941c3931-dde6-49da-a5e3-cc457cba1e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82179d19-c17d-44c1-9cd2-80f7e84ce580",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b655816-f7fd-4520-bf63-41d7d76c8398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "512dd4ad-c18e-4bba-9da4-3baba525c2e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce4b0da-97a5-4e0b-9d0a-219cfdf3df59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d34acb-bc29-4611-bf39-f6d44d6f1420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02619f7d-05bb-4f90-80c0-63127077d5fe",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4504e88e-60b5-42a0-ba70-f499310d1bde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd421e6f-b68a-468e-85f6-38b096733346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0993d485-49b7-460a-9782-90401818a9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52db1e7e-48f0-445b-8999-fc0418551e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9009c7f-b9b6-419d-b847-841cacf08d3d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b2431c-b8ad-495f-8815-33c3517bde27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5878327f-c602-4d8f-9f25-9938840aa49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddc62bb-ec68-41e3-9faf-0b35279a598d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fbbabc-da36-4b77-b5a6-03b4eb7be3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d059f639-c3ae-4246-b086-e6463b2e32de",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d929fb1-5b8c-43f7-80ec-395dedf6745f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49a10893-98e5-457d-ba91-5a42f90014c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32194691-b109-40e3-83f7-6bda4e81f882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4fbf06-254d-4557-a7dc-00004c89df8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bdae56-bb24-40f1-b938-3956671bd6c4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c406da-3718-4ac0-b0d6-1ca393fe486b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601ffc48-e733-418f-b564-b821feb58994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7da199-7a2e-4c22-9cd8-4de16b0178e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68449e85-17e5-4648-98f4-2308605bbb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3105d5a-25c7-4c23-ba48-0593e68092d1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0b7f45-fc0d-449c-b430-56629a838125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a21da35f-4e3b-4c94-9c90-05064c55cfc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d255c567-e2d9-4c20-96e3-6bd5a3cb44fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d354ed-cf22-4389-8760-9dde42d94fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910694e3-f1f8-4d51-aec7-30c9d752960c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823a1ea2-2e18-482b-9b03-d439709ef02f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3288d3ca-4df2-4588-8581-331dd9af985a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "023fa21e-bde7-4dfa-b2dc-47a4d2ad636f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b448d78-0d7e-4d3f-ac21-bffa40f17493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d32519d-0a29-4bee-b57a-785fccf6905a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618fbb76-9ab4-4566-958a-f4be818987e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a42f38a7-3ddb-451e-a291-6254dd3c9585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763a49b0-bd5f-4ef9-9ad7-20dc082230ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdba6555-9060-4d20-be5d-afe7d10b6991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a83afe-022e-4b79-97bd-f13034ddb837",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7839b014-b3b3-40eb-adc8-228fdd057c0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea76c559-322f-4279-9158-5c2e5bb0443c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7e9d63-6490-4ef8-a5b8-d6b773d46372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602d1537-b1a0-4ef2-92a9-3435f731626f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deed3e51-f152-408a-866d-06026d9a25d8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051b57a2-8795-46d9-8d62-ae24e1e36f78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53258570-9746-4b51-b8c4-f0fe5e46f1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8657b87e-0cea-44d5-a83b-9eda575c1f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3d056e-ed78-4536-adcf-34848a6dc0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed11bb1-42ed-4245-bc7e-71d3bb45d127",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1698a9e7-1b9b-471e-bcaa-1a808e327ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d46eaf7-8b45-4a58-b25f-6e36524690af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b0d946-095e-47d2-8c69-0cfc9b9e7463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e8f50c-b400-4a24-ae2f-0f7f157b9c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6d009d-48c3-4632-9066-d0ad1a3da099",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d716416-bf68-4405-91e5-98c479ef2b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7931534-b86b-4ace-a2b5-1b488eaee65d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72307cb9-c824-4b49-9066-d7e553e3cc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20beccf2-bcaa-4f7e-af95-62f2a68ff74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b18e8a9-3c1f-45e6-9bb7-4eea17a57dcb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cbcd14-a8d7-4274-9f36-368071f6da52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27182955-4bec-4216-bf56-5613f1a1a963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9989898-b03d-422e-8a83-68ae3ee2b15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3663429d-fc8e-41d7-841f-fbc8671a7f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb585bc5-3616-4910-a7e0-2ac26537400c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af84d481-b5ac-499f-bc6f-ca2dfbbf0215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b166149-a314-4817-bb14-eaf8d17d3e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1238bbab-9acc-4bbe-9354-6c97c5749a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ece425c-e676-410e-82ee-b84cc28d7eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc27850-466b-45ef-9bd8-1d4c46cbdc27",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07199c43-e4ef-43e0-869f-e3f130cbbbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d599ae2-baa0-42c7-8e38-d7acbba92575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f085fec7-abf9-4efc-9369-df572f2aedbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b459e77-b9ed-4ccd-a842-1e0ba04d8f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2c9df7-0826-42ae-9810-0540b8ff0183",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6785460d-3916-4e59-90b1-3ae91540a215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6927cb5c-1bd2-4638-b4d3-bc76a6a66870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "716ad209-e0a6-4c7b-b86d-15102a02d61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9541a9b8-c1fc-4991-86bc-339facc45926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012b20d9-6173-48e0-be90-f5451ab77792",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a6eac0-ab1d-459b-a530-95ab5a3b8237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457d17da-cfc2-4674-937a-fc2e223cce35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b8fd1c-9be8-48f8-99e3-eef1b57337fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7a8215-3e02-46ae-b545-5a013e6b76b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20805c15-ad1e-4ab7-8d7a-81de48274f84",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa344554-4b11-4282-a1b6-dae80383b2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa26da3-998d-4cbe-af34-c26ebfad5755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4b4737-12ed-4a1d-a9a8-2a08f3710436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ac2678-99a7-40e4-8352-362af4edca6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bcc1dc-b55e-4f49-a888-2c0e8bd65509",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0169766-a280-498a-a3a8-93e91dca3a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56729a3-e19d-4622-9980-93ac743d8f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ac8890-e249-4b01-83fc-e30b60720eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c7accd-761a-4a92-9ea9-2a31d7ed221c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40c55f8-1e90-457c-b634-a1bbbf4497ec",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e74302d-2536-42b2-9960-755722ac8b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4e24f0-0441-4b01-93c8-3654b897c9ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8cbe21-febb-4aa4-8bc9-e7eeee0809fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bb266e-c3dc-4b8b-b565-e24752ca6cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dcd350-2f1b-4434-af28-24d05ceb7244",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5d6551-de31-45a1-8c5f-1a16174e8a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded7795f-73fc-4ddb-a2c7-29c53b824818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43626b3d-d380-4441-908d-389509ae556a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8cccb6-6332-41f5-8957-158857949424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468c76fd-b9ac-4dd7-a14c-96e9967164cd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b52263-9bcf-4461-9a44-4c532bba7df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20715f7-b742-48ca-99b3-d3047279946f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b194234c-0023-4452-9fc7-0efc43ff7f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d7327f-0cfe-4ace-822d-bf980da5083b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cc4262-35d4-45d8-9cee-754e346cb905",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a81d9d9-33e4-4d8c-9c18-4db61a449954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e782d1ca-1a5f-40e7-8bc7-4cf053e99c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1934e300-4b58-420f-98c6-dad6a11ad1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d885c12-8b73-430d-9f16-75ca087a0440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbed230-93e6-4ecb-a905-350b512c2b10",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0701b9-59ed-42a9-976b-db2895a05d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ec2456-f6a5-4df7-9754-58f98ee15d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c355ef-182d-416b-9ffb-9d3150c2bba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1690d19f-d6c8-4023-a3a1-f197d72cbe18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158b540e-6f65-4182-a0e2-51e670029384",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af55788-41f4-4a27-b201-ae8dc68ff11c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1fe5d9b-533e-49af-939f-dcd62601017b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089472c6-e1b5-43b8-b6d6-643795ebf1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6615c0f8-f222-4c61-9acd-7e74115b8cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67346597-cc06-4010-a6d8-0934a8fe4290",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c87365-be51-4807-b946-9bc1f0ab49dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f311be92-62dc-46f5-844c-bc3598de9ea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238d723d-26e7-4b44-90b8-8dcb0c2ed3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a2722a-67e8-40b1-8374-3105379889fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ff14b6-8819-4701-a6e0-71e1228d55fb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a1e37f-91bc-4ea7-b97e-5c47d9ab7a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94385c5-5c3d-4c36-bded-e97bc02a74f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb5d52f-6cd6-4f2d-9c47-8db67e358649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184515e2-62a3-4454-b51a-269aff4dc574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9a65fb-a6f1-4072-9b78-3f9f36034121",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c666dff8-6967-433c-a521-cbfdb4beb24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c9ec83-7674-4f7f-a2ba-00e4089e1f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53576f8d-e8db-4b7d-bc18-b6a2e5a6799a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3569653a-305c-4815-b13c-6c2d097982da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdaedb7-5b49-473a-90c6-b7d427411793",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b3e4c3-ce92-4704-b153-e9c5dc2f266a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36555ad2-68a4-4415-9f94-15c624de0b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4d5281-c227-43bb-ba86-14027261ea20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6c507a-80fe-4c27-bcde-370cc1045e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0465d166-5673-450c-b1bd-7c0d7b40b361",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cde6ec-08f7-4b70-b0a9-4c6f836ca604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf61c03-7c03-4ed5-a8c7-daa34e8553a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81052d7-35f8-41c3-9a06-8886f8e05cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb12748d-2194-4285-a7f8-b2a9d538ea91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70252092-b95b-416e-92ea-88c5852f33ef",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8f7465-3868-466c-82f8-523766475a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7bb1c4-0e8d-4169-9852-11930dca72f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db01a7d6-3716-4415-8449-24b9d190fb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66412ae-48b0-4228-99cb-4e5c8e1d1f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464aa376-8cd9-4659-8ed5-9b0f3447cde0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c452e9-d7e8-4b26-866a-f63f75074ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4871969-9964-49bc-9464-41c63a9104d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37184c31-b00f-476b-a1b9-93783ecc372e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1695032a-c1f6-4df5-8d79-2a10f1ad9502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d602b614-2fc4-4da6-bb30-ae813f3ca7b6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e745c4-83c9-4a81-9e94-57c8385069f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275a3387-6265-451c-ac28-c3c808b7739f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e0d06b-25f2-45eb-8892-859f8e315bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070fe39d-39fa-4aca-a42a-5bf071ee242a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb203a69-5ea9-423d-9b2a-05646c22b020",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cae1deb-931e-49af-87ba-54d56f7041e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03512dde-26b7-43b5-bb64-0ec1c5034609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d95016-53b6-4248-bc4a-99f596d846bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e604b6-f31b-4529-a6c8-ec549e18f0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e69539-f52a-43f1-8f61-17becfeab79e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87c62be-acd6-4624-9251-38f6253178c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af9d98e-cad4-43f9-a640-818c6e11ac89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fe8438-6fda-411a-b1d0-96a943c1c004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dbac47-ae56-4d48-ad8c-c889c78f00be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea81ba38-16ba-49cd-b4cb-4b959eb2df16",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad70f087-f6cf-4c6c-8d13-fca958f899c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7aa5768-9541-43b7-9112-f18005c06c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5f0b92-7904-473e-ab3d-a95e84e4ff29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb34552-aefb-4b80-8483-004a1efbaf86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b9ef3a-ea9a-4e23-8307-4aafeaa79913",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3860927-65e5-4d08-8dc5-bd468abb9837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e1035e-955b-4ca8-8e2e-5c2221d534ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f64af25-b697-4b6a-bf2a-30781619fdf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194ad565-32f2-4f10-8b66-84a80c8a3236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a0c82b-911b-4912-89a2-f5aeda5890d3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83679fdf-55b3-474e-8278-d017a2d67b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c90f2bf-051d-49f7-ab8a-7c545bd6ec91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1653752a-7f5a-4a40-9647-d0bbd9ce044d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f95f42a-778b-4b0a-b0c6-51fb4cc2c8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ead5d94-4b21-4176-9abd-ef657fe2a733",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ba7ea8-f50d-48c0-9eae-cde0c3376dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab84ec1-fa23-4881-9b71-3452a5fc8a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd13b0a-7921-4e51-be16-9ead221ed4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e73ca07-16a0-4178-ac68-8ed91ddc4d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2daa5d-9041-4928-9af3-adbc44dbe971",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5132fab-32aa-44fe-8867-2dab7048328c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62c6e97-b503-49c7-85f8-dd37637daceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad454135-52d4-412b-960a-b118ac78394a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3414469b-1031-4b56-ae0b-d83ed78d0497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3b8d51-b7c7-4cb1-a68a-07f93762665a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48723e0-57ad-4893-861c-ad484a9d1d4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2d87c3a-4da4-4f42-bd5f-664b025ebdba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b478538c-5777-4e25-b341-0631f0055e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb43cb2-6909-4520-8ca8-44270b908cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d43c37-847a-45ce-8185-bec1a20e77bf",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14262366-8bcb-44cb-b297-7821ba1dec5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7948dfd-1593-4671-9e08-f9c423dc5897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef967b31-caf6-4f6c-9784-89615f02f822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c7086d-8c80-4fee-bfcd-d4d9a05feb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007934fc-071a-4d99-a5e5-b2f6702d4400",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdac4bc-75a8-4db8-9dea-20154dac963a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09215380-ed65-46a8-a6a0-12937b049b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137bf98d-b3f0-4ed1-b315-dc45045d89f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653a2d28-8243-46f4-a565-2c5c0afbc6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9004c83-7ffc-4b56-bac5-3a15d89ae292",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1164b532-24bc-4a85-8109-67229ebfece5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdd12855-1932-403b-be1e-f6f2cdc2ef2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb3b3a0-5799-4f2f-82a1-636f57bf5081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d48cf84-1c0e-48dd-8a77-6d026b782d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5471e8-8453-4462-91e9-bba8ce8226fa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5b2969-c09b-45bf-a450-cf8357a3bbfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b807ad-2cad-485d-8191-cfbe8a9f13f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61603f2a-62b2-4652-88fe-f21845072915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41fc60c8-408b-4471-9899-b413136a233d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a278c54b-e046-4b75-bb03-9dbb071c2099",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039fae8f-7d7f-4b4a-a9c0-1542863c1271",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf6d60b5-6f62-4e5b-96b3-80d5bdea0824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cec6e19-4017-4ac9-939d-1c6095f33517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8803eb7c-55a5-4093-a424-57545d27c0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee6d22c-0b0f-471f-afa2-9d24989a5154",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96d5f47-859e-4e4f-8886-5e38784c2e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2eb8ff3-4116-4a41-a69f-1f243a4d3ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f1f8d2-dccf-4fa7-af98-3dbdd348e116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f27661-d477-4428-94b1-2954870fd084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff61ff7-1e84-40f9-8690-676e29111aa5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80e8fde-9dad-4502-9231-0bbb2bd8ab11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1210f21a-fe3b-44c9-95bf-ee4e0ee8b247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45032be6-db66-436a-996b-623ea3c0c7bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463de88f-4284-4455-8348-e90683d71e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e906945-cbe6-43f5-af01-8beef4d5edf7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9b6e41-255c-43ad-9832-7abd559c209f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d7d724e-3200-44ee-9130-9c3e361523c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0734dc04-b321-484a-b1a8-a8d5fe3a13b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960abc7b-249e-4d25-afbf-972a6dec912a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf64655-bfee-4f10-8a37-f18d2d7f7c9f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ceb729-ef9c-4768-8f37-31352255c35e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba1c1c46-d60e-4edd-a0d7-5a2fd2efcb17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa201d0-80c0-43fe-8d25-1875b3e8bc3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5934016f-4677-4afe-ae3c-5935ceb9f43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e688479a-0199-4581-97aa-eaafdd7574e3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc1bdd7-d42c-49df-8b26-6c99238fbf0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1357e410-28d9-4bea-a1fd-325d1df0bd28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4455d9a6-5301-4fe7-9c17-0fef653e8e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4936155-af4c-40ae-a5ac-3f4086a07eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d987fc55-5008-4df8-9f86-500ab4883acb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6981942-3a1f-4419-a0a2-d903e5e952f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "715040fb-a13d-4919-8fc7-702a9830f88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06460f4-bf0d-41d2-b628-610fc54e93bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c43271-1666-468f-a766-98ecef6145d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e6b1fa-b803-4525-af04-d0cd3acd3132",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e223d970-e3d0-46f9-ba5e-2980f337ea8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58441328-2cd8-4885-a225-7a3749bf4247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e278bb-ddd3-42fc-bfe5-55fe7041c0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2360b136-693c-4c10-a7ce-84f0982d04b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb368850-7c3b-4c10-98d8-a5425568a1e6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab79f59a-31b9-4ebc-9f7d-f15081b8ce0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0b064e3-0342-4784-9e96-1378e686f21b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4e43ff-b1ae-4f66-b3b6-cd8b466270cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b3996f-27f9-407d-9fb9-cde5bac73a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e786f3-fe92-4827-a5f3-38e21d80e07c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c30685-bbac-477e-ad5f-02fc86b295e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1bec20a-3704-4b9e-a292-4ddf38588b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d255f2e-ac43-4dba-8302-3f4d8cb36978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e02afbf-40c6-488a-99f7-0e9c7be080f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df62b104-af9a-4b6f-abc9-4c81a9917efa",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df8b9e5-ce65-4ee9-9bee-5e798ef14a23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0539f920-ddf9-4768-8653-070fce775030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77605415-3412-4d90-9635-e818fcc0f479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aad07b3-aee7-47bf-88cb-8e44509db0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cbd112-4a27-4bb9-ac17-e6371114ba47",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3da560-7895-429b-bb47-fc40c7d62603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c15091d2-7324-469d-92b5-e272801e2dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a4bb43-b5e8-4728-9be6-af308d985456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5f48be-8bcf-46cb-816b-31f6cbaa40fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89be36f-0adc-479a-944d-c9519b42442f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee0b71d-9be2-4d98-a29c-36a8206f4ced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2a77dbf-d5b0-4b21-8aab-63519560b8aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02adf07-b114-489a-9186-7ac5b95a592a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "450543b7-0b47-41d6-a66e-7ea0ee2e5f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e67ff9-8515-41d5-9f9a-3d82c13f5706",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf2e2ba-8333-42cd-86ee-03d70fd37205",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1593fad0-bd8c-4a95-84fa-c5f12510551a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "473cd530-ed2f-4cc7-a8de-587d8b82feae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7375b5e0-51de-4237-923d-5c2e679f51fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0512e563-01e6-4dd4-a900-a43e27951fec",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a58115-604c-4b9a-8697-8ffe7654f162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe310f53-012b-406b-ac43-da01789a19d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb06cf35-fd19-42ca-a6bf-46a7db5c0d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79f9989-876b-427b-aa7e-c46088f56819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bda90f4-aaf0-4137-ad5f-d99ec59eb52c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9773a082-7f90-4208-adf2-083f80e1d548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31f9a82f-fd33-4b3b-9b6b-1fbe64bc9788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ff9b5d-351b-4256-914e-bcdd6ef3d84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bca9a87-2ae3-496d-b15d-4346fb1c5f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac47f244-3a1b-4897-b388-e4074452068e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5848fbf4-c0fa-455a-9b1d-40252e05e951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "959fd1f0-63f1-4510-a135-b0b90f719567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c71f83-e940-4b46-9b99-f55037377525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4527c6-bcdf-4617-83af-016beb7c9a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dca5340-7d88-4358-8f71-48085f353f8f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2908c90-b5fb-4d78-b03b-64cd0ed4adc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "686e0a12-27f3-4938-a958-4e9b520252c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "800a0a95-c743-47fd-ba6a-a9346ba42b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9485b97b-f072-4c0b-8a02-d40cd42fe884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e28be1-4d9b-4562-a119-cf77776fc9b5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcb3d57-5853-4b55-924c-cf3de7507b3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ebd44c8-578f-464a-abc6-b9a587ee41f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd77b58-06e4-4581-a671-033d16680fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c7f49a-27af-428a-a561-c717d4a80808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852a49b5-f8c9-4fbc-b3da-11fa28695435",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba04bd7-9146-487a-ae63-2e6f72de6045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1272524-e50e-43c9-91e6-535d7af1fee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "486c2419-83ab-4a6b-b75d-b48e66e9798a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7de644-3459-4994-9f23-f3e78edc5e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eae83af-abef-414c-8ffa-19c7600e4045",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f17180-3984-49db-ac6f-7043880721a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "157cb692-44e8-4166-8307-4931bca2a279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e40f3f4-19e9-479c-bcc5-c55791bccd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33eec144-7b84-4183-8f9e-8b423a30f1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3b93f2-c713-457b-b998-f82340280a44",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba3d5f3-4f0c-4395-bbba-11efaf9935b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b566b659-6b1d-4389-9af3-8fff19eab1c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc3871d-0e95-40a4-a00f-2e1490ca9ccf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78faf9e7-a771-4013-9589-15a482bf91c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1484a02d-9b09-4349-9acf-841027385184",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4e163d-9a0c-4820-96b2-0883d1a79343",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03eff21f-4c8d-483f-a3d3-610268e2ee27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d841b4d-d15e-4233-aae5-6ee2e941c228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44128a33-e5e6-4c17-a414-f679a2612e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49774849-2670-4459-89cb-42a62b35c1d7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54699437-cdcc-4f3b-b519-b85eebc5d643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3353a117-625d-4f52-9e35-90716d65802e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313c8fb3-199a-4502-9d21-73bb78100dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6446536-68da-4013-b75b-3db12b7d3c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2ea089-9d87-4893-a81b-bdc7dfbb476f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5d80a3-dd3b-49ab-bc7b-a4f956fe8e7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d93ae30-09dc-4cdf-89bf-b9f0d9f7daa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c329a3a-260e-4af6-99fb-3a4f11f73c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e7d0cc-9940-485e-bdc4-67bf614ae0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927054ee-45a7-4de4-b1a2-0fafd470bcc0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13b3393-3344-42c2-afac-f05f2f422ad6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4dc3cdd-6c73-43ad-b60c-23adfd70adc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65833dbf-affb-46b2-8d60-7f2d05b67f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a847d239-7dee-4722-9773-7888d8df6c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbb0600-3e38-4398-84e0-5007076754a2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a383f42d-361e-478e-83c6-4ec70b1ff08c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8062cea2-c6e0-4b92-b52e-11d6f6cbcc14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e340636-f02d-498b-976f-a9f5eeffb30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee49d05c-dae8-46c9-b7e9-6b45edb8c5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d08d92-0fdd-446d-a095-b632f4da8bd6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abd2cae-e9a0-440f-a775-3aa73d40504f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f91764c-9b72-4b8e-a2be-7706d33b2c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36d516b-d071-4f3a-a00b-4a28b2442756",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3907e6-2915-423e-b3fd-e15199985363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf776e0-d155-400d-88f2-cb23f8408ac9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8503e706-607d-4c32-b612-4dbb36af58ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "601f6353-2728-492d-8ac7-d096774f0d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4c03dc-fd9f-442b-9871-eeb2229cac43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38c3972-73a7-4924-9a43-1ebf8ff7d440"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0bf33e8-4e89-4aa2-9de3-5b35f4f7831b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb5c64d7-3464-4574-baee-1f73ecb6ddc1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c1b380d-2b3c-48b3-9582-f5293dd7baaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04d90082-a76c-4e6f-8474-288e29ea2e78"
                    }
                  }
                ]
              },
              {
                "id": "0d44cf78-9512-49a9-a3a9-d5b1df53b6e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e2c5ecd-0881-4117-a766-5c943e56b43a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4722e4-d869-44cd-a5fc-67455f17ab5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1c3209d6-d63b-40b9-91c7-06ca12d0ff54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ac2e42-0838-4f0f-b6b6-e8a4aeec16c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf2d6fa6-2d30-42d5-b22a-6dc503a21439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874c26e1-227f-4a5e-a0e1-d24391eef45e",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bd20f2-a837-4783-8698-a8c1918b1725",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "45710645-4341-4c19-9773-77b1e1e90286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a30096-c720-4960-8da7-79bdf53706cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74286928-2296-4554-834d-4cdfe0eec9bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9be8c1d-56b6-4bdd-815a-d2190f2ac1ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c64d332-99c1-4a4b-b565-5522793d0321"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "811c5939-b192-47ff-98d2-da07ee481fe8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78e90b74-bf26-4c17-a102-f1f8f18f88c6"
                    }
                  }
                ]
              },
              {
                "id": "b7fa52e6-be3f-415e-914c-e6c6782d4c2b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5f49cebf-5d6c-4c1e-81e6-236daadafcab",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f922d0-0189-42b3-aaf4-6fd790f3cd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b8764fb9-ac1b-4428-95b2-f2a1f4900dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d4ba99-43ce-413d-9035-e117a5b1afd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275b602f-0480-45aa-a5ba-ebc07afdcc7a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e141d528-56dc-46b5-8c41-50d4151a0dc9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2bb7ac6a-56c3-4b7c-8c7a-cf6db9c370bf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89ba25a3-6788-434a-ba8a-b27ec1e2dbe4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d9b7379c-2610-4510-b59a-dcf5fc3d0b3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0777468d-a394-40e4-b93b-c3a295ef41a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c8155d8-96d4-473b-befa-e6e35866c2b8"
                    }
                  }
                ]
              },
              {
                "id": "7fb5545c-ed8a-4a66-8b0d-0647e6992075",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8828e15-9bec-4b8e-bd5c-ba6ba7e33222",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2755cd76-e581-4423-ab11-fc22d860cf21"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fccfc7d-12d3-4a13-8874-bc6e977fa18a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9df8dfbd-676c-46b2-b711-6d8bfa077b8b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cc2f40c-c3a6-42bf-b514-4dc0c3fccef4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c67394f7-e4a4-4263-84cc-df7c8abcc226"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "235d2de4-d387-4bbd-81c7-8b184e6cc3ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0c88f8c-9a42-40bf-9555-068b1aa0a176"
            }
          }
        ]
      },
      {
        "id": "f4eabf70-f061-4c4a-8e29-388bdc1317e4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d9a15e22-95a3-4f27-8088-3609e6cc4b54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d817c372-c44a-439d-b6e6-de1e74de89a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75447f4e-7216-442d-a374-7a7e039e9a7d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae27d090-d40e-4855-9fab-57d4225d1709",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d5d719f3-76bf-4ea7-af06-d8ca8555f044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaabfc73-dfc5-4578-9b24-130d4491daab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4c3cf91-3fbc-4b68-9ce7-e2371793e626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7159f3-bed1-4ed4-b17a-1d6f4f245fa8",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb98aec4-1bfa-4c0f-a35f-03e61fa0b342",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1e194b53-8349-4886-b3bd-e1812b9bb8fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8ed327-eea8-4825-ab47-cb4e35be47ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "523cfe86-670d-43ce-8571-f393ec17a9bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38f539c4-12e8-4445-88e4-fe73f9123e26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee4e2967-e1a7-4e3f-bf84-9bba53776067"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fe44b86-420e-41b9-918c-77f882efd74f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ecbe326-3a24-4808-8818-61093abdf2a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75668c1d-65fa-4ee5-8994-75c73d0faf6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "158f31d1-e91e-4de4-839c-c70888bc04b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6116895-80c5-45ff-bd51-ab4c8ad3b7c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1af41794-fcc5-482a-a883-d6887a43b74b"
            }
          }
        ]
      },
      {
        "id": "8b2e6d73-e440-424d-bea5-807620432a9c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6224dd48-24fe-4770-bdb5-a27b0a06032c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72f722bc-4ed1-4715-8c50-868065920e27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41656ba4-bea3-4e9c-8a00-0c37958da063",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4de349c-f3d0-44c0-81a7-24e9d30ceff6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "deb83ec4-0d19-4537-8fa2-80de3eba772e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8934e8-5129-4844-a6d2-56de1b5523f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4aa271c9-8fc8-4d34-adba-a54c3b6a43bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9a92d2-ddd9-4f45-b816-bc3c5e0ea6d5",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7d6e74-86f8-4582-b317-fed771a9a5f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d8c43e5f-f84b-4bd0-92e3-5671129262fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7145ddb9-a9a1-4fc2-9dfa-98559b2b7a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "465997de-c67b-46d8-844d-6717bcb1e6a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32ad1011-9c37-43b1-a05c-c00de45cf353",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "229f8769-6095-4dd5-bcef-501897dc8684"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1001e8d-b773-4a8a-9278-0ef1323c97e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d58484f9-52d8-483b-954e-f8d9c0ca79de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1dd949ca-807a-4896-8e4b-df7c76213268",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "84635366-59c2-4b2c-af7d-14fc53a98b6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a46ef1f-caf0-461f-b849-c058fc6c6afc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd9b1453-bbc4-46aa-aec9-b0352d33246b"
            }
          }
        ]
      },
      {
        "id": "5075dc9d-70cb-4f28-b000-8d6e5f1ef5cb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9f84696c-2472-456b-8f48-e89b0f0bb331",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52389607-fbf9-485b-b99e-a6776ae8794a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "501f2c3c-b688-4fa7-aeb9-0413523b26f3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5619794-da91-4044-91c5-486fde189943",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "77ec6ad7-40db-4018-8d8c-01d4d0121380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2194e197-8784-4199-acdc-1b9dead3b1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d52b3b7f-7ba6-43a4-bd63-2f35695cd4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42173f3e-8861-4f42-ac6b-874f481640d3",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3e2445-88a9-4596-a0ae-672cdeb3dbf5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9fcd4ed4-db73-4651-b647-124d7aef1e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8920884e-d789-4375-9e4c-8380cf986a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0b79dda-746f-4044-a2f1-9d34f25e4a6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f1eb200-1fe7-4a4c-853d-c613fc4fbd62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1ffa482-f10d-46b5-be23-0774286e40cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46dfea01-da2a-488e-88ce-a31234cb7846",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6dbd761-88b9-4800-b394-0a93e7219ace"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a67aed1f-7c0e-45e8-b6e9-db7bdfef64cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fc6e14a4-d332-4760-934c-af48c53ea034"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef3a78c7-4cbb-4809-b35a-582228a80bc3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "080c598b-88e3-4a44-9b09-e3a273f2e2cd"
            }
          }
        ]
      },
      {
        "id": "e61855aa-a0b5-4049-973c-ff2057147817",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3979a1b1-d635-4ccc-a2f2-b6cee4654dc6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44dfaa32-15ec-44db-bff6-544afd7f8001",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2a0d6c3a-3475-4b7e-94dc-de4c2273f2f0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4f20189-3c54-49ff-ae47-762b86a8fb49",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2590a502-7c40-4733-bc62-e13db81e9ec2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 22
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 620.0115830115828,
      "responseMin": 10,
      "responseMax": 4864,
      "responseSd": 673.7539420168226,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1676853785522,
      "completed": 1676853956169
    },
    "executions": [
      {
        "id": "f72cdf0c-d04c-4e14-8697-f5caabd0549d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6c56afd7-2230-428a-a1d8-61dffd947424",
          "httpRequestId": "b14a2733-7e44-4e3d-8685-f7e6e489b4cc"
        },
        "item": {
          "id": "f72cdf0c-d04c-4e14-8697-f5caabd0549d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a2d9a738-4f5d-461b-a87e-1ea46eb85829",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "88af10ef-13e5-495a-b9e0-46cfab62b291",
        "cursor": {
          "ref": "e6aaeb74-dce4-415d-b8e8-73c61d304a26",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9d949d21-be80-43cb-b729-7210188b0dc3"
        },
        "item": {
          "id": "88af10ef-13e5-495a-b9e0-46cfab62b291",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0c3fa5fd-b52f-472b-a3b4-15e1ba2f65ad",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "3b8cfab9-87e3-4ec9-a0b2-ebffc2eedcaa",
        "cursor": {
          "ref": "7c08c531-b6be-4913-8e6c-d84642cd7140",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d4602695-a219-4327-b6bf-4835e083b506"
        },
        "item": {
          "id": "3b8cfab9-87e3-4ec9-a0b2-ebffc2eedcaa",
          "name": "did_json"
        },
        "response": {
          "id": "3a543acf-2f94-48d5-82a3-777fdd519631",
          "status": "OK",
          "code": 200,
          "responseTime": 951,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7cf363-c990-4ffd-83aa-28892e649fe9",
        "cursor": {
          "ref": "2e9e8159-da4c-48b8-80ca-d44ab9bf8fb2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "582da564-1d1f-4c8a-995c-1bb627e21e00"
        },
        "item": {
          "id": "5a7cf363-c990-4ffd-83aa-28892e649fe9",
          "name": "did:invalid"
        },
        "response": {
          "id": "ec8b2f87-a66f-4186-8f6f-49df58d3056b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7cf363-c990-4ffd-83aa-28892e649fe9",
        "cursor": {
          "ref": "2e9e8159-da4c-48b8-80ca-d44ab9bf8fb2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "582da564-1d1f-4c8a-995c-1bb627e21e00"
        },
        "item": {
          "id": "5a7cf363-c990-4ffd-83aa-28892e649fe9",
          "name": "did:invalid"
        },
        "response": {
          "id": "ec8b2f87-a66f-4186-8f6f-49df58d3056b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0287e924-9271-4cd4-b0c5-6cddfd2f1859",
        "cursor": {
          "ref": "09dae7f5-9232-4dfe-a8ad-94cb82e6ebf9",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c41d691a-9569-4d04-8405-c6c93e5d4dac"
        },
        "item": {
          "id": "0287e924-9271-4cd4-b0c5-6cddfd2f1859",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4d6f3635-9de0-410f-9b66-190335eee518",
          "status": "Not Found",
          "code": 404,
          "responseTime": 982,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c519032c-fd8e-42f6-a11d-c2e96954b630",
        "cursor": {
          "ref": "36573497-2bbf-4692-9b9c-af63f42bce3d",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b48befbb-cec5-40b6-a681-13bd1a94e1d6"
        },
        "item": {
          "id": "c519032c-fd8e-42f6-a11d-c2e96954b630",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fb50b7cd-6661-4a42-bd43-cefbaf74c683",
          "status": "Not Found",
          "code": 404,
          "responseTime": 528,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875f59f7-b0dd-4e57-be99-b4db8fdd43c1",
        "cursor": {
          "ref": "32c99384-048e-42ed-ac9d-fab1614bd292",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4c70759c-3b49-4582-9a54-0c9416d93a23"
        },
        "item": {
          "id": "875f59f7-b0dd-4e57-be99-b4db8fdd43c1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c8570279-9e11-4b00-ad5f-4b5e7c2ea8ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a51565-f426-4325-b94c-a501e1b84e42",
        "cursor": {
          "ref": "1be744fe-6ad7-4df5-bf20-ece12b236290",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5fc1b5db-e521-4ad4-a827-4ef36de56b8d"
        },
        "item": {
          "id": "f2a51565-f426-4325-b94c-a501e1b84e42",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9805159e-34b1-490f-979a-2a5940a7a978",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 526,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a51565-f426-4325-b94c-a501e1b84e42",
        "cursor": {
          "ref": "1be744fe-6ad7-4df5-bf20-ece12b236290",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5fc1b5db-e521-4ad4-a827-4ef36de56b8d"
        },
        "item": {
          "id": "f2a51565-f426-4325-b94c-a501e1b84e42",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9805159e-34b1-490f-979a-2a5940a7a978",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 526,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7dbfb5-0c1e-44a3-91e9-6af6cdc5eca7",
        "cursor": {
          "ref": "2b719a77-c701-41c8-92e1-37219366a9c2",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "774104ea-43c5-4b7a-b0bd-573e40a50911"
        },
        "item": {
          "id": "1c7dbfb5-0c1e-44a3-91e9-6af6cdc5eca7",
          "name": "identifiers"
        },
        "response": {
          "id": "9200b514-f8ae-4390-b280-24d73590d0b3",
          "status": "OK",
          "code": 200,
          "responseTime": 870,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7db3c07-ac6d-4096-a60c-b5ac567b4223",
        "cursor": {
          "ref": "839a4307-2452-4d45-a760-20cfcf2a7ec7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "821514d0-51e2-4bf0-8a85-6e833467f4df"
        },
        "item": {
          "id": "e7db3c07-ac6d-4096-a60c-b5ac567b4223",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f8784177-8ef5-4411-a98f-24cde489241f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7db3c07-ac6d-4096-a60c-b5ac567b4223",
        "cursor": {
          "ref": "839a4307-2452-4d45-a760-20cfcf2a7ec7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "821514d0-51e2-4bf0-8a85-6e833467f4df"
        },
        "item": {
          "id": "e7db3c07-ac6d-4096-a60c-b5ac567b4223",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f8784177-8ef5-4411-a98f-24cde489241f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c746b77-f0fa-4456-acd7-a22a0c9feb1e",
        "cursor": {
          "ref": "4b6d7a53-bacc-4a45-bb2d-697e3e8b3e26",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2f9ff266-237b-44ab-b15c-2769eea4d7ca"
        },
        "item": {
          "id": "5c746b77-f0fa-4456-acd7-a22a0c9feb1e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f6a571f3-2b8b-488e-bf43-282fcf472938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f382303-ec2a-44e9-9eae-2c0c1688f7aa",
        "cursor": {
          "ref": "2ec6ae33-0df8-4d1a-8c6f-0dc338f26dcd",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "08f2142c-6152-41fc-8998-57c63b46d3c9"
        },
        "item": {
          "id": "3f382303-ec2a-44e9-9eae-2c0c1688f7aa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b9aca65c-d941-4c4c-8d7c-2d7622f46975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613d7d8b-64da-4cb1-8851-9302b84e9d82",
        "cursor": {
          "ref": "b1d04867-1724-4254-9359-966febb4a772",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a5fd869a-8e7a-48ca-b973-bd665421e64a"
        },
        "item": {
          "id": "613d7d8b-64da-4cb1-8851-9302b84e9d82",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fe3f481e-6155-4063-9578-0a4c30efc04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b4fca8-45a0-4a4c-821d-4fb9a0a1e108",
        "cursor": {
          "ref": "d1d92a0b-2e0f-45a9-8482-5b9939f71520",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "10c14120-c0f4-414f-bc96-2a09db725f7a"
        },
        "item": {
          "id": "f2b4fca8-45a0-4a4c-821d-4fb9a0a1e108",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "564e9f8e-03f9-472a-b6ef-882a2950ce49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b102e0bc-cabf-429d-a657-bb311e3f3b2e",
        "cursor": {
          "ref": "9e14d263-4db7-47f6-a3d8-54b0a3da655a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "db2b02b5-07a6-477b-84c7-4f6e50a4cee5"
        },
        "item": {
          "id": "b102e0bc-cabf-429d-a657-bb311e3f3b2e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c144634e-013b-48e8-9d94-df85cfb1742b",
          "status": "Created",
          "code": 201,
          "responseTime": 2630,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:15)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:15)"
            }
          }
        ]
      },
      {
        "id": "764254a0-6adc-4f10-b95b-bb6f55a69637",
        "cursor": {
          "ref": "11bc0f7c-ad6f-4424-9da6-065a2e11be81",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f44a529b-9244-45cc-8b06-f37099e121c8"
        },
        "item": {
          "id": "764254a0-6adc-4f10-b95b-bb6f55a69637",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "25365e66-43de-418b-b14e-f44754258014",
          "status": "Created",
          "code": 201,
          "responseTime": 2729,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "3dffc2dc-7e80-4fd4-8396-39f166c7ee76",
        "cursor": {
          "ref": "391dd249-04ff-4e8a-8c14-2fba66b3ee2b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "919b68b2-c2fb-40dc-b4ba-a5feae90e660"
        },
        "item": {
          "id": "3dffc2dc-7e80-4fd4-8396-39f166c7ee76",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0581a635-02e8-4101-b4f6-5cf55d39ef20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce49f6bc-10d1-496e-96e8-f813851529fa",
        "cursor": {
          "ref": "8c018df7-7b7d-4af4-9fb3-44153b479e42",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8181aba6-53cf-45d9-9b95-2808b11c5132"
        },
        "item": {
          "id": "ce49f6bc-10d1-496e-96e8-f813851529fa",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9d754234-2271-48c6-ad87-aff434b718d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3515a443-6eae-437a-9bca-a0ef8279f1f1",
        "cursor": {
          "ref": "cf4c1bd9-b132-452c-929f-e71ca06d1235",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "31eb6239-2daa-4a5b-bd8d-f1d4a161722d"
        },
        "item": {
          "id": "3515a443-6eae-437a-9bca-a0ef8279f1f1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "827e4741-a8e0-47f7-ad27-94c3f371f644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3596b5b2-653b-4373-be2e-cace2a8d4dab",
        "cursor": {
          "ref": "95f7f50f-a7da-4050-93ce-e867670dca2d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e8c4d629-1026-439d-9da5-20a234512ce1"
        },
        "item": {
          "id": "3596b5b2-653b-4373-be2e-cace2a8d4dab",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "43deef1f-a743-434c-89ff-4f8783a80b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46675768-005c-4102-9c26-9d7bf9f00f68",
        "cursor": {
          "ref": "87ea2f0a-40f1-4152-b7d4-9e2d1b819a43",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bde11eda-f6c5-405d-9271-f952d27c4a15"
        },
        "item": {
          "id": "46675768-005c-4102-9c26-9d7bf9f00f68",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "32a0113f-29a7-4bf5-addb-26ea7a33f0f8",
          "status": "Created",
          "code": 201,
          "responseTime": 2663,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:21)"
            }
          }
        ]
      },
      {
        "id": "7bb272fc-0737-47eb-8473-93ae253991a3",
        "cursor": {
          "ref": "5de26383-d7c7-468b-9729-5da468bd94ab",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fffd9d4c-715d-4cf3-bbdc-2cc9cdb68646"
        },
        "item": {
          "id": "7bb272fc-0737-47eb-8473-93ae253991a3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "761e5df0-c7ef-492f-aa5e-38ebacc5a4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dad5de7-26a0-4953-8c16-5fb1cf567e7e",
        "cursor": {
          "ref": "8e68e639-14a9-4b32-8641-324125b3eea6",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "128ebba2-20d0-4b4f-b31e-c935b74535bc"
        },
        "item": {
          "id": "5dad5de7-26a0-4953-8c16-5fb1cf567e7e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5b16a29d-67eb-48a7-9953-a8cb26985abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0437e2f-73e5-45b2-838a-b6e9d8566865",
        "cursor": {
          "ref": "d1ee262e-9424-4dee-8ad0-bfa6965edaf8",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "14579e42-f719-49aa-93a6-51a4f90e830a"
        },
        "item": {
          "id": "e0437e2f-73e5-45b2-838a-b6e9d8566865",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "98a6cb34-fbac-4e52-aa9a-3359e05f3557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6df7e20-4aaf-4a65-8a60-03ccfcc7a79c",
        "cursor": {
          "ref": "3c4d7b16-4881-4254-b37e-66ea8aba5b53",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "dd4559a6-d97d-4ea7-9571-b4600b25cfe2"
        },
        "item": {
          "id": "b6df7e20-4aaf-4a65-8a60-03ccfcc7a79c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ba034a87-fb77-4aa2-a904-f210ed561111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94072477-ffa6-4860-b474-1dfae8df8f61",
        "cursor": {
          "ref": "292581bf-648c-402c-a4c7-741e9707376a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5c44468a-5e26-4298-ac94-1689035900b8"
        },
        "item": {
          "id": "94072477-ffa6-4860-b474-1dfae8df8f61",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "046e4e52-d5c0-43f3-9234-7ccbdd0ec5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c8c8ef-a7c1-44c8-8b6f-27e9a460e922",
        "cursor": {
          "ref": "a734cb70-b7d9-49d5-bf0f-b4092c6369be",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cee8f4ed-8097-4490-a6b7-0e4ebe36a07d"
        },
        "item": {
          "id": "99c8c8ef-a7c1-44c8-8b6f-27e9a460e922",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "91a7a673-e136-49bc-888b-6dd3be766b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472ed4cb-b601-446f-80ae-82e8ab39d039",
        "cursor": {
          "ref": "c724c93a-3377-411d-aca9-105629551a59",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c88af389-19d3-41de-ad09-3e94358ca41b"
        },
        "item": {
          "id": "472ed4cb-b601-446f-80ae-82e8ab39d039",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a5973e26-003f-49c7-b008-bc79123fd8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b820afd-35f2-4d66-a0bf-d68944477ae2",
        "cursor": {
          "ref": "eb27ee15-3caa-4dd9-9c46-1b05b4f472ba",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d5e6c72e-681c-4c62-b026-9256421c0298"
        },
        "item": {
          "id": "3b820afd-35f2-4d66-a0bf-d68944477ae2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f832ee83-c651-40ae-b076-ec66de69b02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cab6438-7d48-477f-9ac5-6220e50b0ba9",
        "cursor": {
          "ref": "06239861-2052-41a2-b848-9a4e83901525",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7ec4cd73-a83f-404a-9bbe-c76c031b8046"
        },
        "item": {
          "id": "4cab6438-7d48-477f-9ac5-6220e50b0ba9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f08b1a7e-1596-420e-9764-49fdc7c1aff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e88584-dfb4-4e98-bfb9-1e1d9033fe0d",
        "cursor": {
          "ref": "fd35dc7f-a258-402e-89e7-bbf0ba35f313",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b7962513-d157-43f7-86b0-dbab1a8bd18d"
        },
        "item": {
          "id": "e8e88584-dfb4-4e98-bfb9-1e1d9033fe0d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1cb65fe4-d01c-4c8f-9785-789e363e268b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368dd387-8e6e-4bc3-a02f-3ea726dd11f5",
        "cursor": {
          "ref": "25636851-9f1f-40c7-b5fe-cccdce0a5182",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fa3e0657-43fc-4316-9e13-4e85e0e404fb"
        },
        "item": {
          "id": "368dd387-8e6e-4bc3-a02f-3ea726dd11f5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "87e6b01f-2a7d-4aa8-9139-8ece769c38ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78f1636-419d-4ef4-82e0-23979e8117fd",
        "cursor": {
          "ref": "b1c9a637-1ebd-4947-ba3d-206aa9818701",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6d8d5b8b-a296-40dc-b599-87b7b1dee5b5"
        },
        "item": {
          "id": "a78f1636-419d-4ef4-82e0-23979e8117fd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3be2c58d-f45a-4ba8-923c-70b5ab1c3d16",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 3713,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:33)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:33)"
            }
          }
        ]
      },
      {
        "id": "1ff3b8de-2ad9-4a11-94ae-513ceb737ffa",
        "cursor": {
          "ref": "bf11c063-350e-40aa-8335-d25676d18de8",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "26669b94-921e-45a0-a7cd-6e1667be216b"
        },
        "item": {
          "id": "1ff3b8de-2ad9-4a11-94ae-513ceb737ffa",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "38fa7c7f-c7e1-4535-a784-0f482fac968c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1136,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a383d0-c2ba-4141-80dd-03c2d2bf5158",
        "cursor": {
          "ref": "e607b2fe-d734-4510-b3ca-befaca607617",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dc68ce99-cef2-4891-be7b-fed2d72ae947"
        },
        "item": {
          "id": "b2a383d0-c2ba-4141-80dd-03c2d2bf5158",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3e6dcd9f-d4ac-4ca4-85c1-6f9127084cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1571,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3871b3-ad12-4244-a0bc-6e73d390e227",
        "cursor": {
          "ref": "10de115b-a5e7-447b-a7fa-1b9d7a2f5fe0",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1a0c5d86-0a5b-49f3-8ef1-9199e9f835aa"
        },
        "item": {
          "id": "0e3871b3-ad12-4244-a0bc-6e73d390e227",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "501438f5-8c88-4148-8fef-a4fdcd65d991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 989,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52aa5886-8919-422a-b651-cd5d19dbfb80",
        "cursor": {
          "ref": "a62d9761-3d33-4134-9f89-d008f1ea0cce",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "76208309-ea94-41ec-9c6c-eab7235d264b"
        },
        "item": {
          "id": "52aa5886-8919-422a-b651-cd5d19dbfb80",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "91c34324-af22-4b08-8d0a-82cccccef8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd597c5-133d-420d-b450-853d666b7e80",
        "cursor": {
          "ref": "c2005be3-bf27-4830-ad23-2a9f449aa1b8",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "24247348-73b7-40b0-859f-a1aac6231c9d"
        },
        "item": {
          "id": "ffd597c5-133d-420d-b450-853d666b7e80",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "cf2d733e-411d-43a3-8a07-0bf499a7077c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe30f73-bbf4-44fe-a819-926bcc6619ef",
        "cursor": {
          "ref": "1dcd0448-f4f4-4a78-9279-c1e4c5f2111b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0967e108-88c2-4fac-9e3d-fff6268b2ee4"
        },
        "item": {
          "id": "4fe30f73-bbf4-44fe-a819-926bcc6619ef",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "56805eb2-325c-4606-84c1-7f485b62167f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6b50c4-ff4b-4c3b-86f8-8f4c7b634490",
        "cursor": {
          "ref": "eed36107-ab56-4f4f-8ea9-09270217ba5c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7bcc829a-6a27-4f05-b652-6675ea4ac935"
        },
        "item": {
          "id": "ff6b50c4-ff4b-4c3b-86f8-8f4c7b634490",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e049b496-b763-48b2-adda-bd77a151ffea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1f03fa-416e-4101-9245-b94668c0e51f",
        "cursor": {
          "ref": "5eac93b8-8210-44be-b717-1d6a8ba080ca",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4e570e0d-639c-4f73-8f4e-9e4bcca27767"
        },
        "item": {
          "id": "8c1f03fa-416e-4101-9245-b94668c0e51f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b6de1334-414c-4d22-9a1a-622ab262e332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa6a96e-1010-44cb-93af-f4f52e07a2ae",
        "cursor": {
          "ref": "fee7a73d-b504-4223-803b-50b3c93d2064",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "038259ff-6918-4953-a301-06ad87911332"
        },
        "item": {
          "id": "dfa6a96e-1010-44cb-93af-f4f52e07a2ae",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "46c1ba0b-fff4-406c-a000-1dd3b674f5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f1c4c7-e3a2-4dac-a621-ab6715245937",
        "cursor": {
          "ref": "a5a08e20-8188-42ae-b325-4a411b30d5b9",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b76ca261-1d00-45c9-8802-fa1d97906f0c"
        },
        "item": {
          "id": "c9f1c4c7-e3a2-4dac-a621-ab6715245937",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d7334329-82c1-4526-a2f9-329a41ac7a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8ff530-4597-4507-8388-bac825849c69",
        "cursor": {
          "ref": "4466d12a-dbd7-46c6-89de-da866943bbfe",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bbd2bc78-1a89-4979-b031-d8a8d355d243"
        },
        "item": {
          "id": "8b8ff530-4597-4507-8388-bac825849c69",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "46a8e176-1aa5-4993-a0e0-16a86a7cbdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9390e3b5-fd4a-48fc-b1f2-f134f94e7036",
        "cursor": {
          "ref": "b7a37522-071c-442d-b7d8-35f94cc076e0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "97cc0e5a-e209-47f5-b859-c91d727978ab"
        },
        "item": {
          "id": "9390e3b5-fd4a-48fc-b1f2-f134f94e7036",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d43bd049-eb57-411a-bafd-91fe8adfba4f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 618,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4753e76b-18fc-41cf-a23d-034ebb432421",
        "cursor": {
          "ref": "a0e9edf3-7b9a-4feb-9de8-9e3d6734c364",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "77b9ed9a-f3ad-4a0e-9438-6cfcf2c6da62"
        },
        "item": {
          "id": "4753e76b-18fc-41cf-a23d-034ebb432421",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cbc1c8bf-1bad-4ad5-94aa-5cc7f09a96c9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 543,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "2cce3003-5257-4d01-8e97-c93cb9dfe6c3",
        "cursor": {
          "ref": "66aa7eb1-7ca6-43e4-ab71-6f678ef6751d",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f2ba3015-59c0-4241-9368-2427814b0b90"
        },
        "item": {
          "id": "2cce3003-5257-4d01-8e97-c93cb9dfe6c3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "14acb19c-b5db-4e44-a2b4-0cb2ffa1ec44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a128d8e8-3442-470f-916d-291f450ae144",
        "cursor": {
          "ref": "b79688b9-48e5-42fa-a2f5-9b44b77be76c",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d3de498e-f36f-4a19-8c96-a1b3c004916d"
        },
        "item": {
          "id": "a128d8e8-3442-470f-916d-291f450ae144",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4d5631c5-c3ed-4379-9a83-672f3adf48bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dede4b07-feb9-4d3c-962d-70eb588ac05f",
        "cursor": {
          "ref": "77a19ece-a468-4710-91f4-85b657f4b180",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3e33402a-9408-4c16-8fb0-add6d16690c3"
        },
        "item": {
          "id": "dede4b07-feb9-4d3c-962d-70eb588ac05f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7f0889f0-e205-4b26-82a4-9bf652bc6307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b977566-33a1-4fbd-8dea-8693a56ba0de",
        "cursor": {
          "ref": "c8f6fa9d-d6a5-4719-8e3b-4599cd83a23d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "637f66a6-d168-45b9-a0ff-1ab0640772db"
        },
        "item": {
          "id": "0b977566-33a1-4fbd-8dea-8693a56ba0de",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0388c048-85dd-446a-bb4c-93f6b71226dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f16c51d-d4d4-4bd0-9de7-599847e91c95",
        "cursor": {
          "ref": "d1a1b5ed-9bd7-4288-b7da-56a39e8f5e5d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "52fd883a-2ac6-47c0-99db-a9a9884c01a5"
        },
        "item": {
          "id": "5f16c51d-d4d4-4bd0-9de7-599847e91c95",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d97c2795-9c19-495e-9bfd-6f6b53953525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dc79cb-1595-4850-b9c3-c3177c2cb5b0",
        "cursor": {
          "ref": "bdd7c49a-58c4-4665-858b-37ceaddd72e7",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f9db291b-d4a1-42ee-b379-12f929ea4f3a"
        },
        "item": {
          "id": "97dc79cb-1595-4850-b9c3-c3177c2cb5b0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ca015183-e2d9-4f4c-b900-14f81e1bd0ae",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 578,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156c246e-a1f8-4b88-8fa7-21e10daaef96",
        "cursor": {
          "ref": "a84a1412-fd89-49f0-93fe-81a06cc8c46b",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e4b661fc-a093-47f1-82da-cc209ceafedb"
        },
        "item": {
          "id": "156c246e-a1f8-4b88-8fa7-21e10daaef96",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c63f32a2-521e-4a96-bc0a-4fb12e59d9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3f8bbf-4a1b-4745-822d-71bf5ef1b7bd",
        "cursor": {
          "ref": "ad646af2-a616-492e-963e-8ed50d0fdc7f",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6ad51372-7cc6-4643-9a54-3f459babd910"
        },
        "item": {
          "id": "3e3f8bbf-4a1b-4745-822d-71bf5ef1b7bd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6df51daa-806e-4e3e-979c-96b6d4b1bbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6e109e-6691-4a73-ae84-29b293a1070d",
        "cursor": {
          "ref": "865aa987-7724-4193-8ac4-ce36234207c3",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8ef8c075-305c-4696-95d1-fe070288850a"
        },
        "item": {
          "id": "1a6e109e-6691-4a73-ae84-29b293a1070d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b73e1a11-9603-4d1f-9fcd-aa46f275d832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba3aa90-0f5f-4c6b-8061-8133dcb4eaa8",
        "cursor": {
          "ref": "360debc2-bb54-4951-ab2a-9bfc098b467d",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "39e525cc-ec64-4e40-b55a-f2657df5655a"
        },
        "item": {
          "id": "aba3aa90-0f5f-4c6b-8061-8133dcb4eaa8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c3e74801-0ae5-4977-941d-aec766b2d62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4780b767-c09f-44e8-9eea-5719673a3705",
        "cursor": {
          "ref": "4c5d3263-d03c-4548-a6cb-2aee9da85d41",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3a5cfb3f-8ee0-4ef0-a9cb-ef96a9bbbd6e"
        },
        "item": {
          "id": "4780b767-c09f-44e8-9eea-5719673a3705",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "800d25f9-45da-4674-9117-92b50b257b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b45474e-9d3d-4036-8833-2377ec1e124f",
        "cursor": {
          "ref": "6eb05ee0-bed6-459d-ad16-c014808dbaca",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "948a859b-a6bc-4873-95af-41279c82ae8b"
        },
        "item": {
          "id": "2b45474e-9d3d-4036-8833-2377ec1e124f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bf97544a-3ac3-4aa5-9512-6cda1db168da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedb5f7c-855a-4a1c-ab36-019f60455056",
        "cursor": {
          "ref": "abf0a6b2-b06b-4f37-beb6-5d945786f175",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "36b4f941-f02d-4d5d-ba52-423a78ab8ffe"
        },
        "item": {
          "id": "cedb5f7c-855a-4a1c-ab36-019f60455056",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fd04bba7-4fd6-45a3-9376-e4767be326f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adedabbf-bced-4221-8549-f4258855a772",
        "cursor": {
          "ref": "dcfdad72-2afd-42c1-9ec0-eed278217605",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d652ff4e-7e30-4001-b20a-16426e1b60f2"
        },
        "item": {
          "id": "adedabbf-bced-4221-8549-f4258855a772",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "67563433-31b6-4770-a7e5-48afdea71ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353d6680-c637-476f-84c5-ee2295dd709c",
        "cursor": {
          "ref": "c7b3abbe-0d65-42f3-9ece-868b9d469396",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b8b7f3c2-854e-4424-be9e-4c4ad50daa47"
        },
        "item": {
          "id": "353d6680-c637-476f-84c5-ee2295dd709c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d72ae601-b582-415c-8739-3da46d5adcc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253e5122-6b59-4bd2-83ac-ab3347d993ad",
        "cursor": {
          "ref": "1dc602cc-ba43-45c3-8572-274f831e1782",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "60e3be42-288c-4c8f-b36c-8a1c91f939d0"
        },
        "item": {
          "id": "253e5122-6b59-4bd2-83ac-ab3347d993ad",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b2c279ac-0d27-4260-8a26-238c0506a244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8150e88c-fe77-43cf-aae5-4672b15e5fdc",
        "cursor": {
          "ref": "1476c748-3b03-4710-9ac7-821d2f447fa8",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ec1ad33e-e9ed-441e-a44f-31d14ba73a74"
        },
        "item": {
          "id": "8150e88c-fe77-43cf-aae5-4672b15e5fdc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "240514c7-9572-4bfe-91e8-da18ef189da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d64179-01ca-4aa2-8778-afec1f7e32bb",
        "cursor": {
          "ref": "55a47fd1-5e31-4600-82e1-93a7003bb5ea",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "28213784-f94f-4db5-b8f5-e8c35e093c75"
        },
        "item": {
          "id": "96d64179-01ca-4aa2-8778-afec1f7e32bb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1cf22f4a-51b1-4c2a-a010-2702eda0c6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b76d3cb-9d0b-4b4d-9e4a-3a8195bd0438",
        "cursor": {
          "ref": "25b90acf-7395-4285-9e92-57ed6e3de4b5",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e08a4f0e-210e-4500-8d6b-5ae7559a8927"
        },
        "item": {
          "id": "1b76d3cb-9d0b-4b4d-9e4a-3a8195bd0438",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "93df5d3a-2d25-4405-a016-8831add1791d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354172cd-0e28-4bc9-a1ea-c7e1bfd7d88c",
        "cursor": {
          "ref": "48cac12e-1d50-486e-ab2c-faa2eabeff3b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e0ced767-7832-48b8-9d60-d21d2f3335b0"
        },
        "item": {
          "id": "354172cd-0e28-4bc9-a1ea-c7e1bfd7d88c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "980ea619-7e69-465a-a668-b4b5ea0b81fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a9f13d-94e3-4745-ba63-d19197b8c945",
        "cursor": {
          "ref": "0805987d-701e-49d2-9b74-f3567378fbd0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fb0f51fd-93d2-4c52-aa16-eacec58f19f1"
        },
        "item": {
          "id": "27a9f13d-94e3-4745-ba63-d19197b8c945",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d14234d9-c378-49b0-b1b5-b2109e8cb52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1b6a30-f2b1-4a03-96c0-433a0d5f0c43",
        "cursor": {
          "ref": "64582c05-3757-4a42-bff0-0c7d1db8f889",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0a026c67-c208-4ed2-997b-da5cd6837d62"
        },
        "item": {
          "id": "0f1b6a30-f2b1-4a03-96c0-433a0d5f0c43",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "93eace79-580d-412a-b524-34a3a5928e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321d5584-48f5-4d0d-959f-15b92ad5df33",
        "cursor": {
          "ref": "0f588525-e77d-4056-a851-416d39409454",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "696aef98-3d8d-4986-b769-0e55c0b723ce"
        },
        "item": {
          "id": "321d5584-48f5-4d0d-959f-15b92ad5df33",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8e92bb28-4834-41b6-a727-dd88b77a8ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8a15b6-2056-4333-af1c-a3e3fd868e54",
        "cursor": {
          "ref": "d03255eb-43ea-49f5-96c8-ee80ac8c9c3b",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6d896e34-342e-4cd4-b450-a045877fb626"
        },
        "item": {
          "id": "be8a15b6-2056-4333-af1c-a3e3fd868e54",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c3d5de3e-959c-4073-83b8-d65658e2e38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a751e86-57d9-481d-ae6f-663aebbe3f2b",
        "cursor": {
          "ref": "36e17812-c7cf-4b79-a791-a987bac7fd1e",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "01e57819-6290-45c6-a49e-2252e8ca8f99"
        },
        "item": {
          "id": "7a751e86-57d9-481d-ae6f-663aebbe3f2b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4427da2c-d3a9-45a8-a571-a79c29e6d064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9d655c-05a3-4046-8e5b-7822a2ade70f",
        "cursor": {
          "ref": "08546a1c-b2ad-4996-92b5-b0300355833c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7b301077-59a4-4e67-b105-548444607cc6"
        },
        "item": {
          "id": "cf9d655c-05a3-4046-8e5b-7822a2ade70f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "aafa2dbb-42f4-4e6c-b3dd-fd94b18114c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c2c022-d0cc-466d-bd75-e2aeacd17586",
        "cursor": {
          "ref": "2a001f5c-438f-4bf4-a53d-50a502b5d3c9",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d978fe51-de61-442e-bdac-cd8b5dd83f79"
        },
        "item": {
          "id": "47c2c022-d0cc-466d-bd75-e2aeacd17586",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "06ae46b0-3f49-420e-90a0-0135bbc2c791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160bc47c-0bce-4a9b-8f7c-f0ad535a0b7c",
        "cursor": {
          "ref": "ba6487b0-ef6a-41fb-8aba-ce7bc72cfd6b",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c74bdcfa-82a3-4215-aed9-0a9e62122ed0"
        },
        "item": {
          "id": "160bc47c-0bce-4a9b-8f7c-f0ad535a0b7c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7345f2da-c0fe-4db2-96a4-3b6a4cfa66a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85dfeb8-a61e-40fc-a696-f1bba5eea23e",
        "cursor": {
          "ref": "769d1300-c7c8-4b16-b07b-5e15abcf5187",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e5ce92ca-0243-4544-a04e-f82f0dc4d63e"
        },
        "item": {
          "id": "d85dfeb8-a61e-40fc-a696-f1bba5eea23e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a9b3ffa9-43a4-4c0c-b58f-c92b37ddf371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef129e7-3f12-419a-92ba-b95600c2cdde",
        "cursor": {
          "ref": "8ed00add-dcc0-4576-85cc-b8136eeff9af",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "72e09639-5169-43ba-adaf-f7442f4078d8"
        },
        "item": {
          "id": "4ef129e7-3f12-419a-92ba-b95600c2cdde",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3b5b6de0-4495-483c-918d-d87ba77a14ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9d504e-4359-4ecb-b6fd-b92d2a996dfc",
        "cursor": {
          "ref": "74d2027e-3fa3-40c7-afbc-953467494d25",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "69643b7d-a907-478a-81b1-49bedc6a7ece"
        },
        "item": {
          "id": "6d9d504e-4359-4ecb-b6fd-b92d2a996dfc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "aa0914be-8d72-4f01-8883-84601b61b0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af99c5f-90ee-4526-a8e7-546aec569b26",
        "cursor": {
          "ref": "69418ba2-d55d-4278-8bce-3f777dae330f",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4728460a-1323-41c8-9ea2-782b51822583"
        },
        "item": {
          "id": "5af99c5f-90ee-4526-a8e7-546aec569b26",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c210a341-1ede-40fd-a7eb-3db841aff4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce06ae7-67d4-4217-a892-fca19012c1ea",
        "cursor": {
          "ref": "dc2d0075-ee26-4da0-85a0-0ed7927678ab",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "67294a97-7752-4ca0-9048-8a1649a7b313"
        },
        "item": {
          "id": "3ce06ae7-67d4-4217-a892-fca19012c1ea",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2c3adccf-c194-4019-9868-36d67f9ef341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde23fb9-cf99-4952-80f7-2173533347d3",
        "cursor": {
          "ref": "7be4bd83-f6e8-419d-9b0e-6f3f90751131",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "639dbf37-7e3a-4e64-aed1-1cd01d4b137a"
        },
        "item": {
          "id": "cde23fb9-cf99-4952-80f7-2173533347d3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c7e97326-5287-49f6-a399-2bac1745b6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17440e6-1ada-4be8-9d89-41d95481362e",
        "cursor": {
          "ref": "ce89640a-4c26-48f4-be27-1b42efe0271f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fab2f561-c6d5-4c98-8d5d-49e34f90892c"
        },
        "item": {
          "id": "f17440e6-1ada-4be8-9d89-41d95481362e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5648382f-7498-402d-aa25-79085371b021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a869e21-b7a9-4431-b517-74caf0440e49",
        "cursor": {
          "ref": "903a3629-d87b-48e1-9f39-690bbc735f1d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b73dd904-3ba0-470e-b785-a5f6eaf47921"
        },
        "item": {
          "id": "7a869e21-b7a9-4431-b517-74caf0440e49",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "465767dd-8c23-42cf-89d3-ed0dcd3c8185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ced729e-1ea7-4723-9804-1162f2393e57",
        "cursor": {
          "ref": "2b483d91-9b5b-42cb-a088-ff725baf1ea4",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cccfed97-e676-4bb6-b580-32589c83eb55"
        },
        "item": {
          "id": "2ced729e-1ea7-4723-9804-1162f2393e57",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d0b97481-384e-456c-bc1a-29467c451af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4df8c4-3b3a-47ab-999c-22c74a099492",
        "cursor": {
          "ref": "8fd471f4-5098-4f87-9cc3-b5d2d73e15f5",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6c40c4a9-7782-4268-aec2-3ef0e0cd656c"
        },
        "item": {
          "id": "cc4df8c4-3b3a-47ab-999c-22c74a099492",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7c186a07-b6e6-4f57-b72e-36324fe2c3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2838588-7ffe-4ef9-b411-6538f72ae516",
        "cursor": {
          "ref": "801f0236-a3bd-48a1-a18f-5fa4d087975f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "46b0cb5f-50b6-497b-8c7b-f02b0ef8cee7"
        },
        "item": {
          "id": "e2838588-7ffe-4ef9-b411-6538f72ae516",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9df9f47f-b13f-4460-9897-2ae1646c0e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10058c2-7ded-46c9-8302-2e1368e5ea37",
        "cursor": {
          "ref": "3ee73a65-efc9-4af8-85e6-4437a4579d9f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "28786f14-2fd2-4fa4-abbf-85674dab7dba"
        },
        "item": {
          "id": "c10058c2-7ded-46c9-8302-2e1368e5ea37",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "96752f82-a25d-4fd8-bcab-fc1582b8f82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a024812d-6b8a-4a73-bab4-e538dfd7ed72",
        "cursor": {
          "ref": "f99b363e-3e84-4678-bac6-e7dfbb2eb2aa",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cab78911-4f3b-48b9-be48-ada728299c1e"
        },
        "item": {
          "id": "a024812d-6b8a-4a73-bab4-e538dfd7ed72",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bcac42b3-b89e-40b7-9c28-205601722b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e767f011-616a-4747-84a0-1ae0ce7dec6a",
        "cursor": {
          "ref": "c5c8a7ab-5250-4ded-9a10-759828d92329",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b152430d-04bd-41d3-8383-139b3d0ed7e8"
        },
        "item": {
          "id": "e767f011-616a-4747-84a0-1ae0ce7dec6a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bdd64e5e-8f0f-4ed4-8741-625ab2f41abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280cece9-262f-43eb-a2f2-8f6a8a169366",
        "cursor": {
          "ref": "9c514179-5ace-41fe-aed6-0f4be9eff2de",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "47181241-4e9c-40cd-b3c0-ef0696585d5e"
        },
        "item": {
          "id": "280cece9-262f-43eb-a2f2-8f6a8a169366",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1032ddec-b20f-4535-93bf-ce634aa3f504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7eac093-e6f2-4e75-9334-6375080f3d6c",
        "cursor": {
          "ref": "c834de53-72cd-40d1-b7e0-8409f902e2df",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2ca756a8-a3df-4afb-9f8a-2a67497ab0e0"
        },
        "item": {
          "id": "c7eac093-e6f2-4e75-9334-6375080f3d6c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "60f6043a-8b79-40d9-91e1-9c4c8d73907e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4da204-09a8-4da7-ad63-b6a9257d21d3",
        "cursor": {
          "ref": "175c3b07-b2ee-44ed-9c83-3380316aee09",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7a334548-e8b5-4d94-a066-b8664c8220b4"
        },
        "item": {
          "id": "bb4da204-09a8-4da7-ad63-b6a9257d21d3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3a8f9892-975d-4551-b785-3d19cd9f1a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf2fded-4be2-4525-86b6-16611e3f055a",
        "cursor": {
          "ref": "b367d6e1-706e-4977-9564-270b4e367399",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "007048dc-95e4-4261-9fef-c2d24ec94b7a"
        },
        "item": {
          "id": "eaf2fded-4be2-4525-86b6-16611e3f055a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bf48cf99-ef45-4269-8899-cf47079ed150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902b41ab-f955-4eaf-a7e6-943ff470aac5",
        "cursor": {
          "ref": "bba9b8a4-3306-48b2-b748-bd9196f5b0d5",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "09221ef6-024a-4d0c-9dda-eaa3db8e3aef"
        },
        "item": {
          "id": "902b41ab-f955-4eaf-a7e6-943ff470aac5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "450407df-d694-4720-9a4c-e47e2aed3875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adaa285-61aa-432c-b62b-57cdefd9db23",
        "cursor": {
          "ref": "aa969e28-1e67-4b7d-bdc1-5c94fb7920b1",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5d49cf8f-863e-4d38-9b93-693a61ee33a8"
        },
        "item": {
          "id": "0adaa285-61aa-432c-b62b-57cdefd9db23",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f18c5905-6183-452a-a2ab-fb7d246f365d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db4a769-690c-4558-a8a2-506f95861f68",
        "cursor": {
          "ref": "b246aece-6c39-42bb-82ac-749664731959",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7d467030-905f-4f43-bce2-aed1fc92b6f7"
        },
        "item": {
          "id": "8db4a769-690c-4558-a8a2-506f95861f68",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "698388ba-c6ba-4073-a81a-6bd155f9f526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51b3f96-8bf2-4d1f-9e58-61d05905a090",
        "cursor": {
          "ref": "193dcc53-3d95-49a6-adfe-a7940c0244be",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9309fdb7-7a97-4350-8fd8-672ea4920af3"
        },
        "item": {
          "id": "f51b3f96-8bf2-4d1f-9e58-61d05905a090",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ce00519c-2037-408d-98d6-fefd47ceebde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d1c08d-7492-442e-b2de-11ad51d4e1d6",
        "cursor": {
          "ref": "8c3a4f9e-911c-4956-bdc4-83d38b199d37",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a83a4b89-5412-4f88-a3b9-9f6d506185fd"
        },
        "item": {
          "id": "47d1c08d-7492-442e-b2de-11ad51d4e1d6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "be506926-9fc1-4bf2-8440-985f035d6360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0dc6e5-2cec-46dc-ad7f-f62c0d668dbc",
        "cursor": {
          "ref": "29052a30-7fba-4b32-b419-3a0382a88ee5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "aa4ea8f5-fec4-4e1a-9066-f381be5bc46e"
        },
        "item": {
          "id": "ef0dc6e5-2cec-46dc-ad7f-f62c0d668dbc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "97d1f239-5eb7-4b06-8ebf-21f5843cb233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f83e49-7a43-43e3-af26-e7cfc8753b6c",
        "cursor": {
          "ref": "c1a30dd4-c19a-4405-b3d8-3139d1eb51d8",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c36c1749-f0d1-439c-b9e1-f65820f1651b"
        },
        "item": {
          "id": "68f83e49-7a43-43e3-af26-e7cfc8753b6c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "14e8e088-ab54-4c05-bcb4-e2e08049c0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f80ab8d-13f1-497a-a491-d61462519fc6",
        "cursor": {
          "ref": "1de7febc-6f9c-4369-9310-0780f92a0ac9",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4153754b-07b4-4117-9370-a37de8c481d3"
        },
        "item": {
          "id": "2f80ab8d-13f1-497a-a491-d61462519fc6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "72fc6627-6148-46e6-8413-790fd78b9859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2d3a6a-2655-4d02-9a85-b557123d8147",
        "cursor": {
          "ref": "2b4746f2-58fc-4bd4-801c-ee4be623f298",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b6409734-9481-4a40-9ea9-9ceb70ca1892"
        },
        "item": {
          "id": "dd2d3a6a-2655-4d02-9a85-b557123d8147",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3c72e13c-4d54-4357-bd8f-744dc84a7c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deeaca31-15bf-4acb-8624-5b524e6ae168",
        "cursor": {
          "ref": "a769860c-fa57-475f-a3d7-4ffd3f0be1fe",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b9eb9c1e-f3ca-4692-96a7-16cd7de4f564"
        },
        "item": {
          "id": "deeaca31-15bf-4acb-8624-5b524e6ae168",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3a6ffdc9-8aa8-43a3-8db6-4700cfba3b06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3675c7-b58f-4c13-be5e-1f29d01e7c7a",
        "cursor": {
          "ref": "1ba03976-0f7f-4de3-9ac7-79f2b101f20d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0e0789cd-1fb7-46e5-af63-9cdca96a1624"
        },
        "item": {
          "id": "2d3675c7-b58f-4c13-be5e-1f29d01e7c7a",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "4562a5e3-c034-49bc-8487-4a41f22b4cd1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 506,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0309166d-5a22-46ec-a2cd-2f1cf3f9933a",
        "cursor": {
          "ref": "930d02c2-8011-4f4e-9c24-a6f4385cee55",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "71df09db-c9f4-4503-b442-55b6759d8931"
        },
        "item": {
          "id": "0309166d-5a22-46ec-a2cd-2f1cf3f9933a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b2467c0c-63fe-4450-9ef9-50a37ec19f91",
          "status": "Created",
          "code": 201,
          "responseTime": 4607,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fa7d5c-987a-4a89-9f36-c180d143d4f5",
        "cursor": {
          "ref": "56864a2b-b4da-4a60-92cc-e637ad7bc33b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7b677e38-f5ab-4443-bd5a-725efe67ed91"
        },
        "item": {
          "id": "17fa7d5c-987a-4a89-9f36-c180d143d4f5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dc25ffa9-91d2-4120-8820-d62ff65dc313",
          "status": "Created",
          "code": 201,
          "responseTime": 4491,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "967055de-81a9-4455-b403-c5a71e563d8f",
        "cursor": {
          "ref": "28455cf8-a07a-4dbb-ae59-86d6adfc063e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3a46d96a-60c4-43b2-886b-07e2625fb0d5"
        },
        "item": {
          "id": "967055de-81a9-4455-b403-c5a71e563d8f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fa94c3dc-fa5e-408d-bb26-80b1cdbf301a",
          "status": "Created",
          "code": 201,
          "responseTime": 3928,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd2b5b3-dffc-42b3-8d3a-056eb4b9c5ff",
        "cursor": {
          "ref": "5a44ff34-9ef1-400f-8d97-51cebd44160e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ebf93da0-6b6f-4f7c-8c60-a43f3192b498"
        },
        "item": {
          "id": "acd2b5b3-dffc-42b3-8d3a-056eb4b9c5ff",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a2ea12d2-1dab-491d-8e7d-8f90e96210df",
          "status": "Created",
          "code": 201,
          "responseTime": 4306,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb51f57-fb10-4163-943a-b61d42f428a7",
        "cursor": {
          "ref": "88bf542e-8b85-4c02-896f-5ae272eba300",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7e4847e2-5074-4a54-a029-2b2139ef9af2"
        },
        "item": {
          "id": "beb51f57-fb10-4163-943a-b61d42f428a7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9754a351-cc3d-4863-8353-0fb229be1080",
          "status": "Created",
          "code": 201,
          "responseTime": 4864,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "b629b865-d5c4-40c9-98fd-a20ba7d4d552",
        "cursor": {
          "ref": "231bf41f-4bb8-4123-a54e-8ee9b023b38a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7dcbbaa1-0122-4c00-a27c-5bdef0808c16"
        },
        "item": {
          "id": "b629b865-d5c4-40c9-98fd-a20ba7d4d552",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9ac635aa-7559-4f96-9173-c11f3967fe29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b629b865-d5c4-40c9-98fd-a20ba7d4d552",
        "cursor": {
          "ref": "231bf41f-4bb8-4123-a54e-8ee9b023b38a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7dcbbaa1-0122-4c00-a27c-5bdef0808c16"
        },
        "item": {
          "id": "b629b865-d5c4-40c9-98fd-a20ba7d4d552",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9ac635aa-7559-4f96-9173-c11f3967fe29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0059bc58-4162-44eb-8bac-b175869c787a",
        "cursor": {
          "ref": "a515133b-173c-45a9-9c97-c68e5f3d1581",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c4bc0cc5-a923-417c-8566-f953809faa3f"
        },
        "item": {
          "id": "0059bc58-4162-44eb-8bac-b175869c787a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eba1ca98-e995-4158-8029-a6c085fc5a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e334fa-1f90-40dc-8c56-e6ef0acd99c5",
        "cursor": {
          "ref": "e166d84f-f458-40ba-b416-99100de63460",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d968a731-003c-4ebb-a3aa-b89409e0ee36"
        },
        "item": {
          "id": "f4e334fa-1f90-40dc-8c56-e6ef0acd99c5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "00dc53e4-f243-4cc2-b492-d281d921e074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcefb9d-3c60-42c1-8b20-80c5a257b148",
        "cursor": {
          "ref": "17d7a138-d269-462d-80d2-d940a8914fe1",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7f81498c-68d5-4d6d-9254-3de60a4ff50b"
        },
        "item": {
          "id": "9bcefb9d-3c60-42c1-8b20-80c5a257b148",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "23134fb1-59cb-48af-97e1-d4fb09fff877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06324b5-80b1-4b0d-8f6a-509da5f2a441",
        "cursor": {
          "ref": "ed83a96f-8aca-49cb-80bc-04baf9ee2522",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d8673d80-c20a-4912-a23b-e036f6a6ce93"
        },
        "item": {
          "id": "e06324b5-80b1-4b0d-8f6a-509da5f2a441",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "de4080a4-f25a-4625-9e24-9bac9c379bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f987e78a-93ed-46d7-b5b4-f5bd07994e0c",
        "cursor": {
          "ref": "0b5c1ccf-6950-486a-b46e-8cac2b453d41",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "36773fd0-9df2-4adf-a0af-ca26a93bcf08"
        },
        "item": {
          "id": "f987e78a-93ed-46d7-b5b4-f5bd07994e0c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f0c067d9-a60d-4c64-b4a5-5f8fea6019c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc1968c-5692-42db-9417-9b6614d4ce22",
        "cursor": {
          "ref": "fa0d7a6b-2a44-407e-a740-6a470b712a01",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5ac19988-945e-4906-8fc7-017a42d034de"
        },
        "item": {
          "id": "6dc1968c-5692-42db-9417-9b6614d4ce22",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "99578110-1a34-4fcb-954a-5b7ae3ac1c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1003,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bedd8ee-19e7-43eb-9e43-84888c909cf4",
        "cursor": {
          "ref": "5e8b6d6b-0565-49af-9087-8072b79238a1",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e4d377e4-3cb2-44dc-b895-fb1151beac4f"
        },
        "item": {
          "id": "3bedd8ee-19e7-43eb-9e43-84888c909cf4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4b729ad5-9d42-4e8b-9add-a387385db2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a9bbf2-27bb-424e-8c43-59fdf8c74071",
        "cursor": {
          "ref": "b1322333-c2e1-471b-93e2-ec6a4f3b1e34",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d8cdd35a-afd7-4bff-a0f2-e3e531e45bd1"
        },
        "item": {
          "id": "50a9bbf2-27bb-424e-8c43-59fdf8c74071",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cf3b4504-81cf-48f2-875a-66e3fb3eb83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8c3704-33d0-43bd-b9aa-7bf5ee5e975e",
        "cursor": {
          "ref": "abf8cbf3-1d9f-4f7f-be7b-a5e6393a79cb",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e66fca97-7253-4778-a492-717982e628df"
        },
        "item": {
          "id": "aa8c3704-33d0-43bd-b9aa-7bf5ee5e975e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1388dd0f-3797-4195-a5a9-06b1c743a4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb17f00-8e32-4de7-9471-efe3c9837379",
        "cursor": {
          "ref": "96922a46-4785-4d5e-bb02-de2e4769ebd4",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c5e64eeb-aea5-49ea-a999-5d84a1ea174c"
        },
        "item": {
          "id": "ccb17f00-8e32-4de7-9471-efe3c9837379",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b8778b45-61cd-4f3e-b55e-793638c333da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbeaae35-1e58-4d7f-a541-a674be5948ab",
        "cursor": {
          "ref": "07a96393-c77e-456b-ae0a-50c9442d1bc4",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3641e4d3-f187-41d1-8afb-baf8cd3edc3b"
        },
        "item": {
          "id": "bbeaae35-1e58-4d7f-a541-a674be5948ab",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ae040fcc-5645-4c01-b580-577e28f44d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b644ab-5f22-4196-90b8-3b2efc6aab85",
        "cursor": {
          "ref": "50d941c6-3e34-45d0-9436-21d99486f652",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0574e60f-fd39-47c5-ae10-92fae8f5ff4d"
        },
        "item": {
          "id": "b2b644ab-5f22-4196-90b8-3b2efc6aab85",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "89b85aad-83d5-4dff-8c2c-a37f9f8c657e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77220e80-22b4-42fc-9450-f1fe13c0fc7d",
        "cursor": {
          "ref": "b0359e0e-8d6e-4d66-ae48-c0575f0d0a65",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6cd25e71-9c7e-433b-9503-32c6505ffe7e"
        },
        "item": {
          "id": "77220e80-22b4-42fc-9450-f1fe13c0fc7d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f79fa5a4-79fb-4b0d-b8f3-6d11b9d4459d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1481372c-88fc-4cae-be44-714dd0f02cb1",
        "cursor": {
          "ref": "e7561963-3354-4b28-8d8c-f53ece2c0eba",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e7364ba5-5445-4d4b-8493-e250865b0654"
        },
        "item": {
          "id": "1481372c-88fc-4cae-be44-714dd0f02cb1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "66f7f5b8-e801-4407-b532-6ab646cf26b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e77ec5-1e72-48f6-8aeb-5def4ae844bb",
        "cursor": {
          "ref": "0c64f68a-ed61-4a90-84a9-7fec9718972a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "910db34a-382c-4316-b7f8-f8239a56a376"
        },
        "item": {
          "id": "a1e77ec5-1e72-48f6-8aeb-5def4ae844bb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3a9c0331-636a-4248-8f27-37572818dcb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6be03bd-f338-4f28-a632-bd03a968deae",
        "cursor": {
          "ref": "f32072a8-cf44-405c-8575-7718a76372cc",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6d4b3737-5420-427f-b2a2-eaaff9819a1f"
        },
        "item": {
          "id": "d6be03bd-f338-4f28-a632-bd03a968deae",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "34b237ad-9508-4d2f-a94d-da1fd75b5428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfed57c-f51f-4cb1-8134-c8b47a7fffe6",
        "cursor": {
          "ref": "8534f77e-1677-4fec-bed3-48f7cadce46b",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c5ffb1c4-6916-45ab-a1b7-27cd8dd7dc93"
        },
        "item": {
          "id": "bcfed57c-f51f-4cb1-8134-c8b47a7fffe6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1ecfc601-88b7-432d-a0a4-517b4fd02cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5137697f-1190-4bd6-8b86-d43b90bfb424",
        "cursor": {
          "ref": "78c8024e-f472-45d2-95e9-e992994ebc8c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "37bd8789-121e-4b57-a693-c37b77a2e98a"
        },
        "item": {
          "id": "5137697f-1190-4bd6-8b86-d43b90bfb424",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f428d4bd-0bb9-48aa-87f8-b765ad775a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842c619f-78d9-4f7f-ab21-e47a61a3024c",
        "cursor": {
          "ref": "c2c3e69f-f885-4a7f-b411-f124b1dff0ad",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f7f94448-03f3-4364-ac18-b2f39befa93e"
        },
        "item": {
          "id": "842c619f-78d9-4f7f-ab21-e47a61a3024c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "05df3b5e-2f9a-4345-8092-c322a28f8e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ea644f-bb35-4535-b419-8e663e918a30",
        "cursor": {
          "ref": "b86efd06-465d-4c89-9e33-c9616f8c230a",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5748618c-5aba-445f-9254-809159cfb835"
        },
        "item": {
          "id": "52ea644f-bb35-4535-b419-8e663e918a30",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bab7a133-dd7b-47d4-b08e-3dfd834c3c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d4a70d-d6bf-434a-8b9b-6be07a1a2dde",
        "cursor": {
          "ref": "f7359cc3-c9a2-4005-bc71-baa299267077",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4f8a4643-771c-49fa-a96c-7cd454f49469"
        },
        "item": {
          "id": "c2d4a70d-d6bf-434a-8b9b-6be07a1a2dde",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ec522a89-68be-43bc-baee-d8d58f92e0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fd509f-28b1-4974-ab81-f694ddccf994",
        "cursor": {
          "ref": "384cdd26-af33-4ab6-9864-fce0416490f8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "58200bba-01e6-4cf9-94d2-0b24a2f8368c"
        },
        "item": {
          "id": "11fd509f-28b1-4974-ab81-f694ddccf994",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "44706ca0-c769-44a1-a503-65f0e9663249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ade87fe-2b96-4400-9b90-b7d4750a2304",
        "cursor": {
          "ref": "5f047ce9-97b0-4f0a-9d7e-8dd867441c32",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "26805987-d29c-4a67-a3e2-90050f550f6a"
        },
        "item": {
          "id": "3ade87fe-2b96-4400-9b90-b7d4750a2304",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a2b38c0e-a33e-4d43-8866-b0b718e66363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddab3ae-3e95-4f0b-b8fa-53809325ba03",
        "cursor": {
          "ref": "7ed90103-71cc-4d6f-b7f0-321a587b86c7",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6c8654d3-3941-409e-9293-58f01805f29f"
        },
        "item": {
          "id": "3ddab3ae-3e95-4f0b-b8fa-53809325ba03",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6be88fc5-d3c9-466c-80c5-9ffbe13cb451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440aa54c-7809-4c5d-b059-e988872be4dc",
        "cursor": {
          "ref": "f9a0c490-64d6-4eb5-b190-f225b8c52fbc",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7a2fd645-0d34-42d5-8e1b-27194787aded"
        },
        "item": {
          "id": "440aa54c-7809-4c5d-b059-e988872be4dc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "20db75cb-977a-4178-8bc3-7ed542e6e8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b8edcb-10d5-457e-9565-8544be9e8136",
        "cursor": {
          "ref": "9ac56bdb-d79b-441c-b3f8-4024400e28e5",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c9308c1d-d34b-4e96-bcbf-0ec0803694d6"
        },
        "item": {
          "id": "99b8edcb-10d5-457e-9565-8544be9e8136",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8afca044-4382-414e-81f4-1dd416857cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1177,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57bbd62-febf-4d46-bff2-dbe3b01eabcd",
        "cursor": {
          "ref": "248b558c-5b3e-41c4-a336-812c3c791f2f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5f4b6837-8119-4c78-a5a2-2ececfecf1b0"
        },
        "item": {
          "id": "e57bbd62-febf-4d46-bff2-dbe3b01eabcd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c6e50090-7d2f-4277-84a1-18c3584d1673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1232,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6b0183-e180-47c7-8643-8698e4296ee7",
        "cursor": {
          "ref": "8641cc23-0e56-4e12-bb1c-d90140717e41",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ebe860a8-698b-43cf-ad6f-be6bd115c570"
        },
        "item": {
          "id": "0e6b0183-e180-47c7-8643-8698e4296ee7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "67016e4a-b015-4ef9-867b-dfe5b3f36936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1466,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb6b556-c118-4020-874a-8216b18fb86d",
        "cursor": {
          "ref": "1e01985c-78ed-432a-b86c-9fff56aadc8d",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d3ab1e9b-07c4-4f82-959b-8b06bcd14f6a"
        },
        "item": {
          "id": "3bb6b556-c118-4020-874a-8216b18fb86d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4a643e35-e83a-4507-a0bb-144b1b9f90c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1632,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34b17f8-dd3b-493d-916d-b73971b42a73",
        "cursor": {
          "ref": "c8f8020c-7796-4878-9dc1-6a08e32c6d77",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "09d77c4f-f970-44f5-b7a7-a96059188611"
        },
        "item": {
          "id": "b34b17f8-dd3b-493d-916d-b73971b42a73",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "37d4db8c-164f-4c1b-ab94-cccd75d51f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1671,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba1be6b-b5ea-44c1-970c-8bcf754ac563",
        "cursor": {
          "ref": "ae365cff-efe7-4c4b-9e71-3a987bd17435",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9e7ab70d-d024-4d98-8ac4-77943abbc28e"
        },
        "item": {
          "id": "fba1be6b-b5ea-44c1-970c-8bcf754ac563",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5a6b9cc4-fe90-4bf7-8acf-a0361fe2b5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1296,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfead1b0-dfa5-468f-beca-40f5c6b93c3e",
        "cursor": {
          "ref": "6a9f5dd7-4a9f-4390-83d1-d4982120bb8c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f508da83-75fb-451f-9642-a87f7199417d"
        },
        "item": {
          "id": "dfead1b0-dfa5-468f-beca-40f5c6b93c3e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b1bf6749-87a7-4e95-96bd-14a0c9cd9185",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab38da08-10a1-4653-84ef-3e022e733712",
        "cursor": {
          "ref": "06477e6c-ab82-4f60-b73f-c0f34e0aedb9",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "66e31874-b955-4f9d-b0e6-b4d970e61a45"
        },
        "item": {
          "id": "ab38da08-10a1-4653-84ef-3e022e733712",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "4add8801-4147-4603-9b88-06c082e2985c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 826,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3328a49f-1a95-41c0-b6aa-8db65c4f18f9",
        "cursor": {
          "ref": "2ada69ba-9957-4bda-86b7-73a2cc14b526",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "057e49de-6299-43fb-b72c-9951549e5e89"
        },
        "item": {
          "id": "3328a49f-1a95-41c0-b6aa-8db65c4f18f9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f09ed1d2-aed7-4d94-ac96-71e96b980d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3328a49f-1a95-41c0-b6aa-8db65c4f18f9",
        "cursor": {
          "ref": "2ada69ba-9957-4bda-86b7-73a2cc14b526",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "057e49de-6299-43fb-b72c-9951549e5e89"
        },
        "item": {
          "id": "3328a49f-1a95-41c0-b6aa-8db65c4f18f9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f09ed1d2-aed7-4d94-ac96-71e96b980d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a26640-0560-4977-bcaa-3941a93e3142",
        "cursor": {
          "ref": "f3da6bd9-4124-4e3d-836f-16b0ead7bb3b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2a608ac4-a946-4e98-98ed-58a26de6f767"
        },
        "item": {
          "id": "29a26640-0560-4977-bcaa-3941a93e3142",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "73d2b16d-0fe0-4226-b892-ef87ecbd2a4f",
          "status": "OK",
          "code": 200,
          "responseTime": 435,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "c924d921-cc68-4a22-bd64-efe35c032a52",
        "cursor": {
          "ref": "20ee1ddd-54d4-41cc-915c-03e80ca19302",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "91b0cc2a-98e5-4ed6-ad4d-87bb03fc9e90"
        },
        "item": {
          "id": "c924d921-cc68-4a22-bd64-efe35c032a52",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "090b29b4-f592-43df-931f-7f1f42670173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3150e9e-d333-4d5b-9884-13a684e0b791",
        "cursor": {
          "ref": "a5795c01-a433-45e1-9fb9-6d5b0d47e0d8",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8106e99b-9403-4dd1-8367-f20576a764d0"
        },
        "item": {
          "id": "a3150e9e-d333-4d5b-9884-13a684e0b791",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9234b6c5-7996-48fc-b8b4-59507c71d109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa6b9e7-fa45-4e2c-b2a5-11a67f2aefd5",
        "cursor": {
          "ref": "0e8fc140-ca14-46b7-a008-ca87bed53c61",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "175e3cf6-7400-4dd5-bf15-3dae5f180971"
        },
        "item": {
          "id": "faa6b9e7-fa45-4e2c-b2a5-11a67f2aefd5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "09403809-8d83-49fd-ab32-b511ed3dcdfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ac7e1f-e8f3-4151-90cc-711477abdf43",
        "cursor": {
          "ref": "7fbad206-c0ad-4d81-998f-d7c84ceb5fdf",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2c497af8-3d0a-4dd7-a9ec-d596e6dcf73e"
        },
        "item": {
          "id": "93ac7e1f-e8f3-4151-90cc-711477abdf43",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "45bcea0b-15ef-430d-8306-7c8133fdaa5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85addf13-34f6-4627-846b-0191eedb2e50",
        "cursor": {
          "ref": "21096c32-4b92-4bac-81c6-396752d07202",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6f5588b8-5efc-4186-974f-515be02a6d7b"
        },
        "item": {
          "id": "85addf13-34f6-4627-846b-0191eedb2e50",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "27b643c4-8302-4edf-a862-2d693152a8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e47a918-b62a-4d26-bd3d-63e68ca9fbfb",
        "cursor": {
          "ref": "b85dcd29-5570-4ee8-9a7a-1a7b2201288a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "79e63ebe-b70a-4746-bd09-decd34a57aef"
        },
        "item": {
          "id": "4e47a918-b62a-4d26-bd3d-63e68ca9fbfb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "db4f9d24-bc6c-448a-8835-789adab3b05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a056794d-5819-4457-8198-5ba9e1914ac3",
        "cursor": {
          "ref": "0200f6b4-f2a7-4248-b79b-b98b0611ac88",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5a1135bc-8453-4121-b936-ffcbfac9d73d"
        },
        "item": {
          "id": "a056794d-5819-4457-8198-5ba9e1914ac3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5fa0e37d-5308-4bfc-8501-3a719bc2774e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534f2f63-dda6-4ddb-bf7e-538baa8fc037",
        "cursor": {
          "ref": "45a8b2b2-b976-4524-98dc-060c013b641b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b33790b4-7321-42bd-abbe-37f9bbaef626"
        },
        "item": {
          "id": "534f2f63-dda6-4ddb-bf7e-538baa8fc037",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1c447ec2-206d-4639-abc5-46ea9d53600a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c358e2e9-2eea-42e2-83b4-e912c7e8fbdf",
        "cursor": {
          "ref": "12b23f65-7500-4a98-95ef-994e6cecc09a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8972a7b8-c10a-4617-8a04-759cb78e07e4"
        },
        "item": {
          "id": "c358e2e9-2eea-42e2-83b4-e912c7e8fbdf",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "64ecc24b-d19c-4847-8c1d-a6866c786e1b",
          "status": "OK",
          "code": 200,
          "responseTime": 376,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:153)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:153)"
            }
          }
        ]
      },
      {
        "id": "3f4b499a-871c-431c-974b-7ba8bbbd458a",
        "cursor": {
          "ref": "7b727124-edc8-482e-a08c-87be7a8011e6",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a0fe0cf4-6196-4e22-add1-c770b38a36a1"
        },
        "item": {
          "id": "3f4b499a-871c-431c-974b-7ba8bbbd458a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1a8eceaf-dd5a-4b5a-b2e1-5657648b2b06",
          "status": "OK",
          "code": 200,
          "responseTime": 371,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "7cb02115-bdcc-435e-9312-3bb615351b7c",
        "cursor": {
          "ref": "3976b14e-63c2-4054-b7ef-e0922c98569b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "85d82d42-c473-49dc-a06d-69b590b119a9"
        },
        "item": {
          "id": "7cb02115-bdcc-435e-9312-3bb615351b7c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4063b63b-36c7-4aa3-bcaa-cebbb4a938fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819d6bf7-22f7-4d91-b9b8-e770b7c8fde5",
        "cursor": {
          "ref": "8c4dd622-b07f-42ae-a160-dd28da749d2f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8d8a039a-ef43-4c44-a883-08b6f0e0b999"
        },
        "item": {
          "id": "819d6bf7-22f7-4d91-b9b8-e770b7c8fde5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "03a92e88-821d-4270-b131-4e3ce12c21f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41d27de-8f3f-4419-8978-ba7bcfd1d4d7",
        "cursor": {
          "ref": "3e797de6-954f-4143-8c90-c1ed761a6dea",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cc3af70d-7435-4095-b7d6-815808b1a65a"
        },
        "item": {
          "id": "a41d27de-8f3f-4419-8978-ba7bcfd1d4d7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "25ad7200-a852-48de-95df-61794d319400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b100f82d-55f6-4843-87c4-cd1bfa9e7e9f",
        "cursor": {
          "ref": "ce1df259-1283-49d4-a216-1b4245cbe274",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5e02ce6a-d8d1-4837-81d9-cdac61f31289"
        },
        "item": {
          "id": "b100f82d-55f6-4843-87c4-cd1bfa9e7e9f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d3acc276-c490-4064-a997-665c0c33e12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b1847a-a284-4276-a91d-e48c9542ec9d",
        "cursor": {
          "ref": "a2741dd8-1d98-4669-80f7-b34001445232",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a64c8c18-6684-4bff-b3e8-17c631945916"
        },
        "item": {
          "id": "52b1847a-a284-4276-a91d-e48c9542ec9d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "43178da5-fff3-44f8-87e2-3bf83fffca27",
          "status": "OK",
          "code": 200,
          "responseTime": 883,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:159)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:159)"
            }
          }
        ]
      },
      {
        "id": "3063390c-7fe8-43e9-926e-210f071568b2",
        "cursor": {
          "ref": "32f1f44b-c735-4496-9c4f-67a7ed7515dd",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f01c9525-1ab3-4035-b348-fabf08028f35"
        },
        "item": {
          "id": "3063390c-7fe8-43e9-926e-210f071568b2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6f9818b6-6525-495a-adc6-3d924d9dae68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de35186c-68b4-4041-bde3-120d24214c99",
        "cursor": {
          "ref": "1bf2ed0c-1cc4-463a-a988-d7e27084f247",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "aae867d8-1f92-4e15-916d-b748c866ef25"
        },
        "item": {
          "id": "de35186c-68b4-4041-bde3-120d24214c99",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ddba292f-2fae-44fa-b127-ca5225e7acab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6127dea4-7299-41d4-9aed-f06203e7d2c8",
        "cursor": {
          "ref": "1aedb3e0-2ebb-42bb-9332-f4c228fde144",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "162ef09a-b17a-4ffd-ab56-604cef09f86a"
        },
        "item": {
          "id": "6127dea4-7299-41d4-9aed-f06203e7d2c8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "013801e6-6476-472f-b451-bc0e3f31a2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3df277d-a7ae-49f1-a168-defbb0b3341c",
        "cursor": {
          "ref": "9dee31eb-43cd-4ceb-ba0d-8f769cf34301",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fbe797ab-1535-4234-8750-69fb79d08425"
        },
        "item": {
          "id": "b3df277d-a7ae-49f1-a168-defbb0b3341c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "db3a76c9-5c13-4755-8efb-13549a78a86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dc07af-c00a-4f63-b995-b1af25025026",
        "cursor": {
          "ref": "8ba443f4-f7ce-43d8-8cb1-08c4db557edd",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f7a532f4-9fdc-4f41-a03d-46e30ccea6b2"
        },
        "item": {
          "id": "a5dc07af-c00a-4f63-b995-b1af25025026",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5cc675ab-c534-46eb-a5a0-97248b2e6579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990d7092-ab80-4e4a-b1ff-010aeb18ac6d",
        "cursor": {
          "ref": "3785f0c8-a2b9-4a91-827d-e7ec407c12ff",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "967d530e-20b7-4882-ba4d-a672943fa9b9"
        },
        "item": {
          "id": "990d7092-ab80-4e4a-b1ff-010aeb18ac6d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bba5d8e3-d1f6-4ad8-a90c-d951d8a43934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82179d19-c17d-44c1-9cd2-80f7e84ce580",
        "cursor": {
          "ref": "69d446f3-3ed3-43c7-a045-80e3ea255e0c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "041169b8-c51c-4df1-b4c6-62a8f6fbdac2"
        },
        "item": {
          "id": "82179d19-c17d-44c1-9cd2-80f7e84ce580",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "23703844-1b1b-40a4-ac78-ae916e8fd268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02619f7d-05bb-4f90-80c0-63127077d5fe",
        "cursor": {
          "ref": "e391c2bb-a611-49ac-a336-1e0848d70843",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fa9f240e-6004-4896-9014-5e2073df9aa9"
        },
        "item": {
          "id": "02619f7d-05bb-4f90-80c0-63127077d5fe",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2e226f34-b850-471c-a8a7-a2b12a8ec5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9009c7f-b9b6-419d-b847-841cacf08d3d",
        "cursor": {
          "ref": "07fd3e03-940e-46be-a8a0-5ae9afcdd4c5",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "43c3ab56-18cb-47b1-bec9-f7652ca4f34b"
        },
        "item": {
          "id": "d9009c7f-b9b6-419d-b847-841cacf08d3d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "60183cca-7ea5-4ba7-a039-bd40b31e9214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d059f639-c3ae-4246-b086-e6463b2e32de",
        "cursor": {
          "ref": "8d03886a-d4b0-4d84-9758-9aca494bc012",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4cd38a71-c976-40c0-8cf4-4159f20b59f1"
        },
        "item": {
          "id": "d059f639-c3ae-4246-b086-e6463b2e32de",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b98cb2a3-5c16-44d7-b931-780d6ce0f1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bdae56-bb24-40f1-b938-3956671bd6c4",
        "cursor": {
          "ref": "8e2e59e9-db5e-4b94-9f7b-e47cbdfaa8ed",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "985d79ed-9348-4041-90a7-0d41de8db9cf"
        },
        "item": {
          "id": "06bdae56-bb24-40f1-b938-3956671bd6c4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a76d07da-49a8-45c6-86ee-002075b73f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3105d5a-25c7-4c23-ba48-0593e68092d1",
        "cursor": {
          "ref": "976bcdaa-bcb1-4410-8ac8-52bc8b63f8ed",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3a1595e9-3952-468d-b187-1819e5702b41"
        },
        "item": {
          "id": "a3105d5a-25c7-4c23-ba48-0593e68092d1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6474d89f-17f8-46e7-944f-f418d507d8f1",
          "status": "OK",
          "code": 200,
          "responseTime": 320,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:171)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:171)"
            }
          }
        ]
      },
      {
        "id": "910694e3-f1f8-4d51-aec7-30c9d752960c",
        "cursor": {
          "ref": "7e305af7-16ab-49c0-86a6-5629763d9f5a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "09d6a7a2-1001-4997-b315-b03b2822e723"
        },
        "item": {
          "id": "910694e3-f1f8-4d51-aec7-30c9d752960c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c1e61f4a-e69e-441f-a653-eb477350462a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d32519d-0a29-4bee-b57a-785fccf6905a",
        "cursor": {
          "ref": "6347196a-0159-48a5-b298-b6b09837a45f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "aa5e73b7-2b60-4188-b7f9-5f6a28ea392f"
        },
        "item": {
          "id": "1d32519d-0a29-4bee-b57a-785fccf6905a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "192fc545-4858-45bd-87a9-a39b637b0c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a83afe-022e-4b79-97bd-f13034ddb837",
        "cursor": {
          "ref": "daf1af25-d585-4be6-955d-b601963d962c",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2ae5e46d-9697-487b-8bce-4b66059d0a02"
        },
        "item": {
          "id": "06a83afe-022e-4b79-97bd-f13034ddb837",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "87c9f80a-789f-48dc-b99c-9eb73c35a71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deed3e51-f152-408a-866d-06026d9a25d8",
        "cursor": {
          "ref": "21b1cab0-9775-4299-8663-07f4c18a6f6d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "66aeb2b4-2a92-40a8-9f15-69ef3c8f87f9"
        },
        "item": {
          "id": "deed3e51-f152-408a-866d-06026d9a25d8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "253812d8-4bbf-4442-8d04-853898587e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed11bb1-42ed-4245-bc7e-71d3bb45d127",
        "cursor": {
          "ref": "441b2f87-3b2e-45fd-b73d-92743bbf0e07",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "65a84838-b969-4a08-ac84-0751b70d4a2a"
        },
        "item": {
          "id": "6ed11bb1-42ed-4245-bc7e-71d3bb45d127",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "40b986b1-be2a-493c-b84b-9f6ef3ed210c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6d009d-48c3-4632-9066-d0ad1a3da099",
        "cursor": {
          "ref": "b923fbf3-67a6-46f0-882e-d46b463a0541",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9b4eba53-b600-412f-8f30-292fb06a3692"
        },
        "item": {
          "id": "9b6d009d-48c3-4632-9066-d0ad1a3da099",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "71c9ef74-b857-4095-8dd5-afab44710ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b18e8a9-3c1f-45e6-9bb7-4eea17a57dcb",
        "cursor": {
          "ref": "4a9a4538-81ae-472f-94ae-9048d661f24e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "42fa1da7-cecd-4794-a9b4-89f410322c15"
        },
        "item": {
          "id": "0b18e8a9-3c1f-45e6-9bb7-4eea17a57dcb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "926220f9-f71a-4fd9-929a-e507e861301b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb585bc5-3616-4910-a7e0-2ac26537400c",
        "cursor": {
          "ref": "11e34905-dc9b-4c18-ab74-100f6acfdd43",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "70e5a489-7b44-42f9-83d8-cfdc0b36e306"
        },
        "item": {
          "id": "bb585bc5-3616-4910-a7e0-2ac26537400c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "acbc0578-3012-4228-a017-1b411b854da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc27850-466b-45ef-9bd8-1d4c46cbdc27",
        "cursor": {
          "ref": "33f52096-cd88-41b0-814e-805430bfb54c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c0ed041c-53c1-4383-88dd-37cb7921868d"
        },
        "item": {
          "id": "7dc27850-466b-45ef-9bd8-1d4c46cbdc27",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3265c94e-5957-41e7-8feb-3f00c6792e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2c9df7-0826-42ae-9810-0540b8ff0183",
        "cursor": {
          "ref": "1f8de127-4854-477c-817f-a9b5ee43909d",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "efe45959-92b8-4e6c-8b94-84b22f1a4b90"
        },
        "item": {
          "id": "0c2c9df7-0826-42ae-9810-0540b8ff0183",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5113ea3d-d23f-4416-b751-a043cda0ff78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012b20d9-6173-48e0-be90-f5451ab77792",
        "cursor": {
          "ref": "b87b99a4-08ef-459e-a613-b6ad33410c1d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a3c3c537-a810-442f-aced-6b34d19a3d60"
        },
        "item": {
          "id": "012b20d9-6173-48e0-be90-f5451ab77792",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d40ecd3e-9479-40b2-93c1-50f33210686c",
          "status": "OK",
          "code": 200,
          "responseTime": 313,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:182)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:182)"
            }
          }
        ]
      },
      {
        "id": "20805c15-ad1e-4ab7-8d7a-81de48274f84",
        "cursor": {
          "ref": "e5396359-8576-491e-9fe3-b7312c7551bc",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "27b9d70b-5ad8-43eb-83ff-f5e69af3712e"
        },
        "item": {
          "id": "20805c15-ad1e-4ab7-8d7a-81de48274f84",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5aeacca0-cb2c-431b-b610-32fd6d67feff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bcc1dc-b55e-4f49-a888-2c0e8bd65509",
        "cursor": {
          "ref": "22842fea-43e0-4315-afff-dd66b63d36d6",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4e235d39-1737-4ea1-b889-9686237bd6d7"
        },
        "item": {
          "id": "29bcc1dc-b55e-4f49-a888-2c0e8bd65509",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c6c52cca-3cb6-4170-92e3-8d70cb526bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40c55f8-1e90-457c-b634-a1bbbf4497ec",
        "cursor": {
          "ref": "d444f144-2d55-4596-bd22-8a3ccbba0e8c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "eed12cf3-16c1-40ad-9c98-abe2832553e6"
        },
        "item": {
          "id": "e40c55f8-1e90-457c-b634-a1bbbf4497ec",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c920cf08-d8b4-459d-b0de-70aaede179d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dcd350-2f1b-4434-af28-24d05ceb7244",
        "cursor": {
          "ref": "6bcf8d9e-ef5b-4588-86f1-f85c43ed41df",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "502ae006-acfb-41c2-acda-d1b052af7c53"
        },
        "item": {
          "id": "e1dcd350-2f1b-4434-af28-24d05ceb7244",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "86235759-e190-47ab-b5ab-5d2341ee10db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468c76fd-b9ac-4dd7-a14c-96e9967164cd",
        "cursor": {
          "ref": "bbba92fc-f622-4708-a4b6-4b8f408fd4e3",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "096b142e-30cb-40ed-9c85-b46c56cce23b"
        },
        "item": {
          "id": "468c76fd-b9ac-4dd7-a14c-96e9967164cd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0473a34d-621b-4d0a-8e13-1d62f0f08c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cc4262-35d4-45d8-9cee-754e346cb905",
        "cursor": {
          "ref": "91952772-b9b0-462f-b335-6aa10830ce21",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6ef0eac2-34c5-40ab-bba7-8f00908b80af"
        },
        "item": {
          "id": "c3cc4262-35d4-45d8-9cee-754e346cb905",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d5b052b1-f30b-4915-86e9-745e2f0664fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbed230-93e6-4ecb-a905-350b512c2b10",
        "cursor": {
          "ref": "630d0edc-34cf-4e9b-b60a-882fccadb938",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ed7a9fbc-4cef-4bc4-9557-b51d451799bc"
        },
        "item": {
          "id": "8dbed230-93e6-4ecb-a905-350b512c2b10",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6780bc3e-48a0-470a-92c6-d33580898025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158b540e-6f65-4182-a0e2-51e670029384",
        "cursor": {
          "ref": "bffe488e-c40d-44a7-b493-d15c3c996947",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c8de59a8-624b-4fa0-9416-99ce205edd05"
        },
        "item": {
          "id": "158b540e-6f65-4182-a0e2-51e670029384",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5237fd5c-2554-4cf1-8313-0270997a28bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67346597-cc06-4010-a6d8-0934a8fe4290",
        "cursor": {
          "ref": "b7d2cabd-21a5-4b6d-afc9-d463e9ca3d2c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9365bd9f-839f-4ea2-a149-99a74f93a9fb"
        },
        "item": {
          "id": "67346597-cc06-4010-a6d8-0934a8fe4290",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c33c0744-2113-4e18-9a90-6b13dc0b69f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ff14b6-8819-4701-a6e0-71e1228d55fb",
        "cursor": {
          "ref": "9ec9a095-22c8-476d-9b03-adb49747c20b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3d96885c-e7a5-43f2-877c-0bea907befe7"
        },
        "item": {
          "id": "40ff14b6-8819-4701-a6e0-71e1228d55fb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f09d89e6-02ca-4c7e-864d-8f1f508d94b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9a65fb-a6f1-4072-9b78-3f9f36034121",
        "cursor": {
          "ref": "3e38fac1-9e25-4c3a-a37c-03aa3dbda9ad",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ffcaff6a-55ed-4ebf-820c-2a7a76541b00"
        },
        "item": {
          "id": "0a9a65fb-a6f1-4072-9b78-3f9f36034121",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6295c0bf-3e6c-4bb9-bcd2-196336bb7f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdaedb7-5b49-473a-90c6-b7d427411793",
        "cursor": {
          "ref": "46decb64-1b81-470e-a4b8-0255298ffd18",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c0a8145c-8d55-4c8d-81c7-6ad5886c0845"
        },
        "item": {
          "id": "cbdaedb7-5b49-473a-90c6-b7d427411793",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2de11be2-031a-40db-99c3-e27de6324b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0465d166-5673-450c-b1bd-7c0d7b40b361",
        "cursor": {
          "ref": "65a7eceb-8e4e-4643-ac62-cbf811994c8d",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "871b543c-456c-4713-a7d4-dfc0c3746b28"
        },
        "item": {
          "id": "0465d166-5673-450c-b1bd-7c0d7b40b361",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "54599cc7-af79-440f-baff-31576cdede04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70252092-b95b-416e-92ea-88c5852f33ef",
        "cursor": {
          "ref": "cedd81f7-0405-4b27-b0df-597bbb8d3afe",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "207d697f-27a9-40b7-8f33-f1ca10ab63ec"
        },
        "item": {
          "id": "70252092-b95b-416e-92ea-88c5852f33ef",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b7e77f97-9af0-4869-a27d-f4e2d7ea5d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464aa376-8cd9-4659-8ed5-9b0f3447cde0",
        "cursor": {
          "ref": "fd4acf6f-72b4-4420-8db8-92b93659959d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3759c1da-f722-45c4-9466-6ea075b90f5e"
        },
        "item": {
          "id": "464aa376-8cd9-4659-8ed5-9b0f3447cde0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c7ecd8f2-9ba7-4d1b-a063-c8b7ec15874d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d602b614-2fc4-4da6-bb30-ae813f3ca7b6",
        "cursor": {
          "ref": "8bdfbe4e-15ad-44c8-b2ae-60dfa08ecce9",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "09220a92-e34e-4776-b4bd-603cf947cde5"
        },
        "item": {
          "id": "d602b614-2fc4-4da6-bb30-ae813f3ca7b6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "80a6d402-8ee8-4c7b-b687-3ab4959d08a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb203a69-5ea9-423d-9b2a-05646c22b020",
        "cursor": {
          "ref": "d9a7ca35-e458-4894-aef4-20ccce9d729c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ad4855e2-d88e-4981-8c62-4123bd6f40b6"
        },
        "item": {
          "id": "fb203a69-5ea9-423d-9b2a-05646c22b020",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "be451afa-79ae-4a30-b55e-8940f66ec578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e69539-f52a-43f1-8f61-17becfeab79e",
        "cursor": {
          "ref": "dba46b1a-be8c-448b-bb9d-ed102d5b72dc",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8e9fa80a-62c1-4166-8e25-2826300b4df3"
        },
        "item": {
          "id": "f9e69539-f52a-43f1-8f61-17becfeab79e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "29cd24e5-c0d0-4053-a925-3ff9f04d7294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea81ba38-16ba-49cd-b4cb-4b959eb2df16",
        "cursor": {
          "ref": "dedd9c2f-9008-4e95-91ee-71f224b98483",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6a1964a8-e3ef-4706-8cd8-3f927852d142"
        },
        "item": {
          "id": "ea81ba38-16ba-49cd-b4cb-4b959eb2df16",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1774a737-d658-40c9-b107-e3ec04f97010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b9ef3a-ea9a-4e23-8307-4aafeaa79913",
        "cursor": {
          "ref": "964cda23-375f-4dc6-9f91-dc491459c75b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "35ccac34-a3ef-4283-bfff-233e8b4f5d18"
        },
        "item": {
          "id": "d4b9ef3a-ea9a-4e23-8307-4aafeaa79913",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "173e9d9e-637f-4e21-bbb2-5224339a6028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a0c82b-911b-4912-89a2-f5aeda5890d3",
        "cursor": {
          "ref": "57743f34-c6b7-4748-96f5-4a417ea51534",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5c66afa2-0fcf-492e-8936-4fefb0bc05c8"
        },
        "item": {
          "id": "35a0c82b-911b-4912-89a2-f5aeda5890d3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2295a7ba-b475-4ddc-b54a-6acbfaa5f1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ead5d94-4b21-4176-9abd-ef657fe2a733",
        "cursor": {
          "ref": "85a2c9f9-8c36-4bea-857f-a48443a8e16f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e3576997-692b-4940-9445-7168b714b538"
        },
        "item": {
          "id": "4ead5d94-4b21-4176-9abd-ef657fe2a733",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f7a58352-91b5-4914-90a2-f50765a3d310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2daa5d-9041-4928-9af3-adbc44dbe971",
        "cursor": {
          "ref": "76d63194-3099-4c07-a2fe-4bffdd449893",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d2d4f15f-695f-4ab8-9519-93d81eb0d88f"
        },
        "item": {
          "id": "4d2daa5d-9041-4928-9af3-adbc44dbe971",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3d523419-d0e3-4229-9d39-5c530ce9c469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3b8d51-b7c7-4cb1-a68a-07f93762665a",
        "cursor": {
          "ref": "54483faf-03c6-4bc1-9721-f3d776426723",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a15f7487-cf79-44ba-8669-f1aad341ae1f"
        },
        "item": {
          "id": "5e3b8d51-b7c7-4cb1-a68a-07f93762665a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "746e7fe5-7d24-4ff0-9dbe-bbca01e41e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d43c37-847a-45ce-8185-bec1a20e77bf",
        "cursor": {
          "ref": "b7c4f1f2-f2fb-48f1-b774-987b675bcabd",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c31b7e2e-76f7-48f5-adc4-ee9f3debf0a8"
        },
        "item": {
          "id": "03d43c37-847a-45ce-8185-bec1a20e77bf",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d806e808-014a-4057-b0f8-68cd7201b9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007934fc-071a-4d99-a5e5-b2f6702d4400",
        "cursor": {
          "ref": "1978463c-7efa-44cc-8170-270f684d1afc",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "be4e4b24-595d-4783-8469-db542933d66e"
        },
        "item": {
          "id": "007934fc-071a-4d99-a5e5-b2f6702d4400",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "222a245c-98f3-4e3f-9f48-423427e9cd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9004c83-7ffc-4b56-bac5-3a15d89ae292",
        "cursor": {
          "ref": "42076d29-5038-4ad0-b590-8377713b46e8",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6d5051c0-e9ff-4753-9592-97321b632fbe"
        },
        "item": {
          "id": "a9004c83-7ffc-4b56-bac5-3a15d89ae292",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "028eaf71-9b7c-4be4-a5ed-05ca6ced9ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5471e8-8453-4462-91e9-bba8ce8226fa",
        "cursor": {
          "ref": "d53e99b6-d382-45a9-acf7-26cd62af575c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c9f6f66f-1289-4165-bc75-4dada5b1d54b"
        },
        "item": {
          "id": "9b5471e8-8453-4462-91e9-bba8ce8226fa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d82ca6e8-9c11-4908-92e3-cbad38fa5462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a278c54b-e046-4b75-bb03-9dbb071c2099",
        "cursor": {
          "ref": "f826c5f8-d0b4-4cc2-b643-8f5e1c39ba4d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "57f21927-c14c-406c-ad84-397c9b8900eb"
        },
        "item": {
          "id": "a278c54b-e046-4b75-bb03-9dbb071c2099",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "95a4196c-13cd-4b06-85d9-062a12a254e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee6d22c-0b0f-471f-afa2-9d24989a5154",
        "cursor": {
          "ref": "2b1bb05e-d40c-4d19-b494-0c255e1c7ef8",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "db297431-e9c6-44f7-9056-c7a778eb5d5c"
        },
        "item": {
          "id": "5ee6d22c-0b0f-471f-afa2-9d24989a5154",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c547668e-b252-4e11-881c-85b4e3c5adef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff61ff7-1e84-40f9-8690-676e29111aa5",
        "cursor": {
          "ref": "5fedda33-5e6d-4dba-8630-3b41ea566b57",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "92c45be4-d067-497e-bf45-5a13bf45e05d"
        },
        "item": {
          "id": "cff61ff7-1e84-40f9-8690-676e29111aa5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2e582e38-9d01-4d7c-ab73-9feb529d9f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e906945-cbe6-43f5-af01-8beef4d5edf7",
        "cursor": {
          "ref": "fdd512fc-135f-4540-abff-8b714e3923d6",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b627e622-143c-4787-b1b8-6f9f060110e3"
        },
        "item": {
          "id": "9e906945-cbe6-43f5-af01-8beef4d5edf7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "68c29ba9-5491-4463-811e-6b478c210b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf64655-bfee-4f10-8a37-f18d2d7f7c9f",
        "cursor": {
          "ref": "8aec24d1-6567-454c-a8ae-470e32fd0c07",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9b17363b-89e6-4b51-a14f-6bb3ac160fc1"
        },
        "item": {
          "id": "3cf64655-bfee-4f10-8a37-f18d2d7f7c9f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "95220b73-052b-4e98-8c88-98ce59ef50bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e688479a-0199-4581-97aa-eaafdd7574e3",
        "cursor": {
          "ref": "308ee602-4769-40a5-8cd3-fbafe9f25c8d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "63f30151-b626-4825-82aa-af1608dc4b91"
        },
        "item": {
          "id": "e688479a-0199-4581-97aa-eaafdd7574e3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4de97885-a4d7-42bb-93a4-8ca203215292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d987fc55-5008-4df8-9f86-500ab4883acb",
        "cursor": {
          "ref": "d6e5b7d8-01ef-40d6-9abb-fc922897e122",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "53a784a5-b5da-4873-b668-01f9d6ebf7e8"
        },
        "item": {
          "id": "d987fc55-5008-4df8-9f86-500ab4883acb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0015cce6-6fd4-4f52-98eb-0185f7e98da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e6b1fa-b803-4525-af04-d0cd3acd3132",
        "cursor": {
          "ref": "cc741f45-ae3f-44bc-816f-623bf41efab4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "eade76ea-ea4a-43d7-ac88-9580ea046efd"
        },
        "item": {
          "id": "b2e6b1fa-b803-4525-af04-d0cd3acd3132",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6c1f70c4-bda7-41da-bec1-97cfbd428e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb368850-7c3b-4c10-98d8-a5425568a1e6",
        "cursor": {
          "ref": "131cd4a7-b419-496e-914b-bb285bceff3e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "13d659ef-c341-430a-93d0-83dbc53747ad"
        },
        "item": {
          "id": "fb368850-7c3b-4c10-98d8-a5425568a1e6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0ace422c-d141-42bc-b0ff-5c6be256728c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e786f3-fe92-4827-a5f3-38e21d80e07c",
        "cursor": {
          "ref": "49c503a2-ce54-4919-827e-5ea9bd080b28",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f4b9be65-4e4a-4a54-8fe5-81218e3e570f"
        },
        "item": {
          "id": "43e786f3-fe92-4827-a5f3-38e21d80e07c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "726ea386-9b25-4ae7-b821-e2aca0914507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df62b104-af9a-4b6f-abc9-4c81a9917efa",
        "cursor": {
          "ref": "fc46e5b8-bfd8-4df7-9f41-2696feecf97a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f994de75-cfd9-4991-ad43-e396f4768df3"
        },
        "item": {
          "id": "df62b104-af9a-4b6f-abc9-4c81a9917efa",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e753a092-809f-4cdc-aa7b-cb6968e0b156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cbd112-4a27-4bb9-ac17-e6371114ba47",
        "cursor": {
          "ref": "59b30995-ac39-4301-a610-392e5b532b22",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2574d54f-2619-413e-b17b-00dcfdb326cf"
        },
        "item": {
          "id": "95cbd112-4a27-4bb9-ac17-e6371114ba47",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fe583b8f-a8f5-4511-8646-41d27f02117e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89be36f-0adc-479a-944d-c9519b42442f",
        "cursor": {
          "ref": "3a640261-3c79-4c4e-9e02-225c92b6bc6b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e53a4bad-2fa0-4482-b1eb-4cb663d4a778"
        },
        "item": {
          "id": "d89be36f-0adc-479a-944d-c9519b42442f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3af9f899-467f-424e-873e-c906b131e069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e67ff9-8515-41d5-9f9a-3d82c13f5706",
        "cursor": {
          "ref": "9a6c561e-a783-4f73-9b58-807c9ccd1a9a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d66a826e-0b2b-4b27-a5e5-933992be7105"
        },
        "item": {
          "id": "92e67ff9-8515-41d5-9f9a-3d82c13f5706",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fecf0494-e9d8-4b8f-ab4c-76ac323d1b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0512e563-01e6-4dd4-a900-a43e27951fec",
        "cursor": {
          "ref": "756c3ed0-0eb2-4ce9-9810-53e70e61db1c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "bf6b2fd5-b5f3-4f99-a9c3-94a56e790f3c"
        },
        "item": {
          "id": "0512e563-01e6-4dd4-a900-a43e27951fec",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a2c2c9ac-705c-4e7f-825d-04f03aa5c20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bda90f4-aaf0-4137-ad5f-d99ec59eb52c",
        "cursor": {
          "ref": "14105dab-ac78-4b95-bd42-3e6ea47eaa3c",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "90cd4cff-c72e-462d-b207-a62b7d45ad5b"
        },
        "item": {
          "id": "7bda90f4-aaf0-4137-ad5f-d99ec59eb52c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "57d58d0a-6ab0-4278-a021-8c40638becad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac47f244-3a1b-4897-b388-e4074452068e",
        "cursor": {
          "ref": "44ae037f-c8b2-4e7d-8493-8f3a538f1976",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c68a4e2a-9793-4368-b9eb-0e8979240023"
        },
        "item": {
          "id": "ac47f244-3a1b-4897-b388-e4074452068e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3e2fa227-63f1-43cc-8380-f4ac3a9c3d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dca5340-7d88-4358-8f71-48085f353f8f",
        "cursor": {
          "ref": "43cae290-a3a5-43fb-953b-78817583b556",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5edfce1a-c56d-4768-aefc-0d9fafc4ba64"
        },
        "item": {
          "id": "5dca5340-7d88-4358-8f71-48085f353f8f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "56350efc-f3a3-43eb-9551-94602d128244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e28be1-4d9b-4562-a119-cf77776fc9b5",
        "cursor": {
          "ref": "0aab27d7-0068-4519-a6cc-1ee80e5a3945",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "edd71305-9322-48f3-8505-2e5a596c8983"
        },
        "item": {
          "id": "65e28be1-4d9b-4562-a119-cf77776fc9b5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f3f41232-6057-401b-8bb8-bba195d5f725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852a49b5-f8c9-4fbc-b3da-11fa28695435",
        "cursor": {
          "ref": "e9655d54-a2f8-4405-95a7-6c53876d8248",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "614a4c14-72f6-499e-9dff-24e751d49c9a"
        },
        "item": {
          "id": "852a49b5-f8c9-4fbc-b3da-11fa28695435",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5872b26c-224e-43e3-9f5b-e87296ba46ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eae83af-abef-414c-8ffa-19c7600e4045",
        "cursor": {
          "ref": "2b81d6e2-7adf-4d9c-8f80-74d680768362",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e0a509aa-01d9-4f85-bc7b-dc04d732bb4c"
        },
        "item": {
          "id": "9eae83af-abef-414c-8ffa-19c7600e4045",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2d720e12-7cc2-4b13-8eb6-1333b355fa9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3b93f2-c713-457b-b998-f82340280a44",
        "cursor": {
          "ref": "9e46911f-572a-419e-9348-f0ec171ef69c",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7b1f28c7-27d9-49e8-9e6b-eeac1af33514"
        },
        "item": {
          "id": "1a3b93f2-c713-457b-b998-f82340280a44",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6267ebc9-3f71-4340-9a48-c5b00ad04838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1484a02d-9b09-4349-9acf-841027385184",
        "cursor": {
          "ref": "21368354-1286-49d8-ac6f-be92002e9715",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b2d19829-fc08-46a5-8ea3-c39bab4b8073"
        },
        "item": {
          "id": "1484a02d-9b09-4349-9acf-841027385184",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a94fecfe-8803-41e0-9d7d-f8471cb30e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49774849-2670-4459-89cb-42a62b35c1d7",
        "cursor": {
          "ref": "22d8fce8-c663-412c-8cf9-2b490219054f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d8ef2f5b-6a63-4548-b697-dbf8ade04315"
        },
        "item": {
          "id": "49774849-2670-4459-89cb-42a62b35c1d7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "13c74eff-a867-4886-ad75-e0bae66c2c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2ea089-9d87-4893-a81b-bdc7dfbb476f",
        "cursor": {
          "ref": "d6b07c08-6bf2-4229-a190-e025069bd366",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3e5e560c-6614-4ca1-a3ee-f5b4930db3aa"
        },
        "item": {
          "id": "2f2ea089-9d87-4893-a81b-bdc7dfbb476f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8208c483-fed2-4e46-9be8-ea6a087f7c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927054ee-45a7-4de4-b1a2-0fafd470bcc0",
        "cursor": {
          "ref": "b026179c-41c5-4e22-8072-62bcae5f75f6",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4ab4f944-7762-4d7e-b786-a1228341af9c"
        },
        "item": {
          "id": "927054ee-45a7-4de4-b1a2-0fafd470bcc0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "57b227ec-4661-424e-b210-770094290017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbb0600-3e38-4398-84e0-5007076754a2",
        "cursor": {
          "ref": "875761c8-656c-4c9a-b04c-d4e67f1e5698",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5d79321e-a627-4c13-b9cf-0cb33ae02133"
        },
        "item": {
          "id": "dfbb0600-3e38-4398-84e0-5007076754a2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "55e40269-f115-4b0e-a027-19380db79a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d08d92-0fdd-446d-a095-b632f4da8bd6",
        "cursor": {
          "ref": "9e347c46-8b8e-4119-b433-1459bd37dd65",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5700a185-32f0-42f4-b959-fb0d772f9cf0"
        },
        "item": {
          "id": "f2d08d92-0fdd-446d-a095-b632f4da8bd6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b8e6b62c-ce98-4d43-9563-2abf8d21e549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf776e0-d155-400d-88f2-cb23f8408ac9",
        "cursor": {
          "ref": "825dc7d5-c186-4850-b314-84c4fc568b43",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "85d6950e-a1be-4bf2-b67e-058f2d5c0784"
        },
        "item": {
          "id": "3bf776e0-d155-400d-88f2-cb23f8408ac9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "49913dc9-9ebd-4fbb-b204-c66ded9cef10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2c5ecd-0881-4117-a766-5c943e56b43a",
        "cursor": {
          "ref": "3cc853ca-bce1-4d6f-9230-fe29121d27ce",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6b379117-81fd-48ce-94d9-b456fd697fb7"
        },
        "item": {
          "id": "9e2c5ecd-0881-4117-a766-5c943e56b43a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "12486c65-e969-44c3-8da0-4a7608a8f2c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874c26e1-227f-4a5e-a0e1-d24391eef45e",
        "cursor": {
          "ref": "559d1040-282e-4f4e-9259-79802e1dd793",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "319ea485-8d5d-45c6-a866-4e40ea1cfb8c"
        },
        "item": {
          "id": "874c26e1-227f-4a5e-a0e1-d24391eef45e",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ce10cbcc-61f8-4197-b4f9-764e3fdd5969",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 299,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f49cebf-5d6c-4c1e-81e6-236daadafcab",
        "cursor": {
          "ref": "671b4b97-22e2-4b47-a5c4-edbcfa1ae389",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d3472bb2-4eda-473f-be3c-b158241cb284"
        },
        "item": {
          "id": "5f49cebf-5d6c-4c1e-81e6-236daadafcab",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "67cca5b6-d253-4716-aeda-9da30b7760d1",
          "status": "OK",
          "code": 200,
          "responseTime": 364,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb7ac6a-56c3-4b7c-8c7a-cf6db9c370bf",
        "cursor": {
          "ref": "b3015a21-04f9-48b7-a663-56a0e6d29fff",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "eb367a8a-666e-422b-b1ca-e8d370da9e4e"
        },
        "item": {
          "id": "2bb7ac6a-56c3-4b7c-8c7a-cf6db9c370bf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "19d22852-efd1-4bb4-98dd-efc634c194ae",
          "status": "OK",
          "code": 200,
          "responseTime": 1758,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb5545c-ed8a-4a66-8b0d-0647e6992075",
        "cursor": {
          "ref": "9701956e-8fa0-4416-a409-30b8ebfc07d9",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7c99d7cf-fbd2-4c4a-b4d3-238a05fea79a"
        },
        "item": {
          "id": "7fb5545c-ed8a-4a66-8b0d-0647e6992075",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fed3e736-c7e1-45c9-b5f2-20f1ec527315",
          "status": "OK",
          "code": 200,
          "responseTime": 1980,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "75447f4e-7216-442d-a374-7a7e039e9a7d",
        "cursor": {
          "ref": "896a47a7-152d-4e90-95ef-1d817aebfee2",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4778aec3-cfa1-4575-9e27-9ad6faa9244e"
        },
        "item": {
          "id": "75447f4e-7216-442d-a374-7a7e039e9a7d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "21b0af62-6c45-439a-9f18-c9d19f400ccf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75447f4e-7216-442d-a374-7a7e039e9a7d",
        "cursor": {
          "ref": "896a47a7-152d-4e90-95ef-1d817aebfee2",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4778aec3-cfa1-4575-9e27-9ad6faa9244e"
        },
        "item": {
          "id": "75447f4e-7216-442d-a374-7a7e039e9a7d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "21b0af62-6c45-439a-9f18-c9d19f400ccf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75447f4e-7216-442d-a374-7a7e039e9a7d",
        "cursor": {
          "ref": "896a47a7-152d-4e90-95ef-1d817aebfee2",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4778aec3-cfa1-4575-9e27-9ad6faa9244e"
        },
        "item": {
          "id": "75447f4e-7216-442d-a374-7a7e039e9a7d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "21b0af62-6c45-439a-9f18-c9d19f400ccf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7159f3-bed1-4ed4-b17a-1d6f4f245fa8",
        "cursor": {
          "ref": "b3973840-f5ba-4cd9-b9fc-00382a29ec8d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a43da537-d2be-4b1f-a705-861531be5d9c"
        },
        "item": {
          "id": "8f7159f3-bed1-4ed4-b17a-1d6f4f245fa8",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "63c78e93-69d7-41ba-8663-0db63a30bf84",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 311,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41656ba4-bea3-4e9c-8a00-0c37958da063",
        "cursor": {
          "ref": "656c169a-2ddd-4b50-bfd2-3dd7cc09013a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f0b8e725-10d4-4747-8aee-9b12818ce334"
        },
        "item": {
          "id": "41656ba4-bea3-4e9c-8a00-0c37958da063",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "407d80fd-d606-4d9d-b894-e79d5c4aae3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41656ba4-bea3-4e9c-8a00-0c37958da063",
        "cursor": {
          "ref": "656c169a-2ddd-4b50-bfd2-3dd7cc09013a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f0b8e725-10d4-4747-8aee-9b12818ce334"
        },
        "item": {
          "id": "41656ba4-bea3-4e9c-8a00-0c37958da063",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "407d80fd-d606-4d9d-b894-e79d5c4aae3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9a92d2-ddd9-4f45-b816-bc3c5e0ea6d5",
        "cursor": {
          "ref": "59b96e92-fee9-4348-bc63-ab524bb462a8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "93e72cb5-f565-484a-81e8-ff9b76e50cee"
        },
        "item": {
          "id": "3c9a92d2-ddd9-4f45-b816-bc3c5e0ea6d5",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "55139e79-63be-486b-9778-591c61be9590",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 517,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501f2c3c-b688-4fa7-aeb9-0413523b26f3",
        "cursor": {
          "ref": "08fa0d48-e07e-49e3-b936-63ce01ba8c70",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3de5fcc8-9138-4a67-ae7b-ad3c2882793d"
        },
        "item": {
          "id": "501f2c3c-b688-4fa7-aeb9-0413523b26f3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "474bfba2-3808-4b98-9242-722915492f75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501f2c3c-b688-4fa7-aeb9-0413523b26f3",
        "cursor": {
          "ref": "08fa0d48-e07e-49e3-b936-63ce01ba8c70",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3de5fcc8-9138-4a67-ae7b-ad3c2882793d"
        },
        "item": {
          "id": "501f2c3c-b688-4fa7-aeb9-0413523b26f3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "474bfba2-3808-4b98-9242-722915492f75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42173f3e-8861-4f42-ac6b-874f481640d3",
        "cursor": {
          "ref": "e9f7abf4-2cf7-4c61-81a1-90a79ffe6a18",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "166a808c-907a-4c56-b787-37b26760f8d9"
        },
        "item": {
          "id": "42173f3e-8861-4f42-ac6b-874f481640d3",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "b0e7a2fe-2033-4801-9cf5-abb4ddbf27fe",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 544,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}