{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "48647240-863c-4e2f-bc98-a05cb30a3758",
        "name": "Clear Cache",
        "item": [
          {
            "id": "12277f53-e5b7-47ad-b69e-66e331f45869",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3269ec6a-44c3-4261-b2af-3414efb7fb52",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e6a9ecb0-bc7b-4001-bebe-93b379f0849c"
                }
              }
            ]
          },
          {
            "id": "dd40a1de-e7c1-47e9-a611-cd6fc99ab21e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35f74d31-2a36-4992-b343-309dc2662bd6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d49d0440-b424-48a9-b955-b3b1bc0d1482"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "89ff10e3-e354-45c1-afd6-68f482868e91",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5e7aa1bc-1fdc-4994-a740-091602f261c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e26edd94-cd40-403f-b1d9-3a43576b4dd8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51244af7-47d6-441d-a955-ae109f8fdd77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68402ca4-43bd-4a3c-b9c7-48226e0cf619"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9cfeb896-3937-4b65-a007-555e7bb064e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80033ce4-4b85-4219-b36a-ce6c78042fe0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ec50470c-acf5-4dad-977f-56d52e1d3a83",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "658ee8fe-3799-4466-b6c9-9242d0bfec6f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03a84559-ae0f-409f-a3f5-5a2a800b584f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "abff770f-72c5-4927-bab0-5f8e62636db8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "970ae33e-a0de-41e8-991e-e2a2d7e8d100",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41f0eb1a-9fb2-4955-b93c-6f2a4fc50a50"
            }
          }
        ]
      },
      {
        "id": "d655141e-9632-4b1b-b9ef-67ad9eac29d1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c478fc4a-ccb5-438c-b953-2c0dec427820",
            "name": "Negative Testing",
            "item": [
              {
                "id": "212fd490-25a0-4c61-8842-4152dbb79a56",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ebb8cda9-1184-48f3-9983-7ba3b915f91c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e3f4e5-d1be-47b7-9c05-22073ebfbce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bb3578a-5799-4588-95a2-4608c9c02acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fc173e-d33c-4ada-8b92-3f574215b767",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e2d0ca-382c-4101-9b69-358f35ac040a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccb05130-b1a2-4508-b28c-5ce6340e523d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79103be-cd01-4edf-840b-536a71678b52",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40695615-18f8-4107-bf89-df27895f5618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e785d07b-11e9-4bd4-8540-1334f0d12ef1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b91814c3-8b15-4c68-b36e-1cfddaf51753",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4dcda5a6-d7ab-4e6e-b07a-44daa78bb5c7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79217287-9aff-44fb-991e-3883c5f2f824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "563b47bb-268f-46d6-a102-de4d360993d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77aa52bb-511f-478e-a683-a72f6009cc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147bc1de-affa-4740-ada7-203b02afc06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6636933-b27e-406d-892e-a3409dd26670",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722051bd-3bc4-45b0-9257-b01cb8e429b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf7212ae-e853-4fa5-ab37-f1f270d65d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ea8927-c25b-49f5-b8d6-988262bd92e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "1d0c0ce6-7cce-4c37-90c8-32e79bd68393"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8de15de6-73b8-4fed-83ff-3e00eb8e751d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a434dce3-a76c-46cf-a786-f408f184949a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ca0d1c8-6c60-4b34-93f3-6a5d3f36788e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "401ff958-3882-4a32-bff8-4cd2456a48f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d93f0cd-bf19-4918-8720-d203588a167f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "81f70a83-35f8-472a-beb3-7e4853da8253"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c13e4e78-0408-4c9e-9e33-c0ef4dd910ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72632d85-e455-4cd8-8379-6c4927782269"
            }
          }
        ]
      },
      {
        "id": "3e296f0f-8b6f-4234-ab94-ed7a30d54df9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "acfbafcd-1a77-403a-a770-9050ccbd5322",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a9ce54f-6215-44f1-b2bd-287e0d3b23bf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "43f8e509-da78-432f-832a-a94b7f6ba281",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04aacbab-9efd-4610-9e3f-2339ad826564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa30a6e-80aa-4f02-841d-019c29532657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f3156e-f5d9-4db2-8971-71ae5936946c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c9408e9-978b-440a-928a-17675cea66d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fa8316-dee6-4ee2-9676-bd1c0d4837fb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637a50e0-7987-4b6c-881f-a14aeed92f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47dd3f95-8281-4724-8679-80d0cb7b1f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a041ddc-bf79-46b5-9173-f5f5051973eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63ab0c3a-6181-4fce-a6a2-e4dec234ecf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cf6f64-3da1-4393-b6b8-8e071045f711",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f18819-0747-4946-bb16-ffb56a930554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18da2a1-cf7d-4c21-9ffa-4c151454a94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd5ffc0-7d2a-43b6-8ce8-64b542e3a42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66cf4b1a-ca03-4bb3-8a2b-314060da891d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a057c11-1e16-40ff-b5cd-f452d772ec59",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e989c6f-5ac4-4ea8-8aca-8b38c5210fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4181474-a453-4128-ade9-27735220e1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab63d58-bb6f-4fd3-b578-33c45315c012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87dc95e2-57ac-4364-8936-a4b38ea8a47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c342bef6-5ec9-44c9-af85-3bc824123f65",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26e4876-b691-4523-8a6c-e1deb4b9bcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1d53c0-05c2-42a8-9cb5-88e61a603915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69197e5f-b86c-4ae7-b2d0-a31c8ea206de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14dc4989-eae8-4b65-b55e-0e6c80e8a86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0669d0e9-cd81-40c1-b610-3a416df5a4a2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbea2b0-f5b8-475f-a176-8639e42d7bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4f3666-bc80-4345-b916-d784ae8631ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ece1bf8-1ed9-40f2-ae3d-99297bde9248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96be7bf7-b99c-4060-871a-9a0db1843578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c1ea4f-5516-4605-89d8-bec153635455",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7d53d6-5bcb-4dd2-94f9-7dce850f3c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed01d2d-34b2-4a78-b344-425ccbfd8aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2900085f-28d2-4868-bab0-bc86b17e7cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07004f80-bca1-425b-b542-15d0d1fb163b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbcc9e2-f434-4bd4-8090-6ef5d27c0a39",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ee07ed-7f73-474e-adf3-06d40803156b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b82256-99df-4c7f-8192-a6e6f2d0f270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ef0bb3-8562-4fa7-92d2-a1aa0209c214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e3b77a2-87ce-4c67-806e-824e1c81b2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511b194c-a53b-421d-9f22-54bfe37e031a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510db73f-1294-43b2-acb1-af74e97a469d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c0c564-c55d-471b-8e51-19ea83f0bf7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdc5114-600c-4da7-b70d-e78aa6c5ed26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c100625d-d048-4ea8-b1cc-b9dacffc84d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29da29a9-e876-4fe2-bba4-8b51a7cf73ef",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f111924-6a3d-4b96-8e7b-a0dc07146830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725a7f21-7c8a-441b-b982-4b60c9f03673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0d2dfb-e5f9-40f2-93a1-b24d56a85d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7629af1b-c9dd-403c-a868-aa81be67ea08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79835dcd-230c-49e8-81e8-14f89d29054d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aef55bc-ebed-438f-9ed0-d039caadefb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb9e9a4-3e29-4bab-9ed9-cf24dd61f4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac816d1-5abe-4967-a1fe-a284529548ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47614a3f-5fca-4773-8079-0756cf5c0263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67614110-60dc-4be0-91fc-c44f156802a5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486a689e-5a6d-442c-b6e9-314af0bbd40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf9362d-5f31-4705-8550-723d2b63527e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b3d9b4-91db-42fe-aafd-3ec6f61616da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7b247be-3ec8-4d7a-9073-1626f7b1a048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebe9a5b-1ed2-4fed-ba0a-1727fb510d0b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cceff875-2720-4f65-abca-83e8373f0bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ac5ba7-df26-42b9-bd94-0256910ee03e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91167832-365d-460f-8ded-6eef61bae060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dc892bb-799e-4816-8245-2e7ac04ce176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d97a0d-8ce4-4936-b9c2-1926bb70f29a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122704ac-e97a-4c84-8d46-0e847a8c4c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cec966e-4828-44d7-8e35-4bb230adeddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df32cdf0-cb28-4d16-8318-bca1af3a9536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efc6279e-fef7-463d-b8f3-2dc9643a511e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930f9d2a-69f7-4c57-b930-99dd7733fadf",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e17d97-3068-4604-9fb5-a5fb660269e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ccbbab-3f48-4e86-b783-0956b15301f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcfc18c-d400-41c3-b094-91cf05247b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e24943a-9b34-4b81-aa4f-e8c66faa072f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a40c66-428e-4702-8205-72b2dc7bc08d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43eb70bd-3afa-4280-8987-98a1adda4277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0350e68e-d412-47de-94ce-3e3015e06d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31630a0f-b16c-4cbb-9fa0-8b42d02c4e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e07e6fd4-ee8b-4cd3-a7ee-47daac34d9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95700dcb-e8d0-4453-a5bf-b9c00d7a56a7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abda3693-a51f-4522-bcd8-78f8ff0b40cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd42925-f4c4-42ed-b506-0c8734e4a5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709e7afa-0801-4de3-a39e-05217e608f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "769d5ce7-f87f-429e-9a9d-8df6a6e4b41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8aa9d3-807a-4677-96a5-7cddb0738d1d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbdc35b-553e-4b53-ae2d-9842d7b660d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356fac69-93a2-4fb3-8d17-32672bb42b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1467a1d-7e28-4100-b74d-d2caf808498c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "911f99fd-cd5a-4347-b1d6-f240756a9d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af380b05-f228-447f-8ea6-0eaea9c7f3ff",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab45662a-c957-46ba-9621-5aff5bf38f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9cefbf-0f96-4fe7-94d4-e1201dc3baf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04aaf9a1-99be-477d-80e9-1c80ed31b3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef5c842-b319-40a3-a519-edd6f030f9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b0254e-3f90-437a-a9d3-94992c1c25b6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db642fa8-7336-41cb-b861-e0bb1233c00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04c03fd-2fae-48a0-8700-f6002204816a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b4acae-e47d-4dff-a0bc-f872e7eb27d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac25c28-5947-44f9-8945-6f1b71b03e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6e78ed-0b7a-473a-abc8-4f2e32dcafdd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd11eb79-f9c7-4a29-9a7e-fbd3c16314fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99015851-57ed-4413-a431-6a13cc179031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71747800-6745-49f0-a261-c0b70c729a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31f335b5-9ac1-46e1-bab0-b4d1048fbc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212077a1-07a9-4b2d-a4ba-8637da8ca15b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c28b2d-1b47-4dad-b124-560cd05170f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110fa42c-7123-400b-85fe-75fdf2cdd479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a0da60-90b5-45ea-a37a-26858778973c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "517b94c8-59b9-41e6-93cb-f36c3756c802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bf7c41-0186-4867-a8a8-8d1638864eb6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa1d3ec-3c95-4a12-8a07-6c9a08265fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eee4fa1-8cfb-40c0-b8c9-1cc01fae8ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb22627-10f5-440e-abd3-6e063a02ba73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b543d22e-aec7-47cf-bf14-e507f7c5d6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f9176c-dd6b-44e6-b202-9bd2031cd0c0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525db081-1018-4790-a0e5-def3727145c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32987ab-b3e3-4147-9b49-9543c87371d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c435c7c-f06d-445f-bcb1-991cd4926b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "03e20342-850d-4d8b-a191-c67f89d62640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93600af-aebc-44d1-8482-e296e9cdd141",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3097db49-cba0-45bb-9281-2c0bfa76fd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a256f9-c786-4bd5-8a53-66f753c54e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed3fd93-0322-4550-9aed-9440bcafd7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "353af840-5d47-42a2-a4c9-928543b16f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a884d5d6-0966-4604-ba7c-c883ea45fe38",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6820fa-d471-48ba-95b8-23c17d306334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9b632c-6229-4795-a384-f53f294b9c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ea9f7d-8f4f-4689-b207-ca93eb30df0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbec20f2-33a7-4651-920d-f68984726819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6615f414-fda2-468f-9154-6d4cc5b4b835",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc152809-9770-4754-a5f1-3a2721c08d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04dc68a1-2267-49fe-ad99-2823b44fa816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e79e486-d92a-41a5-aadb-38dcca975dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca88a9ba-c567-457c-999d-c620411612d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64a6030-05b3-4c3a-835d-a27dcba24985",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c934617c-b83c-42e4-8123-6b6301289347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfb6ee1-920c-430d-97a0-893c5065671a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24478641-4d63-455a-b61f-7c7d022f1036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17bb5d34-0075-467b-9677-89df09dc96f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac63ffb8-dba2-4043-9751-fbcf21f3d624",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274efdb9-37da-4a40-8e13-d39f25dd8abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2dd711-f9de-40e7-883f-931041bf7ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfa8842-5378-4fe6-bcb7-c25cf994bc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3759b422-9324-40ae-9eec-b4342b60d28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23c5986-7a0a-411a-aea7-142898f604f4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4125ef9-cdfb-46c4-b00b-4d61f796e002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a231e7-1438-4223-9431-58b19c8e06d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4821e3-1b4c-4a8e-92c4-6ead2d69f3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f705914a-6354-4caf-8d19-8fb4bc436c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d117f658-7b98-4d80-bf51-87e8f470aeb5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cf1ec8-93ca-43ad-b288-62f44fe541f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ab9eac-e639-47a9-96dc-24da7c318928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c1d15a-96ba-4368-9aac-d37130c2434a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e701bab-8116-481f-a768-6fb68ce3b540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049891f5-1c7f-45b4-99d6-bd0b5c19e506",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3188a2-ed74-49a1-917a-1a4ff1cf2982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35140613-6f40-4db5-b30b-4ee8f435e844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d925ee-8700-4b84-add5-e2a4f6cdf60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02521841-44a6-45c8-898e-631ce8ec6e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3c3d3d-bd82-459f-b72c-ace23204ae5b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5e6953-e6b7-4997-9ad9-c70fda1ef076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb7221e-8e5a-4915-9b34-7695e89cf55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a32e92a-dbb6-4b60-8507-e31404f15ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a12a6d63-1440-4b0c-b2dc-6bbdfcee9adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870a9372-da83-4a05-b2ff-82720e57c878",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f3231b-e5e6-4a3f-ae9a-319e3b00e563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa2a30f-99dd-4fbd-bb97-24c4124cc9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51665eff-96bf-427d-9431-e9080f2104b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88a0fbcb-181f-4343-93fb-e84a07fd6d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb40419-dc84-4d94-a4a3-b38cb56bd39b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed56905b-b9e1-4547-8676-a5a9829a7885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9480e54c-43ac-4e0e-bdb6-fc209c1c3ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5293778e-210e-4ab2-9376-e8cca61e004b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7970498b-a256-4dee-a279-9a5d05ce10b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f03ae58-87fb-46e1-be02-601f75e6f2df",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139c2217-bde2-43c9-a3c5-14d5f92b49b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb3ea194-59ad-4707-b515-1e6594b8daad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0700ba1-f255-48f8-b8be-8186040605f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3463e8bc-5323-440a-aed8-ece9c680c2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa747b5c-a849-45fb-b678-0adb238daafe",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948c2988-1290-4a6d-8a06-b65615c24bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5f7ea9-c2bb-432f-8366-b697c7828251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e842a4ea-3e41-473f-81d6-0f4e44062d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "afcffdf6-1a32-4729-817e-53cce2d2a292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d6ca8c-2d2f-4ab7-8bdc-530e066f9dc5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9503de7-5af8-4268-a312-cec646952f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8698dd2-7121-484d-8d46-7e3b31feb72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc786de-e2ef-4312-9a5f-be2d284504c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c4447b-f13f-470c-8635-a7bc9431dcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbcc1ff-14b7-4f4d-a40a-dfcef595d443",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b421f8-44ab-454e-9c48-786d4a358545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb120a9a-4484-4762-bce4-0e46cc2d4eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6258f1-1590-4a16-8e6a-a5a78628c178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "38f4a025-42b5-4c9d-9e5f-3cdad5f9e4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9981d6dc-bdee-456a-a90e-8af3f4787845",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b064aad-dc18-444a-a27d-e1717a8c3fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97efcaa5-8b0c-4206-9141-96f6d1e04e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f40a4f-dc70-4e52-9f49-09bf79c71caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "16cf73d3-65b5-426e-b481-553fe9c46658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c43623-aa92-4e73-9fb6-b6624d62c56e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11345d92-d1ab-4f5f-b97c-42b38f91da92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb17886-d85c-4018-875d-7a6c497fa1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01bb631-9baa-46ab-ae2e-a774457707be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "42802149-1e4f-4972-a18b-9d56ae8b5268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8c6e54-bf7e-4596-a8b9-9006576f3c92",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8acba01-3d21-4510-84f3-afd8fa6d1eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957ba5e3-f089-4fb2-b5a6-12a7798f93b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7a56a1-ceb1-4c65-8124-067ef80f8745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "153e377a-7bd4-4439-b891-364ee5a0615f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71775983-dc55-4315-a749-05c601de8e80",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc01c7b-35ed-433f-95c1-1f4fef31055f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cff991f-437f-4565-bcc4-37f075350dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb879e4-1703-4ba8-ac07-86f72b6ae204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "939c43a0-7af5-4e79-9459-0f6092a8c236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959a4b75-8f04-4d40-83f3-038271321442",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3349080c-4997-4766-a5ff-cb0057a49f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8af4d0f-412a-446b-9593-63cdbd17e1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca7f8ef-ea7b-4951-af34-5588a0031512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf456a6e-b319-498b-9ca3-7d02133c0f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd3d6c7-d50b-447d-b4e4-7d159689d88e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cebf2e-11ff-4141-84a3-d5e27b39d311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978f76e2-cb6d-4ef5-a67a-4da0c3c78b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c02b0b3-f461-4c82-b62b-f7289fd5d916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da5e85a6-e70c-4d6b-a4ea-e77b457d35c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b7d48f-9667-48a4-8f54-8f97ac69997e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c077ee-14bf-459a-bb4a-ff3577473b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f600c6d-0fa6-464f-9c22-2c05d607ea24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00353c21-85c3-4201-9b07-2b1348738749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2edd5a5c-5c16-4f25-a91b-f8593d83aa54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c922ff-9fa6-4281-a763-414e7374c7c1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbaf002a-e021-45a5-ab57-8f8282ddc90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b780ea2b-cde6-4dd7-a0f5-c596f86a652a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf59a2e5-1f79-415f-b819-4548e7f2ad92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "296dd2b1-a592-4fd0-9b17-de872c95e260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59d06ba-7bd4-4875-83f7-5a47277afde3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacd77ce-5aca-4cee-9142-bd35ccf2134f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62940135-7264-483b-8972-b915962807d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520423f1-938f-4412-af65-132f916d24b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28c2a84a-d6a8-43ca-8909-44967c8a5915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ad66bc-79cc-499a-b3d8-55083833bdcc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2856de-057e-42a6-ba69-adaaee0bfab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ab4a89-5674-428d-974b-197242722e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e05022-54e7-456c-adff-9d35756d8f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bed947c5-7783-486b-aeb3-0867cb4fbb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d86635-a73d-49ff-9a58-6c596b00690e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7434d016-2ba8-418a-a4ca-d2ddbc878f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2af8e2-1061-477e-b058-e861f5844594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1525e7-35e3-4777-b1bf-368358953270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7863e2-779d-43d5-b010-c924745759e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138c04b9-2730-443f-bfeb-5dc20ca333f7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e01bb47-64ec-4a04-a6a1-bbb1f797ce2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdcc527-c2ea-429f-9ae6-fd2e509e3bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895c5b36-8343-4f5c-ad1f-8e09353efe0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5318bd-e658-420d-b1aa-14d7cd0c419d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed914081-055c-4d14-93b3-8449316586ed",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b126e0c4-0bfc-4b31-8e69-ef49fb3413a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "badde808-1eff-4e5b-b43c-6a6d845783ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e85171-bc5a-4ffb-80a5-40689366a279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5ac9cf-763b-42ad-8571-7bed36a9ce96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6168adc3-0134-4050-89c4-ecea71ba2f50",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168496b9-8d2d-4112-bad9-4a5275210b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2743908-b393-4306-a1f1-b56cd7770177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b68c3c-e069-4831-b215-3756b458df3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a459103-77c2-488c-bd08-e728d8ee7530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3d3507-e555-4f66-9c66-e173db885d7d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4efc98d-7ee2-4ed0-b2b1-c81cf399330c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb5017c-02f0-4336-ac01-1263091b5dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f00b8b-3dc5-4fd7-8113-6374ede65624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a17a3d1-78df-40b9-b677-3ca9a42410be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c981337d-5d52-46a7-80f3-28bb94f9e27d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff25d4fe-9652-4270-b2cf-ade6505186af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97facb9-ba01-412f-afb3-932786a7d16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37dad384-3795-471d-ac1f-5aef8175f424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c05b78e1-153d-4cb9-8416-3fbf5513f227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61fcc44-76b7-4e58-99a5-d898517b26a1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907123da-ef42-43f0-9958-c7b152db464b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3157fe9-1737-4f76-b8e9-ac4637ccfd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5511e0-6a4f-4d7a-9b49-91838be7395e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "35b343c9-eb62-4e4c-b251-b443f25848c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1f4ddb-e31f-4cbd-8819-417a08decf06",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d417487b-1169-427a-9a4c-be6d4679efe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0eade5-405a-4f7f-9bf0-ee05d96fdd60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975a4f1a-a132-4997-90c6-8fa0c98040a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "969d9fc4-194b-47c4-a64d-ba50ac1a0c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0d7d5b-8758-40aa-a489-7f5ae7f8b655",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5224efe-3123-4e13-8fcc-36191c0dcf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7267c0f8-f06c-4e6c-a40e-7d9cf08a3ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0de0de0-4ab8-44f5-a677-a04f01eb88db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f18874af-302d-4907-bfe3-1fcf6fbdab56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb890e5-ad01-4380-b24a-eb0241bd19b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda45ef5-bf36-4fa9-bf1f-1cdf150d0341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed235d9-e8f2-43ff-bab0-2429e3dfe595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f305b4-a485-49c4-805d-b5b252c27623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c272a307-fb3d-4cb7-addb-258ca7fc03d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc04ca46-a640-4114-b75d-a55b8ad4430c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041e8b74-ae19-447d-99a4-3d45dede610f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e23423-3bf7-46cd-a763-bdfdb80fc57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57279f3c-37f5-4788-ad30-2229252fec85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bffc4c22-5fee-469b-a103-85f15d62eb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480a992a-8460-41fb-ab44-cd6eaef67db7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b617567-e59e-448e-bdba-a375441ac7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9c2fea-d82f-485c-b114-6931a2906700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fa1afb-45aa-49d3-b0b3-c156a07500c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee1f9d1-6b74-4982-b7c3-94a09de2e661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa8ed61-40b9-43de-ab3d-79a985586e43",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be177ce-7f70-4476-9976-0012d9e8e76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9967e6ff-fc53-413f-a5dd-ebe2abe83dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7acbb90-aa0e-4bd7-93d3-96492541ff2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b4abf0f-8d35-480c-b92f-31b8f7c2ddb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adcf164-ad72-4d9f-93f7-dda427a8c730",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85b25c2-0274-4bdf-987f-0c481edec667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0488f671-298a-4d03-a771-eec095fa5eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f163d9ec-605a-4e81-8264-7fdf64193ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "56bb1768-3083-42b9-a93b-eeae74e2ed91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de029f7-886a-4f45-92b1-eadce690c495",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecd367c-d12f-4f40-8243-38b2d42a7314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c2ba82-c6fb-4020-8c83-e0bbc546830d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6d6c2a-98fe-4a2e-9568-cf35d1d9c8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35b7dbbb-e85c-465a-b5dd-7d9a8502fddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034ee12f-23bd-4b40-82f9-5db5f909f112",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c490ecc1-9404-464f-a867-6c8d147f5d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7798030f-71fb-465d-9b45-5cb7ccae14f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3eb663-13fc-4471-ad9a-079473198b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24c17e32-727a-490b-ab0a-2f131e79cf3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd60768a-10eb-4916-9e8a-40246a7df3bb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d528b6-5eb2-4414-8a0b-8f3712b3f7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fdcbc4b-411f-46c1-b808-e2813b103ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbf686e-2b7c-4949-92ed-f107341c0a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "435134e7-0557-4467-9e45-b26b7652a470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b232d2-37e0-4d7d-ab34-404ab0ee7c57",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5c9059-5ae0-47d8-b952-8ca658cb499d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354a939a-a6f8-46bc-95b3-c3ebd6d22dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7477ac94-1cdb-4ac0-88b8-a376a221080f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a942bc7-cc25-4bfa-9eb5-760e73643ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55206ff1-a6cc-43d0-909c-238cbfc7f99e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee73a836-1ec6-4e26-a654-14e5c4f099bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9b701e-e37c-4023-a6a8-5da78a05263d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa875e17-fb1f-4abc-a0e6-3149d9fe23c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "31fcc3b8-4d2d-46e7-a3f8-e77de23e4e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510d694d-b0c1-4c16-a9e8-31d366486d4d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28e7305-995f-4906-9007-d311866d483f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe2495c-556f-42bb-bbff-a02e394e9fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a23109-3777-4961-b76a-305b38dc97fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "535f4083-0422-4caa-8477-5da6ae5b54b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95022967-cb24-4239-a790-fbb096625455",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3845a7b3-f064-4cb0-abd1-9b2c023f7523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47218226-72ab-46e0-b117-504d1bdd18d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9887b1f6-bc0a-46ad-b644-f9e920053ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9824490b-0f6b-440d-aeab-08ace929f6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a58cb3-2023-49bd-82de-62cc5fe7b018",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89be1e4-7f6c-4cfb-b154-83a253af9c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918cc49d-04dc-4148-bffa-1ea79ad9c9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b4db3e-5e00-42db-9c64-02683e8459c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02938ffd-1797-4c35-ac16-a9bdc5d953f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad39bd8-78fd-4134-b8c1-56ba087aaa84",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8454345-f3b2-46cf-87d0-6df5062031f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf8ecd1-a210-4886-8de6-2908caf19cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f4d119-b462-4d8f-8bea-f77fd0d4b3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d114eda-c2ad-4128-8395-bd51dc8afcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8faf44-edaa-4aa5-a5c8-b63e1d2ab502",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dd2ae2-b51d-4880-8704-2d717ad3abb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec121f5c-33e2-48e0-891a-0832f8b0a529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731fa47c-b155-43af-b305-6ad4b9f16430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f1d51b-7d1c-4e6c-8b65-fd2641efb007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d5d535-d135-4dee-811a-ae22112b92ca",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885d3cc8-bafe-4d23-9b3c-c1e53b67b450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f605ade-2a6f-406d-beda-5a17ace13977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d8fd12-259b-412c-a34d-7d856fc66e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "599a0ce1-b6d8-4ccd-bebb-aca3749d299c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527f3a09-2b56-4110-83db-de787f2ee484",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975b3bad-9096-4fb8-8ae1-a3af6e617abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805d872a-000b-4d6e-9b0d-786fdaf57a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4466507a-48ee-49ae-a866-f0c7aa61f564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6654923d-9c05-4af4-a09e-d0aa2606dd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e074b08-4fa7-4b91-8f7f-9cff96c44df0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d02f4e-a0e6-4d61-85f2-78f0fa3d339d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86c6b12-9345-4167-bc44-5a45ad6da69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df3391b-693f-4f62-bd6d-98b5a79b9bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63741609-f783-4901-953c-15bfd95f0d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30290ed-8d91-4f8d-a8dc-7aac09297988",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57350e4-da0a-45a3-a6c5-6d9bcb1ac442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f717f2a1-0a9e-453d-a9d3-ea3557755073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c238ab2-088d-4441-80a5-fc48962c62c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b281e829-34be-45cb-aed5-3e5f39668848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec248d79-e1bc-423a-b0e9-4991ab1d2179",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142f2128-371d-4770-a2a8-bdfe2101e370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4455c39c-6d3c-4f0d-9f11-bce0cf61b9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20a6a72-22d6-411b-a214-9245d922f803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94b82a03-9984-4b1c-bdc4-4810e4c44cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8374ce2c-c9a5-4842-ac18-08798ada8697",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f21a4b-9701-4f3d-8d69-753bdb20d059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168bad90-7498-4fbe-abb7-a3c1ffcaebd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397d03ea-b424-43b6-9b9f-d4fe5eed7e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70f40fd2-a094-42f8-946e-de0654072721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d16571d-ec5d-4852-8b38-412f3e49913a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67592d62-e3cc-4184-b2d1-75ec01956c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c4c5ec-af7e-4c12-a1bd-50b3e5c467e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5af4870-b37d-43d0-9b6a-908c2e5faae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a634a4b-ec32-405f-b4d9-d56e786f339b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80220b4d-41b3-40e4-9997-d33d3766b700",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e441d882-cf62-42da-84c8-e4a16bb5ad24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12f3174-6691-473b-915d-595e0e3a2f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a493b02-9b20-4522-8c00-94e4c8322b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "65532424-ac18-458d-a97b-616b1b806440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5843f5d7-c340-43d1-9be7-5d1b740ad347",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c5b5c4-0535-4200-ab2a-dd420c13ddfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177aa622-bb99-4f4d-87da-d498df12a76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf24a4a0-ac3b-47bf-ba4a-9be115d29adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b68230f-2414-47fa-97af-28bf9bd39214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c079dc2-6d16-4a78-8b3b-4241a39bc2bf",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee64047f-842f-4331-8a96-15723a742e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e613df-3b59-4eea-ba30-59bf1f222244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb3371e-03b6-465f-a68d-cab8ee3dad53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5212e00-fb5b-454c-9691-8a4657466d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc1b1e3-94c6-49a1-9b6e-38412d663dcf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80df61d0-ac8a-498e-93ea-fd188a7daba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4532abd-6719-467e-a61e-91a8427a2640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c3ea7b-c30b-4f14-9759-5471cb049ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a73f43-47ec-41b5-bd32-5d2ec93c293f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d616093f-802a-49f9-a5ee-c3cba898ac7e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e425421e-19f6-4048-8c42-78dd2499fb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33939f69-f5be-4d71-9495-0d7fab6e9081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aad6104-d5f7-4b92-b90a-af88864c1fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b761401-c855-46e7-b314-cdcb2e56233c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15b4d59-13c4-4640-8072-d7c5103fe82a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abb1763-eec8-473f-b6d8-cd7911335ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5cfb09-744e-4d72-af29-2c23d9f77cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a746bb-f641-43ab-b55c-3db111fa2a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "663d1fed-eaa0-49e1-b662-778d1debcf2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def1555c-7650-4a8d-b58a-60039a03a517",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b98746b-896e-4ef0-ab13-2ef93bae70c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f43e39-394f-4342-8acb-1862645cbeab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887c7cb4-d8b9-4474-b70d-24024d4705d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "72dac15e-f2c2-4e17-b9cf-aa8329f38eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3c05b5-26ed-4c43-bcca-99a8158eaaa1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff6495d-1452-4739-ae33-f73d9006341b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d281a7-1c69-40c6-b978-8ef1eafda174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f92cbd-9941-444b-8151-43a99f8f8cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "209bc204-878d-4f43-8d60-0a61d9777047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418546ba-a7f2-433d-964f-0d542edb2b38",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ccf9c2-9e7c-41c9-b55f-5522e5bef73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec657ea-676a-4741-93fd-d0d0a7ffa2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51259550-8fe0-419f-a4b5-caf1d06a679e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c4929b-7b80-4960-af1c-aca844c97d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34972719-2d0b-49e1-b4da-2b7e9462960f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc42d6d7-8fee-4365-b1e6-9b0508845797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d465660-4ec8-4c4f-b480-422b62fa19f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afded6c2-0077-4fe9-961f-ce15a101c191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1960a97b-91fb-4384-a567-784bad131d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61603c28-e92d-4754-a470-2d4501a2c5de",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d2f651-9dd5-4cad-9a4e-7f8593dae89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69cb983b-24b2-4eae-9c44-988e609358ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19da25ee-2638-41ec-a53c-969d855504a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "07f0578c-99b3-49c4-88ce-b0132da6bee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc5f607-e773-493e-a75e-605c3f6e25f7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27eb060-4551-41bf-b274-78b3ccbf5245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dcfbacba-5569-4104-9f18-ba375a18df49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31ce3fb-e498-4512-b7b9-5dc22414806a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b30b6fc-5988-4ff6-8494-e4c6d210045d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2d3790a2-0bd0-4ebe-97d9-cb9f3cfa2e96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef2e308a-0925-455d-8fbe-fabd0e34dc00",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bd3bca-8c00-49f2-ae81-adf71b731ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fc03d89-d7a0-4ec2-9626-5152aeb1e831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae65465-bf44-4966-b1da-3bcc4771a662",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71aec867-ca14-45c6-b435-0d1ae4e716f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8edfa4-870f-4be9-8918-405dc4605a68",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381b1f1d-6daf-45fe-b192-aac74a8edac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf9cb60f-fcf6-4b40-9c14-d16ebe2aef0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b033f377-ba3c-4791-8e97-658403d6037e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27c5aaed-2a80-4c9b-90b5-44076e61b341"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdd19048-1a97-4bbe-9cd1-909a02421e22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "672951ca-b2c0-49fd-b825-ef8118c8baea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecd7c560-8d6b-4144-be05-f555c149d108",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81d8f4d2-0849-4d9a-b687-504871938047"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1152042d-2c2b-42f5-bbd9-381e315d461a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77a7f13a-392f-46fd-9695-1eceac43848d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fbf8e62b-3835-41d0-b578-df722a1509a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f64a34a-e520-4e6b-bb07-1d566d4fd7af"
                }
              }
            ]
          },
          {
            "id": "32177f34-38b9-4d7c-998d-0dd347366eee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "922a8a85-6660-47f7-af8a-fde6cbd8c8ea",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efa9e2be-c1ec-4b30-aea4-bcf7e16405de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ffa1333-3914-46c1-8fe2-0673aee47008"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d4a02ec-4499-413b-9bd1-c81092b93804",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fd086375-2229-4a2c-be24-7ebbaf4d23f1"
                    }
                  }
                ]
              },
              {
                "id": "695cbde6-fd72-4a2e-8c47-6e1b60265c61",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f888f513-fa21-4a4f-b328-071d2ed0ef16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc89762b-600e-4605-ad4a-de68e7ba1a64"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99d0fbb9-0be2-4866-88c8-42caee282f48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a569a9aa-47a3-4cc0-a60c-6952b46d0a30"
                    }
                  }
                ]
              },
              {
                "id": "29338ffb-3d77-4177-b830-d09006f45549",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8764fc7-396e-496d-a69c-6f7de77b3b03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "31726bfa-d600-4554-a2a5-43d2cf3229b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c7fc621-644f-4ac0-9353-50e9321af941",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "99f9df5c-9330-4fb6-832c-17c333d42fbd"
                    }
                  }
                ]
              },
              {
                "id": "f265e8d0-d777-4530-ab00-2027acf1002c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b42d588b-179c-4239-a672-bea5752b6f22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "825cee00-abfa-4b61-a48c-e58995503970"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af6c5c54-bee9-4455-9b48-e55aec9ee353",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1fb18027-c2bb-42d9-ae35-e43eb5f12add"
                    }
                  }
                ]
              },
              {
                "id": "707eb05d-66ba-49a8-81a1-5390307e5190",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dd535ba-e1c9-4d58-a941-4675ab857943",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d25399eb-9d60-4d31-9b7d-7168698e7a04"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff3abf6b-0766-4ac7-aab1-e1459bdf75e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1db7c579-60dd-4c96-b0c9-ba18ebc52ca3"
                    }
                  }
                ]
              },
              {
                "id": "d69bd56c-3d0c-498c-8b8e-2b8c8cd6057e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db71ba18-873b-4c4f-8177-2c4cd01e7df3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a32c6948-1453-4cc2-acdb-dfa5f549dcdd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "421a03c1-c6fc-47bb-9c1d-eaa1237d263c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a1e197c-156b-4883-a2a5-cd6359635658"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4c07570-7522-4655-9434-f3e1514791ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "90fad6ff-31a8-4f2b-a5c3-f95ee5ff19bc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fa3345fc-7c9f-4216-a3be-5435b91ef011",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b8824eb7-5c81-4adb-8284-bcf85b5c83e9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c16d4af7-f248-4d5c-bca7-f57c3850221d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a9c8c2b1-4f26-4c40-84f1-ee65406f769b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c10abe7-213f-4b06-8f2a-dc52556163ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebf54584-65cc-4634-bcea-09576e444e39"
            }
          }
        ]
      },
      {
        "id": "b5107b61-26ae-4d82-a6b1-2a2e1f4f37e8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cc7b8285-adf3-44f3-9651-287225ced11a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23c54f91-28fd-4f61-ada0-51a8a07f844d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a9691d7e-6d52-443c-8255-e11f816175e1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f23740-23c8-413c-afdf-a0f586792760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c64cc58-1bd7-4bd6-9714-7e89c3505959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce9d99d-4f32-49ac-a996-fc2d01272ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "548a9f06-ed00-4e4c-90c3-7922698a697c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06653e7b-0016-4617-a3b4-dfb2411edf66",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3dd5ae5-b26c-4b29-a7a3-ae62d0766f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e85bce-7dc7-46c7-ad4a-4387a2f57960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8b3634-904e-4eb7-bb7c-673c6f4337fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9df8faeb-7faf-41d9-b5c3-a1691a0c7f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77192a6c-ee7c-4544-94f1-1a190f8fd06d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3b6084-686c-4744-a869-f6b11cb60bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "badb2736-a348-49cc-9b20-076470f7c17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc54dbc-3a68-42db-9eca-0151e32d5a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5d93af-f6ce-4271-9432-c504e9e90880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400ef2e7-0f6f-47ce-bd5d-28022d9acb55",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b67b46e-4a0a-43b4-b394-e2da7ca7fe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eef8b06-7382-477e-af1c-7b7a76198363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433c01c5-7c9c-41f1-84ca-a959552554da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46d08923-d76c-46ed-99dc-99a3270be5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cbcae4-467c-4af2-9100-84dae2b58b90",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df038cb-c122-437f-915e-5b689bde8d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b0a676-3e69-41c8-89e9-2daf4338ed98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af12311-7a3b-483a-b1cc-536c696870b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80eddc48-14f8-46cf-aec3-1679b03b121b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c583c51-87fe-43ff-bcee-2250c1d13e88",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de42984f-3ae5-4f5e-8784-81caf6ab4527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3905e379-ebbc-4c6b-85fa-c5b97633a7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f81c4d-d47b-4283-9688-48d89b72986d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "426279d2-f05d-44ec-8b77-9a56afefbd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c295fa-e777-4543-8a16-f24fe14e32a8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d27621f-8eb1-4a04-b56d-fa92b449c6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03cd7ca4-b982-4241-913c-9c7852feb48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a261690-4d6f-4e26-b35d-a6ed4c569e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ece6358-9f31-4e74-954c-6234183b551d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9dd91f-bea1-4efe-ae75-3957343fd423",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8a1971-ebff-4def-8d14-efa8abd9ce86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd38340c-ff0c-4a53-9310-455f2a3605ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5ad139-714f-4d18-9b52-f12acc343847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e37288a3-4d3e-4587-bdf1-f34c2257f169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6a1d2c-a02d-4525-8d29-d65ac7d489d0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc00efe-bf47-4252-86d1-a51233d9cf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919398c5-c125-4ea1-b298-fc6d9329baa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d3a8c4-c6ae-45bd-ac38-00fd96ad74ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef9f106b-2838-4fc6-b8da-240779555a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3faec70d-b9e1-41b8-a8f9-b98f10cd46b9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974e0149-0e39-4a2a-b66e-87e043a7c5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce8ed8e9-fc5a-4864-932f-b10d2253e343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a294f1e-5c2a-4fe2-80d2-9546343de7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0491cf-94ad-46ad-b17c-1959de692adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9409bb-164a-4ba0-a48d-7dd6fa93e196",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035ca8df-54e8-4254-8062-31c0a8f866d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e65151-854f-4c7c-b827-6c0b967f7a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4141d7-2566-425b-9078-5d4fbb392a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8bb595-2898-47e0-a052-57148a8cd3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32fabac-041b-40c2-b4fe-0e0b318043c9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d0b4c8-d097-466c-9e1b-10fbcfeb129a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e00fcd6-b8e8-4b74-8a3b-a3dfb8430517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6dacf6-54cc-4951-a59f-05cbad5c7603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1947a53e-3fb7-42e0-aa39-142bea379e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187858eb-91b5-4791-9f8a-e577e32ac00d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3232f2e3-de5b-4536-b2f4-9104fc97c50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfef912-3eab-4aa5-b543-155400c81270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf0e09d-64e1-4432-b77c-105d284a08bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "948a8326-c008-4a2f-88fc-dee5968028ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05af9eeb-4adc-47cb-a587-c36cacc188ae",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d981f9d0-33e8-48bb-9b8a-76844902b4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184718c9-3b55-4a25-8246-5534ba34b6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d8652e-6e98-4984-b7f3-603d5e96646a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2252f7ae-e66e-4bf1-850e-be4d27d2b6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd3f71b-f08a-49ad-8db9-d91cf4d2fbe5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbe3331-037f-47b3-bbdd-1c41f3cbbeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329d29bd-b483-405f-aeb3-8cec261f8cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713e423d-9bfe-46ea-ab5e-14239ef42b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3f98a5-c4aa-4c48-8008-294f86ca0924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4b6b5c-1c76-4946-92d1-247b432f76f9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e75615-5a94-43ef-b012-bac29afbbde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90fa8ad3-8543-4cae-9bf3-4e17a51886bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10322e1e-9196-4203-9420-423761593926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "768321a2-606c-43fe-b0ed-a408938f57cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32a377d-46d3-4dcf-88b9-dd4bd80457f3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06c770e-2c6c-4874-82b8-0c20c3d2c427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1f7fab-228a-458f-9ee0-7401ff36168a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbf8cb9-20c5-4d5b-a7f3-24d36bebc02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4ee4a0-b7d1-4acf-af4a-693226cf0c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66a7578-124a-46e8-b6cc-f68d90f8b25b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e68ea3-f6d5-455a-b35c-fe71e7e86bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37bc389-9b1e-4c1f-8801-b7d572041bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480a7597-704f-4011-bc02-89a44201416f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16ea144d-9684-4c6c-b318-7c202fa9aae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530a642b-263d-4bd7-ad1f-5dd8b6ead33d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4664a759-f585-44b8-b7e7-c9ebf2de28dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2520c2b9-736a-41ce-8ae8-a5e29153b1a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d5f4c6-6637-4242-8255-8e05ed450f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f39c0c63-a5ad-410f-bc8f-e8757370f36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b65de6-57c8-4598-9571-33010c3aea87",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c007cc-aa7f-4a8d-891f-a4e0ad245b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcfef53-04d7-45f9-9ce8-1b915be701a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3dc4c8-a0d1-4d19-9646-5365ae228cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b80bbd55-94d9-4700-aa77-eecfbb98bede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a674cc1d-6c6f-453d-9c64-b9eb9bfec271",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209dae5d-1c4e-466b-af84-9399b6f40329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e33035-ed22-4543-99c2-7f55e74def45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af413e5-0e17-4d48-8330-14818c878d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9652e05e-6d98-4712-a428-7e95edfc12d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a746f2-be3b-4d1f-acac-b30579c19a39",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5507208-8b5b-411e-a1ab-1c042315d24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454bcda4-be5d-4dd7-9c61-7a444d91e4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea5048e-6f2a-4399-9e53-0c705c825a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0fa9bc2-56d3-43ae-b3c0-d87cae026318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11c09f5-3af3-4207-a542-f2d16371a8b7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0304b0-33b7-4a6d-b2df-cd898415ddcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2d33fd-f5ab-4b47-9996-c39dcd72a978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835d70b8-c675-4fd4-8de2-1cd72eb75e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8145f699-9397-47db-a062-58ab2fb4601a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa2c807-77e4-4603-914a-8c15c89fe02f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929bd0e2-6fea-475e-bb8f-97353f526eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ce3b13-1533-4270-9be7-1935bc6ccdd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ef0586-5d94-4681-a19f-430856c244df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d389cf34-94a6-4bea-b9c7-71b0fe8eb18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d539ad-890d-4b05-8b9d-e9f6620383d5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ec0c89-d371-49e5-bbdc-a4ed8390b88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b752d3aa-acdf-42bb-8927-f1f1781b9ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d18e7f-24a3-4977-bf1b-6b0abe8381c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24f51fe9-09fb-4391-a878-73b56ce57e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16aa7db6-0e6e-4e85-8120-0f79d1418797",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fc107d-274f-44bc-8bac-65cb4e6f0491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799ceb98-ac60-468d-addd-bb9cfcb61ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f129b16-60d7-419e-867b-ce55a3eba9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e84d8a41-9167-49cf-9e6d-8ef0547dfd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc90d96-ecc1-4e74-82b9-a83380a96989",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419b8f09-82c9-4cf1-b78e-952b30ee0f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27c1bf4-644d-4e5c-8468-9135e935dc17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8242e7-1790-47c9-9134-33d3e3b23c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0260a5de-87be-462d-b5e0-1a899876d463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e816dc1-2e68-4f82-a5ba-58a1452d9f08",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df1c8d2-f447-4b4d-b1f9-5f49c68948d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4ab69c-03c2-4711-952c-c5f1c71f90a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4020fa6c-b59c-41c2-8587-46663f768edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20c502b2-d448-4ea6-b4ea-b13bc4ff9d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a76125-62f3-4001-8413-808bb513c487",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e7d133-8eae-4731-a914-61b515c34e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c370548-385a-460e-83be-88ffc8a80433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669aef5d-66a8-4c3e-addb-6aa57bb7de26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5ab808-438c-4e88-be8c-151b6df853f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec0c5d2-e278-4203-b1f3-6b47f8e758de",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79831568-115e-458e-b436-161404d2530b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6739637-8154-478d-8e05-6c5fbe43d7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1d163c-962f-40a5-a866-172190ac75b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd926ac5-953a-47b4-bd85-a46446218a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c15e832-432a-4b30-af34-563961262798",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77342d97-c2ea-4345-9436-4effeff8deef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac206756-a9f5-4d81-ac5b-81f3a33d4088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9db530-3323-49c4-9220-1fc24c5694f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e37925bf-9372-4174-b7d3-03ebae5369ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ea58f9-e6d3-403c-a279-d707fc265aad",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1987a915-ce0a-4d1b-badd-0c0852ff3007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d27cf9e-85c8-483d-b245-68a2485cbd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47720a77-a016-4323-9116-7d72e7b808d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4049c5-d3b7-48e5-84f1-65062797739c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "41468e34-ec37-486a-acd7-3f613d40604e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a21744fb-614a-47f8-9690-6dbf9dd8587d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b347c9f5-99bd-4298-89c6-84b9d4d8b4e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "955e20ba-48d9-4829-8f38-b6783ed6a92f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461ee349-f81c-4046-87b2-cc1ddfa0151a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81361e28-535d-4ac8-b708-c9305c4a85ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf6d7ec-5e84-48b3-b717-4eb46d13562b",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7884f51a-d680-413c-ba3c-1a1aed4b5fb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1012cf26-dd04-4aab-8c7e-848bbbd36b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf4c945-0429-45ad-9e56-713813ad0457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c58ca06c-7e01-4281-9138-8449883c1c93"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dac171c9-0d09-49c6-bb46-7e2845d542d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a08af067-9e67-4fbd-b9e0-72cb10dc0524"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5292aa41-f4b3-44f5-998d-98beb533a8fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aed08761-39a1-4954-8a45-2dae601137c9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "765e63ae-1ec2-4e86-87c7-a94437100077",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5e14c303-c71f-4121-8078-e32beabcf302"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12aff3e4-8bbc-48a8-b693-5069c946b7e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9079d911-b82f-41b0-93e7-4c453d2d17f3"
            }
          }
        ]
      },
      {
        "id": "cba7cf10-2f6d-4eed-9e79-48cffbd62f25",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "84e62f17-845f-43a2-9332-ad179a9b2481",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c867281-d66d-4ca5-804d-d34c10a998a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4b2f8795-e929-46b7-9644-d393cbe1edb0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1b8abb-6c74-4c71-b655-b39954d58cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334105dd-6881-4321-948a-8ec0d17004d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e564bbbd-2ab5-4414-9ccd-a99e2ed9fa90",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbda36a-e5a6-444e-a34a-a2cdbbe64bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d97d26f-ef97-4574-99b9-0bbc3249f553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418c6127-be78-4d33-9200-5829958907e8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1409d0-9c79-4224-aefd-a79df2aba16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79cd035c-d969-44f5-b511-94a7b817244e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c26d54e-525e-4789-8c32-a28b2a8d19c2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a2733a-97bb-4238-a509-09c43dbf9cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5893532a-7ae0-4bf2-a0b8-373bd82f2637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0048ec98-78db-4595-adfc-1d72d51c8f6f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacd4f47-a7a3-4477-ba91-cb57e6c1cf09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e51b0b-35d7-400c-a0f1-66577dc210aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00735325-56d7-4fb6-925f-787a3b419d4d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6ddee6-7a45-4be1-9185-38de23d595fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6e4744-29e2-438a-9152-92b85b52041c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db44b6e7-9c86-4eec-a27f-4830b14194bb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32d1af3-7e2a-4678-9527-c6b0d9ff414b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9b1361-6a92-47af-8f8e-7061c53d24ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08037798-6a8f-4702-8af7-9dd543a2c6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888fbe75-5429-4212-8c5b-c421ee0082c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6bfc48-0bd4-4e64-bb36-6a03aac6a9ea",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff824e3-1829-4051-b5cd-b9752e6f3a23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55a373e1-4f1b-4b70-923a-3e75a2985e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02906ec-17d9-4817-af0d-91dd46415e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55677707-9e76-41ad-b702-f995b0c36673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8826419c-a8a2-4b9f-9bdc-4844c2b52c31",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd8054a-ca21-49ab-bcec-29bc8f2c6424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57015e67-a634-4e9c-8ed3-632504531f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01032da-dcd7-44f7-a4ed-84563db29dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e048827-d6fe-4853-8560-20211074a4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ba1234-47a1-4b40-af7f-5084a0388f87",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06304c3b-4b21-4f11-b2bf-4aaedb91915a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33b9909e-ba6f-4279-a430-b5236e80bc27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba90785-1c43-4ff8-a5a7-f140f696f512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b06252-9a14-4653-8d5a-41f026aa918d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b019927d-ccaf-49dd-97fe-17943dc38ba9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f549108-6c47-4b8a-9b1c-18e014472098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3007fb3e-6e71-478d-8546-986e38ab785c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "469db5e2-f132-46d4-a450-395030d2e2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f73df1-d77f-4014-8df9-2f1e25e4a36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852a318a-0a13-4f2e-a6bb-cfd6d9af4a60",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07941257-5137-4cce-bff3-a1132158477a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efd073c-8013-4f38-b962-2a890ae3e7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7231f555-4f75-416e-9e0e-a62fdec4bc07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39b77d4-12e8-4506-8de4-d0d424803d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1851a52a-4027-464d-9676-19d8b0c1c716",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad32899b-9eda-4731-9406-1fa5458018f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d8b762e-a3e9-465f-a752-9bc4eb5273eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c048360b-3768-4928-a041-c7c1083ab1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f003d1-da9b-4878-a3bc-52db9685c2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbc5787-a55d-48bb-953d-babd09bbd4e9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a3de0d-259d-4310-83fa-ec07f6708d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6c992dd-d092-451d-a74f-2d74c2934815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b236dd1-bf48-41e2-ae8b-a4c4393ab225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9639c872-8d10-4963-98af-b467366b2f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d57c510-74f9-4477-8d51-41f52660fc67",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed196991-5ac7-4ad9-9415-205cc1a5f8b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d31d8ebf-d19f-4414-8425-d401e867bc1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d33ac4-88b6-418f-a950-c8492b734b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e73ada-3658-4ec1-b2b3-27c5b3a06ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2521b2-f8b2-4c58-8453-b0c34aa7a9f3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d204ad8-620e-4c86-9522-abb36d17e55f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd38311c-288c-4880-a73d-9eea20ea5b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5290eb3-06b4-4271-b5b0-0171f1da7cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9cb91e-605b-4ef2-a1a4-369747a9bf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7944e7e2-074b-4055-abe0-5ec65059d688",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c6714f-781f-41d4-a8ef-2d93eb5e96e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c453eb-7b97-448f-9f75-d1db58581b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d58d6ab-bacb-4b25-be17-25fe03dd1423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f4ef6c-aaa9-476e-9c8d-e7d77c4a7b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6642db-9649-4572-af9f-596807f641ac",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069e0956-9a02-4c5f-a3cc-3952776f256b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8220ce5d-6ee1-4d8e-a462-23b6ee924d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d669376-8323-4fed-bdd0-7ae23aff4798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a633df-98b9-4937-a0f0-eedc4edfcf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05fab37-d1b7-4a99-87f6-5a3a079675c9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4bd975-3eb6-473e-bc71-e98c97676a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8e6108-7c70-49ba-86d7-90a0ae32a223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f978c009-38d3-4d4a-8327-cf9bc3874601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cd3536-186d-47fb-8c10-1f4b9e486f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24b4254-e6e9-4ee6-bd5a-1763d1d7dd7d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc772a0-cb24-4dc1-a67c-a83613a50af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536a5bc2-7dd3-4900-8805-7bbfbe9c4f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9902485-5458-468e-9a4f-1eae444961f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30d65b8-08f4-4a51-9bca-ebfda16dcb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21b3f20-535c-4758-9a2d-8cf1a710a87d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a16b6f-b1c9-402b-bf07-4327c2bdc7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d41d6e-b347-4a56-9967-6dcbed164508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cadda2c-0be0-455e-8fa7-be6ee35169e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6d7a56-90ec-42d2-8531-6d227dfa91df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5206630-ece6-411e-ba36-c9290513470b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4342f9-6295-4ca1-87d2-eb09f7d162bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd9a076-e098-49e4-8330-0b49c4345a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1e2a60-62a0-432a-9277-ec885627d367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8bbe0ca-5c13-49da-9107-862d70ab0a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7449cb3-9f31-4a5a-a6d4-a0c73ad2fb51",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f6a86a-5b59-49ac-9b1f-87edeab3e96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d815340-876d-4f5f-b8c1-08fadaa4647f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d52dfd8-ee6e-411b-9a63-4c6c15c54613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f58a5bb-6a76-42f0-ab8a-e0efc3b6804b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925c3127-ff8e-4410-a2e7-9a59f2b8645b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2332c90a-ae8c-45b4-b93f-4dabefe3e4b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da54e1de-efee-4e91-9f86-c78c9c52f048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af3c33f-eaf7-492c-be7d-07e211866410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58508d58-70f2-44f6-9303-85b57430197b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb6128d-5044-4edb-8cc2-f653925eca1a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca38322-211a-414c-8b69-06cc432f803e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fa66220-573a-4751-a1ab-8b387dd67e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5476fb3c-a6a6-456b-9928-498c99813f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c1d10a-5279-458c-a3a0-eb30cb66e152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0adf0d-07aa-430a-bd97-785a6bf7653f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26158652-d6c6-4e9b-9f1c-91eba6ac21a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "442fd339-61cc-436a-814b-0e733fb10e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42497ba-f2de-426b-a841-7a3130f5d011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca40b21a-9b8f-437a-8d10-cded5764e7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e328270c-600d-4338-9ce9-04ce4eb86ab8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f381def3-93d3-4280-9506-58cb88fa468b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b6e849b-acbf-4052-a5a0-f44d1e8806ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ff7386-fba5-40b8-9482-0d69a4f25c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e438c87a-05bb-448f-8a21-326b37eb1041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88087a5b-d09c-4308-b464-c44eed793124",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941c11ee-7964-4508-812c-af5912c92886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fe5282-af7a-4d92-bb19-95d3aed65b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7afb59-8bd5-4ddf-8072-d33453e460f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c656fc-1aa0-456d-b500-9e477c2d37b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ab69cf-ddc4-4d8e-8ce3-fd37d6b27755",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6c3055-8649-4ee9-8790-88135c84cdc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb8ed6a-3d1d-4e90-88f2-97e8572b6fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2bceee-25fa-4019-b06a-52c14400a555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e44eea-0059-45fd-a8d1-92667a7e52a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177c6368-41ba-4586-bb2b-a9a05911d02b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21bd73b-44fe-4801-be48-2b05e28e2446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fe509d8-9a3b-41a6-a3de-99880f3a9752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bdfef0-d386-464e-b24b-f197634aff3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f29a60-e667-47b0-861e-7b36f796484e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ac2482-d820-4e8d-b0ea-1e735831f65f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a4c7be-843f-4089-82e0-add853e54fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65cc087d-2e97-44bf-beab-cbc02a0514c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90800f3-f571-4199-ba21-89ac2cf72161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56537d4-25a9-4a49-8ab1-eac66cb0446e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44af31ed-6968-4d2a-b3be-1c5a979c6a23",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d422de-7f7f-475e-9df4-a4af1a494040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca919673-1789-4f43-b0a8-67976700ff21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f729c63d-687a-4c9f-9673-9bc59ba54912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec25772-393d-4f8f-b5e9-71469b70e4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91174be1-b300-4f91-abe2-5f0152dafb17",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f975dd74-ef13-4f04-9920-4a420d731819",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ce3cfc1-f9fd-46e8-8fd8-f00f9cbe9867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9854d1-8d00-4d6b-a72b-b86e3b62ea08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c66fdda-285b-4539-b2ab-d04601d1ffb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374555f3-14c2-4613-9623-1276c1777826",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46717363-ea7c-411a-8f17-05423c7322ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88835d49-51ac-486b-8bdd-836b65a81e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17af62b6-fab9-46f3-bc87-2660c8d48284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbddd16-ec7e-49c9-aed9-fd363d9d827d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a50afcb-1007-4fb8-a045-95800aeab556",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4fdded-b513-4b82-837e-e48fda0f2da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7824920-aa94-4e07-b83a-840804e8184a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63abe8bd-170f-4d97-aedf-ba9d0481cb65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f65ba24-c9a5-4743-ae18-ed32bd129873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e68fce-101c-41da-891d-cb38ad658201",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57a1587-975c-4d1e-86bd-3182da4f1d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30def519-71c4-4e3f-8984-025adc7732bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58776c70-e270-48ee-9079-f4708f0c453a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1afb96f2-7215-40aa-85e9-1f1b7b9a7c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76cc23a-ce3a-4e39-b948-227fb827c90f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb62b99b-5c49-425e-9cfc-57913564d8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6906160c-547a-44db-a285-a99df850466e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d891dd19-3d1e-4eac-a764-f5cbdf9b6737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e489f62c-4268-4c46-87d0-53f42b00e047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af6eece-b5ef-4b02-b5c9-62a97e692ed5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece4ec35-0079-46c0-825b-8f82d7e2f867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd21987-2954-4b59-aa7b-f7ee0c7a8d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273fad89-098c-4ddd-8cfd-1196821326bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d5631b-19d0-40a2-ac8a-5df0dee993d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b082632-16a8-47f5-98a9-e5b9fb1ed2d7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e63d9d-b217-4cd0-8368-162999996a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ac9e7c-f5e5-4ce5-b448-27ac3b30e20a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8286b4cb-4f97-4448-9690-7d8733463883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c12900-c6c1-4854-904d-7b2e0d2ec632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557d8b07-0729-4321-bba2-11863da09d33",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e24a956-5e05-41ca-b6e5-f98a0302fe63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8608a78-abb5-487d-b884-d28bf5a8765c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22698e38-dbdd-48d3-8243-96f800e80bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb90b22-03ed-46c0-8764-8772a55fd0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182af9cb-85e7-4850-817f-d30b61fbc3c4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112597fb-da7a-4134-be2e-6b9c9adbb642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74825df1-c7cb-4670-a5c7-7466fe0cbe4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e920c24-276d-45d9-a6ae-dffaa53be5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67aace1-ce5a-4d04-8f05-20c265278203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2644da-e142-43f9-a645-0e795438607c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13759a7e-ae72-4b65-9dd5-f24e5d126cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d773ca-3616-4c66-8b0a-1fedefb78ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86268ee7-dbb4-4e81-a723-d8e5e9799d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80935f56-2c8b-4d0e-b3cb-73297c35dbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21905753-1a89-4034-9f96-63afd6f3efdb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fda4b3-399a-4209-8e34-7a4e309ad74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73303d0-d19f-45ac-9675-8b9edebc8dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be3fd70-7d48-430d-bd41-6012dca7c2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51e27a4-c8a1-4ebb-8673-55e688101c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675fef31-ae68-420c-8780-830ede37a3e7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6b94dc-3839-4ff7-8c39-1d150eb2e5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8780d16c-f603-452e-bcca-2f33ec33a988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fe7b6a-b357-42f7-9920-50f5ecd842cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f959f50f-2c9b-4671-91aa-68c27364cdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8ada9f-9e64-4e41-920a-81891ed2dae0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931ca5ca-4a2a-4868-b5b9-0a19c6543c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbca85ca-ac43-4829-93e3-c1e16ceeebac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac168f0-0f93-41ae-a906-531989f7168c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ed2688-3a94-49fd-b759-6d9c8f087941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56899dac-dc26-471e-8fe9-91d4d6ee1c29",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa90ade0-bacb-4af1-9d1f-2a5886ca5ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412d31a2-778d-4094-9e8c-8b4a7fdbf32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0988b1-98fa-49e0-a12f-61c2caeecb40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e479110-6155-414c-b71a-6afd97f798f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7925de-f039-4c8b-a981-4427a192e7c1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc35674-809b-4e1b-b537-01242785e16c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f793b2-dd5a-4fea-904f-ebaf26d13425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4117801f-8e4d-44e6-afcd-182845171d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8917320-0ceb-4050-a726-fcbd2cd1b49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33610874-bb69-4ab6-96e1-cb622dc9145b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc770f0-19c7-4580-881b-da7f3f58b32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51543248-d1fd-4d53-9d4f-a27da5c8ec7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767b88b1-5293-402d-81ed-f2b74c1410a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955d806f-4b3d-4fb2-806d-921924c941c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b73ef8-ee65-4338-a66d-acfda5378363",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79231867-f232-4fcf-8a4f-c0dbad1445ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94692aae-c745-42d7-bbf8-d855e359311e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b901a817-667c-471e-9398-bd36b6a63b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee00cf1-9f05-4ce3-98fa-c32fe597d907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2989df4-e962-4343-bd40-b526c5d93af0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea34a18b-ecfa-437d-a24a-81ae51d0aa92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531f4277-2ad8-4896-a13d-1e083aea39b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147d397b-afaf-48c8-95f7-51863e0a0506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9f21e6-aa40-48b3-ab8a-c3c285807566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761206e7-bddc-4bbc-9e1d-7319724336ba",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c2a7a5-ff29-4b12-b2a3-3701493a0ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53635013-e506-45e9-a032-990c2a81ac3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ddc748-e090-4c6f-8a89-0d83e355f811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2b01f3-dc9a-4400-b7f9-654b46566131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044f43d5-0814-4db1-9622-0189e73ea741",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24bcaec-d989-4820-83f5-ab90ac6279ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337126d7-863a-41c1-bd7e-d454268c8542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37feb8a5-4d74-4ede-98ea-1f51faa4721a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee3c687-58f5-40c1-a084-f236f212ddb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe291a4d-7219-478b-8137-08e46bc57e8c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c802871f-9742-4072-b95c-217354c37cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67c5dfc-b8f3-4d58-823c-f087dbae6a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38726863-6c8a-4720-bfb6-337d9118c0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0aba3a7-86da-4725-90a2-e6eaccfe618f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0143c1fa-8f2c-4b27-b594-72f4a0c3cc76",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f03f54a-5a31-452b-9087-560aaf1ffc79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da0fbff-7b9f-431a-a979-58a37d52d773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "297a4ba9-6ded-4216-a59f-a81b89dc2424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207950e9-2209-4048-b598-6b41ab5022fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e776befd-baa1-4a18-a962-7c6dbb994bd7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e20e7b1-6f5d-4923-9034-dcefcd7ca578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade432ed-914d-4a8f-b41e-dffaf4a4d2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8923052b-4a26-46da-81da-d77032951521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075da843-262d-4f80-b47a-33fcff6e26e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dad24d-2899-4740-a40d-60c500dc52b9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54363de7-8db7-4183-b513-97789eaa18f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6ee25c-cb1b-4872-8c07-e60d6549cb6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0193e29c-d794-4419-9dd1-015dc3816e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2486df62-c45c-48ac-8322-50780e7aa8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c80b3e-f2dc-4ea0-9ee4-5594ef2af97f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcbc2d7-296a-47c0-ac50-5c0d7dd06897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066c8cdc-6502-49dc-99c0-59695b8386c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13201db0-b711-45c9-ac28-ce31e2b59188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a773e7-6fd9-4087-b2ba-351985ec9dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f43584-d056-4043-b906-8ed624ff44bf",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1ded04-862d-4023-aada-e8efe708d07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0809d2-c024-483c-8db1-4501a0b2e3e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "910bc3b8-7a13-4a2d-9392-ac8945662fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb42c50d-dbe2-4702-b4a5-0a953dd10bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ae9551-7408-4f92-a90e-52451ef89928",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3b16de-e64d-4546-8075-74dcb9213e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664755c6-0e87-4727-a578-90e42a574803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae54849e-1987-4085-981c-5741cfdca533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa73a76e-1232-48a4-9a66-80dbc49a2011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2363bbb7-3995-4738-a908-ed921bc2addf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187fd9fe-a41e-4822-92ea-aaf499bdd621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c484688b-5f9e-4235-9918-e605e1c66a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba821cc-8dc2-4fed-8f65-055300cec8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49239bbd-af11-4908-8c68-5f2e57b32d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6866ebc-a214-423a-a712-62db1f893d40",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779cc77c-50fa-47c5-8d70-8d077ddfaa8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9d9a55-d025-4d8b-9dd9-4662faf871fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4c91fa-489d-4faf-8e52-33b075c9f27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80854fb-47cf-483b-8f14-6b7264d44e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3bf85c-40fd-4b69-b914-359cd64fe1e8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2073d83c-13dc-4b13-96a4-9b3f8282c90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e115c912-6c83-456c-b066-51556f1a05d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b58e0c7-4b9c-481c-a657-ba880f1898f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901f1df0-153e-4319-a96f-a888e25aaf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b573541-6ec1-4e55-b73d-78970b7e444b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeed2bb3-f320-4fbd-bd14-8e9bcd4ea9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f52955-48cb-45f9-9312-707dc9dab51f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55c3711-7c42-4cc4-a4ee-681191a9bf3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d68bc7c-ceaa-459f-8694-8493bda0bc43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d998a6b3-8113-4d24-a189-e6c9d4ee42f1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4175ea6c-c4a4-4021-ac14-a360fa0c68c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94cdae34-a018-45f4-8b5f-2eb6d08c82bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f9aade-e48b-4037-bf98-c8d4739d6538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20791ee9-30cc-48c7-bf92-31b69cfddc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e383f9-98d9-4764-93dc-21814c16fcaf",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3ccf2c-06da-4887-b31d-ad267c70ab9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9b33244-524c-4a22-9541-23c3222190c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d9f808-14c1-4ba9-9e07-af1682d0c6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723cc12a-1297-444d-9b48-db4500134e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be2c236-2c4c-4a22-9755-c8941bfd0704",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b67213-2857-4c24-9c12-d2510ef1ba52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46391a76-cf96-4927-a4dd-0dc089bec9ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d5a4cd-92ca-43de-80af-16f96ac75d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5005bdaa-b9db-4442-ab15-36c86da4e4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16307a0c-1076-47d7-8cb0-4fbf7d6348ab",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b37f8d-829c-4dda-b30c-0be5b17a39fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2a8bd4a-780f-4b0f-b059-b8297f6b445f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48646bc2-3fb9-4a56-872a-1f38dd79ae5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0afeb6-5d30-4f9e-babd-a2ce121b03f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be791bf-ccf0-4d14-aa39-6e882be7d0c6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3d4f29-ad9a-4583-a5a3-825ddc2dbb59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11aeb56d-740d-47f0-987a-a4f0c80c62cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bd5c97-e651-4600-ad7b-cca1745e7293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3f5ed2-a9da-462d-bbe6-94f57982af91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d03a1ae-0c7b-49f7-91b0-47d4f6223f66",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cf5999-2950-4cbb-8e07-f7c00ef97721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa3ef1ae-6105-44c4-9700-71d0e7013f77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19274936-4c1f-437b-97ec-ef0e1f776a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf8c901-593a-44fa-b51e-5b953d27ce83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d16ada-50ae-4247-aaef-90e21c3ef7c5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553c3e65-41a6-48cf-b73d-0c9c16f3bc21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb356daa-0a03-4beb-838b-326853db9435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5096e36f-26ad-4e8c-b44c-ac24dc51cd33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77442be2-f5a3-4868-a04c-31f6fe29c57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d2dc71-e553-4264-92da-91d7a7d552b1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a931fd6d-bb6f-412f-a1f4-74817defe5a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18a08ebe-955b-4743-923a-86afa9fe737e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84fea1c-eeab-40f3-b3fa-13918af2067d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c99b74-3caa-4321-abd2-6a21738ee2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de4e02b-389b-4361-8d3f-edb3b944c075",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745d5db9-0594-4be9-90e1-eef938a67d43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b08eae0-4b79-4adc-ba07-f31a5f9960b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3143656-69f1-4804-b791-af8732bacd60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86726c3f-1784-40ad-803a-d8d044b571c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f1974e-268c-4653-860b-05b0083b7574",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05dbe219-152c-4ac4-881a-472bd5f880c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcf40c86-ba20-4d20-81d1-36d255cd9899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4162a7c-57df-47da-9921-ba93215df718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3b7468-2bd2-4419-ae23-773b5da3ec99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7889955c-624a-431f-95bf-350ab9df76bf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40a19f1-35f9-4d59-9125-7c5c143c8662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33e1964a-24ca-4b47-a2be-43e4c8636f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8292cb1-b02f-4758-8a33-f5192db0e2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f901a1-b531-42fd-b484-cf8ece02c1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0373fb42-2043-435c-ba0b-d33048e18599",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696b868a-78fe-41cf-965b-207cc23dc4fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "475932bd-9026-496f-bac1-03d793544c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eebfd8c-d6f7-4680-96d5-db7941bdb7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca8a5eb-28b9-4b77-9d88-0d54777510ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f692775-33a1-40c6-a9bc-4cfb15738a20",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e090de-211f-4960-8d3e-27efd9da36ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca293a6-98f8-4971-95a5-f70e28cc1038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f9240a-fd2e-4f01-aa1b-1926f9c443a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88bb8d1-3af6-46f0-a2ff-2c2219262aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ebdcaf-aab8-47c6-9d61-5df42fba4437",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0129415-3816-4b86-a118-55a92ad725a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24f030cc-fa51-4789-81a6-77f9b3264753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b4e59a-e861-495c-bc83-34be25e35382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d93f80-f878-41f1-875f-ca5473243aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff53cdfe-6dde-4323-bdae-46bcbd2bbbe0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfceded-2e0b-43e9-9130-2a07943edc5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b16c7109-a6b1-4e07-8e8f-90addfba2ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ae1d73-0820-406b-baa1-3192afedb7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c463c6a2-6216-47c1-9371-de19b4e01d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba5c187-a2fc-424c-b2f2-ada4141950c3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3709e17-4b18-4641-b228-4307f6e5e4bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da1babb-0e97-4ff8-ba68-1ce4338cdf1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e561b753-5e34-443a-8643-156075f06aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca4b9fa-9e28-4bcf-99d1-c3e7d2026f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f285de-59d3-4b84-a989-a65a23675d9d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d499ecca-f58a-413f-a60f-cbc9e0d9e2fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "415e93fc-38de-4407-8411-183bee237cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dc9b02-8ad3-4941-a0e8-58d48f3c4aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5115205-a313-44eb-b85f-a942b2f97e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2b2c20-803f-4924-8fdc-f4381c22ebbe",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf76392-97c4-44bf-82de-13293ef50332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fd63f05-a1f7-4467-ab59-180cc38485da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1a8bba-cdb5-4273-a756-05cf0244c970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f469e57f-6f73-4b64-902d-5619b5ed70d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2da275-8864-492e-abe7-2ec63fc8bac1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2ae2c7-8130-49b1-8b5b-bbbb82c05d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db17aaa3-9c12-471b-8590-9f5b693663c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e9ba3a-2a91-4824-ae95-a646efe650f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04bc34c4-c1f5-4aba-a7ca-e67a83ecdef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae95719b-baad-45d1-9981-a5e592039cb2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ba40be-c327-407a-b2e3-7fc8ca4ffebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844dbd09-9fb2-404e-8791-b01cb2921ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779d766b-d067-44e0-a409-6b9c83376fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50785e55-392b-44df-ab1e-5b3efc1bd1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac948be-4483-4b80-b689-715fa12e432b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622f405f-4f07-4a73-a092-83e4ff6d4932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "964aab00-6f80-4538-8d09-04b6f32ba488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27296e11-37a4-46b4-8b1c-35fd601310cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd3489e-c0d7-4669-bfe6-bf0534ee8409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04db6d2-7ba8-4287-be0b-7c4944457ebe",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a35a0c-d2f7-4e9e-8d55-035a310c118b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79342bcf-b3b8-4c7c-b88e-46a0eee6db02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d104c5b9-4483-4b42-8348-fe734ce4fcab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb52f9dc-e369-47e9-bf96-89e8ce238c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c2912b-693d-496f-bc7a-01eec2b256df",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f84d8d4-6077-46d9-996f-979f6cf01b46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "973807d8-8093-4360-a262-28537aa0de00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4b3388-244f-40c7-b7b6-5927c97d1f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1091b7-f2df-431d-9ff9-08a60ca23cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f08ae4-a53f-465f-8a5d-457b5ea7bcae",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30444e44-b3f0-4a1e-a9ea-bbdcceb95795",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "808b66fc-f08c-4004-8c15-9e11db501c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3017c2-d6df-471d-8ce4-35e36d29802d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4126ad28-e1e4-4e0b-a5e0-3b3d0faeb272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d4a0b6-ba5b-4647-b921-9e38b790ee17",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7966d7-c107-4161-b4c0-660c5ff2650a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecf2c6b1-e020-492f-9c93-42bef111a541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb3886c-36ca-4fb7-a8b7-7a4d15934192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346b6827-66b7-4d2f-b03c-79a2583420bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a97d25c-5bb0-487e-bca0-c18e08f7aee8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c5e737-cf4e-45a8-bde3-59fb0a96941c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15ab2b6f-5a69-4fa3-8a26-4c9ea36122a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee11ad15-d854-4f71-bbac-883c470a1fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a7f15e-7c58-49bf-a424-7b3c2442ddbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab7c4d9-1510-4566-9f5e-c48de45639c0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb657eb0-4c3d-4a6d-b85d-ba5e08f9b1e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c475695-79a9-4a2d-af4f-4557b82ed3ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91501532-a305-4faf-8672-ce5809596362",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac56e08-fce8-4644-a365-1a5c403ed847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb8f4be-56b9-4853-89bc-301fef3b2cdb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e353d8d-4da0-4206-b691-c3f9331a9594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d934434-e1f7-42e2-ae00-07d4604af435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72d5fb8-1741-4034-bc7f-babe8807afa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41953599-4652-4fa7-8e12-de4df90b70b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d925794-b047-43e5-833f-4019aa371628",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d965ea9-f23f-4c2c-b5ac-39205bd3accf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e10b0059-51c5-4ff8-9cb4-1d3aa3746e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5552ce60-6ed2-4a01-9d4b-ffe084a729ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac929491-b9b1-4da2-8bc4-33da8bb4e10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e99d6b-9e79-4b66-8670-8a15ea34191a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bc5dff-0059-49ac-8ecd-61f7189ee08a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20799f91-96d2-4810-b384-7eb0f5d0ee0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae17e3f-a507-4757-afb9-72d5502c88cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db307e25-e7f1-454d-bc16-77518e8f12ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32879627-fcaf-4517-96b2-ebe67ad53c54",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2ff4f2-ff3e-426a-a8ae-68424a7160f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9414c9e9-e42f-42e4-a2ab-6b95e619b1b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431f23bf-9017-4b6d-97b1-7935d8be8435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b639a22e-e8a3-478c-bb2f-3c11977d8daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf60d272-b43b-41f9-9256-fc66c1d4960e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c506679-3809-481b-b2e0-03b1331312e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e32b870-9211-45b5-8b63-ecbb4af29a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60915f95-94f6-416c-8d2f-1df05df37aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65a1cbc-9a7d-4355-b971-5cb05d38fa29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e843e7d-4e28-4f5d-99ea-90c1af89c2e3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcee711-50e2-4fa6-adef-2e6e74db938e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fed369c6-1470-49b7-a676-d055e7a33b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8827a246-986b-4712-a408-d9db8e6208ee",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd40de5c-60ad-48cd-abd3-cd2b34f22076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42ed81d-3c95-45cb-86f6-5332164ea686",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8cee56-b28b-43f3-b99e-e87c37ccf46b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c472ab-6e4b-4aa0-ad0b-533791d0eb1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733f0fb0-fb21-4a7c-960c-4fe163cfc14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12148ec0-72b4-4163-befd-a9f5c6196b47"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "925db704-46b4-47f8-bb63-b7d6a040e1b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "677b8198-6203-485d-aa8e-b744245b37e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c2bc561-1fed-432b-8dd9-01de1fa1ded8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09158700-c922-47b2-95f4-0583cd2dcf97"
                    }
                  }
                ]
              },
              {
                "id": "575d740d-067f-47dd-a5d0-4292d4a52d28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee5e7200-1b9f-44ec-a83a-1031c780f66b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ddef99-aac9-4b79-8219-1eceba854146",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ecda5202-1140-41ff-94dc-ca01f2294b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04111397-cfe6-4db6-83ce-8df5d87bbcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2422bb3e-0e83-4c85-99dc-831f5959acad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68db9b20-d9f8-4b01-be84-757d97eb8de9",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83316d14-9ca9-43af-9536-33785b867388",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8b1cddee-6724-44da-963e-ce07ff54ff1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d77117e-e436-4779-8627-d4acc15327ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13d18bc5-054b-4091-b24c-36633be16fbf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adfe3dc2-6cca-47c6-aa75-adb60b861bed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0186f345-0b94-432c-a6ab-c5750eb24f5e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24782c37-6990-4c5d-9bf9-93780b494339",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa3bb8a2-a1c4-4139-933e-cc389f884750"
                    }
                  }
                ]
              },
              {
                "id": "29282a76-0182-4637-8cda-799bbbf7eb69",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4f563851-3c7e-4e39-8e16-9d1b906dfe09",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bb37e3-f8f0-422d-b8d1-4136f803cab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "01b68af4-5dc8-4267-a778-e7b4d78c9ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e25d720-0b00-493d-96f5-acc95b216aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc802f7c-06c7-405d-afba-7c000e304853"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f750247d-1622-49e9-b67d-122563eff5bc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c05b7d1-66ea-461e-aa8e-400d39e65394",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9be88fbf-5f56-4928-8a35-7259d19c05a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3cded988-1aca-4bc9-ba17-efc5f56125fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd6069f6-2106-406b-9851-be12b8e0e539",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33a7063a-e707-4b94-9cd7-aafdf63dbf09"
                    }
                  }
                ]
              },
              {
                "id": "a1261445-3da4-4aa4-8017-35b0c7e55980",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0523a555-82b6-45f8-8c83-31e60c1c5578",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "daaccb41-9f06-4b1b-8786-26bb30a91a37"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57cbaef0-e9d4-4e59-8751-e6837d087eec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6237a874-723f-4f44-9fa5-7b9f58ec29f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "251943b3-e964-4bbf-b019-518ea4fd1760",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f9c1b926-6c26-4ed4-b48a-7e7334378817"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95927ae0-54b3-4472-8d20-b08046d3f4a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42369174-ee5d-4525-8122-58c0e7980645"
            }
          }
        ]
      },
      {
        "id": "9646d4de-84d0-4743-8346-4f38e2c44588",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3b4f8ce6-0cbd-412a-b273-42a9acee331d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e448e73-5146-44c0-b141-65a81b5abffa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38f45db7-28b9-405b-a532-cae7888ec0c8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eed4082-e694-4c5a-96f8-2c43153d90c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "81c532cf-c38f-4c9c-9fdb-c6bd54b13229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c88afe3-badd-4ed7-8943-1722f8b6b06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e286088f-a89a-41c0-bdb2-907c3ac8b7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c649a7e-681a-4e5e-868a-5c9fc4bb246e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bfec5b-1afd-41c5-8953-f5e4c86685b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6e5dafce-726d-47e0-8b37-22e07fd17eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8015f29-1821-4f4b-b51e-ce4b1cf39b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c88ef282-bd9e-49ed-a14f-947f069a81c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "839e5c56-4a8b-4031-97e0-8193f9b60c72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f93f6b03-249f-41a1-9d07-a4a619c5ddbc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b890dc47-6a30-4d8f-a3a8-84831d91834f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8c91f18-3f0c-4db7-a4fa-dc93e4e95091"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02d47862-a99b-4534-a7d6-ce8327a9761e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c0ba3c89-75cd-436e-9b75-7798cfc4b6bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afb39391-c3d7-4145-8756-cd72e6546841",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c478fe1-72c9-4ad7-93b3-bf1bbc3bd120"
            }
          }
        ]
      },
      {
        "id": "a7df6a97-8b19-442e-aab3-347f1efb6a02",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4f0cc34d-4ef5-4ffb-8dfb-a7cf3e928b69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8beb0a35-231d-445e-930a-52b45b27fb40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "847279f7-d45b-4c48-aa4f-13587eca8bda",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff70e04-5033-480a-8e26-97445d857f27",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e3dc946-937d-4e57-a0a7-8874c03ada76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0320e1-90ab-4c0b-a57a-37a40d37ff1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2ceda81-ace3-4d7d-bb20-44c43462f56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d03543b-a58b-4291-8e9f-77e1ebdd8e72",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b415d1-aea5-4a7b-8a6c-861c604d41fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2248152e-09b1-4705-a6e3-11a24ea4d43b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806c9d3c-258d-4b7b-be57-b015dc7c9180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f77f2b4c-d0d3-48de-b78d-043414fba5c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a9baa89-1342-457b-9b6a-bb0c5709debf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0a9ac4d-52f6-46f4-bbb3-d04bf7dfb34b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65df4aca-bcc6-4703-9a56-2e7a39114302",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7a5ec83-bb68-4b26-a422-c4f6e48a94e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b56a399-be28-4b81-80d1-8aaa481d5c01",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7bc65c4a-b04c-46ee-af98-f31c3fc840da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e060d04-5ede-4206-881c-39a261de38ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e6470b8-cea4-4e8d-bfcf-a7a6fbc00e40"
            }
          }
        ]
      },
      {
        "id": "809a5a1d-19b1-48d6-9c14-c6e5092490eb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "179796e1-ecd9-4164-a3b5-3835b3485d0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc4f0a3e-64a8-4dd1-b8a5-8062ad110505",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb4f43ee-7140-4e3a-bb76-90de81bfecd6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c73f3b4-dfc7-49fa-b032-dc681864dde1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a112205a-247e-4e27-9491-4227929bae1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "278ddd39-7abe-422a-a3d7-228171e16de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45ba235a-c545-41a9-bc71-379fb2336e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352ed1f7-8f2a-48b7-a1ee-40ac9cfcc5f5",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa75ee2-6a49-4a98-93e6-1698160c7b6d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f27c8c3a-e851-49ef-8fb5-70e1001b5649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466a39de-2a64-4870-916b-63deab9e7b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b786f7f-c07d-4c15-91a7-6a9d4965e685"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c6d53e9-7109-420a-9345-b22076ea0a78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84df91c4-953b-4f46-8bb7-d84e275cd41a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "481d4d18-cb62-4e1b-a77b-1d8bc4e1b4db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d42cfc6c-dcb1-4c02-97c0-1458ab075ea2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c2c497a-61f4-4d3d-bdc4-2d38804ac511",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2e306bb2-4c6f-4921-a57e-9444a7ee113c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1eeea31-c9b7-4ccb-b850-750c061e39c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd7420ea-c177-419c-8fb4-cbd7846e11ff"
            }
          }
        ]
      },
      {
        "id": "fff70d54-e174-4916-acdf-14463280081e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2ed9930-cbd2-4065-aaf1-0b2dbd3aa7b2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5723f5fe-a49c-4d91-973b-4babb98d40c6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4da5158b-b94b-45cf-a385-67acf51e4539",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "651b19e2-0a23-436d-bf4d-49bce92a7771",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6af39d6-a240-464c-95f2-5e7ff2f7439f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 17.126923076923074,
      "responseMin": 5,
      "responseMax": 273,
      "responseSd": 36.0935116446189,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682210397646,
      "completed": 1682210412476
    },
    "executions": [
      {
        "id": "12277f53-e5b7-47ad-b69e-66e331f45869",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "59dbbcf0-00e4-44e1-be32-d1f7b6a130ac",
          "httpRequestId": "10b92e92-ace0-4230-b09c-8d173688b8ce"
        },
        "item": {
          "id": "12277f53-e5b7-47ad-b69e-66e331f45869",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a2fb6c1b-1c46-4d92-970f-11cbb89e5d5f",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "dd40a1de-e7c1-47e9-a611-cd6fc99ab21e",
        "cursor": {
          "ref": "82dc9797-3b9d-4992-81ed-7c5da505cafb",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bc6a4e05-e2ab-49eb-82bd-29d1c5aa650d"
        },
        "item": {
          "id": "dd40a1de-e7c1-47e9-a611-cd6fc99ab21e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "00d06bd4-5836-4f7a-b4fe-eab3069fc942",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "e26edd94-cd40-403f-b1d9-3a43576b4dd8",
        "cursor": {
          "ref": "17fcb799-1fd0-4be4-a324-956adeb3af05",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9b5c09a7-188d-453c-a215-03c3cb876120"
        },
        "item": {
          "id": "e26edd94-cd40-403f-b1d9-3a43576b4dd8",
          "name": "did_json"
        },
        "response": {
          "id": "409e92f1-59a2-420e-80cd-0dbea6fa2b0f",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb8cda9-1184-48f3-9983-7ba3b915f91c",
        "cursor": {
          "ref": "c79ddcfb-e146-4d83-8b15-ab56483da30f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dba43423-1d2e-4691-a34d-18aa2828112d"
        },
        "item": {
          "id": "ebb8cda9-1184-48f3-9983-7ba3b915f91c",
          "name": "did:invalid"
        },
        "response": {
          "id": "def73120-c5b7-4216-8fe6-cc69a347b895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb8cda9-1184-48f3-9983-7ba3b915f91c",
        "cursor": {
          "ref": "c79ddcfb-e146-4d83-8b15-ab56483da30f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dba43423-1d2e-4691-a34d-18aa2828112d"
        },
        "item": {
          "id": "ebb8cda9-1184-48f3-9983-7ba3b915f91c",
          "name": "did:invalid"
        },
        "response": {
          "id": "def73120-c5b7-4216-8fe6-cc69a347b895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fc173e-d33c-4ada-8b92-3f574215b767",
        "cursor": {
          "ref": "8d7ac04c-e9e5-4451-b55e-b9d2ea630b9d",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8b1db2b6-9d95-4d3b-9048-80a419b1fdb3"
        },
        "item": {
          "id": "58fc173e-d33c-4ada-8b92-3f574215b767",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ab7ab4b7-f767-4e0c-96f3-c05707e2929a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 109,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79103be-cd01-4edf-840b-536a71678b52",
        "cursor": {
          "ref": "e99fb84c-8e1b-440d-9e0b-1c1ebc2c3127",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4d391937-cfad-4bf7-9333-4e8eea2b6d52"
        },
        "item": {
          "id": "b79103be-cd01-4edf-840b-536a71678b52",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4388cf07-7620-420b-90a3-3132f43a6016",
          "status": "Not Found",
          "code": 404,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcda5a6-d7ab-4e6e-b07a-44daa78bb5c7",
        "cursor": {
          "ref": "13bfb25e-7aca-48d9-aa32-04aed93d99a0",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "00b12f03-4318-4711-8e61-a6d980413694"
        },
        "item": {
          "id": "4dcda5a6-d7ab-4e6e-b07a-44daa78bb5c7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5b0de66b-80e4-4733-bd1f-4b74c21e9798",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6636933-b27e-406d-892e-a3409dd26670",
        "cursor": {
          "ref": "52148838-0137-489b-8098-7d29bb8c3d44",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "02af0473-fba2-49d7-80f2-98eae512dea9"
        },
        "item": {
          "id": "d6636933-b27e-406d-892e-a3409dd26670",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "54df1cf8-c155-48c8-9dcc-4c53e31483f5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6636933-b27e-406d-892e-a3409dd26670",
        "cursor": {
          "ref": "52148838-0137-489b-8098-7d29bb8c3d44",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "02af0473-fba2-49d7-80f2-98eae512dea9"
        },
        "item": {
          "id": "d6636933-b27e-406d-892e-a3409dd26670",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "54df1cf8-c155-48c8-9dcc-4c53e31483f5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a434dce3-a76c-46cf-a786-f408f184949a",
        "cursor": {
          "ref": "96ba3085-a581-44bd-aead-ccb3b72dd627",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f49dca2a-96b7-4fb6-ae7c-974e7413b644"
        },
        "item": {
          "id": "a434dce3-a76c-46cf-a786-f408f184949a",
          "name": "identifiers"
        },
        "response": {
          "id": "68985f73-1810-489d-b091-2875a7cfe765",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f8e509-da78-432f-832a-a94b7f6ba281",
        "cursor": {
          "ref": "bdbd3e83-7b64-4bca-94f0-4d7bac2faf04",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "701ac900-a0e1-4cd6-9d39-0e365cd95a8f"
        },
        "item": {
          "id": "43f8e509-da78-432f-832a-a94b7f6ba281",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "67a78809-8ee8-46ac-ba84-e3175a75dc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f8e509-da78-432f-832a-a94b7f6ba281",
        "cursor": {
          "ref": "bdbd3e83-7b64-4bca-94f0-4d7bac2faf04",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "701ac900-a0e1-4cd6-9d39-0e365cd95a8f"
        },
        "item": {
          "id": "43f8e509-da78-432f-832a-a94b7f6ba281",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "67a78809-8ee8-46ac-ba84-e3175a75dc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fa8316-dee6-4ee2-9676-bd1c0d4837fb",
        "cursor": {
          "ref": "02879451-7a73-4699-8f9d-e50c1f900a2f",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ab0802cf-69ac-461d-9991-23f35d6ccdcf"
        },
        "item": {
          "id": "b1fa8316-dee6-4ee2-9676-bd1c0d4837fb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c4b9469c-9da8-45b7-9639-484ad8a01ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cf6f64-3da1-4393-b6b8-8e071045f711",
        "cursor": {
          "ref": "6a014f20-5c69-4f29-b931-c53935191329",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a3240c85-08a0-4a73-9c37-69a723b59e71"
        },
        "item": {
          "id": "88cf6f64-3da1-4393-b6b8-8e071045f711",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d5cdb0c2-af50-4d2e-80cb-92fc40b5052c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a057c11-1e16-40ff-b5cd-f452d772ec59",
        "cursor": {
          "ref": "148d3d24-e345-41b0-8695-de1861ebd7a6",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1c15ae81-9fec-4a41-a6b5-55acc82d0c2b"
        },
        "item": {
          "id": "1a057c11-1e16-40ff-b5cd-f452d772ec59",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a971660b-65d6-4790-9555-8e21c2af01a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c342bef6-5ec9-44c9-af85-3bc824123f65",
        "cursor": {
          "ref": "4f75ff8e-1042-4c5e-bcbd-5cd083710328",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0052aeee-bbb4-4b2b-9a8e-7a94f9bdfad0"
        },
        "item": {
          "id": "c342bef6-5ec9-44c9-af85-3bc824123f65",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1edbb10d-07bb-48d9-af08-5750004571ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0669d0e9-cd81-40c1-b610-3a416df5a4a2",
        "cursor": {
          "ref": "f620d1a9-0803-40a0-a491-a5f3dc18195f",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "18923411-6212-403c-a7d0-96410092df34"
        },
        "item": {
          "id": "0669d0e9-cd81-40c1-b610-3a416df5a4a2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b4fa1aad-297d-45e2-b59a-af38ba9dda98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c1ea4f-5516-4605-89d8-bec153635455",
        "cursor": {
          "ref": "c1d1ff7b-f426-4c88-98d9-927baa14bf1f",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c3ebff60-4f47-40a6-847b-61fec2d27060"
        },
        "item": {
          "id": "a9c1ea4f-5516-4605-89d8-bec153635455",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e6e824c2-be41-4304-97f9-551c010a7f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbcc9e2-f434-4bd4-8090-6ef5d27c0a39",
        "cursor": {
          "ref": "360dcc4a-7548-4880-baac-bb28f434cf68",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1a558399-2021-4dbe-ad4d-8679724a4d3c"
        },
        "item": {
          "id": "9cbcc9e2-f434-4bd4-8090-6ef5d27c0a39",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "82a8e9b6-f8ed-45f0-91bf-43904e09a0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511b194c-a53b-421d-9f22-54bfe37e031a",
        "cursor": {
          "ref": "4a340ca9-6468-4439-a6c8-e8d4a9fb13d0",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "45bfb8c9-ceef-408d-a1c5-f4784d747341"
        },
        "item": {
          "id": "511b194c-a53b-421d-9f22-54bfe37e031a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d03062eb-ad7d-4f0a-8cca-65a0d0bddb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29da29a9-e876-4fe2-bba4-8b51a7cf73ef",
        "cursor": {
          "ref": "1f569713-80b0-4ddc-aa58-a86e4a138609",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2c0ffc24-be2e-43e6-99b3-2f655e21de97"
        },
        "item": {
          "id": "29da29a9-e876-4fe2-bba4-8b51a7cf73ef",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7db5b666-45ca-41cc-b8dc-ef701b3bfbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79835dcd-230c-49e8-81e8-14f89d29054d",
        "cursor": {
          "ref": "01ca07e7-6c18-43a7-9f0a-6601a83684c2",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "18fb5227-b806-4bdb-b783-7ec5c9100197"
        },
        "item": {
          "id": "79835dcd-230c-49e8-81e8-14f89d29054d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3b36ca5a-f388-42a4-a42c-e48ddf5d371d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67614110-60dc-4be0-91fc-c44f156802a5",
        "cursor": {
          "ref": "91527681-d088-4b29-88a6-ffa331ab483e",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "86bdb486-e00b-4914-891b-07c4b34e9903"
        },
        "item": {
          "id": "67614110-60dc-4be0-91fc-c44f156802a5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e53e470a-57e9-4eb8-b8b2-4ef84e34d398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebe9a5b-1ed2-4fed-ba0a-1727fb510d0b",
        "cursor": {
          "ref": "82a3d41a-fcf3-46b9-ba54-503b4ee67ba8",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "53ce0c5c-7c42-4c53-bbc1-ec5b0695ff46"
        },
        "item": {
          "id": "9ebe9a5b-1ed2-4fed-ba0a-1727fb510d0b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8b49e263-ddcf-4fc7-bcca-421d4bd3fce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d97a0d-8ce4-4936-b9c2-1926bb70f29a",
        "cursor": {
          "ref": "39c49572-005e-4e7c-8248-1823665cddc6",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "df5c73df-b29c-41e0-8a47-2f717b50bcab"
        },
        "item": {
          "id": "a0d97a0d-8ce4-4936-b9c2-1926bb70f29a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "55b6799e-8c11-4c74-aa4b-44c4f2c4b098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930f9d2a-69f7-4c57-b930-99dd7733fadf",
        "cursor": {
          "ref": "1b97f4d3-467a-436a-bdda-ad85878f2174",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "25ac0045-121c-40a5-8e1c-013009a28160"
        },
        "item": {
          "id": "930f9d2a-69f7-4c57-b930-99dd7733fadf",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "49661574-ffbb-40a6-9eef-10152b6e7fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a40c66-428e-4702-8205-72b2dc7bc08d",
        "cursor": {
          "ref": "4f0b4a90-38fc-42a7-877c-2db8c5d96d3f",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "039307b6-65c6-4ac5-9939-c43e63259184"
        },
        "item": {
          "id": "93a40c66-428e-4702-8205-72b2dc7bc08d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "07a1730e-358e-4a85-b245-24910e9047fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95700dcb-e8d0-4453-a5bf-b9c00d7a56a7",
        "cursor": {
          "ref": "69a78b48-9fef-407d-9f2f-e51cda335f7f",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c7d4002c-8e40-49f2-b1c2-443fa8ffd986"
        },
        "item": {
          "id": "95700dcb-e8d0-4453-a5bf-b9c00d7a56a7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "14346dc8-2954-4297-9c23-0e367b5138bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8aa9d3-807a-4677-96a5-7cddb0738d1d",
        "cursor": {
          "ref": "b39db651-40f9-4ed7-b677-6affbab40058",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e1ef0525-fe70-4acc-b2b7-ffa4eb016b30"
        },
        "item": {
          "id": "eb8aa9d3-807a-4677-96a5-7cddb0738d1d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fccf1205-8fce-4ba1-af8e-31fb23b3559c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af380b05-f228-447f-8ea6-0eaea9c7f3ff",
        "cursor": {
          "ref": "e3efd15d-a689-457c-837b-ea3300f04820",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "76378b2e-e759-4b0d-861a-cf41030d4f69"
        },
        "item": {
          "id": "af380b05-f228-447f-8ea6-0eaea9c7f3ff",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "039a5bc6-7a71-4413-893d-a190e9d7a4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b0254e-3f90-437a-a9d3-94992c1c25b6",
        "cursor": {
          "ref": "4f2e9286-479d-4f5e-9235-0db48391b486",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "19d78195-3d2a-4635-9495-dd25b46ec6f3"
        },
        "item": {
          "id": "85b0254e-3f90-437a-a9d3-94992c1c25b6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "84b6fc4e-692a-46bd-bfc3-07c97242be8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6e78ed-0b7a-473a-abc8-4f2e32dcafdd",
        "cursor": {
          "ref": "4fbe8ad9-eb60-4328-8488-b73662a801b1",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "87e0b86d-a69e-4040-bfed-e613da4ca013"
        },
        "item": {
          "id": "ad6e78ed-0b7a-473a-abc8-4f2e32dcafdd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8746d505-dab2-4a6f-8b30-3a7d8e1bbcce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212077a1-07a9-4b2d-a4ba-8637da8ca15b",
        "cursor": {
          "ref": "1deddf32-fde4-45c8-9e71-be9ce051be77",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "66992a04-c19b-4a58-9f7c-7fb87c2ed774"
        },
        "item": {
          "id": "212077a1-07a9-4b2d-a4ba-8637da8ca15b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9fabb3f1-8079-4e91-9de2-1beee61cf0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bf7c41-0186-4867-a8a8-8d1638864eb6",
        "cursor": {
          "ref": "bdb9f9ae-245f-4b47-9ec1-7596bef9c501",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1a4ca3d4-14cf-4494-bffa-9c9d6004fc40"
        },
        "item": {
          "id": "d3bf7c41-0186-4867-a8a8-8d1638864eb6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "72a46b54-9d24-438f-a56c-2298507ceb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f9176c-dd6b-44e6-b202-9bd2031cd0c0",
        "cursor": {
          "ref": "9b6ef306-6605-4849-8013-246d0d819e00",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cc909cc6-5b47-4149-83b6-fe538b061f27"
        },
        "item": {
          "id": "98f9176c-dd6b-44e6-b202-9bd2031cd0c0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "595c9a9d-81f2-4ca9-b900-6797c51316e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93600af-aebc-44d1-8482-e296e9cdd141",
        "cursor": {
          "ref": "9f83fd8c-37bb-4239-aa1c-2a5ce4cf33c9",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "96c1da75-7dec-44df-8dd7-c78f3ac9d36f"
        },
        "item": {
          "id": "e93600af-aebc-44d1-8482-e296e9cdd141",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8bd8c31c-fc04-48a1-88f1-bff731dd5fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a884d5d6-0966-4604-ba7c-c883ea45fe38",
        "cursor": {
          "ref": "682609a8-5416-4e73-968f-6bd840f7ae9e",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "13f90cd2-b147-4f65-a5da-f1a2f15fc602"
        },
        "item": {
          "id": "a884d5d6-0966-4604-ba7c-c883ea45fe38",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "58700c1c-0859-4de5-a920-d98e39d56748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6615f414-fda2-468f-9154-6d4cc5b4b835",
        "cursor": {
          "ref": "132e2282-d778-4fec-b2f9-3cf6369382a7",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b9aa5cfe-894d-492d-b662-40d5cd4ba38d"
        },
        "item": {
          "id": "6615f414-fda2-468f-9154-6d4cc5b4b835",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "471bae2e-d1cf-4573-b75a-4c214f8af157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64a6030-05b3-4c3a-835d-a27dcba24985",
        "cursor": {
          "ref": "7da7ba94-69ab-4253-b305-a54c5e778c3a",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0e6eea5c-eb9f-47f7-ab68-ecedba631151"
        },
        "item": {
          "id": "b64a6030-05b3-4c3a-835d-a27dcba24985",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "610f53de-603b-48ee-bb30-175cd1385bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac63ffb8-dba2-4043-9751-fbcf21f3d624",
        "cursor": {
          "ref": "20ea0ded-dc06-4856-a3e0-6d8f5d1ccd07",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "99a2e4b0-54ba-4448-acc1-f66a0cc18c35"
        },
        "item": {
          "id": "ac63ffb8-dba2-4043-9751-fbcf21f3d624",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "12ce3503-65ef-49b0-a3dd-2b330078b3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23c5986-7a0a-411a-aea7-142898f604f4",
        "cursor": {
          "ref": "6c07bb3c-f0cd-495c-a53f-5846d632c490",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d0935d57-c12b-4891-94a0-2282be727dc2"
        },
        "item": {
          "id": "f23c5986-7a0a-411a-aea7-142898f604f4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d71046df-b012-4c67-83ef-6955bd0006c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d117f658-7b98-4d80-bf51-87e8f470aeb5",
        "cursor": {
          "ref": "226b6991-37d5-4fd6-9cc1-4449c8877f50",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3fd7dd7a-0cc8-481d-88a6-2b30ed6bc623"
        },
        "item": {
          "id": "d117f658-7b98-4d80-bf51-87e8f470aeb5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e28e87ec-8043-4052-bdda-8b21a3f705bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049891f5-1c7f-45b4-99d6-bd0b5c19e506",
        "cursor": {
          "ref": "a880b5c6-4a38-4b02-9b8d-54ec5a2a78cc",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "003e9e51-5d90-4486-8ca5-38b6bfe9858c"
        },
        "item": {
          "id": "049891f5-1c7f-45b4-99d6-bd0b5c19e506",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "65f073d8-7159-4530-b2ca-ae0c651dda3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3c3d3d-bd82-459f-b72c-ace23204ae5b",
        "cursor": {
          "ref": "2fbe6575-50da-4acb-8d9c-a04041284c34",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ad1ec49a-7ba8-47be-861c-ab05bba17a51"
        },
        "item": {
          "id": "cc3c3d3d-bd82-459f-b72c-ace23204ae5b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b8956e94-3d44-4621-adbc-15ee8e56d07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870a9372-da83-4a05-b2ff-82720e57c878",
        "cursor": {
          "ref": "99a6109a-f5fc-4eb1-86b8-0bf0b193bb10",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4efc2784-9767-4bb3-9f7b-664d16631110"
        },
        "item": {
          "id": "870a9372-da83-4a05-b2ff-82720e57c878",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "36bf14d4-92b4-4e1d-9ae0-ac7c81c59065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb40419-dc84-4d94-a4a3-b38cb56bd39b",
        "cursor": {
          "ref": "3d410290-a21b-491e-b1e8-9100f3cd1f5a",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "33745c4e-8cc6-4840-a162-e1612a240f11"
        },
        "item": {
          "id": "2fb40419-dc84-4d94-a4a3-b38cb56bd39b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d1f7eda4-fd53-437c-8e79-a0a6519dcbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f03ae58-87fb-46e1-be02-601f75e6f2df",
        "cursor": {
          "ref": "14c4648d-6f00-40cf-b946-493a86e61c59",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bd3727d0-2b41-4d1f-b359-3a87035eb50b"
        },
        "item": {
          "id": "6f03ae58-87fb-46e1-be02-601f75e6f2df",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3e1a310e-3571-4181-83ef-ff3dc0f184bf",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 17,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa747b5c-a849-45fb-b678-0adb238daafe",
        "cursor": {
          "ref": "bb482b5c-e961-4577-8458-6b781ddca30b",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "50f0c656-9c8f-4bf4-994d-40c2b6811034"
        },
        "item": {
          "id": "aa747b5c-a849-45fb-b678-0adb238daafe",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "32713934-0156-4fca-b06b-c6ca4be30a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d6ca8c-2d2f-4ab7-8bdc-530e066f9dc5",
        "cursor": {
          "ref": "c696be79-6376-4b7f-99b5-b9f9c4da659a",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "196ddf25-b591-4e30-a174-0742fee0ae5a"
        },
        "item": {
          "id": "d8d6ca8c-2d2f-4ab7-8bdc-530e066f9dc5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "19bfdd3b-8725-409a-b483-78311bcf77ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbcc1ff-14b7-4f4d-a40a-dfcef595d443",
        "cursor": {
          "ref": "ca3915d7-2530-442e-b913-dca250a52239",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a5b310e8-b865-4b20-961c-9b36fa0b61e7"
        },
        "item": {
          "id": "3bbcc1ff-14b7-4f4d-a40a-dfcef595d443",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "809967ef-acb9-4296-9774-e5b8434296db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9981d6dc-bdee-456a-a90e-8af3f4787845",
        "cursor": {
          "ref": "93525995-583e-41d8-9d76-8b7910f95b96",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9fca2ae8-9e5c-434c-86e6-c2fc19244431"
        },
        "item": {
          "id": "9981d6dc-bdee-456a-a90e-8af3f4787845",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "64c1d302-e49d-4866-9cc4-6821d0026a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c43623-aa92-4e73-9fb6-b6624d62c56e",
        "cursor": {
          "ref": "dd8626fe-b7e2-4c4f-a6d6-7b2471ac289e",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ff415083-9c43-437d-9fc8-8ec4bffefeb4"
        },
        "item": {
          "id": "c6c43623-aa92-4e73-9fb6-b6624d62c56e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "48fe30a4-498d-4e47-9bec-a8d4365734be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8c6e54-bf7e-4596-a8b9-9006576f3c92",
        "cursor": {
          "ref": "6a82af9a-4813-4f49-b0e0-3b58764d951b",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cfb99211-5c3a-4952-8b83-542fb5e35750"
        },
        "item": {
          "id": "ae8c6e54-bf7e-4596-a8b9-9006576f3c92",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "dcfae8ff-168d-4c97-974d-3a7a29fd96b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71775983-dc55-4315-a749-05c601de8e80",
        "cursor": {
          "ref": "f8cef9fd-6386-4b29-aefd-3134c020d2a9",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2da7f149-a00c-40fd-8ec2-28c123a040cd"
        },
        "item": {
          "id": "71775983-dc55-4315-a749-05c601de8e80",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f9de6817-0f60-4d4c-8630-00e6c75dda3e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959a4b75-8f04-4d40-83f3-038271321442",
        "cursor": {
          "ref": "d5e06cec-fe17-4cd9-9b3b-560763f6083e",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4f594bc3-60b3-41e8-8b3d-8b80be04a110"
        },
        "item": {
          "id": "959a4b75-8f04-4d40-83f3-038271321442",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1578c7cf-2826-42f5-9da0-2ba6935bcfee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd3d6c7-d50b-447d-b4e4-7d159689d88e",
        "cursor": {
          "ref": "88ef6d7f-b48e-454d-8ceb-67f7e55ffba4",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a985987d-8b04-449a-91a0-e246f503d263"
        },
        "item": {
          "id": "4fd3d6c7-d50b-447d-b4e4-7d159689d88e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9655833a-ca15-43f6-a6b0-3bd8a9da8f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b7d48f-9667-48a4-8f54-8f97ac69997e",
        "cursor": {
          "ref": "3f72826e-06c0-403d-bd6d-6c8deecda2e1",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "279294ba-e16c-407a-a312-6080f2fb1282"
        },
        "item": {
          "id": "73b7d48f-9667-48a4-8f54-8f97ac69997e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d608d9f5-51c5-4b93-83a5-1f5f4da36f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c922ff-9fa6-4281-a763-414e7374c7c1",
        "cursor": {
          "ref": "e7d3d56e-07d9-4308-adf9-50668aa1177d",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "05e370bd-299f-49b2-ad6f-11551af39b80"
        },
        "item": {
          "id": "e2c922ff-9fa6-4281-a763-414e7374c7c1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d3d7b8ae-83de-4dac-82e0-6b936f42cf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59d06ba-7bd4-4875-83f7-5a47277afde3",
        "cursor": {
          "ref": "8a0ed091-938c-4a09-bd07-75b0baa7c089",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "033d4ae5-3955-4f33-9f03-f26fc61e3a91"
        },
        "item": {
          "id": "e59d06ba-7bd4-4875-83f7-5a47277afde3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f7161a24-a2dc-46c0-9963-d92f7b7bb0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ad66bc-79cc-499a-b3d8-55083833bdcc",
        "cursor": {
          "ref": "36694c95-6c9e-48c5-a3dc-b5267f82e3af",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3323fd29-71bd-46f8-8917-ceab289b94df"
        },
        "item": {
          "id": "09ad66bc-79cc-499a-b3d8-55083833bdcc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5d3047a5-a109-4b75-af90-a2c2ee05c6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d86635-a73d-49ff-9a58-6c596b00690e",
        "cursor": {
          "ref": "9a2ea7a6-b0ad-42be-9da2-a82f8d046b25",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2ab88e38-0289-41e8-885a-c5c2ddeb1834"
        },
        "item": {
          "id": "b4d86635-a73d-49ff-9a58-6c596b00690e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e10ae154-854e-4698-8a7d-5767236475d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138c04b9-2730-443f-bfeb-5dc20ca333f7",
        "cursor": {
          "ref": "8dbf8cfb-3412-425e-8972-e9dc4614f417",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "907b907f-b22c-40d8-9680-6c5eb04211fc"
        },
        "item": {
          "id": "138c04b9-2730-443f-bfeb-5dc20ca333f7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "811dd69f-bda2-42ef-a181-28b746f6e0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed914081-055c-4d14-93b3-8449316586ed",
        "cursor": {
          "ref": "5512764e-220e-49f8-aab5-4afa768e3f1b",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "14270f37-c6be-461a-be30-3bc46b8a23bd"
        },
        "item": {
          "id": "ed914081-055c-4d14-93b3-8449316586ed",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6206e682-7471-4ffb-9105-94314c30e1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6168adc3-0134-4050-89c4-ecea71ba2f50",
        "cursor": {
          "ref": "bdf76a4d-0f5c-40d1-95fb-266a33f68f69",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2fdcf8fb-ab62-4962-ac1b-2bff0255d83c"
        },
        "item": {
          "id": "6168adc3-0134-4050-89c4-ecea71ba2f50",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5d25e141-fd8d-4e71-a368-fa87a05de5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3d3507-e555-4f66-9c66-e173db885d7d",
        "cursor": {
          "ref": "f6088b2a-e919-45b6-9ac4-4460cd071306",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "08db6a18-29f5-4814-85af-487d57d909d1"
        },
        "item": {
          "id": "fd3d3507-e555-4f66-9c66-e173db885d7d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7e4b836c-26dc-471a-8285-b51e7b041ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c981337d-5d52-46a7-80f3-28bb94f9e27d",
        "cursor": {
          "ref": "d0293d35-2b1c-4d4e-a59f-cf0beac627dd",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2924bd3d-6eec-4518-8e13-db91ad5aca0f"
        },
        "item": {
          "id": "c981337d-5d52-46a7-80f3-28bb94f9e27d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a74cb7e4-4ee0-488e-9833-11f2f0181ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61fcc44-76b7-4e58-99a5-d898517b26a1",
        "cursor": {
          "ref": "a0515aa8-4ded-4a98-8348-1f7433d29e48",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "67871583-b0c3-462e-8b42-b481829f6a0d"
        },
        "item": {
          "id": "e61fcc44-76b7-4e58-99a5-d898517b26a1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "82256905-02a1-4dc5-84b5-e669f1041a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1f4ddb-e31f-4cbd-8819-417a08decf06",
        "cursor": {
          "ref": "40f843ca-8ec1-40bb-bb49-1e896c066262",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "25f8c150-53d5-4298-8a4f-dce51d9cd6b0"
        },
        "item": {
          "id": "cb1f4ddb-e31f-4cbd-8819-417a08decf06",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "080f68ab-2407-436f-a80d-7ef1b971d91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0d7d5b-8758-40aa-a489-7f5ae7f8b655",
        "cursor": {
          "ref": "af16fcd9-8b8e-45d4-8657-b387fd281515",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c0545bc9-c86d-42ba-81bc-3571c17a005c"
        },
        "item": {
          "id": "fc0d7d5b-8758-40aa-a489-7f5ae7f8b655",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "54e75cc4-67af-41be-aa15-a222dd662ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb890e5-ad01-4380-b24a-eb0241bd19b9",
        "cursor": {
          "ref": "7a551399-efe8-47a6-bec9-747c448b43c3",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c6bcd51b-4d2e-499b-9f8c-3f17052de404"
        },
        "item": {
          "id": "feb890e5-ad01-4380-b24a-eb0241bd19b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f044e58d-9a35-4076-ae68-3b9e36ab356f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc04ca46-a640-4114-b75d-a55b8ad4430c",
        "cursor": {
          "ref": "857e20bd-3dc2-48ef-926f-228d790584db",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b8f3292f-815e-4a76-b3ae-ad1393e081b8"
        },
        "item": {
          "id": "fc04ca46-a640-4114-b75d-a55b8ad4430c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9053cb59-5c91-41c1-82fd-cbd3e8b1b89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480a992a-8460-41fb-ab44-cd6eaef67db7",
        "cursor": {
          "ref": "40ae074e-50d7-47cc-9bd2-eaa6c27b8090",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cecda6fa-9bcb-4352-98d0-8bc44f48e213"
        },
        "item": {
          "id": "480a992a-8460-41fb-ab44-cd6eaef67db7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6633ebd0-6331-478d-b6b7-78f506333df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa8ed61-40b9-43de-ab3d-79a985586e43",
        "cursor": {
          "ref": "42c1f796-a011-4c5f-9f86-3862a1390cc0",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0a1b98cb-d917-461b-9c25-8709cc0d0896"
        },
        "item": {
          "id": "8fa8ed61-40b9-43de-ab3d-79a985586e43",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "158f3831-9c39-490a-a655-c53ca9d9ec4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adcf164-ad72-4d9f-93f7-dda427a8c730",
        "cursor": {
          "ref": "0f8a2529-5a02-4e11-aa80-72587934f936",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ce52a50a-3a29-4c06-9edc-2ee93805b28d"
        },
        "item": {
          "id": "8adcf164-ad72-4d9f-93f7-dda427a8c730",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "45839618-bf0d-460c-9bc8-6e0f72b3b827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de029f7-886a-4f45-92b1-eadce690c495",
        "cursor": {
          "ref": "1f33ffa2-23b9-41f9-8704-3b66cc06473e",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ed9f6846-4166-41d8-97d8-3a032cc9d24d"
        },
        "item": {
          "id": "8de029f7-886a-4f45-92b1-eadce690c495",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3d75fcf0-9ce8-479b-9525-fdf605d2502a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034ee12f-23bd-4b40-82f9-5db5f909f112",
        "cursor": {
          "ref": "b9434808-2a88-4aa9-89c2-5cf506e1c724",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1be3426f-52bd-481e-84d9-3a06d22e7c4b"
        },
        "item": {
          "id": "034ee12f-23bd-4b40-82f9-5db5f909f112",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6df720f9-c650-499e-a20c-7d6dd4279614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd60768a-10eb-4916-9e8a-40246a7df3bb",
        "cursor": {
          "ref": "c44a626d-48b0-49c5-8b03-264525e44ace",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cd89be55-8132-4620-a44f-b6d7ae57e875"
        },
        "item": {
          "id": "bd60768a-10eb-4916-9e8a-40246a7df3bb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bb9c0680-cb9e-47b2-b381-2100f5b0ad5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b232d2-37e0-4d7d-ab34-404ab0ee7c57",
        "cursor": {
          "ref": "2c5ad960-02a0-4eb3-8504-dc72952f6018",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "159f296c-e802-4a54-8c1c-87ea133248f8"
        },
        "item": {
          "id": "a1b232d2-37e0-4d7d-ab34-404ab0ee7c57",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8654e15f-8f5e-4c53-9ef3-a3f8a4a29a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55206ff1-a6cc-43d0-909c-238cbfc7f99e",
        "cursor": {
          "ref": "5c73ac70-1105-4474-bea4-a903ae496764",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fe1b3a19-3ae0-4395-a9c6-0908fe2d7740"
        },
        "item": {
          "id": "55206ff1-a6cc-43d0-909c-238cbfc7f99e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b502362f-b671-44ef-8066-1762fef75351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510d694d-b0c1-4c16-a9e8-31d366486d4d",
        "cursor": {
          "ref": "08a06a32-6909-4bbc-87ee-bb7ac099904d",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "06534c7e-ba06-4c3c-980f-d8667ffce2a0"
        },
        "item": {
          "id": "510d694d-b0c1-4c16-a9e8-31d366486d4d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8720a692-07d6-40dd-b37b-f704e8f7956a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95022967-cb24-4239-a790-fbb096625455",
        "cursor": {
          "ref": "8271b45e-55f3-47b3-92ba-1bd32312baea",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c5185028-fc25-4948-a971-ab6cff6abe6e"
        },
        "item": {
          "id": "95022967-cb24-4239-a790-fbb096625455",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "71ddb14f-f728-4c3a-ae31-e7977a2d1eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a58cb3-2023-49bd-82de-62cc5fe7b018",
        "cursor": {
          "ref": "5c16f204-3f13-4faf-b541-d51559ea5d5a",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "53ddcad8-ac89-4b33-accd-9fd958954a4a"
        },
        "item": {
          "id": "60a58cb3-2023-49bd-82de-62cc5fe7b018",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ebc3da92-388e-4ab2-994e-8bf088cb3dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad39bd8-78fd-4134-b8c1-56ba087aaa84",
        "cursor": {
          "ref": "4b3443d4-c666-4bf7-a920-356134131553",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "da74bc53-7adb-42d2-9dc7-a70665129fc1"
        },
        "item": {
          "id": "6ad39bd8-78fd-4134-b8c1-56ba087aaa84",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "13655fbd-2905-4827-9ab1-e35d84d1c573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8faf44-edaa-4aa5-a5c8-b63e1d2ab502",
        "cursor": {
          "ref": "aa1c139e-d4ee-4012-aaa9-109b976d7bb4",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "691c2140-6734-4a3f-a633-93b54307f442"
        },
        "item": {
          "id": "bb8faf44-edaa-4aa5-a5c8-b63e1d2ab502",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "45529139-4145-4f52-b66a-515d73122dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d5d535-d135-4dee-811a-ae22112b92ca",
        "cursor": {
          "ref": "ea81838e-bf7b-432c-9e5f-3bd338572b7a",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "054c3d63-302e-4939-800a-7779eeda82df"
        },
        "item": {
          "id": "f2d5d535-d135-4dee-811a-ae22112b92ca",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a70610f9-eaea-45da-b794-18ae5d43cfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527f3a09-2b56-4110-83db-de787f2ee484",
        "cursor": {
          "ref": "f37eb07d-1d3d-4567-b8e6-3c5f27ba9ddc",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1e5180ff-3708-4f63-8048-e19a9acae7f6"
        },
        "item": {
          "id": "527f3a09-2b56-4110-83db-de787f2ee484",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "da1abcb1-5117-400b-866c-09d208330b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e074b08-4fa7-4b91-8f7f-9cff96c44df0",
        "cursor": {
          "ref": "0e4cf6d9-dbe3-4a14-9e03-33e8d500cea4",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c475f1b2-bc49-4af6-a765-b21fd5cc462b"
        },
        "item": {
          "id": "5e074b08-4fa7-4b91-8f7f-9cff96c44df0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "efd45601-d23d-46f5-a5ce-bcc29452353a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30290ed-8d91-4f8d-a8dc-7aac09297988",
        "cursor": {
          "ref": "2ee45d82-29f3-410d-a7c0-a97636f97db1",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "06bdeba3-4c9f-4d45-9041-cee4f73be260"
        },
        "item": {
          "id": "b30290ed-8d91-4f8d-a8dc-7aac09297988",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "58233a9d-8867-44d2-919f-b1a40061f0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec248d79-e1bc-423a-b0e9-4991ab1d2179",
        "cursor": {
          "ref": "f5ddcd72-bfb2-4875-b432-2f19448e5620",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "24b37d26-a3e2-4ea2-8a87-0cb4f0d66f7f"
        },
        "item": {
          "id": "ec248d79-e1bc-423a-b0e9-4991ab1d2179",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c542f633-bda8-4787-8c9b-9b491ed7f412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8374ce2c-c9a5-4842-ac18-08798ada8697",
        "cursor": {
          "ref": "3d8f2df1-e2bc-421c-8d72-25e986b8df93",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9b5c07fa-35a8-40f1-ba18-181f1159731e"
        },
        "item": {
          "id": "8374ce2c-c9a5-4842-ac18-08798ada8697",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2deade51-501a-4a62-81e3-e0ebc191c105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d16571d-ec5d-4852-8b38-412f3e49913a",
        "cursor": {
          "ref": "b2d0fe01-f903-481a-beee-ea2438c23873",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9bc73fb6-daae-456e-923b-ff13cfdc7d28"
        },
        "item": {
          "id": "5d16571d-ec5d-4852-8b38-412f3e49913a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "14788a2b-79e0-42ef-8eed-af4db395afa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80220b4d-41b3-40e4-9997-d33d3766b700",
        "cursor": {
          "ref": "0a738447-3894-4d2d-9aa3-1375728045a1",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1b57ed9e-74e1-48e9-b2bb-25a0d5625cb3"
        },
        "item": {
          "id": "80220b4d-41b3-40e4-9997-d33d3766b700",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "21f1e012-417d-4cc9-bbd5-1f7f72ca40b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5843f5d7-c340-43d1-9be7-5d1b740ad347",
        "cursor": {
          "ref": "baef44db-de25-4e6e-a447-5ff2318764a4",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fe9467ce-8d2e-41a7-a7be-ba6cb06e1ad8"
        },
        "item": {
          "id": "5843f5d7-c340-43d1-9be7-5d1b740ad347",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ae163486-38e3-4b9f-8ccb-715edc3c18bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c079dc2-6d16-4a78-8b3b-4241a39bc2bf",
        "cursor": {
          "ref": "de41b5ab-fb18-4da4-bbb7-2b7e3200ee28",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2be8ea5b-493f-44c5-9da4-c773ce7d27b5"
        },
        "item": {
          "id": "2c079dc2-6d16-4a78-8b3b-4241a39bc2bf",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "21445dba-5b72-45e8-ae94-3a32099c3d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc1b1e3-94c6-49a1-9b6e-38412d663dcf",
        "cursor": {
          "ref": "726688aa-9685-41d3-bdec-d70a39fb9c76",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e6fb26f0-64c5-4596-b5aa-82bc1bfd7458"
        },
        "item": {
          "id": "9fc1b1e3-94c6-49a1-9b6e-38412d663dcf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f64a1491-5691-414d-b177-3b1283610401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d616093f-802a-49f9-a5ee-c3cba898ac7e",
        "cursor": {
          "ref": "0d1203d6-5fa2-40fb-9b92-3e23d7856e65",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1539fe61-54e7-441a-8f95-5d8ba871befd"
        },
        "item": {
          "id": "d616093f-802a-49f9-a5ee-c3cba898ac7e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7d846b22-debb-494a-bb1b-754c4102379e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15b4d59-13c4-4640-8072-d7c5103fe82a",
        "cursor": {
          "ref": "1c8ee763-b3b7-40de-a28b-eaafdafb58d0",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5322dff3-1a37-4549-b279-f2b899fa79c5"
        },
        "item": {
          "id": "d15b4d59-13c4-4640-8072-d7c5103fe82a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "06f063f7-8f1a-41b4-a6fc-fb2e30c7690b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def1555c-7650-4a8d-b58a-60039a03a517",
        "cursor": {
          "ref": "b8bbe434-586c-45dc-bdeb-5f751e9f46cb",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "093ed598-a813-4cda-af45-dbf4bb7d8cb4"
        },
        "item": {
          "id": "def1555c-7650-4a8d-b58a-60039a03a517",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d3a411de-5607-46ac-8826-bdc1a3df18b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3c05b5-26ed-4c43-bcca-99a8158eaaa1",
        "cursor": {
          "ref": "67b50839-40d2-47f2-855a-1af73c636988",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "49e33c8b-7ba6-4bd0-8cc4-5310b71d736a"
        },
        "item": {
          "id": "fc3c05b5-26ed-4c43-bcca-99a8158eaaa1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "673f8c80-953f-423e-a856-084275834844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418546ba-a7f2-433d-964f-0d542edb2b38",
        "cursor": {
          "ref": "54236b94-da8c-47c4-8653-7c9002dab297",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "eb36b7ec-82f0-4e46-bddb-05c79061dd4f"
        },
        "item": {
          "id": "418546ba-a7f2-433d-964f-0d542edb2b38",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "203bf6d4-632d-46e6-ab57-573966c75beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34972719-2d0b-49e1-b4da-2b7e9462960f",
        "cursor": {
          "ref": "ebc72073-0f85-4b91-9d86-cef6e3d97030",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b13cf848-9cd2-4dde-af81-95a7d09757ad"
        },
        "item": {
          "id": "34972719-2d0b-49e1-b4da-2b7e9462960f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7ca7e193-c232-4885-9268-cb55357bf596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61603c28-e92d-4754-a470-2d4501a2c5de",
        "cursor": {
          "ref": "5181a045-081a-4184-a95b-e26b00634a8a",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "15d9b80e-2655-4910-bcb2-7834645f89dd"
        },
        "item": {
          "id": "61603c28-e92d-4754-a470-2d4501a2c5de",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4ca48154-c501-4ca5-92a3-c9b80e42fb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc5f607-e773-493e-a75e-605c3f6e25f7",
        "cursor": {
          "ref": "e3f160e0-a05a-4710-883b-b9f5acb3e4d3",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ada4c64b-c0ed-49fe-a768-fbd25873f169"
        },
        "item": {
          "id": "fcc5f607-e773-493e-a75e-605c3f6e25f7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fbc3ba93-9fc1-4e2f-a65e-fe6d2049e5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2e308a-0925-455d-8fbe-fabd0e34dc00",
        "cursor": {
          "ref": "723c19ff-bee6-44b3-8a51-8c9b9db62a2a",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "683ecb21-2fdf-4736-b874-4975f9373e33"
        },
        "item": {
          "id": "ef2e308a-0925-455d-8fbe-fabd0e34dc00",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1fc9eb3a-e7f3-4175-8af8-9633851b60e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8edfa4-870f-4be9-8918-405dc4605a68",
        "cursor": {
          "ref": "38c71e68-01e6-44ff-8a52-3ff0adf20569",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "509799c2-3546-49ba-ad83-a6b6dccb68ea"
        },
        "item": {
          "id": "fd8edfa4-870f-4be9-8918-405dc4605a68",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "0fb9f863-1593-44fe-aa73-eadaad9f9e68",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922a8a85-6660-47f7-af8a-fde6cbd8c8ea",
        "cursor": {
          "ref": "08eb617a-1564-4e9d-a620-bb44df4fded3",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f3a82d77-991e-4792-960d-fcebbc1f49e0"
        },
        "item": {
          "id": "922a8a85-6660-47f7-af8a-fde6cbd8c8ea",
          "name": "credentials_issue"
        },
        "response": {
          "id": "88007ade-c5fc-4ac8-9556-fe59da34b472",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "695cbde6-fd72-4a2e-8c47-6e1b60265c61",
        "cursor": {
          "ref": "897657bc-21c3-4370-8dba-58fce795bb93",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "be73b99d-1440-43ae-85f4-a70505c5578d"
        },
        "item": {
          "id": "695cbde6-fd72-4a2e-8c47-6e1b60265c61",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3b8bf994-d325-41ef-9db5-630a211fcf78",
          "status": "Created",
          "code": 201,
          "responseTime": 70,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "29338ffb-3d77-4177-b830-d09006f45549",
        "cursor": {
          "ref": "005838ed-88ee-44a7-ac91-fc7a2782e6ca",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7b3d47fc-2138-4af3-a06f-6970bedb0a34"
        },
        "item": {
          "id": "29338ffb-3d77-4177-b830-d09006f45549",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d0af4556-4c38-497d-b23b-60f3ad1c8543",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f265e8d0-d777-4530-ab00-2027acf1002c",
        "cursor": {
          "ref": "40ada5bf-194b-4327-8ec9-b362303a7704",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3490b07c-377f-4997-8baa-5f415e015023"
        },
        "item": {
          "id": "f265e8d0-d777-4530-ab00-2027acf1002c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7ec7370d-073f-4673-8f75-c100d55dada8",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "707eb05d-66ba-49a8-81a1-5390307e5190",
        "cursor": {
          "ref": "f8285d8f-7cf1-4887-ba74-a9cdf4d3d4d4",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "27f56dee-30e7-4a9c-9ea5-07ef3c70dd6a"
        },
        "item": {
          "id": "707eb05d-66ba-49a8-81a1-5390307e5190",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "89512d3b-0465-4b2f-9d0f-3192b11e5095",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69bd56c-3d0c-498c-8b8e-2b8c8cd6057e",
        "cursor": {
          "ref": "c3f3ab19-4a08-49dd-9020-01661af44963",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dfd7357d-c1bc-4932-9b30-410d682ce23b"
        },
        "item": {
          "id": "d69bd56c-3d0c-498c-8b8e-2b8c8cd6057e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1dd4d096-7a20-4fd7-9c5c-d5306e864b98",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9691d7e-6d52-443c-8255-e11f816175e1",
        "cursor": {
          "ref": "b0c46dd6-b556-4a1a-9f86-2aff869a7663",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9336e883-ae8a-4200-ac4b-7a725c56b89d"
        },
        "item": {
          "id": "a9691d7e-6d52-443c-8255-e11f816175e1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4e8ec49b-ca4d-4c35-8ad6-91c0704abb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9691d7e-6d52-443c-8255-e11f816175e1",
        "cursor": {
          "ref": "b0c46dd6-b556-4a1a-9f86-2aff869a7663",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9336e883-ae8a-4200-ac4b-7a725c56b89d"
        },
        "item": {
          "id": "a9691d7e-6d52-443c-8255-e11f816175e1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4e8ec49b-ca4d-4c35-8ad6-91c0704abb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06653e7b-0016-4617-a3b4-dfb2411edf66",
        "cursor": {
          "ref": "f4c39b7e-4712-4fc0-8ecd-48639455c718",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "08d34d45-64fe-4abc-b48a-e88958e1d7b1"
        },
        "item": {
          "id": "06653e7b-0016-4617-a3b4-dfb2411edf66",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3f74888d-03fd-4c9c-9900-a053bc913938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77192a6c-ee7c-4544-94f1-1a190f8fd06d",
        "cursor": {
          "ref": "fe70312b-df99-405c-8796-2e4294ab12f3",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "392c778f-977c-463c-b617-7ca9e3df5527"
        },
        "item": {
          "id": "77192a6c-ee7c-4544-94f1-1a190f8fd06d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c8163906-2c44-43c5-a0bb-2b18ece38d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400ef2e7-0f6f-47ce-bd5d-28022d9acb55",
        "cursor": {
          "ref": "287fa4c2-06aa-4ae7-b0ce-aa329be4940b",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8462f015-f3ec-45a8-b177-40e844039f38"
        },
        "item": {
          "id": "400ef2e7-0f6f-47ce-bd5d-28022d9acb55",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7fc50f41-3ad1-4fbc-ac24-333be3c147ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cbcae4-467c-4af2-9100-84dae2b58b90",
        "cursor": {
          "ref": "42a523d8-2430-49be-850e-aae5b108ca99",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0949f1df-7769-4744-9191-de7bf5487a33"
        },
        "item": {
          "id": "22cbcae4-467c-4af2-9100-84dae2b58b90",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c540441f-f0d8-4d95-a428-78cdc86f7a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c583c51-87fe-43ff-bcee-2250c1d13e88",
        "cursor": {
          "ref": "dbb587c9-f34e-46ee-ab79-e28288cee444",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2e167475-9f61-4d0f-ad53-693b17898555"
        },
        "item": {
          "id": "0c583c51-87fe-43ff-bcee-2250c1d13e88",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "362cdf24-d18e-4e55-83fc-f7973ccde0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c295fa-e777-4543-8a16-f24fe14e32a8",
        "cursor": {
          "ref": "7822b939-3514-46a0-8a07-a6238b1dea1f",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "38c79f71-3958-4887-931f-254780e78bbd"
        },
        "item": {
          "id": "06c295fa-e777-4543-8a16-f24fe14e32a8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0b19342f-6ec1-4e8e-a3c6-37d0ddfc300e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9dd91f-bea1-4efe-ae75-3957343fd423",
        "cursor": {
          "ref": "ee4bf365-b064-48b7-8bb0-dc3fd316ae2d",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9f165cd0-bcc2-49d4-bf9a-bb43997372d6"
        },
        "item": {
          "id": "0c9dd91f-bea1-4efe-ae75-3957343fd423",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "05a550b8-9542-4304-86fd-664bd7fbaa20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6a1d2c-a02d-4525-8d29-d65ac7d489d0",
        "cursor": {
          "ref": "03337188-d438-4a72-8d31-f9bf34cf2623",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "71d3bc90-d10c-4f2a-9c84-2cbc0dccc83f"
        },
        "item": {
          "id": "4c6a1d2c-a02d-4525-8d29-d65ac7d489d0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "925ae474-e2f7-429d-ab81-c3c72575c504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3faec70d-b9e1-41b8-a8f9-b98f10cd46b9",
        "cursor": {
          "ref": "9ddebd06-488b-42e6-911f-4cc6953db08b",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "81341f8a-2b5e-4b13-93af-236ba35835c8"
        },
        "item": {
          "id": "3faec70d-b9e1-41b8-a8f9-b98f10cd46b9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7256d449-b17e-44f7-8bd4-e0da31f23c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9409bb-164a-4ba0-a48d-7dd6fa93e196",
        "cursor": {
          "ref": "29c70b58-2aa3-423e-900b-ef3398c13e7f",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5aafdd26-801f-4145-84d5-9a5ca589cd38"
        },
        "item": {
          "id": "6b9409bb-164a-4ba0-a48d-7dd6fa93e196",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1748d522-ba3d-4203-adad-5a947361cd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32fabac-041b-40c2-b4fe-0e0b318043c9",
        "cursor": {
          "ref": "11240536-e931-4a5d-90db-8dfff82b6f58",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "55c31773-be6f-4464-9ef0-4bc109d0d5b6"
        },
        "item": {
          "id": "c32fabac-041b-40c2-b4fe-0e0b318043c9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7b0c2aba-5d09-444d-8375-2193fdcbfd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187858eb-91b5-4791-9f8a-e577e32ac00d",
        "cursor": {
          "ref": "e886b74d-b149-43d5-a028-542520a4bdca",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "53ba9b5f-3012-4cd1-8d3c-d48d6a70358f"
        },
        "item": {
          "id": "187858eb-91b5-4791-9f8a-e577e32ac00d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3fc61b70-4d16-40d5-8d3f-38a1b13ba307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05af9eeb-4adc-47cb-a587-c36cacc188ae",
        "cursor": {
          "ref": "c2eab186-2776-4676-a3a6-b3704dccf970",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5d1b48a4-baad-41f6-99df-3e73a7ee76e3"
        },
        "item": {
          "id": "05af9eeb-4adc-47cb-a587-c36cacc188ae",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4774dd8a-de43-46cf-a954-66ccaaa2c915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd3f71b-f08a-49ad-8db9-d91cf4d2fbe5",
        "cursor": {
          "ref": "df0afe09-7f95-4f7b-b153-e0ccefd7d9b7",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5c2f6652-e3f7-4ae4-9fd6-b54946a9fd3c"
        },
        "item": {
          "id": "9fd3f71b-f08a-49ad-8db9-d91cf4d2fbe5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b3ffeee2-6aea-41af-94fd-fc628dcfc9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4b6b5c-1c76-4946-92d1-247b432f76f9",
        "cursor": {
          "ref": "d564c5b1-af69-4264-a23c-3101157339b6",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "36eb483a-04c3-4486-b6b9-c240bb5e1a23"
        },
        "item": {
          "id": "1a4b6b5c-1c76-4946-92d1-247b432f76f9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a12789c8-9b0f-411c-a9bb-87b4af04a83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32a377d-46d3-4dcf-88b9-dd4bd80457f3",
        "cursor": {
          "ref": "b1ac6158-9c26-487d-811b-492096ed1194",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6e633ded-7f32-404e-a7e4-1b4f4b7f4326"
        },
        "item": {
          "id": "c32a377d-46d3-4dcf-88b9-dd4bd80457f3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4a2cd295-6635-44c4-b6cd-dd22f677df8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66a7578-124a-46e8-b6cc-f68d90f8b25b",
        "cursor": {
          "ref": "ae8d60ce-a5e4-44b0-a785-61bf83438663",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0cf99e99-57ba-4ae1-8d3b-9d0c451d2d0c"
        },
        "item": {
          "id": "c66a7578-124a-46e8-b6cc-f68d90f8b25b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8a1064c6-162b-4679-bc6c-cb1ad7ba54ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530a642b-263d-4bd7-ad1f-5dd8b6ead33d",
        "cursor": {
          "ref": "156aa600-31c6-483f-b1b5-a7fcebba2c17",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3a546a3d-b24a-4496-bc71-513889ff2edd"
        },
        "item": {
          "id": "530a642b-263d-4bd7-ad1f-5dd8b6ead33d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "acf26fb2-5fa8-4d2a-82d4-54ace13a5051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b65de6-57c8-4598-9571-33010c3aea87",
        "cursor": {
          "ref": "1a896abf-669f-4438-b253-50b26d552562",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4c3838e8-f22a-466f-a84b-60dd1fbacf01"
        },
        "item": {
          "id": "91b65de6-57c8-4598-9571-33010c3aea87",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5c7f186d-cf95-498b-91f4-27256fcda5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a674cc1d-6c6f-453d-9c64-b9eb9bfec271",
        "cursor": {
          "ref": "df2c0580-8daa-41b9-8442-58a58a1c7b88",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f06b9b47-59c9-4135-abfa-01d00b32909f"
        },
        "item": {
          "id": "a674cc1d-6c6f-453d-9c64-b9eb9bfec271",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b3251278-22cc-41dc-a991-9c988363e2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a746f2-be3b-4d1f-acac-b30579c19a39",
        "cursor": {
          "ref": "a49b27e7-e9ef-40a2-a9f8-c19e77e3cfcb",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3621baef-8dfb-4022-9458-7efd08e12e22"
        },
        "item": {
          "id": "64a746f2-be3b-4d1f-acac-b30579c19a39",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "58218892-1581-47ad-9559-d38739dda394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11c09f5-3af3-4207-a542-f2d16371a8b7",
        "cursor": {
          "ref": "92d98072-4e2b-46df-88af-bde0c744dce5",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9737446c-2c19-4ed5-a664-7c4d0cfa127d"
        },
        "item": {
          "id": "e11c09f5-3af3-4207-a542-f2d16371a8b7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "52b8fe94-74e5-4442-b247-ac4f52aa58bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa2c807-77e4-4603-914a-8c15c89fe02f",
        "cursor": {
          "ref": "e2309afe-5183-4348-aeb1-2c4ed6400382",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4761a147-f107-44ab-b375-f7b90120b995"
        },
        "item": {
          "id": "dfa2c807-77e4-4603-914a-8c15c89fe02f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2d334724-7da9-48a3-9500-bf809b2fb091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d539ad-890d-4b05-8b9d-e9f6620383d5",
        "cursor": {
          "ref": "fd2d9b77-6e28-46e7-8927-b04c7416f605",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5a0986fe-251b-4a1e-8437-40644aa0c1ed"
        },
        "item": {
          "id": "14d539ad-890d-4b05-8b9d-e9f6620383d5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "587ff6b1-61d5-46e5-beb0-4144596beb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16aa7db6-0e6e-4e85-8120-0f79d1418797",
        "cursor": {
          "ref": "0cabd534-d7f8-4b73-b800-25964622c7ea",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9eca669f-0761-473a-823b-0cb19e02859b"
        },
        "item": {
          "id": "16aa7db6-0e6e-4e85-8120-0f79d1418797",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "004facef-6142-497f-896b-b873ece15e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc90d96-ecc1-4e74-82b9-a83380a96989",
        "cursor": {
          "ref": "dc62b071-f7a4-4308-89d2-a4a8971dc674",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c1cc59ea-eac3-47ba-9a10-a691af61ed74"
        },
        "item": {
          "id": "1fc90d96-ecc1-4e74-82b9-a83380a96989",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e266bc57-8da6-4d4f-a4f7-3e3450a9b799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e816dc1-2e68-4f82-a5ba-58a1452d9f08",
        "cursor": {
          "ref": "5e1b528c-199d-46c4-aaeb-2a10a274b1f8",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b669b2c8-9509-43fe-beda-60f86412d146"
        },
        "item": {
          "id": "9e816dc1-2e68-4f82-a5ba-58a1452d9f08",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6a612c7c-927c-4c17-a4ec-deec4d93c699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a76125-62f3-4001-8413-808bb513c487",
        "cursor": {
          "ref": "1edc5804-3f68-4f41-b79c-8d297fc8bc5a",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a4786646-faaa-48e6-aaf3-e6963808d4c7"
        },
        "item": {
          "id": "94a76125-62f3-4001-8413-808bb513c487",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9cf8cb44-56b1-4a73-933c-c9227204cfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec0c5d2-e278-4203-b1f3-6b47f8e758de",
        "cursor": {
          "ref": "78889430-18ae-4c81-951b-0be437d61fca",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4a07b4c8-2ed6-40ac-8c12-e6eaf44568a9"
        },
        "item": {
          "id": "bec0c5d2-e278-4203-b1f3-6b47f8e758de",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1e2be012-742b-4949-8e71-a3fff7fbdc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c15e832-432a-4b30-af34-563961262798",
        "cursor": {
          "ref": "c16feff0-bd07-4686-8cff-7e04b832cf05",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5927e8ea-bef4-476c-8de6-24a7f9f5999d"
        },
        "item": {
          "id": "4c15e832-432a-4b30-af34-563961262798",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "43d71021-902a-4358-ab08-2338171a28c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ea58f9-e6d3-403c-a279-d707fc265aad",
        "cursor": {
          "ref": "13c21a19-9067-440f-b9f8-8d5367dd25f1",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b1ba4958-1dea-4178-9872-746f70b86ddf"
        },
        "item": {
          "id": "d1ea58f9-e6d3-403c-a279-d707fc265aad",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1efd61c5-bc13-4284-ab0b-da4496d8489b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21744fb-614a-47f8-9690-6dbf9dd8587d",
        "cursor": {
          "ref": "28f6d449-7cd2-457a-9a70-8980f43917f0",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2416047a-af00-43ca-95a6-cd90fc54f9d5"
        },
        "item": {
          "id": "a21744fb-614a-47f8-9690-6dbf9dd8587d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c7c8344e-d1cc-463a-b526-925231811a0d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf6d7ec-5e84-48b3-b717-4eb46d13562b",
        "cursor": {
          "ref": "19b1c2df-40ee-48a4-8898-34a6e7340c1b",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "90ed1aed-e1a8-4c13-8bbb-f5f42c1b4a7b"
        },
        "item": {
          "id": "4bf6d7ec-5e84-48b3-b717-4eb46d13562b",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "77b3b840-9489-4bae-8d68-7a454309ac1d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2f8795-e929-46b7-9644-d393cbe1edb0",
        "cursor": {
          "ref": "a99ef889-d7a9-4409-902e-0ceaafdc86be",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a941f6f9-9983-4206-b6d3-990de075ff18"
        },
        "item": {
          "id": "4b2f8795-e929-46b7-9644-d393cbe1edb0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3c289ef8-141d-42f0-bb99-0eceb52155e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2f8795-e929-46b7-9644-d393cbe1edb0",
        "cursor": {
          "ref": "a99ef889-d7a9-4409-902e-0ceaafdc86be",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a941f6f9-9983-4206-b6d3-990de075ff18"
        },
        "item": {
          "id": "4b2f8795-e929-46b7-9644-d393cbe1edb0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3c289ef8-141d-42f0-bb99-0eceb52155e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e564bbbd-2ab5-4414-9ccd-a99e2ed9fa90",
        "cursor": {
          "ref": "eac53e96-40c4-4099-8540-85b5000a022e",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6c867969-c54b-4ad5-b84e-9db3e383e5a8"
        },
        "item": {
          "id": "e564bbbd-2ab5-4414-9ccd-a99e2ed9fa90",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f31c66da-b685-4b21-8397-9957150114e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418c6127-be78-4d33-9200-5829958907e8",
        "cursor": {
          "ref": "ee7ebc01-ccf9-43ea-9377-762ebe21b7fc",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0fe2e972-acb7-4d75-ae3d-daea52102f76"
        },
        "item": {
          "id": "418c6127-be78-4d33-9200-5829958907e8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f3eef4f3-1e35-448f-bd97-6c8b86b09d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c26d54e-525e-4789-8c32-a28b2a8d19c2",
        "cursor": {
          "ref": "1aa927d8-3f02-427d-b036-ac815ea772b0",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "45c15aad-05ad-4faf-9739-4ae9e878eb8c"
        },
        "item": {
          "id": "3c26d54e-525e-4789-8c32-a28b2a8d19c2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bf22dcf8-1e3c-4636-85e9-e3659935f069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0048ec98-78db-4595-adfc-1d72d51c8f6f",
        "cursor": {
          "ref": "bd80818a-aec8-4d9c-8069-98b1dcfd65d7",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b6bda3d9-ed5f-4d73-ab7d-81967291a442"
        },
        "item": {
          "id": "0048ec98-78db-4595-adfc-1d72d51c8f6f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c445c326-14cd-4304-88bd-f5a343d6e4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00735325-56d7-4fb6-925f-787a3b419d4d",
        "cursor": {
          "ref": "0be7bf5a-2af1-4249-a24c-0f717f8afb18",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0df85a4f-42a1-4d81-9435-5e77a98b9458"
        },
        "item": {
          "id": "00735325-56d7-4fb6-925f-787a3b419d4d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f7155ab3-39dd-4364-b0dd-4fff5d2a5d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db44b6e7-9c86-4eec-a27f-4830b14194bb",
        "cursor": {
          "ref": "2500c481-9694-411d-adde-6e5174dd98bf",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d0620423-8ad4-4afe-afee-004eb700939d"
        },
        "item": {
          "id": "db44b6e7-9c86-4eec-a27f-4830b14194bb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2ad93b9a-e27c-4873-8035-6ea2312fbd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6bfc48-0bd4-4e64-bb36-6a03aac6a9ea",
        "cursor": {
          "ref": "1a13bd0d-9d99-4b94-9efd-11984d57be17",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "754b4b47-ee20-474c-be97-b884576ce751"
        },
        "item": {
          "id": "df6bfc48-0bd4-4e64-bb36-6a03aac6a9ea",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c7d12143-ce0c-4d5e-907b-1d1494b9e43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8826419c-a8a2-4b9f-9bdc-4844c2b52c31",
        "cursor": {
          "ref": "1cf4f212-89ab-44b1-af11-72157d04b213",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f51df1b1-cff8-4fe7-8bed-ae540d6d7aa9"
        },
        "item": {
          "id": "8826419c-a8a2-4b9f-9bdc-4844c2b52c31",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1fe8c8c4-5b3a-4f87-a660-e4d3616c6d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ba1234-47a1-4b40-af7f-5084a0388f87",
        "cursor": {
          "ref": "0f3b40c4-9372-441c-b3ce-0b3a0beda281",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "23123cae-c939-45a0-8cff-3ca34a9c8707"
        },
        "item": {
          "id": "71ba1234-47a1-4b40-af7f-5084a0388f87",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3b5ba7af-0d94-41d8-8428-4fc2572d5bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b019927d-ccaf-49dd-97fe-17943dc38ba9",
        "cursor": {
          "ref": "0817ac68-7627-408b-ae03-47d38bc378fb",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "63cbbbb2-e212-4f0f-8fa7-c8ef6cacc84d"
        },
        "item": {
          "id": "b019927d-ccaf-49dd-97fe-17943dc38ba9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "80ebee87-4c6f-4d4b-9d21-4bb20974c5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852a318a-0a13-4f2e-a6bb-cfd6d9af4a60",
        "cursor": {
          "ref": "76d32454-ac9c-454f-aa0c-0b9685597dd5",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d2ac0d73-dbb3-429e-8930-bce64ed47a6c"
        },
        "item": {
          "id": "852a318a-0a13-4f2e-a6bb-cfd6d9af4a60",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "008855d2-b448-4602-839a-955066696d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1851a52a-4027-464d-9676-19d8b0c1c716",
        "cursor": {
          "ref": "aadb65e8-41a3-470c-b1bc-ec61506af442",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "94db544e-5cba-4a92-8daa-2e7b1f108e2d"
        },
        "item": {
          "id": "1851a52a-4027-464d-9676-19d8b0c1c716",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fb0fc2bd-5030-4188-a85b-209a4c394647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbc5787-a55d-48bb-953d-babd09bbd4e9",
        "cursor": {
          "ref": "f6fa24df-09cf-47e4-a3fd-29e95348dda9",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0f1fb87a-da0a-4602-9b06-4c8e8c4f4d1a"
        },
        "item": {
          "id": "ddbc5787-a55d-48bb-953d-babd09bbd4e9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "eb874bc4-3a0d-458c-a60f-fdd57a6cbf9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d57c510-74f9-4477-8d51-41f52660fc67",
        "cursor": {
          "ref": "c14b7c21-9ba7-4d21-b073-300b214d661b",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "171e8a6a-4397-4a17-afd7-593cb990cbb9"
        },
        "item": {
          "id": "6d57c510-74f9-4477-8d51-41f52660fc67",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8c76ef8f-72c5-4599-93ed-ab2439d370fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2521b2-f8b2-4c58-8453-b0c34aa7a9f3",
        "cursor": {
          "ref": "102d857e-6cc9-46d7-a405-6f97fa4edac1",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "559e81d2-c3c8-486e-a7cb-115222cd399f"
        },
        "item": {
          "id": "3c2521b2-f8b2-4c58-8453-b0c34aa7a9f3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "aad057e3-e41a-4c08-9ba0-12ff068e44ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7944e7e2-074b-4055-abe0-5ec65059d688",
        "cursor": {
          "ref": "72d4e5fe-b0bf-4068-8a07-2ee783168d22",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3ae8e05f-6709-4eba-8073-c07ef1766e69"
        },
        "item": {
          "id": "7944e7e2-074b-4055-abe0-5ec65059d688",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "db143a45-a4b4-4619-a111-4b8efeb84919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6642db-9649-4572-af9f-596807f641ac",
        "cursor": {
          "ref": "ed3ad23c-f86e-4637-aa21-1bec47e70b7c",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "82ecfd63-84bd-40f6-9db6-777b9a9cdbf2"
        },
        "item": {
          "id": "bb6642db-9649-4572-af9f-596807f641ac",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5ab593c3-c41b-4f6a-ab61-a32864339fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05fab37-d1b7-4a99-87f6-5a3a079675c9",
        "cursor": {
          "ref": "76ca3d6d-1582-405a-9538-59cb1bcf3386",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4cf234bc-9745-42eb-b0cc-5a7a0a872aee"
        },
        "item": {
          "id": "e05fab37-d1b7-4a99-87f6-5a3a079675c9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "195ec92a-bff7-44f4-9589-09678136f767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24b4254-e6e9-4ee6-bd5a-1763d1d7dd7d",
        "cursor": {
          "ref": "728c980a-0085-4ac4-af93-bf9d7399139a",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "10560942-b7e6-481f-9dae-e180750e0fec"
        },
        "item": {
          "id": "a24b4254-e6e9-4ee6-bd5a-1763d1d7dd7d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "edd022c6-5666-4eaf-8aba-3a5a191ef22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21b3f20-535c-4758-9a2d-8cf1a710a87d",
        "cursor": {
          "ref": "5bdca0c2-44cf-4f64-ab0e-87307a5c2c83",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3743ebcf-e2cb-4ae4-9d30-607e1e6047c9"
        },
        "item": {
          "id": "b21b3f20-535c-4758-9a2d-8cf1a710a87d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "83245133-9fae-40f9-bb82-7ce32a34c90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5206630-ece6-411e-ba36-c9290513470b",
        "cursor": {
          "ref": "b8da44d7-676e-4d24-a635-05ebf5b0a1de",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "afe2a579-ca5e-4a5d-9354-a35469b36b5a"
        },
        "item": {
          "id": "b5206630-ece6-411e-ba36-c9290513470b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a7a6eac1-ec77-4114-8c5d-714530df8731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7449cb3-9f31-4a5a-a6d4-a0c73ad2fb51",
        "cursor": {
          "ref": "fb63f51e-26f0-43a6-afbd-9a319434cd04",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3ec8fd46-28f9-49a9-9f42-10a504cefd86"
        },
        "item": {
          "id": "e7449cb3-9f31-4a5a-a6d4-a0c73ad2fb51",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a7191cc7-3f8c-465e-8953-6482a7206878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925c3127-ff8e-4410-a2e7-9a59f2b8645b",
        "cursor": {
          "ref": "32cebc26-fd8f-4c81-83d3-44b8e391efdb",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7db50879-5651-4887-8d9e-a52daf8756b9"
        },
        "item": {
          "id": "925c3127-ff8e-4410-a2e7-9a59f2b8645b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d723c3b0-be9e-42f8-9c0e-a91d10791300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb6128d-5044-4edb-8cc2-f653925eca1a",
        "cursor": {
          "ref": "0a93d407-e5a6-47ff-aa4f-54a1d69fe47c",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9a16940d-21b2-4457-9830-fe953ea1ca2e"
        },
        "item": {
          "id": "9fb6128d-5044-4edb-8cc2-f653925eca1a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b6feddd0-6ae5-4cee-9994-2ae30c21bb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0adf0d-07aa-430a-bd97-785a6bf7653f",
        "cursor": {
          "ref": "14b2d330-fea4-4bbc-8279-b7ccc782d895",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "80e12995-762d-4497-9708-54bdf9d51446"
        },
        "item": {
          "id": "7c0adf0d-07aa-430a-bd97-785a6bf7653f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e311174e-5fe7-4528-af33-feb510ef723f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e328270c-600d-4338-9ce9-04ce4eb86ab8",
        "cursor": {
          "ref": "20c45b3a-ca4d-4671-9373-934498d80730",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "40900486-663c-4ac0-94e2-fe7bf28c3095"
        },
        "item": {
          "id": "e328270c-600d-4338-9ce9-04ce4eb86ab8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "67b5a7e6-3de1-4e1c-a753-445d186d1551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88087a5b-d09c-4308-b464-c44eed793124",
        "cursor": {
          "ref": "99d5cc80-b8f9-434d-802d-91995cec85e0",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ddd1e98f-8ef2-4f8b-9468-66076a8db06a"
        },
        "item": {
          "id": "88087a5b-d09c-4308-b464-c44eed793124",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8d468ed5-c340-4de2-85d2-3b6467077736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ab69cf-ddc4-4d8e-8ce3-fd37d6b27755",
        "cursor": {
          "ref": "210e2530-bd43-4969-a65b-d85edafe93ff",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e5823235-f902-438d-962f-2f3da79f38be"
        },
        "item": {
          "id": "e5ab69cf-ddc4-4d8e-8ce3-fd37d6b27755",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "11a76994-897f-4b9d-b83e-b947ed9bce62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177c6368-41ba-4586-bb2b-a9a05911d02b",
        "cursor": {
          "ref": "63481de6-0c90-42ed-ac4b-2b36805bd8e4",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "64d93bb7-54bd-4c92-82ed-1cd5aaef4551"
        },
        "item": {
          "id": "177c6368-41ba-4586-bb2b-a9a05911d02b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1db0a2be-ac91-4ee8-8d58-f59742f37755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ac2482-d820-4e8d-b0ea-1e735831f65f",
        "cursor": {
          "ref": "24535674-ec2c-40f7-aafb-50a9ded0fdeb",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3a27de17-c9a9-4cfa-8290-5ed871199764"
        },
        "item": {
          "id": "14ac2482-d820-4e8d-b0ea-1e735831f65f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ac612c46-fb3e-4280-b5b0-13959e36d6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44af31ed-6968-4d2a-b3be-1c5a979c6a23",
        "cursor": {
          "ref": "5f2bb197-9bf9-4953-b9f9-3d1ccccb7b1d",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fa9c1c9c-f48c-4bcc-b891-652dde29dbdd"
        },
        "item": {
          "id": "44af31ed-6968-4d2a-b3be-1c5a979c6a23",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b8140c74-73c4-45ba-ba19-855e5f3b4774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91174be1-b300-4f91-abe2-5f0152dafb17",
        "cursor": {
          "ref": "ae104fc2-28fd-442b-8998-9b21cb7e7ae3",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "98df228c-4706-4564-82c4-7bed3c4423bc"
        },
        "item": {
          "id": "91174be1-b300-4f91-abe2-5f0152dafb17",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e830475f-4c80-4a20-b147-54f1a3f509ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374555f3-14c2-4613-9623-1276c1777826",
        "cursor": {
          "ref": "5b16616b-8416-4432-a5e2-fe5cd8cdfbdc",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d2932507-c655-4b5e-8ff4-395c0622ff7c"
        },
        "item": {
          "id": "374555f3-14c2-4613-9623-1276c1777826",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d9623426-9c66-4586-8b01-ff57008bb9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a50afcb-1007-4fb8-a045-95800aeab556",
        "cursor": {
          "ref": "07e679de-c219-4680-89d5-09b7c7f01dbf",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ffb10774-52ee-4c34-bd8d-149ca8425695"
        },
        "item": {
          "id": "3a50afcb-1007-4fb8-a045-95800aeab556",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ec386e2d-1512-41e1-a17b-583c4daa6fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e68fce-101c-41da-891d-cb38ad658201",
        "cursor": {
          "ref": "5f1bce11-8847-4997-af9b-29096ab5e594",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "aa7b3818-72bd-4830-837d-b10e0a84a03c"
        },
        "item": {
          "id": "57e68fce-101c-41da-891d-cb38ad658201",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0e7cc147-196e-4824-8a72-f27954b9b49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76cc23a-ce3a-4e39-b948-227fb827c90f",
        "cursor": {
          "ref": "0c49f7b8-fdb1-4cf2-840d-83deda2e0077",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fc22badf-757a-43c2-bb14-80c159c1d29a"
        },
        "item": {
          "id": "b76cc23a-ce3a-4e39-b948-227fb827c90f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f52931cf-0902-4ed8-9174-7e985428510c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af6eece-b5ef-4b02-b5c9-62a97e692ed5",
        "cursor": {
          "ref": "90839c0a-0bb5-40ab-93b7-39b9698dd2cc",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "06e40120-7544-47f0-a089-253974ddafa6"
        },
        "item": {
          "id": "8af6eece-b5ef-4b02-b5c9-62a97e692ed5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e396488f-f647-421d-ade6-9c0fb4125aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b082632-16a8-47f5-98a9-e5b9fb1ed2d7",
        "cursor": {
          "ref": "1c2a01db-3c31-4c87-ab22-7f4fdb9b3b89",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "66f4826d-87f3-4ff7-b69f-f0d3e7b060b8"
        },
        "item": {
          "id": "5b082632-16a8-47f5-98a9-e5b9fb1ed2d7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "aee12896-ca8c-4004-a336-5d7d0d640deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557d8b07-0729-4321-bba2-11863da09d33",
        "cursor": {
          "ref": "b66f3159-9f7f-42fc-8809-baa2820f9fb9",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ce208bb2-1863-4552-8442-1f3b31f6592a"
        },
        "item": {
          "id": "557d8b07-0729-4321-bba2-11863da09d33",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fd3c0b92-b351-403b-b77a-92a44d57d971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182af9cb-85e7-4850-817f-d30b61fbc3c4",
        "cursor": {
          "ref": "2e9af9f9-0009-4aba-a024-b499e5243587",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9b07cfd9-8f6f-45c5-8608-c2a30188d0c9"
        },
        "item": {
          "id": "182af9cb-85e7-4850-817f-d30b61fbc3c4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "20f14e09-a87b-490c-8cdb-933466acc029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2644da-e142-43f9-a645-0e795438607c",
        "cursor": {
          "ref": "52730eeb-ebb5-4e70-8e4a-05a1b94dd254",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "84085991-a726-4d80-be30-11c60d9e04ea"
        },
        "item": {
          "id": "7e2644da-e142-43f9-a645-0e795438607c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "809382da-0cc2-4db5-a041-fd12de86463d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21905753-1a89-4034-9f96-63afd6f3efdb",
        "cursor": {
          "ref": "d6dcf158-a88a-466e-b08f-b57124f72fec",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "293f0a12-2502-4675-b645-b498ac993083"
        },
        "item": {
          "id": "21905753-1a89-4034-9f96-63afd6f3efdb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b70c1660-c5ed-4270-88bb-3459691ea152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675fef31-ae68-420c-8780-830ede37a3e7",
        "cursor": {
          "ref": "855c38b8-117d-4da8-b380-9f45571cf279",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2c7ed701-e3f8-45c9-aced-2736e656b9a6"
        },
        "item": {
          "id": "675fef31-ae68-420c-8780-830ede37a3e7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "156d1cf6-0790-433f-ac57-505e6f0c4f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8ada9f-9e64-4e41-920a-81891ed2dae0",
        "cursor": {
          "ref": "ae116678-ecd7-45b2-852d-69796346c029",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a25024fd-63fe-4ff4-8d13-9d3aadd31dd9"
        },
        "item": {
          "id": "8b8ada9f-9e64-4e41-920a-81891ed2dae0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "09a2fe79-664e-425c-9784-ee53be15ff4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56899dac-dc26-471e-8fe9-91d4d6ee1c29",
        "cursor": {
          "ref": "70d5f0ae-57b8-43fc-a8ba-2dd5bbfe599b",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3816baeb-21e6-451f-aefe-ef2d02014868"
        },
        "item": {
          "id": "56899dac-dc26-471e-8fe9-91d4d6ee1c29",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a5844097-fc73-4b1f-9471-32e1a3c20e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7925de-f039-4c8b-a981-4427a192e7c1",
        "cursor": {
          "ref": "b1e8db7c-b3cf-4443-8f74-613c727611b3",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "63fc18c6-0411-402d-961e-75c9f6205a30"
        },
        "item": {
          "id": "cb7925de-f039-4c8b-a981-4427a192e7c1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "78c2ee43-566d-418f-a4e8-5b150d968513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33610874-bb69-4ab6-96e1-cb622dc9145b",
        "cursor": {
          "ref": "04eab545-5d0a-46f9-b321-8d807513af75",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "dbc9ee4f-bed3-4edb-8421-da51c68e3e2e"
        },
        "item": {
          "id": "33610874-bb69-4ab6-96e1-cb622dc9145b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "145d14f4-cc00-4b61-b645-4f5d86996161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b73ef8-ee65-4338-a66d-acfda5378363",
        "cursor": {
          "ref": "bdaad8c2-6180-4c99-b876-8a3bd5fbee68",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "33fb88c7-2397-48e5-9423-de6daa89d944"
        },
        "item": {
          "id": "79b73ef8-ee65-4338-a66d-acfda5378363",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "28197b1c-1139-49c9-950c-7325d53354fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2989df4-e962-4343-bd40-b526c5d93af0",
        "cursor": {
          "ref": "6d465e74-62cf-432d-ac26-c20ac8197220",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e2f1f5e2-197e-4219-a406-f0c33cafca5c"
        },
        "item": {
          "id": "a2989df4-e962-4343-bd40-b526c5d93af0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "30a85554-826d-4a21-a96b-6961ab65c21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761206e7-bddc-4bbc-9e1d-7319724336ba",
        "cursor": {
          "ref": "f483d12f-2171-4389-b4a9-a818d0b8bff3",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e2f5c423-9992-428b-9e1d-8291f4a38683"
        },
        "item": {
          "id": "761206e7-bddc-4bbc-9e1d-7319724336ba",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2db9e09d-8118-45e2-a42a-40d3c6e69989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044f43d5-0814-4db1-9622-0189e73ea741",
        "cursor": {
          "ref": "e69fb881-211a-425f-b088-05dc17312b1d",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "45276fe3-36f4-4ae0-b169-40df17e26479"
        },
        "item": {
          "id": "044f43d5-0814-4db1-9622-0189e73ea741",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d5f5eb93-6c47-4a9f-bcc8-be949819f228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe291a4d-7219-478b-8137-08e46bc57e8c",
        "cursor": {
          "ref": "d56da89b-d3b3-4801-ac3f-68d470424d9a",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d368da28-3324-4e29-9926-6fec6bbd01d2"
        },
        "item": {
          "id": "fe291a4d-7219-478b-8137-08e46bc57e8c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cfd4bc08-8f52-490f-908f-7f821b492fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0143c1fa-8f2c-4b27-b594-72f4a0c3cc76",
        "cursor": {
          "ref": "586e6785-65c0-4f4b-9163-39c5e083110a",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e38f3ede-3a14-473c-83ea-d5c2261ed9de"
        },
        "item": {
          "id": "0143c1fa-8f2c-4b27-b594-72f4a0c3cc76",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2d68af5f-f3b7-493c-9945-26fd734b7ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e776befd-baa1-4a18-a962-7c6dbb994bd7",
        "cursor": {
          "ref": "2585fdea-81ee-42ac-a60d-9cf9b48275fe",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "606d955b-b444-46ea-b436-8f4d90c77c87"
        },
        "item": {
          "id": "e776befd-baa1-4a18-a962-7c6dbb994bd7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "71df7488-e199-4b1d-8bf3-cf38731daa48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dad24d-2899-4740-a40d-60c500dc52b9",
        "cursor": {
          "ref": "73d0d311-8fa7-4325-8cfa-1a5db39931a9",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "373e3332-3945-4b33-bc28-74fdaaa0bdf6"
        },
        "item": {
          "id": "72dad24d-2899-4740-a40d-60c500dc52b9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "948e3f56-88bd-43d6-974b-82b906c8b9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c80b3e-f2dc-4ea0-9ee4-5594ef2af97f",
        "cursor": {
          "ref": "cad2f87b-de0a-40be-a2de-9dad95514184",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9cb6e5e5-20b0-4b8f-9bb5-416dc6cb582c"
        },
        "item": {
          "id": "f8c80b3e-f2dc-4ea0-9ee4-5594ef2af97f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3e88899e-d566-4998-a400-d6abf47e1db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f43584-d056-4043-b906-8ed624ff44bf",
        "cursor": {
          "ref": "814d67dc-ef15-4633-ba6c-a039cdd44ca4",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4f3c31cd-f6d9-4ced-a8cf-a3385211e660"
        },
        "item": {
          "id": "f4f43584-d056-4043-b906-8ed624ff44bf",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9237b786-51a7-401a-b823-4da32d689133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ae9551-7408-4f92-a90e-52451ef89928",
        "cursor": {
          "ref": "e9fc990d-d3cf-4466-9535-c3284fe0c57a",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "57cccdb5-4010-490f-99a5-05d7b261cc3a"
        },
        "item": {
          "id": "f2ae9551-7408-4f92-a90e-52451ef89928",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6a40c272-2412-4c92-9008-a2336aad412d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2363bbb7-3995-4738-a908-ed921bc2addf",
        "cursor": {
          "ref": "ed8b2bce-d38b-4bdd-be41-7bd8cce1fe2d",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1d8fcbe8-f98a-4fd5-9450-dde99692facb"
        },
        "item": {
          "id": "2363bbb7-3995-4738-a908-ed921bc2addf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0431d45e-b11d-4dd4-bcfd-a31aa8bec8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6866ebc-a214-423a-a712-62db1f893d40",
        "cursor": {
          "ref": "5c01e716-e1c3-4cf5-a07c-f443e5264fb4",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bd4f23fc-59b7-42e5-91dd-724434093a2c"
        },
        "item": {
          "id": "c6866ebc-a214-423a-a712-62db1f893d40",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "67a3b3b1-fc7c-4bda-9736-79aa05b1ede1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3bf85c-40fd-4b69-b914-359cd64fe1e8",
        "cursor": {
          "ref": "66c9390e-fa08-4656-9a4d-ba470ac4f30b",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8b5f29e0-3d3e-4151-823e-ecf7ff6dd213"
        },
        "item": {
          "id": "7f3bf85c-40fd-4b69-b914-359cd64fe1e8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cf29906e-e4e7-4e91-b805-ed439c6c4933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b573541-6ec1-4e55-b73d-78970b7e444b",
        "cursor": {
          "ref": "b45f78e8-4623-47e0-80af-4f435d405eb1",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bb4e34c2-bc15-4520-a626-96ec7e90f1aa"
        },
        "item": {
          "id": "3b573541-6ec1-4e55-b73d-78970b7e444b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "87082fa7-98e6-481e-adbc-23c280debbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d998a6b3-8113-4d24-a189-e6c9d4ee42f1",
        "cursor": {
          "ref": "5c762b40-1357-4a96-a976-1c3343d2b9ea",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f1ead244-0cd1-40a5-8f91-3f35e6545009"
        },
        "item": {
          "id": "d998a6b3-8113-4d24-a189-e6c9d4ee42f1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0fb79e71-e972-4665-9979-a09a762da392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e383f9-98d9-4764-93dc-21814c16fcaf",
        "cursor": {
          "ref": "97030628-62ae-4d64-90f4-ecfe460f8870",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "25f44237-7d3a-404c-a63a-5a2bac280ac1"
        },
        "item": {
          "id": "44e383f9-98d9-4764-93dc-21814c16fcaf",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f68df01c-2781-4360-b5ed-3b1e26bfe99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be2c236-2c4c-4a22-9755-c8941bfd0704",
        "cursor": {
          "ref": "6e057fa1-9c3b-41aa-8ffc-90b283bfdedd",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "eb1b3a28-c341-4175-aded-a68ef717e605"
        },
        "item": {
          "id": "9be2c236-2c4c-4a22-9755-c8941bfd0704",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cfd78180-a9cf-4a7f-8f71-a1f2494ca49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16307a0c-1076-47d7-8cb0-4fbf7d6348ab",
        "cursor": {
          "ref": "aab0b8d0-a125-478d-863b-b747f116a8e0",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4dea7d79-5d41-4f3d-ba7f-8597d025af0d"
        },
        "item": {
          "id": "16307a0c-1076-47d7-8cb0-4fbf7d6348ab",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ac2d0109-4fe5-4341-a318-0e2830967903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be791bf-ccf0-4d14-aa39-6e882be7d0c6",
        "cursor": {
          "ref": "4d0ff025-dbc5-41f0-adf4-506b316327e4",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ada6f225-f208-48f9-9883-5a19e340ee7c"
        },
        "item": {
          "id": "8be791bf-ccf0-4d14-aa39-6e882be7d0c6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f09ee7bf-aae8-4133-9653-5fae27b21b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d03a1ae-0c7b-49f7-91b0-47d4f6223f66",
        "cursor": {
          "ref": "1cabe094-5ba7-493a-ad2a-818ea6532071",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c4976117-b205-4f35-8db9-2df7ba7f734d"
        },
        "item": {
          "id": "2d03a1ae-0c7b-49f7-91b0-47d4f6223f66",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0b58b284-2571-469b-9bda-dd8d6475256d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d16ada-50ae-4247-aaef-90e21c3ef7c5",
        "cursor": {
          "ref": "ac6bfd20-7e02-4305-8397-c788d8195a6b",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "68376eec-fc1d-428c-b26d-e17df6925b60"
        },
        "item": {
          "id": "f2d16ada-50ae-4247-aaef-90e21c3ef7c5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "24272ca1-c3cc-4490-8738-d9a135cce651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d2dc71-e553-4264-92da-91d7a7d552b1",
        "cursor": {
          "ref": "8bf3b4d3-96ce-4000-9163-d06202a2f15f",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "89a29e3f-efa2-47fa-99da-42029ed4431f"
        },
        "item": {
          "id": "b1d2dc71-e553-4264-92da-91d7a7d552b1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "403c42d0-3056-498a-8555-9058eab5d17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de4e02b-389b-4361-8d3f-edb3b944c075",
        "cursor": {
          "ref": "64ac6969-ee4e-4121-a5d4-049e3351e623",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c16c78ae-e372-4ac0-bedc-4fcbfa12d7a4"
        },
        "item": {
          "id": "4de4e02b-389b-4361-8d3f-edb3b944c075",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4d0a057c-bb68-4ede-9f00-a26b4d3735a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f1974e-268c-4653-860b-05b0083b7574",
        "cursor": {
          "ref": "ad81392b-2d54-4c06-a221-5d8d728e0e5e",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7c2f35d6-0f5e-4c26-8c50-49d5f325d3ce"
        },
        "item": {
          "id": "39f1974e-268c-4653-860b-05b0083b7574",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "87827ab7-0077-4b46-a07a-a56f43155583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7889955c-624a-431f-95bf-350ab9df76bf",
        "cursor": {
          "ref": "313dfa4a-782f-4496-ae13-c360001ffe23",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5b1df251-40ad-40db-90a9-e2a5902224df"
        },
        "item": {
          "id": "7889955c-624a-431f-95bf-350ab9df76bf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2b72e491-4f3a-4619-953b-8c5c37cb4a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0373fb42-2043-435c-ba0b-d33048e18599",
        "cursor": {
          "ref": "070720d3-a5d1-4326-b016-85b5e1854af8",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3a6fd5d7-693e-4c16-a948-8b3f9ba7d77a"
        },
        "item": {
          "id": "0373fb42-2043-435c-ba0b-d33048e18599",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7955ae54-1ad4-4e53-bb83-000f3ef7e87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f692775-33a1-40c6-a9bc-4cfb15738a20",
        "cursor": {
          "ref": "40d8ac2a-8807-4a3d-a949-6eea506df6d3",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c6fe5e5c-af73-45ff-b15f-bf2be0192968"
        },
        "item": {
          "id": "1f692775-33a1-40c6-a9bc-4cfb15738a20",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "89fd1d41-aa01-438e-95f6-91f74a290d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ebdcaf-aab8-47c6-9d61-5df42fba4437",
        "cursor": {
          "ref": "5fec17e2-345c-406e-bc75-17a8c3fcce39",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c4f8e6a2-49e9-459e-95f0-3e532e11094c"
        },
        "item": {
          "id": "80ebdcaf-aab8-47c6-9d61-5df42fba4437",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2f1c9a7a-58de-411e-a343-9b37ccfa6356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff53cdfe-6dde-4323-bdae-46bcbd2bbbe0",
        "cursor": {
          "ref": "235b255f-733f-4b1a-88f7-53004c73ce14",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "24469013-ea2a-4886-937e-ccdec1579b74"
        },
        "item": {
          "id": "ff53cdfe-6dde-4323-bdae-46bcbd2bbbe0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "55bc123e-c9c5-4f52-ac1f-f82621d6ad98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba5c187-a2fc-424c-b2f2-ada4141950c3",
        "cursor": {
          "ref": "74678997-f32d-4485-8a46-ddbe8a22644d",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7667cfc8-c6eb-4c32-a721-61fb73be6ac3"
        },
        "item": {
          "id": "4ba5c187-a2fc-424c-b2f2-ada4141950c3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "62c04a94-a912-4c3c-874b-5d2535c02af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f285de-59d3-4b84-a989-a65a23675d9d",
        "cursor": {
          "ref": "429cd9c5-f0cb-402f-8ff9-3f01ee483f6a",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "03376738-0baf-4960-96db-cba9dfa79c18"
        },
        "item": {
          "id": "24f285de-59d3-4b84-a989-a65a23675d9d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "04b8844e-bd1f-45a5-9cef-53058f5e905a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2b2c20-803f-4924-8fdc-f4381c22ebbe",
        "cursor": {
          "ref": "aa3f7ac2-85f5-4d7b-8fd8-c2de0009b3e1",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "30039aac-90b2-4e01-9f31-ff38074f8d10"
        },
        "item": {
          "id": "4b2b2c20-803f-4924-8fdc-f4381c22ebbe",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "172deb16-0a94-4135-a5a1-1ad3f23fecd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2da275-8864-492e-abe7-2ec63fc8bac1",
        "cursor": {
          "ref": "40b64c97-0eae-47a4-8b94-7b6794bc2f4a",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4df2f3ce-66cc-4057-83f9-ef17100cbea4"
        },
        "item": {
          "id": "8f2da275-8864-492e-abe7-2ec63fc8bac1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a0b1bdf0-349d-4f6e-be34-3752ca54b0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae95719b-baad-45d1-9981-a5e592039cb2",
        "cursor": {
          "ref": "2659842b-9ac9-4eba-bd6e-8c93d0314240",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e1bb0389-0bb6-452e-90b1-39f2115c04b9"
        },
        "item": {
          "id": "ae95719b-baad-45d1-9981-a5e592039cb2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d83ae278-5acd-4c79-a22e-7d704de3a083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac948be-4483-4b80-b689-715fa12e432b",
        "cursor": {
          "ref": "bf14ca4d-e6cb-4bb7-849a-ad66cad2907e",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b7081c34-5ba6-47c6-a0b1-904eb6387383"
        },
        "item": {
          "id": "bac948be-4483-4b80-b689-715fa12e432b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cf58ed1e-0780-4bef-995f-f01f0f9a7e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04db6d2-7ba8-4287-be0b-7c4944457ebe",
        "cursor": {
          "ref": "f4754bec-fa9f-45f7-953f-771f9e62c5b2",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "97f90bd6-f458-4ada-9816-ae3b7108861f"
        },
        "item": {
          "id": "c04db6d2-7ba8-4287-be0b-7c4944457ebe",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6cfa83d0-bd27-4bb7-b317-f1de778c1eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c2912b-693d-496f-bc7a-01eec2b256df",
        "cursor": {
          "ref": "d5857197-2f8b-49a5-b8f1-645debd1e5ba",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "37cbe872-84bf-4369-a586-91b7689fca18"
        },
        "item": {
          "id": "34c2912b-693d-496f-bc7a-01eec2b256df",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f7162d61-8d82-4cb7-b5f6-d04292947173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f08ae4-a53f-465f-8a5d-457b5ea7bcae",
        "cursor": {
          "ref": "57a2eb5f-8d33-443c-a0d1-bd63bb6a7567",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ab202d31-ec8d-482e-b548-ec5143adb634"
        },
        "item": {
          "id": "e4f08ae4-a53f-465f-8a5d-457b5ea7bcae",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b130877e-59bc-42fe-9afa-118141e64f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d4a0b6-ba5b-4647-b921-9e38b790ee17",
        "cursor": {
          "ref": "ea403ca5-fb07-4bff-8818-6c2cd0e09d6e",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6488f860-589f-4d6b-be01-a8f023e104e5"
        },
        "item": {
          "id": "75d4a0b6-ba5b-4647-b921-9e38b790ee17",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cc7d5e54-5e6a-451f-a8a1-74a75889599f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a97d25c-5bb0-487e-bca0-c18e08f7aee8",
        "cursor": {
          "ref": "27060371-97bd-4b07-bed1-8af153bd419a",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "174d7122-2bf9-4076-bb42-2fa631e93086"
        },
        "item": {
          "id": "7a97d25c-5bb0-487e-bca0-c18e08f7aee8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "975d38f3-9225-4bda-bc18-458367ad089f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab7c4d9-1510-4566-9f5e-c48de45639c0",
        "cursor": {
          "ref": "f8d3ed96-bc38-4a60-9b17-b2895f56bf68",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4f70b5b4-d141-452b-9707-ada8952154e9"
        },
        "item": {
          "id": "cab7c4d9-1510-4566-9f5e-c48de45639c0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2c44361c-f652-450f-a80b-68983f778230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb8f4be-56b9-4853-89bc-301fef3b2cdb",
        "cursor": {
          "ref": "ada7b0a9-f361-49f0-bdd4-b18e9d3eafec",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "96a3c0b4-4dd3-4e4b-bdfb-7c741c5ed517"
        },
        "item": {
          "id": "fbb8f4be-56b9-4853-89bc-301fef3b2cdb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cd44a5fd-8da2-4036-ba21-090afd2c172f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d925794-b047-43e5-833f-4019aa371628",
        "cursor": {
          "ref": "4d6d5f04-482b-486c-8fee-217994b03615",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b31fbb51-127b-4513-af81-5ace6f9c0d86"
        },
        "item": {
          "id": "5d925794-b047-43e5-833f-4019aa371628",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "29f1873b-f4ca-49fd-9346-75abdc403ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e99d6b-9e79-4b66-8670-8a15ea34191a",
        "cursor": {
          "ref": "904d7fcf-eb76-490f-9a94-8cd7d3c38a73",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "81340d72-72f9-4f41-a6f0-32c28605d733"
        },
        "item": {
          "id": "62e99d6b-9e79-4b66-8670-8a15ea34191a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "16f16c60-fc10-4d48-829b-41c8035cc5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32879627-fcaf-4517-96b2-ebe67ad53c54",
        "cursor": {
          "ref": "a3f7dc06-c025-44ec-868d-6a57f4664a4d",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "077deae2-64bf-4f80-9d24-3da932dd46f5"
        },
        "item": {
          "id": "32879627-fcaf-4517-96b2-ebe67ad53c54",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "61326ae1-9a4c-4cb8-8591-7e872edc7c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf60d272-b43b-41f9-9256-fc66c1d4960e",
        "cursor": {
          "ref": "694474fa-ea32-4f6d-89fc-7bbf22a84856",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8c437012-f98a-4bad-bbfb-f39389ef5774"
        },
        "item": {
          "id": "bf60d272-b43b-41f9-9256-fc66c1d4960e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7c204389-a7f8-4455-8abd-9ed4b6df86f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e843e7d-4e28-4f5d-99ea-90c1af89c2e3",
        "cursor": {
          "ref": "427eae57-c846-4194-b02d-03f800567c1c",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "95b5f13c-6af5-4c0f-b0ca-d830da3c7c51"
        },
        "item": {
          "id": "8e843e7d-4e28-4f5d-99ea-90c1af89c2e3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6e53c2c0-b347-457f-bab2-9278e7642729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42ed81d-3c95-45cb-86f6-5332164ea686",
        "cursor": {
          "ref": "80f800e3-673a-4fa0-8396-3343f16c1ade",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e1c30566-055f-4d6d-94a7-6d45240a4557"
        },
        "item": {
          "id": "a42ed81d-3c95-45cb-86f6-5332164ea686",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f7d6afd0-045f-48d6-b6bb-570f75a44b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5e7200-1b9f-44ec-a83a-1031c780f66b",
        "cursor": {
          "ref": "e4fd94f0-f87f-4a41-bc1f-66d5e8ecc30b",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5746d976-a063-40a7-a3ed-f3cb6e8d4010"
        },
        "item": {
          "id": "ee5e7200-1b9f-44ec-a83a-1031c780f66b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e9f0ebbf-ad99-4bd9-a96d-ca5f8446c431",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68db9b20-d9f8-4b01-be84-757d97eb8de9",
        "cursor": {
          "ref": "5adaa1b2-5e78-470b-bb95-6b5f54a29e1e",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1d7219d2-b552-4834-b424-17bf8b01cf19"
        },
        "item": {
          "id": "68db9b20-d9f8-4b01-be84-757d97eb8de9",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "1cf8eeee-e5e6-4d84-b758-7b8990522f21",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f563851-3c7e-4e39-8e16-9d1b906dfe09",
        "cursor": {
          "ref": "35c8b2a0-4ee7-4336-b5c7-0e40e9678557",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "be5be3ca-8b08-4c2f-a3e5-22e22f2c08a7"
        },
        "item": {
          "id": "4f563851-3c7e-4e39-8e16-9d1b906dfe09",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f0a66b9d-8792-49f4-9821-a90d71502789",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c05b7d1-66ea-461e-aa8e-400d39e65394",
        "cursor": {
          "ref": "b493e3bc-4b31-4f07-a3ff-290433072909",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "89e36f65-2eba-4790-8847-3016c66bd465"
        },
        "item": {
          "id": "5c05b7d1-66ea-461e-aa8e-400d39e65394",
          "name": "credentials_verify"
        },
        "response": {
          "id": "68044743-807a-4807-a1f6-14901cc91bc6",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1261445-3da4-4aa4-8017-35b0c7e55980",
        "cursor": {
          "ref": "233ed393-b316-4056-89cf-533749909fcd",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "25288f77-3281-4291-b333-11b969d59cd3"
        },
        "item": {
          "id": "a1261445-3da4-4aa4-8017-35b0c7e55980",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6052f31d-a305-43e1-ab35-ad3f3128f37d",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f45db7-28b9-405b-a532-cae7888ec0c8",
        "cursor": {
          "ref": "61f782eb-fa5e-403f-813a-509c576e25b2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cd35bda5-f69e-40d0-8db2-1676c7f333e1"
        },
        "item": {
          "id": "38f45db7-28b9-405b-a532-cae7888ec0c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "86f88deb-71f4-4af8-a43e-379a6bdf172e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f45db7-28b9-405b-a532-cae7888ec0c8",
        "cursor": {
          "ref": "61f782eb-fa5e-403f-813a-509c576e25b2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cd35bda5-f69e-40d0-8db2-1676c7f333e1"
        },
        "item": {
          "id": "38f45db7-28b9-405b-a532-cae7888ec0c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "86f88deb-71f4-4af8-a43e-379a6bdf172e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f45db7-28b9-405b-a532-cae7888ec0c8",
        "cursor": {
          "ref": "61f782eb-fa5e-403f-813a-509c576e25b2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cd35bda5-f69e-40d0-8db2-1676c7f333e1"
        },
        "item": {
          "id": "38f45db7-28b9-405b-a532-cae7888ec0c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "86f88deb-71f4-4af8-a43e-379a6bdf172e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c649a7e-681a-4e5e-868a-5c9fc4bb246e",
        "cursor": {
          "ref": "9525bd6b-13e5-47cc-b0e4-e152a1f681d0",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c1e4f5e9-efd6-4a72-a845-a9381e960c25"
        },
        "item": {
          "id": "5c649a7e-681a-4e5e-868a-5c9fc4bb246e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "6f8f98a6-01b3-41f2-93a6-c5018e907e6a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847279f7-d45b-4c48-aa4f-13587eca8bda",
        "cursor": {
          "ref": "be885dff-bbfb-4bc7-90c8-5398e71a6124",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "caf39d92-3718-4b8d-82f6-38178b67ea0e"
        },
        "item": {
          "id": "847279f7-d45b-4c48-aa4f-13587eca8bda",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6ff97556-ca6e-467e-ad73-dc47adece7cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847279f7-d45b-4c48-aa4f-13587eca8bda",
        "cursor": {
          "ref": "be885dff-bbfb-4bc7-90c8-5398e71a6124",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "caf39d92-3718-4b8d-82f6-38178b67ea0e"
        },
        "item": {
          "id": "847279f7-d45b-4c48-aa4f-13587eca8bda",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6ff97556-ca6e-467e-ad73-dc47adece7cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d03543b-a58b-4291-8e9f-77e1ebdd8e72",
        "cursor": {
          "ref": "07daa5b0-c7ef-4280-813f-d5a3c9ca29b5",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9e10f707-2f88-476e-9b41-c8d0490baac2"
        },
        "item": {
          "id": "8d03543b-a58b-4291-8e9f-77e1ebdd8e72",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "94b4c7f0-3836-4046-b3e8-daea5dbf9384",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4f43ee-7140-4e3a-bb76-90de81bfecd6",
        "cursor": {
          "ref": "4cda2516-76ee-4644-a593-3fd251d408fa",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b87c9d3c-c1d0-441a-baa2-ff947f1ddafe"
        },
        "item": {
          "id": "cb4f43ee-7140-4e3a-bb76-90de81bfecd6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ea666269-f8c5-4321-a296-36e1b11dd851",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4f43ee-7140-4e3a-bb76-90de81bfecd6",
        "cursor": {
          "ref": "4cda2516-76ee-4644-a593-3fd251d408fa",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b87c9d3c-c1d0-441a-baa2-ff947f1ddafe"
        },
        "item": {
          "id": "cb4f43ee-7140-4e3a-bb76-90de81bfecd6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ea666269-f8c5-4321-a296-36e1b11dd851",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352ed1f7-8f2a-48b7-a1ee-40ac9cfcc5f5",
        "cursor": {
          "ref": "a914d8b6-05b6-4d0f-a3b0-8411b30e0027",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b246af73-915d-43df-8d3a-e7e48daf307d"
        },
        "item": {
          "id": "352ed1f7-8f2a-48b7-a1ee-40ac9cfcc5f5",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "121f0b52-3509-4343-879d-f17c5c6e4260",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}