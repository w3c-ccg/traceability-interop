{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "42ceccc7-9250-4147-860d-5d1492ab1b22",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ecfb7e22-c640-4c9d-8469-df4e37050c26",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "02c2150f-ec12-4d43-86e5-7a86dc6f8a22",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3c59845c-b7a5-425d-bf98-a8dbd2bd7b37"
                }
              }
            ]
          },
          {
            "id": "f6dbe115-8ad1-4f10-9a5b-4dbf7d45e22a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a85d9ebc-2fa7-44f5-97e1-46d1027e4371",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e97e216d-378e-46ea-bed6-80080438878f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5a470604-f2e1-47a5-8cea-89e7d2d2b120",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e7494ac6-92dd-4146-9e7b-54ae6649c507",
            "name": "Positive Testing",
            "item": [
              {
                "id": "99cae28e-e229-4241-b237-75e8f09a4436",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a3a013a-3ddb-4d71-9bd0-441d69e22809",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "982d74bd-7e2a-4187-a9c0-23776cbbdb21"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7af1582b-d853-4b59-9b10-fe6bf64a4fb0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22fd78d1-aa4d-4c97-a5d9-db63792aba95"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d44c6e22-b890-4e6b-bd1e-3d0b3be1854a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4dc85c77-cf86-4331-885f-2d782feeaac9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4af9ce0b-5e33-4bf1-a52e-ca7a13ccb798",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b085955e-b838-4970-ae3c-a8df881e3fd3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7490275-a859-4918-9a0b-9facb31b7e3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3109bbe2-596d-4434-a45a-b64eabcdb270"
            }
          }
        ]
      },
      {
        "id": "525cdf1d-dcfa-420a-bee0-17a735c3c847",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d00dfdd8-e9ea-4711-ad39-0357d3ce314b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96a94d0b-44cd-4600-b3fb-2cee8d2e0f1c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c899c72-56b1-4032-b8d6-34f782b4f25d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b87858-f587-4fa8-891a-d8dea3a62d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8488708-01a4-4a2b-86c7-0a78bfdbf6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadbf29e-1d9f-4ce8-81e3-b3fb631e5943",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ea2e19-e976-4dab-b6d6-eaa5e3fe7f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2db0d5c-4c49-446a-9ada-aa31f115f907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88750300-62c8-498e-970c-60a48003eb03",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4428eed7-12db-4ba3-8b72-b09f9b7ec9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61a567bb-8df1-478d-ae8a-87b01ff115b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "78941819-e962-438c-b095-d9c6cd6ae396",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "329c481c-175d-4534-8981-612d6c0dfcd4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bda2429-5e33-4395-aa07-96161b47af45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e79025fd-acce-44f3-996f-ee9d50a117db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfc5ad1-8b98-4711-ac45-d1b8b43f91e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6ba988-c88f-4c91-b12d-07805e2cef41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f814fc4-155a-462e-8a35-f7d09558d861",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533d0fa0-92cb-4ceb-a14c-159f614a0b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6328f907-f272-4ea8-bccd-7ea7bfa0419b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d981e4a-e584-412a-be86-8d9619095fcf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "4526af5d-1396-4e52-bce4-aa5585c1adca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b56028ac-d51a-440b-b5e2-530a8a360dd4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f3add76c-3ed4-458b-b9a3-87f979e53ca8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c219ccd-dbab-443c-8296-38a573de7878",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e7ec4946-aa95-4903-8852-329bb895b12c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cc60a35-ceca-4867-b682-ec9db94a0a4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "8cc6a59f-d574-438c-8907-5213760f4374"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bdefbbc-a71a-47e5-ab36-9273f9ababf1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d11b4ac-977a-47f3-898d-51a1338b30aa"
            }
          }
        ]
      },
      {
        "id": "ce037861-0df3-4d09-bf0d-988cf1b14bc6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a218a9d8-2b9e-4432-9570-b1b414244922",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6ef0117-7539-4019-b712-632959a24cac",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1a960adf-a28a-47f3-bbbb-1eb2f6f8f163",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2eb8486-b700-4217-bb37-ad23668bb266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e7c717-53c5-4096-ba5c-0c54cb4c088f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8494fe6-aa96-42f5-a7a7-9fb38b6934e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8254f7b-d87b-46fd-94a1-b9b04770c596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55acd57-e93a-49da-be51-75a5345de5fa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1485f97c-251d-4fa4-ad29-b4abd4b81b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabb580d-2e1e-4e74-b30d-b99368e49f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3c1162-d333-4e2a-8110-d02b0c36ebca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0004c29b-9ca1-4a2a-928c-c8ad5c7f7aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ec81a6-4247-4e43-9c02-96af80ca6e9f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b139ab-f73e-4a21-86b9-bef03a52d315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5008edd-9a3d-4545-b7ae-6ae30f803c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785e5c2e-9b82-486e-adb4-c17f71f30f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f2e9ce2-a651-4f3d-b025-d04e3723ba92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7709bf46-5d37-4340-83c5-8b7bedb7567f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb503e9-4391-4a1c-ab75-4beb50b014b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f833ae45-475b-40ee-8c53-881f8b5160f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92962b5d-8345-4e64-bc49-84937800c83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "262c89ff-e535-4339-90ed-c88477b8f3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee05f393-985c-47cb-914b-172568f4b36e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c035fd-947f-4cfe-b617-f0b79b6a9880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78c2647-d49b-4005-8fd6-99ca49bafac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9922f059-8fb5-4717-abda-9252e41936e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc8952ce-e292-4876-9745-aa0ed35566b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d2fb57-c442-49e0-825f-982139a25938",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33bedc2-9826-4b98-bb18-723a027fd72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5260a010-918b-423b-b4d9-b4471955afdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ba6e03-2620-47ec-947d-d0265bb797de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07481f17-7b2d-4598-84fa-219932c395d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d777d4-9682-4594-a507-ffa257c7adc3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091c5e94-f7d2-43d7-a80e-0423736a053e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb21ac4-d65c-47df-9121-d7b6684a3664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8e4965-bdef-46cd-bffa-90054934b248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5308358b-c4ad-4f74-871d-6a4a1ef0c976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff64fdb-978e-4afa-999e-2ca69c89c83b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558840d7-b4ae-4360-a77d-8e0dbb9fb119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a470b0-23fb-48c0-ba6d-ea55c31d140a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d97e1d-a399-4c28-b854-7b757d7f92c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf9d38b2-47f7-4da0-ab73-10af0667b5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b1c0f3-fdaa-40eb-ac7e-54550f118221",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c396c95-3c46-4694-814c-bc06f17fc5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a96fde-7c50-4ff6-acc3-d811c4ec3bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b774351a-a09d-47bf-a908-fb17146c426c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ba02652-8375-4b21-8f72-804e02373aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cb9ad8-1dff-4504-b499-85218af7348d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b842fa-9930-4f0f-a84a-7141100bfd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a11ab4-5ea0-4654-bd1d-131df0b5164a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa035bd-3b5e-4339-8540-ac1ee69d5475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b13ed909-64a1-4189-87a4-998d16991496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27230166-ec1f-433f-a899-ed3a820ccdb8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3617ae56-0c59-41ed-b36f-cf16a415deae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5848ed-1e6d-4aec-9d14-d52e566a9ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07ac3ca-f298-4ad9-ae2c-6722785450b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b5dd5e2-7b2e-44f7-952d-14ffaf134767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a3ce95-77e4-462b-afaf-230ee94a0e43",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d5466f-d499-4567-826d-41b8d5ae6cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d81dc2-4245-4103-9e1f-22c768d82792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a28a89f-6fc9-408a-b8e8-83bd64422e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67e541b1-b951-4c07-b5ff-1f2b160f3bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbd15a1-c73f-4fec-86b6-632cc115d7ba",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8106a8-c71d-4cec-88c6-009254aab5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6e994b-fbe1-424f-a93a-d9778a62bc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9031d4-7b09-44f7-9bd7-c9a0b205c840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a34d59d-b141-47b8-94a2-6cd2c1d247e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d7dda2-b7d6-4d7c-a679-c76d07f54c57",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc813b15-4cda-4a7a-ae02-0988d4e8626d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c978b6e4-40ad-455b-990f-bf0a504a357c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36459f89-dd3c-487d-a9d8-dd68a683e383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c996731-0233-47c6-9e5e-0f5310279a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3741c28b-b7d2-4fb6-9e9c-645e3bd9e6c9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a34fd4-7be5-47dd-8806-d52b6dbed51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cc620c-d511-4bac-a7f3-9ebed30dc88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc46e764-56d2-4647-9d17-672d0344a55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcdca18c-2412-4771-bf76-80996354ee39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1704ea46-0a5d-44e2-b404-3b4eee0708e6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5a167d-ddfc-4c95-a1a7-4a77e22cc559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b40596-5937-4fe1-bded-d9afbfb9fb30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09bba45-711a-4868-adf2-189da0bf5027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0104bf8d-4a15-433f-8224-b0a91f0690fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66810fa4-f384-4038-8183-79d042c37e54",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218b3b42-2c3e-4b2c-9063-4ebb0fb54936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f6c9aaf-f4e9-4f82-ad1b-2ccd806f85cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba68568-6217-445d-beef-bee95827915f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "935a4674-7e36-489b-9458-d5376082955a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56c9ef6-3984-438a-8563-9c4ef9ddb0fc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d747cbfd-de63-4938-b5c8-66845e19b0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331509a4-3f7e-42c0-a953-8f75f7170367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8397f6-e37f-4018-9f71-b6d3774bbe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1267e1-bd8f-46b3-b5f2-c9434167d17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2757e9f9-e6b8-4060-a531-580060fe070a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20c41f1-060f-498a-bf08-017bad101d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3803ca1b-8a67-4dd3-ac5d-f14606ddccce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ab4f10-1c68-4ebf-accf-052d32f57210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03d56ff6-d036-4bd4-8f2f-049a30d56361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d251c52-605a-4a5a-b01a-c930d5003d36",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f021057b-3895-4273-b6a4-da06493e4007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56989fe1-efdc-48fe-a55d-51fac80095a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438b4436-743e-4213-b4fd-d1c4e20f32cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a010c9a1-4ebc-46d6-a4b1-03bc2a0496ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71521825-0a5e-4228-a346-ef3037d208ea",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d0fc3a-de4b-4a5c-a539-e8dd1ed5ebdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0eab5ca-47a7-498d-9664-4bb446170a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b86327-528d-4b18-951c-3153f75c3a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2474a0-58e0-47cd-b15c-ae09e59f79e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4347d79-ca5e-42d8-9a8c-27d6bf62e97e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80a9751-33c5-421a-a616-9bc92ef749cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c52de9c-d89f-4a7c-8f9e-5812d00bee44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56db2c2-8977-4668-8f33-2f197fe0d8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f592b56-c93f-4f70-88c7-6cf8e2f3baf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6028c663-ef7b-4c92-8e65-4782db617314",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2877e44f-df40-4e53-b4ce-eddc972f2aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec9b55e-14c3-495b-bcec-3ae2469d974c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a9fdd3-ed9a-49c8-b6e3-b61b65757a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd576627-f3bb-4acf-904d-094c77e16ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b7f049-5963-44d1-be06-cbae7a7826b4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d535c961-2175-4057-b44f-cb1929d7db2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934be268-e05b-4cf7-a3c1-f47d0e6f943a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6d434d-372d-4338-9f59-38ddbf8bf898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddaee93-299d-4aad-b883-f8bb37134b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ac7000-24ff-485d-8441-f570c08f219a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b598b803-44c8-4c97-8a17-7b9f0eb8d15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb05e6be-bb16-4894-ae88-f35587f45bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3eaf7c8-1952-4af3-ab72-523fe4d47c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d33a96a-92fc-4d9d-a780-cf6cf37be8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5785534-bfa7-4334-901c-258240b35f96",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef85fb85-44e4-455c-9889-021c2398459e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e721ac3c-a3a4-4921-a2cf-3557a04451b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a12e37-7819-4aff-9c07-28340b420419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83b87891-67c7-4463-a81d-891e55b036ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379ff9a2-9117-44d6-a028-b39d7e8e5a8b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e050b276-3a2b-43e9-a5cb-d1b662112756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ddf4fe-0730-40ec-839b-78abe7a0596c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbaa082-44e7-43f6-a2ee-b85322c13373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe40c24-a262-4287-af9f-eff0c3bd68bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd60acd2-2b05-4a01-8e6c-7fc04c7dfbd2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641dc717-0578-4aab-a462-e53f5669c380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a35b84-8797-4c4e-85e0-563dd9c7698c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf06851d-8646-444b-9d30-6493732b81af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4afb6f9e-6292-4f77-b3b1-51256c14d77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1414dbdf-fc54-4c30-8371-e11692a36934",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16ef174-0bea-4c69-9ab9-a35db37cc0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff311915-d222-4540-8a36-a975bfa91488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e3c3a9-5539-42af-82ac-0eacb48efd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "653d6fe6-aff6-4ae8-b004-c4bbd75463c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee11deed-fb27-4846-9e70-b5db294006e0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe322ff2-cdf7-406b-9c66-da1f91e80ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19665b6-5d11-4a14-8f1c-b19205c18a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf662acd-6225-403f-a554-d1816df9b359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e01d7601-0e87-47db-9826-e3bbbfd23832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a243dace-6c19-40c5-be45-4be224a4660e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee4a496-2455-477c-b668-bfe622cf66c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355fb25d-9d68-49d2-9b13-6690cbd50e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1494f790-5c0d-4664-8d4e-d226abadd2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3e5179-3277-4f02-b69f-dedac4cd8e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a1b38e-763f-4ebe-8708-fe59918af455",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc47a92-575a-4c6b-a935-7b350fb801d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5bec62e-3fd0-4375-8889-f5c39406a73f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1abd2b-6153-49a1-b6a8-903dd5a817f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1da06211-a61d-402c-b6f8-3ee9ec67b386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b295794e-19e4-45a0-b12d-4732d359f0bc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71380b55-3343-435b-bdf9-5ea85a944079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c42f3d-60ae-4a41-a60a-8b09d6246545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55ebe26-8827-4266-bb15-93fce1eca8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61164450-0196-4695-8f7b-30fde2ab0997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1840c86-dfe7-4eb6-8f91-2759c220d882",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea3b65a-03cb-4102-98c4-8ba0ad8a3252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b06683a-0dbb-447d-b66f-868111303bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86e929f-9069-4979-91f9-a085a3337ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7579d8e3-93d8-4225-89cf-5986e094a767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14114cd0-49c8-4667-95dc-66e4e0cde297",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b1dfd4-b82f-414f-b326-134f4fbc44df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec6c01d-865d-4cf9-9014-ca6f398ba6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51192f7-196c-459c-a943-5c8ab51a1172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e16ab099-d53e-4994-9172-9d26df29172e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e341a6e1-486e-4e83-ba1f-437881e203a6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7c152a-9790-4523-a098-b284796f2be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48e82507-87b1-4963-8ba7-67c29ce30777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ca13f7-13ff-4a42-8c5b-6ab29863c63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd12b03-bb81-4e27-a407-b4cc772b23e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46230504-3190-492b-8cc1-ad4ec0931ab3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915d1da6-bb1f-43d8-a9e2-5caf29597519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a4febc-660c-40bd-88fd-22d2b4f0c3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ff7efe-6afa-4fbe-baa4-ca7109dc04f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "047d8e5d-ed25-4b2c-a439-8c87962bd121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eba6048-1f90-45b8-8c0a-cec1e26899ef",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d63016-72ac-48ca-8628-23171045e2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbfe7f8-db7d-4dca-9dd2-95a6fe3de327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c916a9f6-c237-4447-9b8d-a508a1ce1926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b81f7d5-b959-4f1d-a8cf-c682a825d8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fe7632-f5a1-4b39-8a57-68d32a88af8c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92317a4-d673-4ef5-a352-11fecfe72592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6db428b-cc5c-4c3e-82db-ab912335efe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96d7cf1-1750-4c06-b13e-08fe0af52908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "706bbf86-348a-489a-ace0-b614f1782f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cbe591-533d-41f0-98da-95d0561c81a9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8196005e-7d8d-4089-ae72-6aeb084f363e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f5484e-ba36-42f7-b85c-fe8d2827b4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c08324-3c3b-422c-86a8-1358d780bedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "86b28d82-0a85-4fae-90d9-c1c47ae4ed7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432ae08a-93cd-48ef-ac15-3d8cbf918436",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cb2952-3444-4700-9b86-c990d4166063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755440d3-4189-42c4-bb81-2d7daa3c7575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d3a742-7eac-4794-ab34-eeb6cf6e8e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "66246d4b-91da-4209-97ba-d0ff332d66b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df894d9-0c21-46c8-aa91-041fe06ff1d2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d303b7bd-ed4f-4b0b-bf73-12e1256df654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8676939d-d030-4177-b59e-c8e8e11039f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9744e0-c9f5-4287-b222-8bc5a97232ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "835e5e3a-9581-491e-9f68-4cd175565bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf90c44-1abb-48fe-9f68-c7d7b0dfa253",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33638ba4-01fb-4466-bb9d-4030e11ce299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fb78af-0c7d-4790-9e4a-6b844259d9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97c890c-6700-49ea-8dad-659abb096557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "99416333-0214-4463-b9c2-459a0638caaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f8a051-1a77-451c-8afb-b2120a1e28cd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd7a4c5-3161-4003-8bf1-32c7470dbc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbc8efc-150c-45ec-931d-8215beb297a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372f51ac-e1c4-41c0-93e1-44ca29702ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a359a31-ed5c-4360-a9ad-e79f0b3a0335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011b9d48-53f2-496c-bcc8-9e62e5a0cb04",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc38f8e-f6d4-476b-9aab-2b73fe0b3931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1517b983-0213-4fc3-991b-209edf20a223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e6d89a-3789-4bb7-952e-72523efc922f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1479f31-c362-4ca7-b739-d10eeea4dbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b82ce2a-7a00-4d07-9aac-c33b8ef84195",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2930912a-623d-4a3c-890c-558fdbfd19f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1150042-1e58-476e-bcc0-c94723af946d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a56e071-d590-455b-aadd-be8600e64fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecca2113-bbe6-48e7-a10b-7bec72785c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4f11d8-b0e2-42d9-9466-0556ec12209b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adfc081-bf5d-4920-a94f-d862e9fcddf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df01470b-87c0-467e-9802-8bd1b3d94cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f83955f-be45-4f79-bc24-31c56c61d728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c904c3-d5f8-4a6f-a2de-761c63a4a3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb159724-0d57-406c-845a-26e8a67d2d54",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd15edb6-8e2b-4750-92dc-430aa46a7dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9d2c0e-7248-444c-9322-03e8844273f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25b599e-ec84-485a-9bd0-8e1a144ce07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8704dc04-3104-4e93-b2ce-64a8f773ae7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a59c8e-1980-4dc3-b3a2-6bdda9dd7e9e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f10519f-1f44-4659-a9f3-e4cb5e074024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4958076f-7554-4589-afb3-8c20893de15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f97b942-8e1a-4349-b64d-fa6eb0c6cf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27538f22-d45a-46ed-bf72-2687c8c0a99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8b29ae-259e-4bf4-86c3-9067143c7ce9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74a4cf9-ab33-4beb-9fb7-6c9ff9437261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f128cf6-48ae-4a9e-a6d9-3a51fc6abb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8ad540-63fc-4fe9-8555-7cd639bc8f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4060fe5b-4d57-45ed-85e9-f7ee481d883f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f46bd4-bdd1-49fe-ab67-51bf1825ab17",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d952a1-3a78-43bd-9946-d578f8a28e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae01bcc-3e7d-4489-8fcc-0ce45cda4542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57b6942-cd5b-4058-917e-e3d240e51a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff809845-7caf-495a-8143-c2a495872f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26bc3d6-c98a-4e4a-b605-4041031992d4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47664137-d138-42af-89e7-8084c575974d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2615b594-9674-4ef6-827b-ff582ca587f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36be6fc7-3c78-49be-83a9-2511d7dc7e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e630044c-7930-4f83-b112-465d7c6e34d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327f67cf-8572-4b88-ac57-b732cea7fa02",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa13e9d-57dd-45a7-b249-f300883028a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e702ce95-6164-49a2-8ae2-ffa55f5294c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bd0452-b218-4d78-bbfb-0a3b209d0bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8807eb86-b912-4cdb-9c68-ded33aa24b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726c322a-0f15-4da0-88f3-74e1883ccd05",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea4dd8a-7140-4254-b47c-7f3416d81599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a9168b-28ad-447d-9904-5f967eb68dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7ff4df-4a6e-4f83-a819-71598f9599ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4141108d-fb42-4fc8-8614-534b098e5b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2473de2a-7ca2-4c7e-a008-908edbad9ce5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb9f3ec-5f4c-45d1-8923-29090d41ae62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deddea78-27d2-4410-9ca4-aa2d5e779f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7296ba-1c78-4dce-9622-6a4273a82e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1fbecc-2016-437f-ba2e-1eb6550cde98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5de28a-39d6-49b8-9e93-c0b5a1517fdf",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9221d60a-4532-46fa-b1dd-b4c8dfe74996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36a777f-22dd-4db3-8c4d-05f75b83ce2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fd0910-2388-4285-98cd-d84b2ebdb9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1720a3-bed8-4f3b-841e-ae56a7861a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510ab921-7c04-4114-accf-41b2dedf6a9a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908f661e-b906-4a09-9375-5f624b7220ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5a81c0-18e9-4f35-96f4-399bda993dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2663dc8-46fc-4f3f-971d-148ecbc18924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "acb8bd0d-b7e3-4cb5-a3f6-21504bfe1e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e97feb-f1f2-4aea-b36d-efa8cf3d5ac4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea482024-5d41-4f18-b62e-35024c938739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ad7e2d-bee7-4de6-aab4-6ff06cca6aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79534d1f-5145-479c-a4eb-bb5b86fe693f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8de4113-3b6c-4f49-8ece-844b4dcd64fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9037b59-b734-456c-90d2-22f482a4baa0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef66621-acd0-4d98-9bd9-8a648095ccad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49ae5c7-6856-416f-8630-ecc42f99652a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3515f368-c88d-474d-976b-c806f62590d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "42a7e8c1-2d9c-4e5e-9ded-3c2a33828b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036b3877-e3d2-41bb-82b6-7a347c1c42c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a91aa1a-69f3-4296-8d3f-746fcbe5e6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69eebbf6-c442-42c2-904c-df420b296793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3b0b08-7bbb-4726-887b-207447137bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "25670d7b-d77b-4bfb-9f14-e46f7cfb565f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcc26b4-121e-4beb-b7f6-18f9e5446792",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cf5a4f-00cf-44e1-b7b2-bafb8dfdedb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6111ee5a-ef35-4774-bb25-4fb2e64c1a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b7c1ae-1df5-4acf-baa9-7cf1373df989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "39d91517-5d8a-49aa-9111-6745b27eab3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949081df-68d1-4423-95a2-b58a4036ab8c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0c4a29-0091-4d20-b031-69bc0e31ff69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7115959d-7831-48d6-81af-862e7cc38185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7683f90b-e4e6-4ab9-a2c0-2e366492602e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5296a74-63fb-4882-8eed-4c5cd963ee20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8526d1a-5f36-4f92-8ec2-68fd2c319b88",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68543de9-d42b-42c2-8d3d-4b2fef4dd4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96518461-c545-446b-95ea-8c6f4c5799ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08514f9e-c6e7-43fb-bcf0-e9178cdd23ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "61791b4f-13ab-4d03-8321-2e1ce69c88cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679a3cc8-5a34-47f0-a17c-5d8af00e8448",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d1e184-9311-40d3-af01-5cd7cbf05a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f921ca4-7a7d-4ded-8677-0b5cdeb09144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9517a5d-1fe2-4a1f-a5d9-d75d918ce921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d30ef6d-7861-489b-8b3f-b876a97b45d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9e818b-ac53-4c0b-acb8-215aa4cd430f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7aa27ea-cd08-4ab3-99ed-f0c26ed63f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42377f29-b1e3-4a55-9409-6d12d22f0871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da0890d-9aa1-4733-ac26-dccdc73d8ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84c0fa01-a233-4b66-89c0-605e895bd4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc392259-63ec-4edc-9236-212dd71403e4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bab72ab-506a-4c77-89b0-e8a418b15435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e6e1a7-68c0-4f29-bd75-03c0020a345d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e49a41-4d6a-4f6e-9e24-f0c5a39ff26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75200be4-d432-49a9-840f-415e6262e1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867c0955-1e60-45ca-a080-35e719633662",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cece00-26de-4c23-85d3-0116f59b3a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c392829-8ab1-4a7a-bb16-1700afbeaa22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c383ccb6-21dd-4829-a987-6af025f9ef2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6202194d-3f0d-4faf-9ffb-f76676faecea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6925dc-4931-49be-807e-bed4cf122eaa",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a43637-66e2-4468-9a07-edfce0f807c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd4b116-72f6-47ae-8b08-c83886d4eab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5de97a-826f-455f-9a57-3c9399eae226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "30e04e7f-fa52-4318-9141-a07ddc6e3ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca4d7e4-2907-431d-a5c4-9c6cb3da20f0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3bff5b-d81c-4ddb-a941-bdd44b938fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121f1074-b023-4da9-ba3b-a4cedd36bf0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5a34b8-ddf0-4d4d-8221-badd228e37cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c25739f4-2d47-40d9-8590-c444aa3936ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1540905d-8e3d-4763-a1b0-ab76c06e1f33",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fcb382-4061-4938-a01d-10d8920b216d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3404f1-b87f-41cd-b643-853fadaeb725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e036e1e-924a-4a85-a910-7551e8f20616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95de2a97-0c18-4d80-8da3-5770e2cdcfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea8a3e6-7732-4c16-80c7-c5f3dba9af8e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c63a77-d6a1-43d4-86c3-2babe07eac8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1e8038-5026-44cf-ba16-bad7cf10f7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da59adfb-8a23-4fd8-ba89-81fcc959a5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fad86bc2-7b11-4275-945b-ea0981efb915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a23dc87-5fc1-4f6c-9b68-a2e46c64a2de",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b20efd-ef5b-4280-99c7-ba79e942d179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d589480-9096-45f0-932e-e13ef276469a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3d0d51-9151-4ec6-9b99-fa84588834a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03894b76-1595-4deb-8020-79c01d06386f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8249e54f-ed08-4dd9-9574-a08309b8b978",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870a24c7-f960-4567-a975-0cb6934d417d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60cfa036-5bd1-4df2-89d1-459aed400a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3705124d-639a-486c-8229-748e5963f4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "727cfd30-11d5-486d-a4b7-bc1b54ae75b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f81a112-4464-419e-a1fd-7fd510e4e348",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500a3abb-3b81-4cf6-985d-1f6528c37f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66b2974-6be9-4cfd-9d29-f62a9ad64ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531ee747-bc00-4b1e-a577-7828f638c544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f27a3fac-c892-4b96-b623-6c36a9834bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feeb25dd-6afc-43cd-82d5-609346e258b0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc983656-7f86-414d-9788-3b6c5a2b968a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6091da-9057-4bcb-9200-d7d9441257fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339c6995-01fe-492c-99db-7fd84f96a54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "72747dc4-ead6-48cc-8896-fe5b86c1512d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2d5b51-72cf-4165-a5d0-9a2c264973b7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7072d9df-4d80-4d61-8f6b-25307b2e4524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17437fc-163e-4e4f-b5f8-84af5665c0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978b99e2-b35c-4e86-aae8-b1bf287b5d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f954c24d-f266-416c-9c08-66cb85b61591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2779e80e-4506-4a84-b43c-01a93e9a939c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd7ea1a-c7d3-4f24-bbbb-e3fc1c8dce78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d140994-9f3c-4022-a9ce-25098589919a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba18209-f444-47a0-8f98-0d11cf4cc1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c118ec1-19a6-4485-8367-87195ed41cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b81c5b-fb25-4313-ae64-c31e927b3fc1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fffbe9-eaff-4ab7-8d8c-a34c87d275f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c82593-d1c1-4bc4-b320-7de4f611bbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fa432e-a814-44d5-ae84-a633cf5989cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb3163c-9fb4-4e86-a7ce-333443740d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1d3be7-3ca1-4de8-8e69-60ea84d095d6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34d14dc-ff0d-4a21-b1cd-4d353ac77d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae06f5a-adf0-40af-9f36-3880a873b42e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a285fb72-43ae-44c5-bcc9-2672d51e4048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "552d86a8-2df8-45d4-b673-38b18971f6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b01fd8a-779f-44be-b1cb-f4cfd9011c6b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0922bd8f-b1b1-4739-bf41-235f5aa6578c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1501458e-6059-4c34-b21e-776549f0e49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034d0e27-4da0-4a86-8e9c-d64374a44088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a03a48-4fb3-4d9f-b513-2da58adfd40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6ff77a-2a3b-4788-a3b4-741d48bfcee1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b528dc-7d08-4732-9bb0-1d37c97af1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62852b9-30bf-4cbc-aa7d-6672d5f452ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1dd3e4-4c5b-41c0-819b-9559ea59baa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "23dcdcf3-5589-4171-9dd3-090eca2e8659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdb3d35-7c03-45ba-8cdb-1c4fb584c67e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ee05d8-a06d-4015-b0ea-e9a920a5f885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549a798c-2fcb-48b1-8b90-f517a00111f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bf42a1-b647-47a7-8c75-b8b2e7268d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60c32e63-6a5e-4f03-bcf5-6e80f570cc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df55968-93d4-4415-b993-830f3f8a9083",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c46a9cb-ce65-432a-aa4c-e56ccea2fc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16590dd5-78b0-4117-97c9-f3b56ab27db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9fe132-dc06-42c9-9b02-136ed92675fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3eb2d5-9cab-486b-9f4f-7b04093edbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4628ecb2-307d-4678-ae7c-1cadfec0689e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2b471a-bde5-494b-bad7-2f904a9be894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ccf3edc-5f33-4ae4-958d-fe072a97484e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c44bb87-436b-4b95-8aa7-46b5ff333589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c92fe380-9c64-413e-83a3-1bca6f951755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346f129c-53bc-4e20-84a7-fef0b56c40c2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0867f003-7a89-429e-bfed-0e3d1ebb896b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3f0b74-56e7-41fb-8e23-7a4079d7e650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c5c94e-4deb-4068-b343-6a8e9763e42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd9edae-205f-4eb7-b660-f88e19873ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71119c5c-dd94-4777-b242-e5c9dacb4a77",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e22a141-59f5-426e-bfa6-f8c7ff03e0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6b9798-82cf-4940-88d3-cc22c7764f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b681ac60-c19c-4546-8ad0-cbdc826c0150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "face6a71-68fb-4aa2-891f-addd23bb6b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4def462f-664d-45b0-be50-d51cd92f4412",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0fb167-86da-4afc-9db9-b34b235332ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25807795-0a46-4a9d-a0ce-087e8e678bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093d623f-99fe-45f2-bb13-738e1ae77882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4403fe92-81a3-466c-ae81-9fd08ff4bf4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d805f0-f521-49a9-91ab-6845e310d3e7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9684326c-982f-44cf-bc68-217b5dd14f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4019374-f7ee-4020-adc3-afb39be13fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da4ab92-06f9-4652-b178-7fb055a65c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "94396cad-4b46-4f08-b543-341d07d8fa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1306a0fe-7f45-4049-ba38-90f5979fec8e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf0befd-86c3-46f7-874b-1be554f75c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa3f668-38d0-49ec-96ca-f0e360671366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af28729-1fde-4263-b035-20f9f9878b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "33acdfef-0096-410b-8119-43d723fddcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d929558-d77c-4502-b6ba-5a9ad56d10f4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c30d43-d822-4fca-af71-25ffb3be108c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ecd7390-4dc5-4d15-8f88-0f8533ec23fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844c71f6-6689-47c2-994d-6f587c8829d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3045279-d9fa-43da-9149-4eb14d8fe72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cbc9ad-7f72-4c50-9ae1-3c13fe66549e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d54009-3ec8-4d4c-8605-59c4ecc27c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71520fbd-3f98-4629-bee3-26c5960fc974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cae54c-1a25-448e-96ef-44f2ba1c6cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f60a66-1497-4eb4-8c55-6e3358af926d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61e5fbb-d6b9-4a76-a81c-fcfb4d7e1bb6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec751a6e-8ca7-4789-bd35-1bb2a79325ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4ea7d1bb-8322-401f-aa07-54cb88e34350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8853e3a4-cc80-408c-b263-bbb000671f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae075f71-d697-4b2d-8d1f-e06150c598ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce322ed3-7734-44ad-ac57-dfa0e44efbe6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd4742b5-1520-4ef6-a76c-395cda9a68fc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae241610-41f4-4599-995b-71ba41d3d255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f9395ae-e77f-481b-82ae-6065073ac8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d12af6-3972-415b-808d-fea1a1935fe7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a22209b-a41d-45cf-b6fa-f76a7124be2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d989fa4-60ee-4fb7-aa4e-1b844b2d8777",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bdc816-c850-4271-8475-ec4185aff103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "172c0d68-1a5a-4a26-9e57-0b26466e5fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e152ad-9d39-4191-9ce9-f5733d171db3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "120c38af-2c82-4173-8125-1f7ad4d0a373"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "486f5ddc-3eb3-4f0f-8ec7-a7d1aa8c4c9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "084b316b-934e-467d-a924-a9b76a2ed940"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78b0b63a-12e5-4d3c-a445-8d886f05db58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbe88b13-a08b-4e9a-bcf1-5202f2a47eac"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0235a5b3-6188-45ac-8038-5f3b5138910e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09178fd0-df34-4a92-ad5f-0797cbde6024"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "31ee17ea-3345-4e0a-9776-e2f703f2ee6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4eddb3e3-55b7-4fda-a40e-5eba73370aa0"
                }
              }
            ]
          },
          {
            "id": "3232998f-6b57-4ef9-9f85-7e92e457ed65",
            "name": "Positive Testing",
            "item": [
              {
                "id": "82ca4f2c-81a5-4969-aa83-49cf2f17852c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7a57c26-0ccb-493a-8ba4-1470308f0ea7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a313105a-8e8d-4d5d-8555-881d9014e099"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23bd568f-dd42-4624-a5d0-7a78513eaa99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3b8b0274-4527-48f2-a394-ad68619b5183"
                    }
                  }
                ]
              },
              {
                "id": "f99d5417-d517-472e-86e4-d635fc19aeb7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30048cc2-6b28-4682-8e09-2f915b041a25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca8b01d6-a649-497b-894f-47a06e4c6acd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80d36294-556e-4427-bb57-9edbcd7ce397",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "543e691d-3f19-44d2-9f01-bb0781987674"
                    }
                  }
                ]
              },
              {
                "id": "081cfbdb-fae9-4249-a7ea-fb59e7c90606",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be7c09bd-52e0-419c-b546-d77b026cf051",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92d1c13b-e71d-47dd-abaf-c1aad1e6f984"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9e7d7ce-b0a5-41d0-a488-bec5d3fac42e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8997f4c4-0075-4070-8286-8090d6495a87"
                    }
                  }
                ]
              },
              {
                "id": "e610fe21-3aca-457f-96da-bf5d28505aba",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25a01b42-bb17-4211-8537-c379e2a9232c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa087067-5bb4-4488-9ac8-70df0a58f7f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8514d14b-f831-4992-b0b7-da4a2cdc8461",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2dbd94a9-2920-4ea3-830b-c03bbbb991c1"
                    }
                  }
                ]
              },
              {
                "id": "09dfa9ae-72cf-45cb-b862-ff8ab1a9cb50",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5320f75d-8a24-4e66-853f-64c8418e568e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad3e3acd-43d8-4385-8957-a674446ff4b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5782af47-6e91-43e3-a939-40284a7e2f64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1995825a-0ff5-480a-9fc3-3a281ca423c7"
                    }
                  }
                ]
              },
              {
                "id": "ad328ebf-a1e4-40ed-bc65-d4aa1d9309da",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b069b5c-b8fb-4d5a-9835-aed5ba613766",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06b29097-149b-4cb2-a3be-0fed647f1875"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86ba2bee-b762-4636-8a40-455f9676f1c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e024dc99-1f9e-407a-b2fd-adb9f335e4dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "973059de-d8b5-409b-8c54-c7821daeff0c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e34ad8f-d972-401a-8abd-6c82c2aa08b1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7171feb8-6e9b-415f-b0d4-1ab92e76b932",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8c64f63-ae84-45a1-9653-af05aabbb866"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09ff3642-6e73-45d9-85f2-81b00747379e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9cc2940b-3c6a-418e-b269-b9d5b00da1c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3381eb06-2570-4aaf-97a2-f28bb20ddd6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93e0ab5d-e935-4fbb-850b-1fbd5d1a4264"
            }
          }
        ]
      },
      {
        "id": "84dad4cf-459d-4686-bd22-18552ae78dca",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "21cf9de1-6f1c-416a-8c04-7a007dc8d0a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0be24685-006c-4e4c-8cc2-9ca842e4e275",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "de64eb40-1394-4dbf-b79a-c25ea505f0cd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8e99e8-9951-406e-8a94-a5724461fbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee198ec-2b44-4e34-abc8-f76733a4b654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffe103b-50ee-4a8e-821b-3c3d6901b199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "567b70af-6512-414a-8815-0aea481b6650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d773416b-ff2b-4a73-bd4e-472d8bda2ef5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3229739d-b8d5-4a1e-a6d7-3732a9c045e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda221f5-f6cf-4b98-8260-2dac70f64346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6859d9a2-6598-45d2-849c-d2217f8519b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e798cee9-9834-4e4d-a4d7-5fe73b46f46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6502203a-99b6-4e76-8f8c-44f1ec708f37",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ad3c25-5212-4057-9ad1-98173c6ec124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b168aae-c89f-4827-a7db-e603da95fcc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e06af9-2a45-4c65-936e-b720816132c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e832418-f8d6-4eb0-bf15-5f83e14ab4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a80338-065d-4de3-8bb3-008b40c009a4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ed0067-f38f-47c0-a109-c414819eb44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fc29ca-52c6-49ec-abf5-07601c3afc65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3861768-e345-4cc8-9593-3b89d69afa30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1365c32-8d65-4e35-9d81-cf9a74e6f007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a644cf-8b90-4957-9e98-80f3d8c1b394",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6171813-19b0-4d72-afcf-c3ddaa88d3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990138b2-2e74-47b5-99d9-af6d58523ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351a5dec-311d-41e8-8954-8dc9e77bdd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b396a1bd-b8d1-4799-b0ce-c7569b231ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb95b9c-e2b9-43c3-8b63-c3a123d61f5c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd2640b-9996-4ca5-afa5-d1dae1238511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3992e8f9-4e40-46c0-9fee-550260f5f49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f7c732-8d05-4434-8699-a0e805ca9feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd274053-3250-4f10-af2d-ad3623a92081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544a67ea-ca73-45ef-ac27-b665ac15f69a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6ef429-4934-422a-80c1-e394f3324bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d368473-3f0b-4912-8fc2-0447c935b6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35875ccb-3156-436c-9b1d-123ee94ad802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e2208d-807d-4feb-a331-8b9766402809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e45e58d-e8ec-4500-8989-00602f202013",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3422922-ac32-4e25-924c-6d9b70436b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82e70e4-20d6-4aa8-8488-1af2b4603f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447ae0c3-2697-4244-9317-1285baf772b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b93248cb-1056-4542-92de-a861135ff3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b13cd1e-0d6c-4dd9-8364-f142a0909ccb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4247c65-1635-4ade-8759-1578deb28b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506cd298-7fb2-4acd-a9c4-49b25813b8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77dc1bf-3b97-4546-81c4-0bab266dd6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "483fbf72-d41a-4845-b8e9-290ad22ff124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83cbf09-9ed1-414d-a495-4966f9311057",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c60fea-8d3d-47cf-b6dd-aef8bfbfa83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b323e9ee-d730-4966-a1bd-b321cdd7dfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfb8190-790b-4cb1-874d-f3b003b8f884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3be490-a6d1-4ad5-a47e-8ceec69d4a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f234f1-0e7b-47fa-ae4b-e7c2c90a1674",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21a650e-34ff-4ed7-b197-d4aa68a7b78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593e50ea-8483-4a88-b558-889cbcad5bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca76ddb2-9dc8-4ed4-88cd-c290df2de65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "654aee20-b12b-42ee-8dfd-cfd8f27e2801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46c154f-3a6a-4c2d-bc0b-7ec71a814d08",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e211da-4c59-4d25-ba57-0a5c4f1ac709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbc8e2d-ab5c-47df-9aa4-3948fb8f98b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edc4a60-e234-4920-9f98-232db2a60242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81fa1d52-c34c-4408-9d53-cf2c9f30cd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7591b8-296c-4506-8f1e-3a4dbadbfa63",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915323de-de67-4c2e-8fe1-9208b34b57e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ff9802-4fda-4641-8872-505b2e916554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035b4d05-06e1-427d-a8f5-f9bea42dc6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "544cfd7a-e412-4971-ae50-9730e48dd300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32582f3-2f4c-467a-92af-06789b8a90f8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b17bf5-f95a-4eff-9472-b0f05217e947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff676d2a-dd24-4574-94b4-a409cabcae82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83708e17-6fe0-4aa9-abca-c9e2bb992da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c83b6ab-dc86-4ce7-9ae2-44a5485e306f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c4ff56-5a1e-404c-ad88-dd4504cc017b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabc6cd7-0a12-411b-bf04-57b4b467542e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5d02bb-adaa-4a75-9ccb-df72cac9a106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f201d26c-edc7-46e7-ae38-3b177f40a263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab52ccd0-ee22-40a3-9f9b-39a19b3da8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1a42da-0a1c-4cc7-ad0b-1b772b021c00",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d740ac9-7c4f-4842-85da-43897f6c51e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ea3ffa-6139-4492-8812-c78c68c34d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d357999-cf4b-49ed-af6b-747d1075ef0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "98a20b6a-7ba9-48b7-b32f-ebc5999e78a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526ce896-bf3d-41e4-89e8-2e2ae8da9bec",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e078b2-71ed-4549-8f2b-e2670944b941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5827fee-8f4f-4371-ab43-8674cf1652c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d1917e-6ac9-4bc9-b253-b0b6646b776f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa1c930-5a91-486f-a704-5e6b0299ce54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47221eaa-6f4d-4d0b-91ff-63dd8bd1d4b5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b15e77-ea7f-4acf-922b-851e86a626a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8653f8a-0108-4457-ac43-9ed9f39f88ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a8eec7-c57a-4bac-800c-88308094f895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "edd7213e-1793-4db4-825c-4fde2b293938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe45ac8-ca44-4f5c-bf1c-2ed530b93068",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38a0803-97dd-4d43-b24e-499fd778c7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d604ef-58fa-470c-8b73-43d05de9f5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9145e5cf-ba08-45a2-bbaf-8e49c6ab210a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7be8ca-352c-4e4a-ba5f-ca3b76adc520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d681a39-fd7f-45b2-977e-914bf0f8bd3d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be77291-2ff8-447e-ad3b-3890b9287175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a45def-3f2e-40fc-acd1-638a92aa5629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e531dbe5-a4c7-4ee7-a13c-1a19f6c01651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6895af9-c266-4fdd-b5e1-949bde5508dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd30c42f-29c3-44b5-bf02-7cbc33b0a436",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcd9d32-3fc2-475a-88f9-b113ad726b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d33a521-b288-4b9a-9ddb-9a9953dddaba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136288d7-3ecf-4652-b7da-566683d22ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d52d9176-fd8f-47c0-8592-0e41c3be3f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7179183-4bbf-4c26-8c5e-dd9cbdc3e0e4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e11aef-7b86-40cd-966b-1d1ef374bfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6033589-7715-4685-b3a3-fa37df2aeaa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322b3b45-a604-4b98-b3d2-f02498adf414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73dd33a7-fa56-42f4-9d47-5dd2a846af2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a16959c-e024-4cef-8f2d-b4c180869481",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc85035-57e2-4ece-827f-ffc47f9cdcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf646c88-0fc1-4375-b6a5-8b3a1e5b49d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3406b67f-dcfd-4366-b6f3-e5d0f176ebf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "242fbea6-c41b-4499-af23-b6471dfe62db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19805abe-754c-464c-9bb4-41650599aa59",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6f75fd-ed93-4cb0-8f52-571e8dc2a3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80dd6e3-beb0-4a3e-9984-e67f08cffb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e7ba5f-a80a-4f90-aae2-cc3faee314ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe988eb-da60-4648-8b0e-9a24323b0e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c3284d-a9d8-4ff1-a7b5-937c8ca597d1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac38951d-5e26-466c-9318-987669c3a578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a2c7a3-799f-4f21-9a09-397f83684950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420653b1-36a6-4a84-a2b0-54f646ddc5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e01e2d35-f5be-483c-857f-01daa6c52b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aafb15f-6fef-4102-b5fe-a27aed4fcd2e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63a80ce-046e-46de-9091-d2a42eaf2582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0167888-cfe5-4704-b352-afed2cf0e167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786c7e5c-c2f2-40fa-ae10-90cfb39caa0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e99ddb-d85c-48ec-95a0-3d04c8d793ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bd85f2-da83-4869-a61e-7cab49ced081",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac8baec-96c6-4519-9516-a79aeffe5b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b96471e-c8a4-49c0-a3cd-e3eb0407c098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807e4da2-e18e-4574-9405-8974d988915f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61248914-d835-4f27-ad5b-2d23be3c633b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0944c4-359d-4c2c-b227-d9d35b4f9547",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7402d556-021e-4d40-a68c-330a6862b3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8089d7b1-741b-4167-8e66-baac1a68334b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efc2e0c-5428-4e94-87a1-5b31cd136b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85011c19-8e59-49ef-8af8-f778c77f534c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caca9986-1b37-4847-8117-cb05d2bdbafc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e520aa4-db42-4edb-b18c-2b502b1677d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d643dfd-282e-4a3e-bcc9-c1e28b7a64cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c8279b-1cc6-4937-a960-f3a114857190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9ad38a-13be-45ca-b03c-f0db43733db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30125223-1e4f-4cb0-86ac-4775275f254c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18d4841-5bae-475c-9aef-2c01d186e746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7a0b31-0d84-4220-acc4-e930011de26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657eea3f-fc65-4a74-b24e-543412fceb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "214663ba-8e68-4292-b0f0-3fe3d05144fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237c3a6d-e188-4128-ac59-0891e31bae5f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acea350-ecbd-47b6-ac40-61d89b07ebe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea64673f-912b-4dff-b195-9fbec1d3fb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cd6153-f2ca-41db-8ca2-3c5459e7d21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1743e52b-e075-45cb-b2c8-c812d219e0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd3b7f0-96d6-426a-a9da-d0823152c74f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce4764d-0b33-41d5-abed-3c3ebea1340c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce9aa5c-1a93-478e-843e-69cf2afcc653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050782a2-307e-4ccf-941f-0857cabe31f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7928fd4a-e4e2-4252-8318-db0f6e08e9aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f8a8e7b-1b24-4529-b36f-558ed19068c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd1e041f-8c2d-4a7e-a4c9-21478ba95684",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d32aa77-25d7-4f63-a013-e60448a848f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "386d4bc0-264f-4bf0-8f7c-d73652f90ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ea0879-270d-419b-8de6-11d7624447cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f07da0d5-e851-4e39-bbe7-ee3300a14e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13c8e4a-25fe-4333-bea2-18ac0be62598",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807ba20f-fc08-45fa-b219-fa6cc94ab3ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c834d5-1f72-4e79-92f0-0fc536a489e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca30efe7-49f8-4a99-95d3-07c62f46cd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d91c1f60-054e-4d5b-9b7b-02c7680feb36"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cbe2ea8-e01c-4359-b58b-6fed5320db9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c2a4e0b-e64b-47e3-ba4c-9405ee881f3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bea4653-b860-4459-8849-12111bca58fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3c2934a-e18c-4bb7-820d-925866d344f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9308e555-b560-4846-a1be-f875fe3c3b9c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "20f3d15d-3b64-41c7-a9a7-6fec538f6387"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b7df81c-f42e-49ac-a940-67d5549b0d98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19cc6d90-3d56-442a-92b4-8d04aab531c4"
            }
          }
        ]
      },
      {
        "id": "67024a75-7749-4375-a754-c79d57412c75",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d372b219-bcc5-4e3c-89b9-5b04dc192825",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f205434d-5f49-4b99-9488-19c7000e4c7c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c33a9701-accb-4674-9e3e-3a7f99c36c2e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adcec7b-08b6-4c14-8c37-8cc1e529fdd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a00b417-f778-4de7-9e23-4bef1ef98521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef060ec7-861e-45ab-9f1b-1c2c0c7bb4ac",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a9af31-542b-4427-987c-36d609217c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa613a7b-ccd9-4cb6-bf0e-8c9b0b2faea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08f5d2a-918d-46c6-a1f9-e86cf6fe0687",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35afa83c-2120-4af5-88a4-8a170c3f68b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188eace9-901e-4a2a-acea-030c8d86b90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274147ea-5f10-49d5-aceb-2808a0420b6e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b84f11f-f438-403c-9386-dc7bbf4a739d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e43bc3-cf17-4ac5-a976-4059bcc450b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70975826-7797-4569-88a3-5e2624501ccb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0541b1-de74-4b16-9fd0-db377051cb0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4145a4-c25c-4edc-a4ca-7a075364c768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2875361-0ca8-44b3-aa60-7a6ad6f0d36f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7613ef-a637-4211-861b-711213344f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538f381e-78a8-4026-8311-b94ad0592779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8410bab6-3c7c-43f7-b476-45c01d55c446",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632ad9ea-3186-4b3c-83df-007bdb5a69a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280298e3-895b-451d-95f9-1222a73d99a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b815539-7b84-4e5f-b4a6-eee92f34a446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fb14ec-384c-4377-8255-21fd22f6715e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ee464a-e211-40bc-b0bc-0c3f2fb78bda",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5ef97a-ef85-43fb-aac2-8f730a3f6b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93964c6e-ccdf-48f6-a521-dd65fe0d041c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca81f32-a8f7-458e-962c-1a492c381a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9beb61a7-9d38-4f21-b8fa-e53d734c707e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6c02c7-0a5d-4f83-99cb-a80529de38b7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf6d4be-80e4-4a60-8937-71843cb0f5bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3e8f3cd-e0b1-46f2-8374-605690b42a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0c3c05-8f31-4d7c-91c5-cc1ac3a5931f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e74555-8c4c-48dc-832a-5ec32b3e7efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b9c31c-4c61-4e62-9291-61c20306cb1c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85993877-4366-461d-83e4-8a3bbdf13136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a39c096-b1a1-4bc4-ac2c-075534828c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f12f98-8e87-40f3-acdf-c03807727afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53446bcc-967c-4fe9-b3f5-ab9ef2afb3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74d812a-919a-444a-afce-9b92357b1fc3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3359550d-7d05-486c-b822-bc8ea7f8e24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cbb048d-6469-45a5-b9c4-fca6e3f10fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15e3787-79e5-433f-97d3-0a0e37ab9ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a034e966-aebf-4531-8674-d385b57b55a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5116ef24-5437-4aa4-96d3-147f3d240dde",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4dcd7e-6a6f-4347-a550-9fcc2eaef513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4ce03e-0a37-4dd7-9ba0-73ffe74aae32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5775c7d2-a0c9-48ca-98c7-e26bd41e2568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99ee8c3-a3c8-43f2-91f7-bdc0c9216d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72564831-2e08-471e-ba40-c0cbd5b98ccd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27c364f-f741-4d73-a47e-bd730b65f0f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed1b9fe0-1a26-4e81-8916-8b23b680ca26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42051697-a4e6-41f0-bc13-772b19fd0083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7706b5e-a654-4f60-8c85-1cd3d9ee8ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de81ed01-44ca-4e90-88d5-a0f624510a7f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab31109-9b4e-4853-b3b9-17e4627b5aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c1a7e7d-4038-48d5-8fb4-4a54275f1068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9931e9-1638-44d8-8eb5-e121be04179a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84c9cfe-fb1e-4700-8f59-59ee4459edf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f28d513-ff91-41a2-847f-15007835f239",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71668afc-8ea9-4dec-8009-d4a1e8f3a947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5cb3c2d-560f-4a29-aace-39286c9933f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07fdf10-988a-4730-b892-2eff2cdfc4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6e3ee0-837c-4fe4-9203-a6daf64bb364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616f2d00-46bc-4f3d-b90e-9cc0adf998bf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d49f01-dc47-4e06-a53c-bdefaf09f29c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f65373-687b-42ef-bd40-700ac935128c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa836b23-9b8a-4b2e-816f-fe257e3d9895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0825215c-74bb-42d4-af2a-abf66650ae68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f86e133-36c5-4c97-91a8-c7b0376a932c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9c8b20-0833-48da-99d7-c0530c837938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde82c69-bb8e-49ec-9783-f08504752d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5466bd60-632b-4292-ad94-17541027745f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fb61d7-9faa-46d7-9f41-705d6879d806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ac136f-42ad-41fc-a860-20196183811c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f353642f-bfc1-4651-b47d-9356f0988270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4d4b30-b404-4522-8838-5c0cc55c5bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07a8d59-fed4-48ad-8255-abaf2d032b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa23e402-ed14-44c5-92ae-2a99e7a0307f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47178333-bf19-4105-9a7d-7787da67fd2a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6c8c11-f311-41fc-8728-9d73646516f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5685797e-94da-4cea-b26a-02b4a8b69d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0815fbd4-cc42-4fe0-b142-38d29fc332e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df9ccc4-5a17-43a4-804b-de34a8d3a8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349c0368-2967-4ff0-aa93-053f329ed846",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49980c5d-ef0a-4d0e-acf3-02735ea50f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e415a84f-1c29-45b0-bc02-d2f8ed452778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7157cf-2280-4826-a159-69da210792fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b64c3a-5f3d-4b3d-ab88-dfc436396f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4f18c6-d482-4977-8539-3186bea51c90",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140c4f0e-38c7-4491-9405-3dae8083a66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abd1bbe-7a08-48ec-8779-77aead3e9811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baaed9c5-7b14-4a39-8488-518f0e0fcce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3456cef9-30df-434e-bc9d-639212b81dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5eaccc-5d4b-465b-b6cd-b7f094b80a92",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96223b2c-1335-4f73-aae7-775c9c64985d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de048986-12a2-4794-ac9b-c08fc2accfc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5f7493-64c3-4e43-aafc-27cb1ebbcd60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597b0567-2ea0-49c9-a63b-9ed3130935ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578be7bc-1cab-4837-9971-3618e9455463",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e22f81b-1309-4872-ad51-684851b46c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377d5512-a066-46e5-a03e-e7f109ab96d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be9ac35-43bd-4086-b8de-d555a9f95067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd1d472-31df-4d7d-8c48-bc8f72ecad82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fe9e65-b51b-4f67-a69c-3d6a145f0d59",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bb6e7b-220a-47a8-8109-3a9b0035ceef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2baba95-af43-44c8-8350-f18f89a2291d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b5a4ab-2c29-4d68-b97c-bef06d636a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4528112f-6109-4c46-9e23-993bbcc50198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f053b8-5bb6-444d-91bc-085eda8345b2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f8d2dd-eb7c-43b5-bfbd-faaf2abffdc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1dc510d-6492-4779-bbf1-499e36681b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac007c6e-20fa-4e85-a9e8-3d2bdf6f84c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca84fd77-6c05-4ebc-98dc-ef42e5bfca80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a060ac09-7afb-400a-b21c-bdb87ff793ec",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49edd3f6-32c5-4ed4-a987-bf137a00f039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bd2bdc1-f389-4fb7-8646-59a340d8c54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "278a3abd-e1f9-44d6-b0e8-32a4e3ac405a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53bb04d-4e2c-4e2a-9d3a-9f62e4acf2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5288c2-871c-4da1-8574-b6f7ff312ecc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042096e5-5aa7-4fe7-9407-299d0da769f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15cd0eb2-ef50-49cd-9683-903e0dcae78c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a67eb5-786b-43c7-9e8f-a8f4c2602340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0559a4b-0c1b-47e6-8da9-fa7698409752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b170b08-9fd5-43e2-a84c-d1ee1500f4ce",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6b59f9-4222-4972-90e4-35293a3d9532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7305e4-c54b-420f-b946-508ceb973f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71aebd9-2fa8-4da1-a5df-e025d974be28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20daf7b4-3f07-4037-a61f-358b80b2e994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f66e8dc-e72a-4a99-960f-47f3dd841a17",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5240667-a13b-4870-94ec-76284ce91408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d0d8b08-7578-4800-8ab6-532dbeea9aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42771753-6a1b-4952-95e5-0001efd361c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73eb6fb2-76e3-465c-a967-52d018b75e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafe1bc2-6f4f-4751-b68d-5226e954cbdd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422fac7d-70e8-495b-ae58-35883418e184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "265633b8-25ba-4c61-89d9-d2460326a02a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6557f788-57fc-4d92-ae78-ac2dea1c3b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f16cbc2-62c2-4cfa-89af-3b0b5f5cdb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2a7205-2268-4060-a24c-0b1f18b25718",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1222c907-52be-4f02-a950-3d71eda4807b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d6487d-f156-417f-9289-2e808860ff5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8765b3c4-73bc-4dd4-9148-d8a97a7861df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b465d3a5-2b89-485d-97be-9af771a9f90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2671ae-1adb-4418-a099-60ffa7a3a50e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b011ca72-fa80-4f5f-b30f-cb3a3351d5bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c0dc883-49b7-4c1f-ab27-1f6b8844170e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1460ae4c-4448-449b-b73a-e7c58c750261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932b40af-d318-4351-b226-72159c404d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c093ad-3184-4324-9f33-9cb026945d35",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e3fcec-4239-459e-93cd-c7bfe7760530",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7e589ad-2e66-4b0f-8da1-b329bd49d8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ce8f62-e1a8-4244-8bbd-4dfef25c4e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ceee156-8502-4481-95db-4611c597f7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2061a68-dc8b-4e06-975f-e00a672bdf9b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393454f1-72d3-42ca-8fc0-12568ef35afc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80a2bb0c-d381-4d3d-83be-a0500dc1cd11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4bccbe-cb3b-40ff-bf95-2d7abc03d542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa93dc4-5e22-4304-9adb-43536b3b24dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f46ae0b-51f4-41d2-ad36-19911e86fab7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357cf50f-f4b3-4b89-9a33-117f7a5d7ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9effad6d-6f78-4ea2-b77a-65dbe1f6f823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a28611f-f4fd-4dc2-a958-890d8b5f8af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e6bd53-8fee-4ce4-8c92-a18f69e6a762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8b30c6-5f47-449d-bbca-2c512639fddb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22967b8-572c-4992-8b28-0c7cdc6f1655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10da19e-9c95-4293-b5ca-a364b8f04535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7d6512-2cd7-4bf9-84e8-1a3dbc65e3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f72a4b-1495-4af8-a2d3-560b7215cd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba43514a-cf44-4671-bc68-549eea182416",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f974aef3-8325-491e-829c-46a321167276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef002eb4-de74-43c2-b5e1-5624fc2a1826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747ab59d-8015-4233-aaec-e773ac51a0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11729c40-980b-47ce-bda7-f1ea44d7e72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5dc821-52a3-42af-a415-af259776ad99",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fd3e3a-83d4-417b-96c7-c7b2a5377742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3552820d-3e6e-4f2c-b0c7-c3c1dfc5781f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f60f612-4089-40a4-9554-ea03d30e780c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c68b5a-e2d4-4e93-8362-21afc0affe49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ad2a33-1edd-4b35-9da1-e05fb729b593",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cf904a-e253-4df7-add0-f962cc85016d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318f526c-7cc0-4f30-bc51-91b80e740b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa8b5ea-a9d5-424b-a6e0-9d40ece52028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d77f1e-e0a9-41c1-9363-366703dc8040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d419f073-e44c-4c7c-86a3-424385a78ed1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e4d4ce-d5f3-4355-a908-8db0589dab69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b21ad86-62ca-490d-bf39-0aa5fb3c584e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a1c69b-ac61-46a2-a0fb-bad2c3d99f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fdace75-b090-4253-ad76-d1530237294b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb06e91d-cdaa-4a85-bd8f-dd0fe9e08d10",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8be5863-514e-4751-9fdd-0b2aaad50da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23404ab-c244-412f-95b9-345d36bf5f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573ecac2-5a1f-4597-993c-eee354225db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b47761d-5751-470c-9009-1d8720a4622c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259e510c-3f45-4139-bc9d-5b421b0400e4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c13f06-5afc-477e-beec-d255fea76e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f24647-48c4-443b-97b3-617ff597ed0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66ecc51-56fa-434d-91f6-002c997178d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6caf7f7a-315a-4ba0-8201-47b9ff2a5577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8e71bf-b10a-452a-a106-73a0558694c7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cea13e-f516-4306-bd0a-c511e877cbb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f833624-97da-4ecb-b240-7c341f384822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a35436-97f0-4434-9c47-b4083a471490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc428578-b852-4829-8de2-48759db27bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787bffb7-69f8-413b-8251-168c02389cc7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c5aedf-dab6-42b1-8e2b-59b111c429c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d171b3f-6bb9-4890-9b50-8c787d2907e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b45aef-085d-40c0-995d-0fa7d02d7479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdeff720-9730-4054-8a7f-3d2db55b9d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621f40ce-b898-437f-91b6-133330374d11",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8544b2-8c46-4104-97f6-fae4e974e0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579f4d17-df11-42dc-8e36-e29b1552c31a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e183151-152e-46c7-8194-48d5ece2cd14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7a5966-0212-49aa-b4ce-5acb19c7c99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ea2701-8a68-4bcd-a454-7fce57022d06",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305af11c-073f-477c-986b-a5050ab3c82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f24263-eb6a-49c4-8007-61a249a6ba1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25043adc-fdda-4916-8fd8-a620945c494c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4d2835-1e9b-4585-9da3-d46b99758724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c32bc7-f91e-4293-9ea1-c848a1474a97",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd43bc9-3849-47a9-ac25-f59f65016054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7519574a-393e-47b7-9f29-76e2515397c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4acc22c-6e8f-4735-bd00-de00254195d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d19e4f0-d19e-4307-95c3-1c150ce34a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c95baa-1517-49d3-a75d-9346b43808f5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9cd9a6-ea9a-476c-a6a5-158cb6f572c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927ef620-13a8-44f4-8f68-94ab4c58f818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a421175-739f-4713-9155-fd38d9d6aacb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55ca306-18be-4ca2-9a29-184bbe779e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f9d2a8-68bc-4be3-be5b-1aff28611dea",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1597861-7075-408f-b9c5-0c822681d3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7061458-2097-4fb5-8550-1161a7ff8151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060320df-d72c-46ac-bdc9-a82ad6e1095b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ba2f33-ae3a-4c90-8ee1-33d6ba99301b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b275f835-06c3-43c9-8ecb-7ce9d76555cc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f917ec-0d6c-4d7b-8b01-e0a88db4bc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858fa7e0-4269-4b30-a84b-e47e19577dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190f0a3c-d0a6-482a-93a4-eece5f189874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e86b50-6688-43cf-ad14-f98e0d76eb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772217ac-4269-4308-b415-e49acfe8bb83",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e6bd7c-352c-4135-8c1e-a26bfd1d1b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ceee9e5-1258-4111-9b14-9b19c22096fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f837e16-517e-4f8e-be74-5005183456ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afae251c-abea-40a1-8809-59e6bc184dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37d1290-bd21-48b1-975b-e4dd27c86dec",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4df851e-abfe-4558-bf59-a820c40a980d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b14e0d-3b91-4426-9652-5c02fa8303ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfc3646-2071-4e08-94ce-48deff4a141c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57660b6e-7f8d-4ef6-83fc-411a044fb534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da262fb-db24-4bf3-ab01-3dc381f7a04e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe8ca40-1b3d-4097-92ea-4ed3c75339a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8249caf-ff88-4e99-a842-dbd24b8bb125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b596c32-0696-4c37-904b-49e533b44032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033328b6-2959-4408-abe8-dd5754ac364b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203783b0-2be1-428b-a9f5-52352cb69e4c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36422ae4-4249-4ea4-95b2-f33be5461b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df3af95-6d51-4510-9d29-7fe702c776fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d795eb-114f-4439-8582-37cfbd7ceb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f282e144-6cb7-4984-98ba-1a420497d6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be52c3f-139e-4aa1-96ff-6d4a45c12c7f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de9c7ad-97d8-4652-b6cc-04acbbd390ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fb4a1a-435a-410c-9682-3de548a90f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "308bb567-34c9-4b87-ae93-f3cf5a3a9f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1739953a-9b53-46ac-95ca-8b48df60fd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21aafd37-0f90-4248-a717-aa229a740197",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498aaf76-ea65-4e7d-a7d9-cf935aa61a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55870a90-5429-4fd8-b9f6-4c00679f08ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c814e92-9530-4088-a369-92aa4f91a2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bdc056-3e23-4d00-b5c7-7e908a3d7979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc90b0c-6a89-4985-b145-ab7ad6e8c2e8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f122f8d6-f5ba-4692-add2-afa7df7dced4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b383c0f1-bdde-49c4-9e09-92d15fed675b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfbd79a-6722-47a6-8883-8859f8a36f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4f22f1-ca84-4f43-9f6f-279a9460abe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a6a231-59c0-42ce-bc01-d0de0256e6c8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf88cae-8278-4d50-b93c-5a9308cd0e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033316f4-a4e3-4c0a-b85f-9855ac424351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7386d12a-2cf8-4a61-85c4-fc97a2dfe87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8f84a9-4792-4adf-9389-73ff2879d08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5929e534-8a1f-4767-9024-c8df12aeb1d9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2b66d1-350c-4c08-a667-ce3a6b7e76ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5581e224-eb03-4062-8e52-b7b202b315ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf339ed-665f-4f0a-b2ef-f691e6843e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2568b9a-509a-4c98-8c71-c17fecc018b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc8c4f5-031a-4da0-93a1-1582c1af90b6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfe3825-1843-429a-81e4-ea71226a88a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4737c66f-bd77-4b64-85b8-b5fbeee17846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920fff90-9260-45fb-9423-14e9c6bf7c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0128be-e193-402e-993f-32dadf0ca8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a15d2c-4cf4-4b31-ab3e-83c558b0e8f4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96945f94-c6b3-48f6-bb1c-2d528a942303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb9f40d-a69d-49eb-b723-25f1c193653e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "876a32e0-369b-4408-a756-57afc1487385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e4faa0-0069-4cab-9e8e-899150d61f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919ca112-427b-4f31-9ad5-4cf6739b55ce",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f610b94-0c89-4223-8761-0dad6ded5844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b01150b-1cd1-45a0-a4f9-a6eb65eceef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44266e3e-b4d0-479b-8fad-698703c98704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30da8c3d-22f5-483e-a2cf-885be8aaa509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ca6881-58e8-4337-baf3-b4ea19c3dc61",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321b1c77-ec9b-4b8d-86a2-6090c4cd5e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90539377-e478-47f4-8ddb-0d7ccc05bb52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64995f0b-baeb-4fbe-8e15-cdce68b57031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aeb0b0d-9e84-43dd-ac50-d901ba407848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676aa630-43f0-49b3-9b5e-dacc4a003e1d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb82b013-d8e0-49e4-b70b-9153ae429f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6da551ad-1b10-41d5-ae93-ce203aa232df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "583fa74d-5787-424b-aad3-c08b43c19a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30429d76-f406-427d-ad5a-0f30d43ac349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b80f17-d6b0-4252-a475-d7feee6d1faa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f747cc3-41fd-4b30-8c58-b254dfcec297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26e959bf-9e6b-41e0-a1ee-e1a273810505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a608a0-5269-4b30-a811-d823d4453cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9ffb6e-fc4e-43fc-811c-74e310f17629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c63c43e-3cc1-4167-b942-a383ed8a4541",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db917ae8-4926-400b-b75c-bb08c6e6935b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d01b7477-0351-4675-8007-1a671bfd359e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d2709f-7d63-40af-809e-96c0e5f271eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051afa5c-3823-4942-a36f-5d01597a0634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e09d53e-e5e9-4b09-8479-85ff7036aa1e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101479c0-f981-4382-bf44-e4488609ae85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "870428da-c63a-4078-9d48-fc0a18e8fa16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e9db5a-4aeb-4912-aa55-0b9a9c94c610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c838857e-f035-4853-b373-7ede42ac5884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae0fe4c-9334-4dd8-a544-4bfe05e28da0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca43ad15-59b5-48c1-aff2-20e57c9c9c47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "333542c8-9621-4ad1-9311-a90516ce0d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5823e531-6e74-4efb-a573-75c2e8edc326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842b0a10-6c0d-403d-af52-ed0f12bc73f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b3d6c2-876b-4a6b-a9cd-7d0265df50a3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e28e254-b302-4893-8473-c51da8d12057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6555ee0-56fc-491d-91c1-d6141bbc5f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22163ea-8bb3-4146-824f-7410a59c1444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833a6586-4a62-433b-b8e7-b30635e5797d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca99b9a-7523-4ffa-babe-cc469450cba6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18602157-4744-40c1-b84a-222e9c6c9117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a525866-fa5b-4a1d-8ba7-1d27602cd537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7178805b-abc9-4c87-b4b6-864879ae2c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0555451-4d98-4b35-a73c-c13ce089e120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04778c8-494f-489e-a460-070762f74fce",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f22233-a219-4e5e-872b-65a658679efa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51909323-fe7b-42f6-9c83-dabb2fc61e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b84da3-ea77-4cc1-a4ec-1ff00f9b9163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb62080-0359-4f0a-9800-d3868fb9d075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b6722d-965d-46ca-a557-56e6fa60bb58",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d317b5a3-92ee-4220-85c0-8543ed729b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d124266-c53b-4e72-982d-c4cabd2c6845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e2e7d6-f496-42b9-b9fa-98167ab0620a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875c157f-c887-4957-83ee-70991adb404b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34324957-d75a-43e1-8247-dd21bf7a0f7b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84dc23e-aa1e-415c-87c5-2005c1879749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75102ca0-8b15-455b-a6fa-9ac7a0e4d264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a25f5f-e138-4b79-8e8c-230028bf15d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2ca41d-71a7-44b2-8fdc-1b7263cb8f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13686083-7bc5-4bcf-bf42-9eadc4195700",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ba0e43-4c4a-42c6-a6f4-8b165b83b21a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dba734b4-33b6-4493-83cc-d6481334a096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864586cf-05f0-4fac-a0d2-74d202d93c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e131d0-c7dd-4004-9832-ff3401511eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6495a8d1-d950-4172-b0b1-09c179b385d0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf01f5bd-09a9-442e-8634-5d543cc88a4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec39b841-7e4c-47be-8453-d662cf05db97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e84862-1bc8-4328-b0a9-54b3af32a371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b7b12d-139a-484c-805d-f34fb0fb73b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1cec3b-cb40-4762-a9b6-cb710f12a372",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ddacaa-bae3-4d4b-adbf-747a5a4a742c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dcefab0-a9e1-4050-b5c8-5056ed2f7b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2123f56-6bce-44c0-8135-645fd7ac457d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5adbe591-1828-42f9-a51f-9170d6699256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013852fa-87fc-4a01-bed4-4710f984396e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3d6cbd-7c69-4d63-8f94-4ecb78d7116f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00589724-bd91-4e0c-9f14-53f4fcead6ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbef922-dcbd-40f5-ae8b-3e2914462284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0096aa-03b7-47b5-ad36-1639cda42bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e3059c-2dc9-4195-874a-768dd9c72c24",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37aa54ae-3180-4404-9a91-7c88e92cab08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77e53a39-2f2c-42c7-a7c6-71cbdf711e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11040379-fa5d-4156-b63d-501e5f601c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b852a318-36ed-4028-92dd-92ed5b973eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2c6cd5-748e-4a99-9775-c0c8bd5a6354",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3d3cf5-76a3-4cbf-8576-95d3029fb8bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa458256-e8d9-416d-a0af-33b5034339a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1018b1-59e7-49a0-b568-a469ebe775de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bcfe791-8752-472b-91d8-686cfad7dde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d18252-5eb5-4839-8bec-1c751d25703e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54df2a5d-8381-4775-8548-8a4df8ab75a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e80607b0-f7f8-4703-8eca-d3d0f26321d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b3ab78-d934-457f-9976-703739be1fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c58530-6d93-45f3-aec7-bbc8290ff78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbfd4d8-9c42-459d-98ef-32672473789d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451f2ef5-9b7b-404d-aab8-c06108c34e8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be21e365-6c5f-4b94-a863-5452f7d0c01d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d9fdbc-0f2f-4508-ac1e-0012c69d0fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74942865-d0ee-48af-93c3-5ddfe1df3389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdaba9a-9f7f-420d-a03a-57adbf07a743",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbca656-7607-4061-ba47-12b6b2dde5ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "522efb25-7a3f-4e09-9ed9-eb4ce7866365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5b5641-603e-4941-85a7-f9ef88283333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b4e389-4b06-4f29-9e19-f2a92677156a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92635b74-0174-4a8d-af54-265b1e79035a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458b1040-e2a8-475d-8782-5614876afe58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05d7bdfd-e80f-41c7-8166-310f9953d317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a393871-6619-40fd-8cc0-c45e96ba3e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84059746-3714-4560-8847-43c17b5ef834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ef71fc-4286-4c7d-a93e-c16f5dba66d6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b122abba-caca-42c8-8220-b27a9a4661f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3946494f-ae85-4b4c-a9d8-1444775ef7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019aab02-ca86-4f0b-a5b3-7021d93eb475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb6250e-902b-4da3-a808-7f5599a7c7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04936a79-daa2-401b-9b00-877a4b32ec52",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edbb27f-bfd8-4313-91dc-1d68cb09d435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "036f2989-7680-411c-beed-e9646a29856f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "229354f1-5663-4e14-8ac5-29d901efcd1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40e598f-d5f9-4e57-98dc-608b25027844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d9b497-c1d7-474b-b7c1-9777cd7c8775",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e616a8d-3d16-4989-87cd-0c1ae286a0aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "924e4c45-f0ac-4d5d-9b6c-62dc09bccc8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff4598b-fe16-43db-b2ec-990bbee3cf51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3b6d63-52a7-4273-b53e-a4fc3c9d905e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9994377a-7b23-485f-a099-32b153be3a60",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bea601-af82-431d-88ec-99280ceb389f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f19bc9b-1857-4c4c-811f-185dae239181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d3bcc4-6dc7-4084-b023-8cb425037039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7e6154-9ea0-4dcc-b632-e5d71e72a79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b68c487-bfb7-461d-8e04-bea0ac34ec45",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bf8b99-7cf8-4d76-822e-5f2ee5c311e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8d5b436-d0ac-4fe7-a669-f9990d722869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba2cabd-11c0-4e8b-aaf1-47bd97b5faf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bc1cd1-6b6f-463b-9100-5e88b0f40f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5478c2-456b-4366-9c44-752c47861d57",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b371b7-bbc4-49ce-880d-63f040930e09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3b9aab7-630d-41cd-a3dc-216fd83364d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df297502-bbd0-4f07-b17b-ca293276e799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d242b281-7192-4f8a-8a41-f4a4447cee60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50681e3c-f6ca-43bd-b968-564264965966",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99204075-54cb-4280-b750-12d553b3d133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20c9dafc-656d-4580-8069-a8fc2fa57c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e79aac-d069-47bb-9f4f-0b1ca1332912",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17909410-af7a-4911-ac39-b52acea9ebf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e6b6fe-1715-43d7-ae58-eeed6dbd2e5e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed4e85a-ed3e-43cf-994d-4051811f1225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98ad7a0a-ffd6-4c14-9c6d-691f16960480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194a1fef-5b3b-47b5-a6a9-cbf8b93f81eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3448076-8912-4843-b479-6a7a81316404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e77ef0a-6123-4135-bad2-2abc398b006e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b1aa80-daa8-4ca7-9809-370af4649e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0462bc0-567c-4557-8729-c49cb311cc95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92c9c91-0774-4e73-9024-c22546154673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a187fb3-6f93-4ad5-8b40-6ebd5b6c19dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160508fa-db44-4bc0-92df-4f78c0af9b8e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba41d18-a6fd-4712-8e01-4632e6f5d2e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c1e2a52-5d39-4728-8fc8-ded14fb4ad2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a7f524-9f90-4627-9de6-1c4a3db8e324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53c49a3-1660-46e7-9927-150c59d6e0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d46dc1-5118-4cd2-8c39-4e72b148785d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f300121f-be47-4ad9-a0d1-86a7a0423fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47618489-49e5-47c5-9c23-8b6fe524c9ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b5e524-e3f1-4f04-9fd7-e8d894fcb446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095d49ca-851c-4f52-8417-5e6029c1f74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f152dd4c-5a11-49d7-8567-7aa092970577",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c659f57f-4588-4040-bfc2-b9fedb308317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ffac4f0-ae6b-4904-9100-8c297a1b8cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b70b01-15c7-4241-9095-12622c9dbcb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07666d6-7f22-4b09-a770-9a7de62c2848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af7a2d2-7d99-41a0-8328-7b2ecd251e52",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a10eacf-0c09-4ce1-aba0-27413410ff08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1850cbda-3925-4183-86f2-a1d7e24598a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ccaf85-5a32-4dcc-8564-55277d3e00c5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf96cec2-d046-405f-b70a-af4133394667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f9f068-2d9c-45a6-a5d6-260a8fe494c9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5684ac-2403-4b93-a8b1-22646ff31c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79687e62-b369-4588-aab8-a39d4ef439ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27233ea-8f94-4c41-a90d-e29acf4653f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78aebc5-fb70-4473-b691-f77d87ce6ab7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd6a84fc-b70b-46f0-b336-b57dd999b0e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b92f7094-0fe7-473e-b15a-13a67240b7b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb23eea4-f4ab-4524-86ab-c4a17060515a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5e18597-3b2e-4ea2-a198-6188ebb0b183"
                    }
                  }
                ]
              },
              {
                "id": "a694eada-77d3-413f-9878-b73d4d9eeda6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b12ef19f-2eab-4802-96d6-55a1a7ebdb25",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c127ede4-2e4b-49b4-bac7-0176c944d2d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "352fc8a3-891e-499c-8395-6522f9d89082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da42770d-7e7b-44c1-b19d-14972ce83535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "058c545c-4e5a-448b-b958-fc29409b951d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4332e398-1071-4d1e-8157-401ec029eee4",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94e5fb5-dd60-45e2-9259-e3a97858782f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6a129ffa-96f1-40e1-b74c-c55884b8323d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80ef10b-64da-47d1-894b-e5ea43bfa001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84b20482-cf04-44d8-bc1b-103dc94a130f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d966381-c967-4aa9-b758-005cf090f198",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f76ccd92-87f4-4ea5-ae1c-99048736da32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f67025ef-6c63-457d-bbfc-426509b5038b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f3ec239-f2fd-4439-8199-1c6183a168a8"
                    }
                  }
                ]
              },
              {
                "id": "f76d5144-d46d-41d9-9685-e81da7060544",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e62070e5-45aa-4aa2-bdfa-e018f4913dbb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2dfca1-094c-41f6-9a5f-a271ed7de598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "20c9dcf7-a4a5-4aeb-bd45-353e2cd5b86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c2f0b6-530c-4f61-aaaa-55d15fad7fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebbff73d-3b64-44ee-8529-43c1088462c7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bc649384-fab8-4efd-8755-3270a144b44f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea778f1d-20bb-4f39-9bef-5ab2c0637057",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "934fa7ef-9d89-4381-afdb-2271e1488fb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3aeafffd-ddc2-40cb-bddc-84044aecde8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94a6690a-61a7-4927-931f-6266080107af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "841a97d4-e8e5-426f-bb7f-aa76ff2333b6"
                    }
                  }
                ]
              },
              {
                "id": "98b2b264-e58c-4162-90ac-fae0a74d6793",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d9293f5-84a2-4667-8167-769473d961b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2462a1f5-cc23-4dd6-94cc-1e7f1bf44b60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b51aaa06-d3a7-449a-afa5-7f964171278d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfa9a9f0-65ed-45fb-8b04-b4d5494da8aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35d5f719-ca38-42a7-be57-3d03b5e1b83f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9ad15cad-d95f-4c3c-8e9c-8a48768b959a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3882638d-dc13-45ab-bff9-e0e72d1d53c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "def9250e-18d3-4626-b65f-78e418accba5"
            }
          }
        ]
      },
      {
        "id": "5ba7ee08-ddaa-4d42-be23-81e8eca2dbd5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "78a0f021-764f-4073-9ca4-a3479ed23ff7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14952d57-72fe-4ee9-883b-a126f7912925",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33407440-8455-49ea-9339-6db56db4338a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4ea9c2-383f-4cbb-a72b-f5ad178091d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3f188a91-4e29-4232-83ea-50de05fe465b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f7dfc7-d079-45e6-af95-c86840087ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd7ffaab-dcad-4aaf-b142-c5c1d4400883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f63559-31ad-40e7-b7c2-617452d5d8e3",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caac4a31-ac63-4a0e-9f97-f3763127be6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ed14f68f-6c75-4849-8ee5-2e183c294dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074fe89b-54c2-4394-813c-9f075903e49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65fbf07b-2a84-4b6e-8c1b-5ab06ca92ba0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfe06e3d-4edd-4ca5-9b3d-47cd86b58b44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f79a08c6-52d4-4403-8000-5906faaf5b07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d6c70de-092b-4b0d-877d-de8fec72d4ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e179de1-3a20-4800-9c7d-564318d616e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cc68162-4ef2-4f3c-9247-a42c5e28e3d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0a36d6c5-0936-472f-ad94-8b4b38c87a82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b1365f7-eeb8-41c3-974a-5adb97854bec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34e0fbf7-a7db-44ce-8ae1-e9818fba1296"
            }
          }
        ]
      },
      {
        "id": "0ccf6ac2-f567-402f-bcaf-2573f2a64a9a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e90ad3e2-34a6-4d7d-83e6-63b422da060d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6458ebdf-bb0f-4045-879a-de781f10a337",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c8b8cd3-2dd5-4466-94ca-dc1bdbf5c3a9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3808b6-1162-4946-8a9c-60b088b505cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4372341-586b-4c97-8d98-41ea8e93b802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66264188-4407-4c1d-b9c3-3297a8bf68ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c792ba91-088a-4c39-a77f-04080c051330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff94f8e-9e3a-47d7-b443-babb9e91ad47",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7a1965-2227-49dc-989b-e822c0e01f4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f8716377-0e80-4518-b3b1-589249451e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d0b6a1-9073-4664-ad8c-20315f86d520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8cb9e2c-21bd-416f-b13c-42d5450d5f10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "636376ec-5f11-4506-8e8b-9fe8ce477ded",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8aaf7f0c-8ace-44dd-af4e-515425283999"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbaccab5-62f1-4927-ada6-cc22c60ad2b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e8afc6c-db0e-4d1d-a993-08e9ecc99f1b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a82ec8ed-d5d0-46e1-88a4-62a579463bb5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2a16e525-d4e9-429d-990c-c8e9b3947642"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c86a453d-713d-453d-80dc-94153113072f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e1479de-5734-445d-8932-e2d8cc06e671"
            }
          }
        ]
      },
      {
        "id": "7eeaad28-5adb-4691-9a20-5a54d76e776c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a1dc30ed-05bb-457a-be8f-b98c97f3dbfe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3439f71-fc17-4ec7-a00d-a3508718da6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7eca0e79-23e9-4918-bf78-0871f4de5c1f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a19687-77fe-4c52-9d15-7a99884362e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8720790-1fc4-4190-be50-c7cfeb53b0f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5723c4f-a46d-4f11-9689-fe1442bce5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95416890-87af-499e-a034-d3b37033f66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955245cf-2c5a-42cd-a59b-08dc2fd21acc",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c65420b-762d-45dd-8a8b-8db4ab657e72",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d6faf5-b6da-46d9-bbbb-2d89a3605920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1650972-232c-4b3d-9ec4-a7e01b426bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f0a72f7-ddf1-4a77-9557-270fa42475bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9452c79a-053a-4deb-b087-d5ed5c084827",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f45db19-2b9d-442d-b8e1-e9bb63bd8d85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65fca327-0a42-48af-80d1-cba03dd594f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f58e9c54-b000-4ea1-8af5-6e256d1e7348"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ee93128-0b83-44fe-9e47-50a16cff6040",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "290012d6-a713-44fa-9fe0-598816503d71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b79e6c42-edf4-4c02-9af7-eeacbefc1785",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b362df3-4b31-4a46-8ffc-867425fff15a"
            }
          }
        ]
      },
      {
        "id": "4f5681d3-3a8b-462e-b121-4228134de8e7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7f219e6-50ee-4b2a-b4dd-018e44ddc2fe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9885b201-1e03-43cc-bd6c-e62a34530e35",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6ea49d90-7ee2-4d7a-aa8f-c394c6c753c1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88fae8f5-1717-4e61-a070-9b1337cea9dc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82976293-a48b-4800-89cf-0f4d28d947f7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 56.36153846153847,
      "responseMin": 21,
      "responseMax": 325,
      "responseSd": 33.33085977015524,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679099919062,
      "completed": 1679099944075
    },
    "executions": [
      {
        "id": "ecfb7e22-c640-4c9d-8469-df4e37050c26",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e3600c08-cff6-4756-90c8-341f5a98efbb",
          "httpRequestId": "1379d74c-c3e4-46ff-bffa-97220e3f7136"
        },
        "item": {
          "id": "ecfb7e22-c640-4c9d-8469-df4e37050c26",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "24232e23-67fc-4426-82e5-81419bbbaa6e",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 0
        }
      },
      {
        "id": "f6dbe115-8ad1-4f10-9a5b-4dbf7d45e22a",
        "cursor": {
          "ref": "6ea4dd00-bed8-4a4f-b850-43e0c9e7f754",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "45a9f4fa-8953-45e4-bd78-10fe16922391"
        },
        "item": {
          "id": "f6dbe115-8ad1-4f10-9a5b-4dbf7d45e22a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "98005257-81d2-43ea-b6ef-dad3923cadbd",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "99cae28e-e229-4241-b237-75e8f09a4436",
        "cursor": {
          "ref": "1f2957df-2774-4410-91f5-35113171ac28",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "509e134f-ef73-4d46-9cd2-cb09fc04533a"
        },
        "item": {
          "id": "99cae28e-e229-4241-b237-75e8f09a4436",
          "name": "did_json"
        },
        "response": {
          "id": "74aac904-6959-43c0-94e4-abe53663eb77",
          "status": "OK",
          "code": 200,
          "responseTime": 168,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c899c72-56b1-4032-b8d6-34f782b4f25d",
        "cursor": {
          "ref": "a6fde78f-4ce2-4f6a-81b1-d204c239ec70",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d4bf5d5f-6c28-462a-b878-823e2973b865"
        },
        "item": {
          "id": "5c899c72-56b1-4032-b8d6-34f782b4f25d",
          "name": "did:invalid"
        },
        "response": {
          "id": "38aa7ffe-39e1-4580-83f8-a589fbe78a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c899c72-56b1-4032-b8d6-34f782b4f25d",
        "cursor": {
          "ref": "a6fde78f-4ce2-4f6a-81b1-d204c239ec70",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d4bf5d5f-6c28-462a-b878-823e2973b865"
        },
        "item": {
          "id": "5c899c72-56b1-4032-b8d6-34f782b4f25d",
          "name": "did:invalid"
        },
        "response": {
          "id": "38aa7ffe-39e1-4580-83f8-a589fbe78a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadbf29e-1d9f-4ce8-81e3-b3fb631e5943",
        "cursor": {
          "ref": "765f042d-6113-48ae-8cef-556771da3dcc",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b1acbaeb-2c60-41cf-861e-20901e4c3b56"
        },
        "item": {
          "id": "aadbf29e-1d9f-4ce8-81e3-b3fb631e5943",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "14944628-e944-44f8-aa38-023ebed34e64",
          "status": "Not Found",
          "code": 404,
          "responseTime": 99,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88750300-62c8-498e-970c-60a48003eb03",
        "cursor": {
          "ref": "237043f0-98d7-414c-8ad4-5c9abbba80bc",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "61425ee0-2ab3-4a57-a489-291a64879fd1"
        },
        "item": {
          "id": "88750300-62c8-498e-970c-60a48003eb03",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a68c7794-85d0-4eb7-a3b6-5eca3e2ea106",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329c481c-175d-4534-8981-612d6c0dfcd4",
        "cursor": {
          "ref": "2ae12e4c-b5b5-4ccb-ab55-800d01001d7f",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2a226f95-c9c0-4af5-8835-782604054e71"
        },
        "item": {
          "id": "329c481c-175d-4534-8981-612d6c0dfcd4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "28b894b2-7fc5-4c0a-b19c-0e65bff6c763",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f814fc4-155a-462e-8a35-f7d09558d861",
        "cursor": {
          "ref": "f9090a6c-2434-4e0d-ad2a-4c2ab0f7fd26",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "72cf4cc8-4894-4e5b-9c04-2ffa4198e4a5"
        },
        "item": {
          "id": "3f814fc4-155a-462e-8a35-f7d09558d861",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "912a37f5-e094-4d40-84f1-8a52e74407a4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f814fc4-155a-462e-8a35-f7d09558d861",
        "cursor": {
          "ref": "f9090a6c-2434-4e0d-ad2a-4c2ab0f7fd26",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "72cf4cc8-4894-4e5b-9c04-2ffa4198e4a5"
        },
        "item": {
          "id": "3f814fc4-155a-462e-8a35-f7d09558d861",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "912a37f5-e094-4d40-84f1-8a52e74407a4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3add76c-3ed4-458b-b9a3-87f979e53ca8",
        "cursor": {
          "ref": "f1d78ecc-edfa-4abe-9259-e2ed237680d9",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2d7bd6af-a400-4189-8971-fa1ce1fd5efd"
        },
        "item": {
          "id": "f3add76c-3ed4-458b-b9a3-87f979e53ca8",
          "name": "identifiers"
        },
        "response": {
          "id": "fb08455d-8bbf-4ebe-bc24-beca7bbdc5ae",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a960adf-a28a-47f3-bbbb-1eb2f6f8f163",
        "cursor": {
          "ref": "cec085e0-06b5-4fb5-87bb-225f475972b9",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "144d0d2b-00c5-4d12-9443-e2d8ef41d9b7"
        },
        "item": {
          "id": "1a960adf-a28a-47f3-bbbb-1eb2f6f8f163",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d5fa2bf6-946d-4a5b-b63f-5ccdf2a5269b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a960adf-a28a-47f3-bbbb-1eb2f6f8f163",
        "cursor": {
          "ref": "cec085e0-06b5-4fb5-87bb-225f475972b9",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "144d0d2b-00c5-4d12-9443-e2d8ef41d9b7"
        },
        "item": {
          "id": "1a960adf-a28a-47f3-bbbb-1eb2f6f8f163",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d5fa2bf6-946d-4a5b-b63f-5ccdf2a5269b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55acd57-e93a-49da-be51-75a5345de5fa",
        "cursor": {
          "ref": "34fc36ae-dcc4-42f2-879c-9f480300dabf",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "73d3b052-04e1-4f19-a81b-370ec507438c"
        },
        "item": {
          "id": "a55acd57-e93a-49da-be51-75a5345de5fa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4c6dfdad-2966-4b47-be85-a58d7470acf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ec81a6-4247-4e43-9c02-96af80ca6e9f",
        "cursor": {
          "ref": "9a650aef-0d0d-4645-ac41-fb6c6c48ae77",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ee9949d2-c899-4024-812d-65c11f7f29ad"
        },
        "item": {
          "id": "86ec81a6-4247-4e43-9c02-96af80ca6e9f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5b52ac00-d355-4c88-90cd-337512b09add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7709bf46-5d37-4340-83c5-8b7bedb7567f",
        "cursor": {
          "ref": "81be217c-355e-42ec-a25b-f54d9c7af92e",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "00384ee1-d4fa-49e0-8306-5f3e93a6e3f5"
        },
        "item": {
          "id": "7709bf46-5d37-4340-83c5-8b7bedb7567f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "683a95a5-f9ad-4f5a-b551-5ecee0a9bf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee05f393-985c-47cb-914b-172568f4b36e",
        "cursor": {
          "ref": "ef6e40bc-4082-499b-b3dc-7f14ae5cd823",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8881605f-c985-4a0c-80be-6e3b102b58c8"
        },
        "item": {
          "id": "ee05f393-985c-47cb-914b-172568f4b36e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "76eb5381-00f5-4ba7-ac7a-83db6c0939c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d2fb57-c442-49e0-825f-982139a25938",
        "cursor": {
          "ref": "7915736c-e69e-4970-8ab6-d7dbac111483",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dc067724-3546-4f47-9057-5296ac396071"
        },
        "item": {
          "id": "86d2fb57-c442-49e0-825f-982139a25938",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9acda245-b299-464c-8803-ac43449725cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d777d4-9682-4594-a507-ffa257c7adc3",
        "cursor": {
          "ref": "44cdc7a4-f6dc-4a2a-8c58-af8e4b41e006",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e52872fe-9d2d-444e-984e-ed7eefb91585"
        },
        "item": {
          "id": "26d777d4-9682-4594-a507-ffa257c7adc3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "25b625b2-9989-4422-a8dd-8ee4f5c8f639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff64fdb-978e-4afa-999e-2ca69c89c83b",
        "cursor": {
          "ref": "a3da95c2-f535-4c1d-a6ee-b254c72c3f5a",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "76cf2460-6c6d-4545-adf9-c367854bb8a6"
        },
        "item": {
          "id": "4ff64fdb-978e-4afa-999e-2ca69c89c83b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9166baca-d90d-4e94-b7b8-88a34fb1af1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b1c0f3-fdaa-40eb-ac7e-54550f118221",
        "cursor": {
          "ref": "e3c5b9ec-4cbb-42ab-8c0f-341d11a5366a",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9382d2f5-e4de-4539-9e23-29278789a545"
        },
        "item": {
          "id": "66b1c0f3-fdaa-40eb-ac7e-54550f118221",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7e0a3ec7-e749-4d46-a0d7-a2b180549280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cb9ad8-1dff-4504-b499-85218af7348d",
        "cursor": {
          "ref": "7e83b055-3554-43f9-a898-085d349032e2",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2de7967e-209a-45fd-8883-b9da8921245c"
        },
        "item": {
          "id": "91cb9ad8-1dff-4504-b499-85218af7348d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "08be95e0-249b-424f-bdd6-301ca76dbbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27230166-ec1f-433f-a899-ed3a820ccdb8",
        "cursor": {
          "ref": "04f2536c-9573-44aa-8158-957b0ae8ab30",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0541365b-5822-46ec-9254-f9fe5b70da27"
        },
        "item": {
          "id": "27230166-ec1f-433f-a899-ed3a820ccdb8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ed6b2672-a19f-4176-8c2d-dbc8df971af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a3ce95-77e4-462b-afaf-230ee94a0e43",
        "cursor": {
          "ref": "c25871f9-7743-459c-8047-9a72bf27e97a",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d9c38031-ee62-483e-9ebb-f6d361477b3c"
        },
        "item": {
          "id": "80a3ce95-77e4-462b-afaf-230ee94a0e43",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3f933db8-3532-4276-8086-ae0a1bdf5d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbd15a1-c73f-4fec-86b6-632cc115d7ba",
        "cursor": {
          "ref": "128baec4-d9d0-4e9a-9ec8-3d4d1bc92e3f",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a67a53fd-ad34-4435-ac3c-b4760e5da442"
        },
        "item": {
          "id": "dcbd15a1-c73f-4fec-86b6-632cc115d7ba",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "63786a44-aa39-4a5e-b21d-2417c68b4954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d7dda2-b7d6-4d7c-a679-c76d07f54c57",
        "cursor": {
          "ref": "0150b511-d4ac-4368-aaaf-3db7107c9cbe",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ec7287d4-1319-4f71-9f6c-999a62c382c4"
        },
        "item": {
          "id": "64d7dda2-b7d6-4d7c-a679-c76d07f54c57",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4fb0fdbf-a1c1-4ca5-8323-f249d2c02cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3741c28b-b7d2-4fb6-9e9c-645e3bd9e6c9",
        "cursor": {
          "ref": "4418c8c9-d678-4790-ab0a-5c6a6da1b0d5",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7b60f424-a0cb-422b-8cd0-ac6cf5a57c3d"
        },
        "item": {
          "id": "3741c28b-b7d2-4fb6-9e9c-645e3bd9e6c9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "eccde463-5c9e-44c6-83d3-1c68006eb6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1704ea46-0a5d-44e2-b404-3b4eee0708e6",
        "cursor": {
          "ref": "98154d23-99c2-4160-8763-a23af7c5fb72",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2d4fa0da-0ef6-4b3d-beed-b7ac412c8795"
        },
        "item": {
          "id": "1704ea46-0a5d-44e2-b404-3b4eee0708e6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ff559c84-7c81-4e95-8cee-7e28dd88d441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66810fa4-f384-4038-8183-79d042c37e54",
        "cursor": {
          "ref": "d782d61f-4631-42af-86ba-73ff888cf098",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bf5e0abb-ea3e-42bb-8193-504b72643e3b"
        },
        "item": {
          "id": "66810fa4-f384-4038-8183-79d042c37e54",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1690ba09-d13e-457b-b9db-36e68401d9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56c9ef6-3984-438a-8563-9c4ef9ddb0fc",
        "cursor": {
          "ref": "7d3d3b2c-b587-4a37-806e-afe7aa9fe5a9",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "32bb0e4d-306c-4ce3-97a0-ba96960c03fd"
        },
        "item": {
          "id": "d56c9ef6-3984-438a-8563-9c4ef9ddb0fc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2235a8f4-6f36-488b-a7c3-3dc424a13b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2757e9f9-e6b8-4060-a531-580060fe070a",
        "cursor": {
          "ref": "e106123b-87b9-45ab-9481-a2de2cd546e8",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6cbbb76a-1dc3-4686-9b19-1a2d9d4d013f"
        },
        "item": {
          "id": "2757e9f9-e6b8-4060-a531-580060fe070a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1abb7562-9748-4e0d-8fb8-ae5ef6528964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d251c52-605a-4a5a-b01a-c930d5003d36",
        "cursor": {
          "ref": "a5703d5f-66bd-49ac-86b8-8406cfa5fe98",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bac6590f-a00a-40d2-b59d-fce8f4936ec5"
        },
        "item": {
          "id": "1d251c52-605a-4a5a-b01a-c930d5003d36",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b5913539-ade4-4f36-af3a-2065d0696ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71521825-0a5e-4228-a346-ef3037d208ea",
        "cursor": {
          "ref": "c90c68cc-f347-4948-8898-6e6f35b082e2",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "909e1d6f-743a-4714-bc8d-4e1fbc78a88f"
        },
        "item": {
          "id": "71521825-0a5e-4228-a346-ef3037d208ea",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1f770c95-bc67-47da-8c2b-f932fca75032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4347d79-ca5e-42d8-9a8c-27d6bf62e97e",
        "cursor": {
          "ref": "5aa9d76c-5f8c-42da-ab42-535ecfc65019",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d92902e0-6d6d-48d6-88ff-a781e1c9c9c9"
        },
        "item": {
          "id": "d4347d79-ca5e-42d8-9a8c-27d6bf62e97e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b1b4425b-1503-436a-8c38-d6500a3e5fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6028c663-ef7b-4c92-8e65-4782db617314",
        "cursor": {
          "ref": "62149233-176a-407d-b1ce-d7260ed3fdba",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6ac18f2a-b987-4096-9b3a-fe9cf3029238"
        },
        "item": {
          "id": "6028c663-ef7b-4c92-8e65-4782db617314",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "93156ec0-8b0e-4f23-95e3-127079549389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b7f049-5963-44d1-be06-cbae7a7826b4",
        "cursor": {
          "ref": "b6b6145d-e50d-4d03-904c-6533e3b6726f",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bad3ca3b-b87f-45d9-818f-3ffc0847111c"
        },
        "item": {
          "id": "c9b7f049-5963-44d1-be06-cbae7a7826b4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "02f25215-4dfb-4a14-b99f-39cfdca569c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ac7000-24ff-485d-8441-f570c08f219a",
        "cursor": {
          "ref": "27917678-da05-4b1a-934d-bea4ed9ceb2f",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fef7738d-e04c-4bc1-98d7-9d91eb9517e3"
        },
        "item": {
          "id": "54ac7000-24ff-485d-8441-f570c08f219a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5f00f1f0-bb01-476a-be45-b8effe41e2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5785534-bfa7-4334-901c-258240b35f96",
        "cursor": {
          "ref": "a881a043-8890-4a55-af93-7fd8cb1de27e",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d9649e86-ee9a-421b-a1eb-ff41c4f9b172"
        },
        "item": {
          "id": "a5785534-bfa7-4334-901c-258240b35f96",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "88e4883b-6337-43d5-9a70-af10e4b75400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379ff9a2-9117-44d6-a028-b39d7e8e5a8b",
        "cursor": {
          "ref": "0234e87f-e8b4-48a9-ac3e-d0f6aea5b167",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f0ee25b6-c953-4ce6-b170-68834a6d5054"
        },
        "item": {
          "id": "379ff9a2-9117-44d6-a028-b39d7e8e5a8b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "100765b1-433f-4551-81e2-cb6e9bb2a5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd60acd2-2b05-4a01-8e6c-7fc04c7dfbd2",
        "cursor": {
          "ref": "0c0780f0-de19-4062-8d1e-8fe4d273df3d",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f146687c-37e6-45c3-ac7e-5c8de01f1886"
        },
        "item": {
          "id": "dd60acd2-2b05-4a01-8e6c-7fc04c7dfbd2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b41e4609-0462-47b0-bbac-4b97b6af7a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1414dbdf-fc54-4c30-8371-e11692a36934",
        "cursor": {
          "ref": "7322fbe6-66ac-436d-8fbe-b2b7bac68a29",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "50ae3eec-2eff-49c6-b4b9-71860d99b4d0"
        },
        "item": {
          "id": "1414dbdf-fc54-4c30-8371-e11692a36934",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0f783728-8df3-4384-855d-30a370958c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee11deed-fb27-4846-9e70-b5db294006e0",
        "cursor": {
          "ref": "62f99494-00cc-42d5-b6ce-b3440e7a5c06",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6dee0d2c-fce0-49fd-afb1-f98b694e2641"
        },
        "item": {
          "id": "ee11deed-fb27-4846-9e70-b5db294006e0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9e264ff1-7979-46a0-ae1f-adc5e7c229c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a243dace-6c19-40c5-be45-4be224a4660e",
        "cursor": {
          "ref": "cda1696b-50f9-4e6d-b82a-cd01a022c5cc",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1f29b01d-8ae8-4fa0-af74-123f2e6fdb58"
        },
        "item": {
          "id": "a243dace-6c19-40c5-be45-4be224a4660e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b32bd242-99b0-415e-931e-d418a275a90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a1b38e-763f-4ebe-8708-fe59918af455",
        "cursor": {
          "ref": "43afaa7a-a7d9-4591-abd0-6c4cf0324639",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bf71f6f1-f02a-4ccc-9133-5a4f5c82ed33"
        },
        "item": {
          "id": "69a1b38e-763f-4ebe-8708-fe59918af455",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8714b468-dc14-4f3d-9dda-46dd95f06fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b295794e-19e4-45a0-b12d-4732d359f0bc",
        "cursor": {
          "ref": "9f8c10ba-611c-4449-addd-7c4bff60e4fc",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "923b7d7f-43aa-4d10-90c7-b2ab8e29f7da"
        },
        "item": {
          "id": "b295794e-19e4-45a0-b12d-4732d359f0bc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "31c8556a-da23-4061-8c45-21aaaa4c4c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1840c86-dfe7-4eb6-8f91-2759c220d882",
        "cursor": {
          "ref": "483ed684-16bc-43c5-a43f-ea82f1e050da",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a1d0c1cd-ea13-41f3-839b-49044ef02d20"
        },
        "item": {
          "id": "e1840c86-dfe7-4eb6-8f91-2759c220d882",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a8a02883-611a-4521-963a-a2c34019a1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14114cd0-49c8-4667-95dc-66e4e0cde297",
        "cursor": {
          "ref": "46015db4-ccb7-4edb-8a1a-9a245393885d",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "67c5ddc8-f17f-406c-a21c-2561182f3302"
        },
        "item": {
          "id": "14114cd0-49c8-4667-95dc-66e4e0cde297",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d10cb1bc-c4bc-4ab7-9fde-3f018ccad2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e341a6e1-486e-4e83-ba1f-437881e203a6",
        "cursor": {
          "ref": "3592cbfb-276d-48c4-8d16-733cee1faf31",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dd48da36-c45f-4c35-9f5a-0d4f5cf3e010"
        },
        "item": {
          "id": "e341a6e1-486e-4e83-ba1f-437881e203a6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b5d5d358-80c7-4795-906d-1d050f617fda",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 57,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46230504-3190-492b-8cc1-ad4ec0931ab3",
        "cursor": {
          "ref": "700dacde-d36f-4e3f-b7c7-983687a5d285",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7604aa0b-23d0-4c79-b261-caee920e69de"
        },
        "item": {
          "id": "46230504-3190-492b-8cc1-ad4ec0931ab3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bc61b6ab-9dc8-414f-b667-6920cc934a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eba6048-1f90-45b8-8c0a-cec1e26899ef",
        "cursor": {
          "ref": "09bad5f1-5854-4454-8bf1-e7a99dccc756",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "97f5a090-9497-4664-9bfe-8d3676192fc6"
        },
        "item": {
          "id": "8eba6048-1f90-45b8-8c0a-cec1e26899ef",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fdcc3bdb-9f81-44a2-b66c-b5338fa63529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fe7632-f5a1-4b39-8a57-68d32a88af8c",
        "cursor": {
          "ref": "7a027c2b-e1d4-4893-93ed-7068ace5059c",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f5bffb14-cc34-49e6-96d0-9dc534f55fa4"
        },
        "item": {
          "id": "85fe7632-f5a1-4b39-8a57-68d32a88af8c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "54aad968-e0c0-4749-b641-82be59e16b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cbe591-533d-41f0-98da-95d0561c81a9",
        "cursor": {
          "ref": "7bfc73ec-2e5c-4d42-a7e0-236a2d56627a",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "86370f81-9a3d-4dfa-b585-d32a8df06a00"
        },
        "item": {
          "id": "00cbe591-533d-41f0-98da-95d0561c81a9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "075b287b-4634-486d-83c3-a298ed30025a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432ae08a-93cd-48ef-ac15-3d8cbf918436",
        "cursor": {
          "ref": "0fe548b2-c8a8-43be-8c59-79f88f3b66b0",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "938afd06-3dcf-4ee0-aeef-dda549593be4"
        },
        "item": {
          "id": "432ae08a-93cd-48ef-ac15-3d8cbf918436",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f43e2af6-0f1a-4a9e-8fda-1c84bcfe20b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df894d9-0c21-46c8-aa91-041fe06ff1d2",
        "cursor": {
          "ref": "3b3b03b9-56ea-462e-a7e7-5c91df04d95f",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5fc15607-852a-40fc-88ac-25ce8bbd351f"
        },
        "item": {
          "id": "4df894d9-0c21-46c8-aa91-041fe06ff1d2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3f2efe2b-1d34-4307-a693-c39a03ff84fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf90c44-1abb-48fe-9f68-c7d7b0dfa253",
        "cursor": {
          "ref": "504cf93a-b727-4857-841e-d5a6837ef54a",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "db11c30d-3ac3-4dd6-86c4-c83ee730ef1f"
        },
        "item": {
          "id": "fcf90c44-1abb-48fe-9f68-c7d7b0dfa253",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "24a65c18-84b4-4a3a-be12-defb78811ba2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 57,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f8a051-1a77-451c-8afb-b2120a1e28cd",
        "cursor": {
          "ref": "c4d1bb75-ce9b-4992-ae85-e8993c23dd3c",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "52a62de5-ad0e-484e-92db-88745e0e5241"
        },
        "item": {
          "id": "c1f8a051-1a77-451c-8afb-b2120a1e28cd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "072c7f23-0b60-4828-8580-f07fc30bdf79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011b9d48-53f2-496c-bcc8-9e62e5a0cb04",
        "cursor": {
          "ref": "e4931a72-5497-439f-b1ed-56673c8e16e6",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "446f7d54-facc-484f-9022-4d77c7080911"
        },
        "item": {
          "id": "011b9d48-53f2-496c-bcc8-9e62e5a0cb04",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b3f17a95-05b8-40ff-abdb-b374a1d5667d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b82ce2a-7a00-4d07-9aac-c33b8ef84195",
        "cursor": {
          "ref": "13f3d076-509e-46c8-ac6c-683fdce17aa2",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "014933bc-e372-4edc-b7f5-b478205c80b2"
        },
        "item": {
          "id": "9b82ce2a-7a00-4d07-9aac-c33b8ef84195",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "50c00ec5-a439-4774-9799-022da812c559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4f11d8-b0e2-42d9-9466-0556ec12209b",
        "cursor": {
          "ref": "ebfe03b0-7da8-482a-a5f0-ab951289d207",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "67089a9b-12d1-4864-a5cf-e4583ad59785"
        },
        "item": {
          "id": "6f4f11d8-b0e2-42d9-9466-0556ec12209b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ad255dd0-e657-4b8d-9d07-87d8f999b973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb159724-0d57-406c-845a-26e8a67d2d54",
        "cursor": {
          "ref": "528b464c-3bd4-4303-b016-9aab864ef5c9",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b1f2f197-f796-404d-a3f7-e349458f76cb"
        },
        "item": {
          "id": "cb159724-0d57-406c-845a-26e8a67d2d54",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "20a024d5-46ad-4ceb-824b-e8eafa88271f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a59c8e-1980-4dc3-b3a2-6bdda9dd7e9e",
        "cursor": {
          "ref": "715b8cfc-e1b1-4cbc-85ad-4d8ac1694d3e",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b90e1294-2be6-4087-a557-06950a1f153c"
        },
        "item": {
          "id": "34a59c8e-1980-4dc3-b3a2-6bdda9dd7e9e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d6071694-696b-47f9-ba87-51aa87296da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8b29ae-259e-4bf4-86c3-9067143c7ce9",
        "cursor": {
          "ref": "3cfa2d24-acc9-4d60-ac40-320a4ddbc95c",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "14480d50-ab14-48d8-9c09-8643483dfea3"
        },
        "item": {
          "id": "7a8b29ae-259e-4bf4-86c3-9067143c7ce9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "351ac395-ed71-4bdc-bc57-e4d3d2888eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f46bd4-bdd1-49fe-ab67-51bf1825ab17",
        "cursor": {
          "ref": "e28ecaa4-2523-4a66-9dfa-d0943fdc6638",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3afb4fba-fc93-4b57-b160-7c1175d5ac46"
        },
        "item": {
          "id": "a6f46bd4-bdd1-49fe-ab67-51bf1825ab17",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "40cd5603-90d7-42af-9abf-39c506ca61ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26bc3d6-c98a-4e4a-b605-4041031992d4",
        "cursor": {
          "ref": "25445235-40bf-402f-aafd-f0508779b510",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "aaebeee4-fea6-4336-9448-552d437ad9bf"
        },
        "item": {
          "id": "b26bc3d6-c98a-4e4a-b605-4041031992d4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bf9496cf-4889-49a8-90af-f270440c9420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327f67cf-8572-4b88-ac57-b732cea7fa02",
        "cursor": {
          "ref": "a11571a1-066a-4708-baad-119d418a243c",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b6e5ddfe-59cf-4c6d-ae84-aa660b9cb1e7"
        },
        "item": {
          "id": "327f67cf-8572-4b88-ac57-b732cea7fa02",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6df1bb85-6976-4567-a4a1-aec86323b05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726c322a-0f15-4da0-88f3-74e1883ccd05",
        "cursor": {
          "ref": "543887c7-b9d4-40d9-8fb8-3ed9f1b1fdb9",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f8eedad1-226d-4edd-a7b7-ab4a8343840b"
        },
        "item": {
          "id": "726c322a-0f15-4da0-88f3-74e1883ccd05",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1aff75f9-91ae-4470-852a-38762a818b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2473de2a-7ca2-4c7e-a008-908edbad9ce5",
        "cursor": {
          "ref": "7d618c39-b852-468f-bbf8-78780bd1f986",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "35553b7b-fbe8-44d1-a4d5-d413d34f6f54"
        },
        "item": {
          "id": "2473de2a-7ca2-4c7e-a008-908edbad9ce5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dadd6545-b772-45ca-90ed-e6cec7d49d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5de28a-39d6-49b8-9e93-c0b5a1517fdf",
        "cursor": {
          "ref": "1f586b2a-475c-4e65-a5ad-907ecbfd3019",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7d90a68a-63b5-4ac8-83e1-28821ccbb519"
        },
        "item": {
          "id": "bb5de28a-39d6-49b8-9e93-c0b5a1517fdf",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "51307e54-6f39-4ae6-aabd-f7d60fe23554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510ab921-7c04-4114-accf-41b2dedf6a9a",
        "cursor": {
          "ref": "1abc5b23-06ea-43ff-b354-82a678110a17",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d3a0e9e4-d568-470a-9c35-16fd14213153"
        },
        "item": {
          "id": "510ab921-7c04-4114-accf-41b2dedf6a9a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ed32a422-c65e-47ae-a8cd-ffa4b30b398f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e97feb-f1f2-4aea-b36d-efa8cf3d5ac4",
        "cursor": {
          "ref": "36edd575-e32d-457e-9211-bfbff4db00b2",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f555ca4c-26b0-4b36-a12c-66d311d531df"
        },
        "item": {
          "id": "39e97feb-f1f2-4aea-b36d-efa8cf3d5ac4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6b8322d9-4de8-4e8b-9e58-07af9010823e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9037b59-b734-456c-90d2-22f482a4baa0",
        "cursor": {
          "ref": "5ded8b85-f631-4a0c-941a-e5aba15ebd88",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a5cad275-260a-4724-ab58-496fbe4f6d94"
        },
        "item": {
          "id": "a9037b59-b734-456c-90d2-22f482a4baa0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7cbce595-1d55-49b3-9327-51faf5417e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036b3877-e3d2-41bb-82b6-7a347c1c42c6",
        "cursor": {
          "ref": "34f26ead-056e-4b90-b357-6304b3698702",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8f544b7a-af33-4fc1-83a3-93790f49345d"
        },
        "item": {
          "id": "036b3877-e3d2-41bb-82b6-7a347c1c42c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "38097952-f56d-420b-a6c4-0e651f095b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcc26b4-121e-4beb-b7f6-18f9e5446792",
        "cursor": {
          "ref": "3784407e-81b5-4756-8234-a51a08c5d899",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "49793faa-f1fe-43dc-91c2-f462fa7953c2"
        },
        "item": {
          "id": "bfcc26b4-121e-4beb-b7f6-18f9e5446792",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "036c3611-679b-4a74-9546-79169ffd15e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949081df-68d1-4423-95a2-b58a4036ab8c",
        "cursor": {
          "ref": "7a1060be-4738-4179-ac16-5dd1a761a951",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "df6ae4f7-2931-4015-ba76-9435ad3ab687"
        },
        "item": {
          "id": "949081df-68d1-4423-95a2-b58a4036ab8c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9068c14f-e3ae-41b5-85d0-70eed94559cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8526d1a-5f36-4f92-8ec2-68fd2c319b88",
        "cursor": {
          "ref": "f3eb1016-95f9-42ae-a4c9-07b52c929bf1",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "eac4915a-4745-4767-a6df-7586ffa06307"
        },
        "item": {
          "id": "f8526d1a-5f36-4f92-8ec2-68fd2c319b88",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "99b68bfd-19b2-483e-b653-981a792aca16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679a3cc8-5a34-47f0-a17c-5d8af00e8448",
        "cursor": {
          "ref": "b0ec4016-094a-4b36-a981-71569e08675e",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6fab1fcb-41e5-4135-907d-8e15426d5343"
        },
        "item": {
          "id": "679a3cc8-5a34-47f0-a17c-5d8af00e8448",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "676f5127-b63a-49ea-919f-3e0729e5c123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9e818b-ac53-4c0b-acb8-215aa4cd430f",
        "cursor": {
          "ref": "def82aec-b901-4abf-bfb6-d5be19f66f9b",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "825a1b6e-b738-4d3c-9c56-9dda2954c82c"
        },
        "item": {
          "id": "2b9e818b-ac53-4c0b-acb8-215aa4cd430f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ec4f295a-c6f3-4511-8859-c233f31455ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc392259-63ec-4edc-9236-212dd71403e4",
        "cursor": {
          "ref": "1a304a09-1745-4573-b6af-8bfa75039343",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5d1e8757-3975-49fb-8698-e3f22c18cbfe"
        },
        "item": {
          "id": "bc392259-63ec-4edc-9236-212dd71403e4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7280b359-be01-4517-b7fd-2c06bb70249d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867c0955-1e60-45ca-a080-35e719633662",
        "cursor": {
          "ref": "d75715f1-2cc9-45da-a1f8-eabb2bcce761",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "79870736-3229-456b-9e02-324825e2ab85"
        },
        "item": {
          "id": "867c0955-1e60-45ca-a080-35e719633662",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d7e57148-6f70-4b4f-985a-8f9c1beb8b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6925dc-4931-49be-807e-bed4cf122eaa",
        "cursor": {
          "ref": "1a8b9f1a-3384-4ec5-8b0b-206a669cdc2d",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "418f505d-7035-4241-9945-c2914e3565e1"
        },
        "item": {
          "id": "6a6925dc-4931-49be-807e-bed4cf122eaa",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e9737fa6-4803-46d4-b193-ccf5943f8a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca4d7e4-2907-431d-a5c4-9c6cb3da20f0",
        "cursor": {
          "ref": "60f7d9b9-cafb-463a-9014-6539b056a440",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b6b2204f-43e2-4ed1-8c57-c73594abae5b"
        },
        "item": {
          "id": "7ca4d7e4-2907-431d-a5c4-9c6cb3da20f0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "61b30d5b-b628-459b-9c70-5d0e0e83fc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1540905d-8e3d-4763-a1b0-ab76c06e1f33",
        "cursor": {
          "ref": "f292a5fb-d7bf-4f6a-adbe-c5fcb875a24b",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "11385792-485c-442f-acf0-62fbeb94976b"
        },
        "item": {
          "id": "1540905d-8e3d-4763-a1b0-ab76c06e1f33",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "22cb5b0e-a4c1-4143-9cc5-ea7fd85168db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea8a3e6-7732-4c16-80c7-c5f3dba9af8e",
        "cursor": {
          "ref": "3944ea2c-d5e5-4f0c-aa3f-d298eca63792",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1f0b222d-6a11-4147-bc30-3a27067e9d9d"
        },
        "item": {
          "id": "9ea8a3e6-7732-4c16-80c7-c5f3dba9af8e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "34fcb81b-55a5-48c7-b367-eccc0eda808a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a23dc87-5fc1-4f6c-9b68-a2e46c64a2de",
        "cursor": {
          "ref": "f4b54be6-a6c6-49dd-8cf9-e0e2e18300e0",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "885b83e6-d687-449c-a04c-92aafcf4d471"
        },
        "item": {
          "id": "8a23dc87-5fc1-4f6c-9b68-a2e46c64a2de",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "280ca3e5-f505-45cd-ab52-789613227a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8249e54f-ed08-4dd9-9574-a08309b8b978",
        "cursor": {
          "ref": "17125acc-50b4-42a1-8c13-f5dae6e6aa8a",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "71f87745-9712-45ff-b420-8f391dfbb674"
        },
        "item": {
          "id": "8249e54f-ed08-4dd9-9574-a08309b8b978",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f9ad4829-6f02-454a-a1f2-15ecaf050ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f81a112-4464-419e-a1fd-7fd510e4e348",
        "cursor": {
          "ref": "3941493a-29bf-4cea-98c7-07d813137a44",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fa924f4f-16d9-41e4-a40c-4a213e78b0d3"
        },
        "item": {
          "id": "6f81a112-4464-419e-a1fd-7fd510e4e348",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8bd679af-32f4-4886-bb96-e9fb5f64ea03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feeb25dd-6afc-43cd-82d5-609346e258b0",
        "cursor": {
          "ref": "1e959a05-6d11-474e-9adc-6833e6d69ef0",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9ea194a3-44be-4954-b99c-d3bf1731ece2"
        },
        "item": {
          "id": "feeb25dd-6afc-43cd-82d5-609346e258b0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "15f09269-bee4-4360-aab7-5943b93bcf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2d5b51-72cf-4165-a5d0-9a2c264973b7",
        "cursor": {
          "ref": "1bb5d3fa-5b67-437f-83a0-18a2c58b156f",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "72107ba8-53f6-43b5-a92e-a08748cbdcdb"
        },
        "item": {
          "id": "3a2d5b51-72cf-4165-a5d0-9a2c264973b7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f497576a-2df4-4db7-9d6b-54909cd1b207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2779e80e-4506-4a84-b43c-01a93e9a939c",
        "cursor": {
          "ref": "ae889976-624b-48d8-969c-c08c2d148e93",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "961d57a3-9f3c-4b98-9046-e45068c29398"
        },
        "item": {
          "id": "2779e80e-4506-4a84-b43c-01a93e9a939c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7b3dada0-b66d-4daa-9f80-a1bd388f7724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b81c5b-fb25-4313-ae64-c31e927b3fc1",
        "cursor": {
          "ref": "34e552ae-cd7b-4572-8831-1fb12e48e8f6",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "46ae12f0-f155-47db-844c-6d712ff97f6b"
        },
        "item": {
          "id": "61b81c5b-fb25-4313-ae64-c31e927b3fc1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ed8b9676-3467-4d5e-b2bc-596f47c8cff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1d3be7-3ca1-4de8-8e69-60ea84d095d6",
        "cursor": {
          "ref": "bbabc28b-559e-4850-9de1-198173143a96",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "24215bc1-8e14-4ff8-a298-a2f6c6a98c98"
        },
        "item": {
          "id": "4d1d3be7-3ca1-4de8-8e69-60ea84d095d6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ea258d30-4301-4bbf-9ea5-d5287342d471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b01fd8a-779f-44be-b1cb-f4cfd9011c6b",
        "cursor": {
          "ref": "e9277597-449d-49ff-abcd-2743e3a383b8",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "33f3dfac-2add-406c-b756-659f8c34cb97"
        },
        "item": {
          "id": "3b01fd8a-779f-44be-b1cb-f4cfd9011c6b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3214a53c-0533-4567-a066-c273133ab018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6ff77a-2a3b-4788-a3b4-741d48bfcee1",
        "cursor": {
          "ref": "ecd6f7a8-b8c7-4190-9540-fd18ce4f73da",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3446c08d-d193-4169-b2e1-bfc01ad297fe"
        },
        "item": {
          "id": "ba6ff77a-2a3b-4788-a3b4-741d48bfcee1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1c6d2e8b-c248-43d4-accc-8aba75a1522d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdb3d35-7c03-45ba-8cdb-1c4fb584c67e",
        "cursor": {
          "ref": "9e83a810-8d64-4fb1-be02-0bf5980b2dd4",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6056c2a4-e645-4fd9-8591-078f04677374"
        },
        "item": {
          "id": "cfdb3d35-7c03-45ba-8cdb-1c4fb584c67e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9c0c127d-b9e8-4b32-bbbf-8265493e60dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df55968-93d4-4415-b993-830f3f8a9083",
        "cursor": {
          "ref": "879da472-5847-404b-8656-810e12866b45",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dc68cd81-cce3-4892-99b5-837c620fbdd9"
        },
        "item": {
          "id": "8df55968-93d4-4415-b993-830f3f8a9083",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bc21cce6-7ae0-41bf-8fa2-385329d34de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4628ecb2-307d-4678-ae7c-1cadfec0689e",
        "cursor": {
          "ref": "5a2a2296-665e-4654-8d39-61ea12b98f5b",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "48ec56ab-760c-403d-b4c2-0a16167881bc"
        },
        "item": {
          "id": "4628ecb2-307d-4678-ae7c-1cadfec0689e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "58b27ad9-ce25-4ab2-a22a-e293ae4a5dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346f129c-53bc-4e20-84a7-fef0b56c40c2",
        "cursor": {
          "ref": "db58ddfe-43d1-4787-963b-b41b342cad2e",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e1d07a90-121f-48f2-a760-188df5417588"
        },
        "item": {
          "id": "346f129c-53bc-4e20-84a7-fef0b56c40c2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b8369b61-36bc-4ee0-9cd3-f10eb9e1e31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71119c5c-dd94-4777-b242-e5c9dacb4a77",
        "cursor": {
          "ref": "3f237b9c-2f1c-4fe5-aefe-d6feb7128af8",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6ba166e1-f20a-4c0d-9e9f-6e636760eb42"
        },
        "item": {
          "id": "71119c5c-dd94-4777-b242-e5c9dacb4a77",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3e95d40e-d99e-4d31-9e65-69e83cdd2636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4def462f-664d-45b0-be50-d51cd92f4412",
        "cursor": {
          "ref": "f70663a7-4f3b-4708-a3ae-6557f17451bb",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3b3c4189-3f4e-4adb-ac3f-a7e58bb6042f"
        },
        "item": {
          "id": "4def462f-664d-45b0-be50-d51cd92f4412",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "34696d61-fc59-41ff-babc-32d99a27d908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d805f0-f521-49a9-91ab-6845e310d3e7",
        "cursor": {
          "ref": "9fbefb51-fd81-4eb6-9472-5d9bf67d9894",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c76b2d30-6e12-4ea2-82e2-cb7e1ac566fe"
        },
        "item": {
          "id": "34d805f0-f521-49a9-91ab-6845e310d3e7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "eea4dfd9-011d-4f93-aea2-6ed97a776b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1306a0fe-7f45-4049-ba38-90f5979fec8e",
        "cursor": {
          "ref": "734d4176-4d39-48d3-bac1-29f4c234a995",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0196e973-9d06-44ec-b484-bd52579e5a45"
        },
        "item": {
          "id": "1306a0fe-7f45-4049-ba38-90f5979fec8e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5cde78e2-16e5-4637-a9fc-38d7f0204368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d929558-d77c-4502-b6ba-5a9ad56d10f4",
        "cursor": {
          "ref": "35c7ea20-6d5c-48ed-bf43-ba6f8663d4ad",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5204fb50-f004-40a2-955c-e4a1775a25c9"
        },
        "item": {
          "id": "6d929558-d77c-4502-b6ba-5a9ad56d10f4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "72ed0ab9-3b05-48ab-a5ba-7ee32264f008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cbc9ad-7f72-4c50-9ae1-3c13fe66549e",
        "cursor": {
          "ref": "999d1bc9-80e6-475e-8b3c-a647809e1cdc",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "dca35172-77c4-4aa8-976b-cdad955e43c4"
        },
        "item": {
          "id": "40cbc9ad-7f72-4c50-9ae1-3c13fe66549e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d2f21729-48ff-4b2b-8a19-707a3741b515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61e5fbb-d6b9-4a76-a81c-fcfb4d7e1bb6",
        "cursor": {
          "ref": "27d8815e-78ee-4088-87e8-0492910436e0",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6cd5b83e-cf26-4f27-b27c-907b6d167f99"
        },
        "item": {
          "id": "c61e5fbb-d6b9-4a76-a81c-fcfb4d7e1bb6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1a01645f-f553-45eb-9aee-8ec3ad480b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4742b5-1520-4ef6-a76c-395cda9a68fc",
        "cursor": {
          "ref": "04ba722e-9bf9-49d0-95f5-12291d840a27",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b3d0440c-7516-4aca-b397-3a1e86e50e3f"
        },
        "item": {
          "id": "dd4742b5-1520-4ef6-a76c-395cda9a68fc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c27142bf-d7fe-4062-be9a-70d868adb0b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d989fa4-60ee-4fb7-aa4e-1b844b2d8777",
        "cursor": {
          "ref": "02c8dbe4-beb4-4b41-9edb-3334ecb54452",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ba281f18-056c-4860-a6a7-c33c28713c39"
        },
        "item": {
          "id": "9d989fa4-60ee-4fb7-aa4e-1b844b2d8777",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "d9eaf443-30c8-4ce2-a28a-18ddcd96ae2e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 191,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ca4f2c-81a5-4969-aa83-49cf2f17852c",
        "cursor": {
          "ref": "2fd1b76c-3186-41db-9cde-0cd28516f406",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "69657ff2-d7e8-46a9-94a0-e386c2b6355d"
        },
        "item": {
          "id": "82ca4f2c-81a5-4969-aa83-49cf2f17852c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5717b87d-147e-451b-978c-ca0b508226de",
          "status": "Created",
          "code": 201,
          "responseTime": 70,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99d5417-d517-472e-86e4-d635fc19aeb7",
        "cursor": {
          "ref": "879d70df-46c6-4f6f-a5c3-ba7f50314e31",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "414b35ac-dc35-45bc-97c2-e1ef4ddc4c7a"
        },
        "item": {
          "id": "f99d5417-d517-472e-86e4-d635fc19aeb7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "39ab4bc3-c265-449e-b338-5a363a14186a",
          "status": "Created",
          "code": 201,
          "responseTime": 107,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "081cfbdb-fae9-4249-a7ea-fb59e7c90606",
        "cursor": {
          "ref": "7c65f36c-ab5f-4a9d-9979-b025f9978a17",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5cfd26d4-5fbe-4070-8108-569344a5eab2"
        },
        "item": {
          "id": "081cfbdb-fae9-4249-a7ea-fb59e7c90606",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2f95c1c8-b3d8-4195-aae4-cbe39a34abd1",
          "status": "Created",
          "code": 201,
          "responseTime": 68,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e610fe21-3aca-457f-96da-bf5d28505aba",
        "cursor": {
          "ref": "ee83a6fa-ba20-4c93-a148-fd6d798a674e",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "63cd84c2-741f-4851-a61c-c88c9d1b7ed3"
        },
        "item": {
          "id": "e610fe21-3aca-457f-96da-bf5d28505aba",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4a90a7f8-f0c9-4e7c-8796-64e3076d7265",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "09dfa9ae-72cf-45cb-b862-ff8ab1a9cb50",
        "cursor": {
          "ref": "301871f0-a334-4747-97b0-deed389570d5",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7f79fedf-76bb-45ab-8fc4-29abb3f78478"
        },
        "item": {
          "id": "09dfa9ae-72cf-45cb-b862-ff8ab1a9cb50",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dc04496b-fb20-476c-9731-0568eb88b34b",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad328ebf-a1e4-40ed-bc65-d4aa1d9309da",
        "cursor": {
          "ref": "b7a48674-6cc9-4e30-b7a7-dba15fa9f867",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0fd1b484-dc75-4e82-88cb-8efcab6bd604"
        },
        "item": {
          "id": "ad328ebf-a1e4-40ed-bc65-d4aa1d9309da",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "67950360-f44e-4dda-8216-37112a431df5",
          "status": "Created",
          "code": 201,
          "responseTime": 64,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de64eb40-1394-4dbf-b79a-c25ea505f0cd",
        "cursor": {
          "ref": "a0a40f77-ba97-4f3d-9360-081b7ca5ec1e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fa4b6827-de11-4727-b8af-2f8cfe8905a0"
        },
        "item": {
          "id": "de64eb40-1394-4dbf-b79a-c25ea505f0cd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f8d347ef-759c-48ae-9ca4-59c0dee4f415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de64eb40-1394-4dbf-b79a-c25ea505f0cd",
        "cursor": {
          "ref": "a0a40f77-ba97-4f3d-9360-081b7ca5ec1e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fa4b6827-de11-4727-b8af-2f8cfe8905a0"
        },
        "item": {
          "id": "de64eb40-1394-4dbf-b79a-c25ea505f0cd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f8d347ef-759c-48ae-9ca4-59c0dee4f415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d773416b-ff2b-4a73-bd4e-472d8bda2ef5",
        "cursor": {
          "ref": "a4481a5b-3915-4881-8e28-302c42035234",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c4e5a2e2-5dbb-4e85-b5f9-bb9c2008efef"
        },
        "item": {
          "id": "d773416b-ff2b-4a73-bd4e-472d8bda2ef5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f6fc1115-9438-415a-a8d7-472e513f9b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6502203a-99b6-4e76-8f8c-44f1ec708f37",
        "cursor": {
          "ref": "233f2a14-1994-41b8-8578-42d880ea61ee",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "eec7be4e-f766-43db-8a52-39e3bcf5aee4"
        },
        "item": {
          "id": "6502203a-99b6-4e76-8f8c-44f1ec708f37",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4b5b7888-3c87-4323-ab30-f2a464003205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a80338-065d-4de3-8bb3-008b40c009a4",
        "cursor": {
          "ref": "602abe64-0684-4dd2-918e-8cd09631c053",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a9ac7119-de33-4f3c-a6b8-7ced591a5d24"
        },
        "item": {
          "id": "17a80338-065d-4de3-8bb3-008b40c009a4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e0f561be-d8ff-44c4-b98f-8519b89ef60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a644cf-8b90-4957-9e98-80f3d8c1b394",
        "cursor": {
          "ref": "26a49646-aeb1-45e6-9512-290a68064a99",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f328ad5d-cf3a-4602-9bf7-d112aa65a3fe"
        },
        "item": {
          "id": "82a644cf-8b90-4957-9e98-80f3d8c1b394",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e764fa52-cb4b-4f84-869a-bb13fcae6f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb95b9c-e2b9-43c3-8b63-c3a123d61f5c",
        "cursor": {
          "ref": "0d887888-29bc-4e0c-b794-580293709e7e",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8c5226f9-f4be-47ee-8cd0-dab517a5e266"
        },
        "item": {
          "id": "3eb95b9c-e2b9-43c3-8b63-c3a123d61f5c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4fbca180-15ad-427c-a7e4-c01514e0d0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544a67ea-ca73-45ef-ac27-b665ac15f69a",
        "cursor": {
          "ref": "04715060-cb0e-4069-abc4-4fdfa626d27f",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b9f28232-4198-4429-935d-9af920aac4cc"
        },
        "item": {
          "id": "544a67ea-ca73-45ef-ac27-b665ac15f69a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3ecd565c-f5be-4753-b788-44749713287f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e45e58d-e8ec-4500-8989-00602f202013",
        "cursor": {
          "ref": "aaf104ca-ea04-44ec-8df6-5806430ce574",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ffc02ca6-e901-4a24-8b1b-c95522fcdc57"
        },
        "item": {
          "id": "1e45e58d-e8ec-4500-8989-00602f202013",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9e16a13a-bbe2-48a4-9b4f-6bef8ae1f74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b13cd1e-0d6c-4dd9-8364-f142a0909ccb",
        "cursor": {
          "ref": "d594f204-3372-4cf9-b16f-96a1af6a4b60",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8358b651-73e2-4888-a239-76841d687abe"
        },
        "item": {
          "id": "9b13cd1e-0d6c-4dd9-8364-f142a0909ccb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ad4acc94-0964-492c-a49d-4d67202bf3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83cbf09-9ed1-414d-a495-4966f9311057",
        "cursor": {
          "ref": "1cd709e7-3d6b-4c19-84b5-9c9bd69ebd48",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6f6fa0a8-fc16-42e5-9a26-ad06cfb08db6"
        },
        "item": {
          "id": "f83cbf09-9ed1-414d-a495-4966f9311057",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5b1463a9-748c-4fe0-ac17-ff468af95b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f234f1-0e7b-47fa-ae4b-e7c2c90a1674",
        "cursor": {
          "ref": "af70cb75-8010-475f-804a-4901e16e276c",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ae27ba03-673a-4b05-a575-32301797d954"
        },
        "item": {
          "id": "22f234f1-0e7b-47fa-ae4b-e7c2c90a1674",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1b73d527-0354-4ae4-876e-d443d6d8b69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46c154f-3a6a-4c2d-bc0b-7ec71a814d08",
        "cursor": {
          "ref": "36e8cf4e-9213-4422-9977-9d2c8734f16a",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b6c9ea81-918f-45a2-8e04-625497f55496"
        },
        "item": {
          "id": "e46c154f-3a6a-4c2d-bc0b-7ec71a814d08",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bba76dcc-08fe-464e-ba8d-e8a3e7fb71ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7591b8-296c-4506-8f1e-3a4dbadbfa63",
        "cursor": {
          "ref": "1440f6b0-e08c-48d9-a3fe-a02ab1278e50",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e98e36b3-1b75-4472-a9f8-4f9afd9ca3e5"
        },
        "item": {
          "id": "be7591b8-296c-4506-8f1e-3a4dbadbfa63",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "29a9c04c-ab7c-463d-bd4f-cec5a7642a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32582f3-2f4c-467a-92af-06789b8a90f8",
        "cursor": {
          "ref": "ce6ad378-b114-4edc-b04d-39187cee5094",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ab09142b-5a80-401d-a10a-95d145dc0af9"
        },
        "item": {
          "id": "a32582f3-2f4c-467a-92af-06789b8a90f8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cbc65654-aafb-4203-be92-7f55395e8560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c4ff56-5a1e-404c-ad88-dd4504cc017b",
        "cursor": {
          "ref": "6106f69f-5ead-452a-bd18-6ec9d13efee5",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "14e1f3a0-391a-4b54-b363-bbfd07b475f2"
        },
        "item": {
          "id": "c4c4ff56-5a1e-404c-ad88-dd4504cc017b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6fbb759a-5dc0-494c-9f26-3240d33ee125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1a42da-0a1c-4cc7-ad0b-1b772b021c00",
        "cursor": {
          "ref": "42bd2b81-c35a-4a6f-855b-1ef277f9237a",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b443712d-78c4-432a-80b1-499ec43c3923"
        },
        "item": {
          "id": "ea1a42da-0a1c-4cc7-ad0b-1b772b021c00",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "41ab09df-dad0-4cf5-9f3d-02fe812ee9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526ce896-bf3d-41e4-89e8-2e2ae8da9bec",
        "cursor": {
          "ref": "1122b0d3-333e-4b48-ba84-542d5064ec7a",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0fbfdc3c-a913-4450-aa5b-b2886432e97e"
        },
        "item": {
          "id": "526ce896-bf3d-41e4-89e8-2e2ae8da9bec",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b07304a5-fa8b-49a7-ba24-ec6e42c763fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47221eaa-6f4d-4d0b-91ff-63dd8bd1d4b5",
        "cursor": {
          "ref": "bf11505d-650f-44a3-a4fd-8f78b5ac03e3",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "35e8053a-8fb3-4797-b92b-c9e71cfbfc9a"
        },
        "item": {
          "id": "47221eaa-6f4d-4d0b-91ff-63dd8bd1d4b5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6b729bc9-ba54-4f64-ae28-8be109d6a20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe45ac8-ca44-4f5c-bf1c-2ed530b93068",
        "cursor": {
          "ref": "73ea74d4-3882-457e-ac6e-4a1285535cf2",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b1682cf4-502e-4a78-b06c-80a388f7b60c"
        },
        "item": {
          "id": "2fe45ac8-ca44-4f5c-bf1c-2ed530b93068",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c29b7164-8bc7-4c88-8393-e078b5f48d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d681a39-fd7f-45b2-977e-914bf0f8bd3d",
        "cursor": {
          "ref": "51c28264-3196-43aa-8b67-b2bbeb23da57",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "35467c48-84b3-407d-ac0e-8005405149b4"
        },
        "item": {
          "id": "3d681a39-fd7f-45b2-977e-914bf0f8bd3d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f38d8938-6c0a-4ce5-aa40-8e9f079e75c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd30c42f-29c3-44b5-bf02-7cbc33b0a436",
        "cursor": {
          "ref": "fe4bd497-e0f2-4635-89ae-1d251d7e9f60",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0e8837b2-4983-4075-b269-e14b3ddc0fb4"
        },
        "item": {
          "id": "cd30c42f-29c3-44b5-bf02-7cbc33b0a436",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "992119e6-cdbf-4867-8edb-c16d9b62c8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7179183-4bbf-4c26-8c5e-dd9cbdc3e0e4",
        "cursor": {
          "ref": "af56c45a-a22d-4af1-b5c2-93350e24fef3",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "385f298e-04df-4249-80f3-256a91f320b1"
        },
        "item": {
          "id": "a7179183-4bbf-4c26-8c5e-dd9cbdc3e0e4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3005ab97-8f10-402f-92a1-433a0207dc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a16959c-e024-4cef-8f2d-b4c180869481",
        "cursor": {
          "ref": "18f04d18-1a89-4fe8-98ba-e2409b5f1dcc",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a9f78e68-0538-4710-b31e-0f488d2d5eab"
        },
        "item": {
          "id": "4a16959c-e024-4cef-8f2d-b4c180869481",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5a85e9c2-d03c-4a40-aa85-43f36d2b457f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19805abe-754c-464c-9bb4-41650599aa59",
        "cursor": {
          "ref": "258afea6-6ba0-4a9c-9653-ccdfbdfa9c2b",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d984aade-3917-4c7d-84cc-cb833a48e2ab"
        },
        "item": {
          "id": "19805abe-754c-464c-9bb4-41650599aa59",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a02e04cc-feb2-42d8-a032-e9f7682b2564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c3284d-a9d8-4ff1-a7b5-937c8ca597d1",
        "cursor": {
          "ref": "cdf99c2e-9298-438e-9444-91abf51eee38",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0ad6321b-5b9c-4d99-9ba4-e52056dc02a4"
        },
        "item": {
          "id": "b2c3284d-a9d8-4ff1-a7b5-937c8ca597d1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "28eb9c7c-86dc-45c7-abf9-177e4e7f1bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aafb15f-6fef-4102-b5fe-a27aed4fcd2e",
        "cursor": {
          "ref": "68e8c134-f151-4f01-9cc7-fef5d437b4f0",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9591c9a3-b258-41f9-8f28-35c9a6f2b79a"
        },
        "item": {
          "id": "7aafb15f-6fef-4102-b5fe-a27aed4fcd2e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5e4043ea-305e-4a6a-b1b5-4d2323c16cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bd85f2-da83-4869-a61e-7cab49ced081",
        "cursor": {
          "ref": "2c87073b-c6a1-49aa-ab61-540470f3a03b",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2a556c0d-1ebd-4a12-b2bb-eeed72845d84"
        },
        "item": {
          "id": "18bd85f2-da83-4869-a61e-7cab49ced081",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0efd32e3-e2ec-46ff-a941-ac8a15ad190c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0944c4-359d-4c2c-b227-d9d35b4f9547",
        "cursor": {
          "ref": "9bb0cd65-ee5f-4951-89e8-495e324a15c0",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "57f47e42-5d43-4d70-8f74-8ebff183d050"
        },
        "item": {
          "id": "6c0944c4-359d-4c2c-b227-d9d35b4f9547",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "32c9b04a-f2d8-4d57-9623-150a60d61f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caca9986-1b37-4847-8117-cb05d2bdbafc",
        "cursor": {
          "ref": "c97840c8-c8ae-433c-8418-3305dfe6ce7d",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "86aec4a3-63d3-4393-802f-713f8b3a4ea0"
        },
        "item": {
          "id": "caca9986-1b37-4847-8117-cb05d2bdbafc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "245972d3-9878-4890-a69e-739380e36407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30125223-1e4f-4cb0-86ac-4775275f254c",
        "cursor": {
          "ref": "66d50f37-90bb-43d1-bdb4-91ed847a5a81",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5586220b-bc5a-4f9d-84b8-cd140746328b"
        },
        "item": {
          "id": "30125223-1e4f-4cb0-86ac-4775275f254c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4cd2eb76-f448-4a2e-933e-7a3663bf2f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237c3a6d-e188-4128-ac59-0891e31bae5f",
        "cursor": {
          "ref": "8dbd97ed-2372-4071-9e1a-09b3b4f3896d",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "01180ecc-29da-4601-ab16-0a9f19fa8da4"
        },
        "item": {
          "id": "237c3a6d-e188-4128-ac59-0891e31bae5f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dc214fc2-4678-4ba4-9e8d-3045dabd688c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd3b7f0-96d6-426a-a9da-d0823152c74f",
        "cursor": {
          "ref": "fc3ee791-8846-4ec8-a7ed-ca535f0e297c",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c819d663-edc4-460d-9244-ba2cb7a4f0a7"
        },
        "item": {
          "id": "5dd3b7f0-96d6-426a-a9da-d0823152c74f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c6926884-ca8f-4fbd-a8b3-cbd356ed97b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1e041f-8c2d-4a7e-a4c9-21478ba95684",
        "cursor": {
          "ref": "8a9cecd4-f394-4aaf-9e5e-fa92a1e25d59",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ff8bf48a-3f1f-46fe-8cf6-09abd5f17a00"
        },
        "item": {
          "id": "dd1e041f-8c2d-4a7e-a4c9-21478ba95684",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5cf4aecc-221e-4821-ba78-e55ca748894b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13c8e4a-25fe-4333-bea2-18ac0be62598",
        "cursor": {
          "ref": "d965998f-4f95-4fd0-bd1a-2af85b40ca3a",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9a18e210-ee76-416a-8077-612ec11ba2cf"
        },
        "item": {
          "id": "f13c8e4a-25fe-4333-bea2-18ac0be62598",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "1f5120b0-d244-4420-a841-176f5a774a7b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33a9701-accb-4674-9e3e-3a7f99c36c2e",
        "cursor": {
          "ref": "e4a1ece0-33f6-4faa-b4f8-c0c523911fd3",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e9c4bfb5-e39f-45a5-bbad-e89d4c38d2d1"
        },
        "item": {
          "id": "c33a9701-accb-4674-9e3e-3a7f99c36c2e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d82a3943-d171-47d8-8798-78c7082bfb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33a9701-accb-4674-9e3e-3a7f99c36c2e",
        "cursor": {
          "ref": "e4a1ece0-33f6-4faa-b4f8-c0c523911fd3",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e9c4bfb5-e39f-45a5-bbad-e89d4c38d2d1"
        },
        "item": {
          "id": "c33a9701-accb-4674-9e3e-3a7f99c36c2e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d82a3943-d171-47d8-8798-78c7082bfb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef060ec7-861e-45ab-9f1b-1c2c0c7bb4ac",
        "cursor": {
          "ref": "5ee1263b-6b9e-4406-bff4-2c0c64fac242",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a90ae144-e6bb-4f00-a033-d8ec7a7f81a3"
        },
        "item": {
          "id": "ef060ec7-861e-45ab-9f1b-1c2c0c7bb4ac",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "866284fc-f926-43f7-8cf6-dc74e8086205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08f5d2a-918d-46c6-a1f9-e86cf6fe0687",
        "cursor": {
          "ref": "3f73609b-1d1d-495f-bfb1-0f40dca51693",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0a69de12-186b-4ef2-bd65-7315fdd9ccb0"
        },
        "item": {
          "id": "a08f5d2a-918d-46c6-a1f9-e86cf6fe0687",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ad559bdf-a11f-465e-8b01-9be0421ea5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274147ea-5f10-49d5-aceb-2808a0420b6e",
        "cursor": {
          "ref": "061999fa-3c23-4b32-b492-c391fc396053",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b741fd47-ea1f-4dc9-bf74-8276a3abb808"
        },
        "item": {
          "id": "274147ea-5f10-49d5-aceb-2808a0420b6e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2e05b83a-93d0-4ba1-adc0-a4ffd0b8ac32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70975826-7797-4569-88a3-5e2624501ccb",
        "cursor": {
          "ref": "75994bbf-56ba-43ad-8e2a-2c016ea6b4d9",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "046de189-4280-43ac-9975-e3ab1377c738"
        },
        "item": {
          "id": "70975826-7797-4569-88a3-5e2624501ccb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "99b9be05-1be9-4e8c-8442-6a1ff4a179d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2875361-0ca8-44b3-aa60-7a6ad6f0d36f",
        "cursor": {
          "ref": "d9407d9c-894c-46c7-a43b-0412fb345194",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9cce7198-d5e6-4c37-8608-30d61210474b"
        },
        "item": {
          "id": "d2875361-0ca8-44b3-aa60-7a6ad6f0d36f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "eaea3827-ece3-419c-a900-6872a647edfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8410bab6-3c7c-43f7-b476-45c01d55c446",
        "cursor": {
          "ref": "29fd5f79-b422-432c-88bf-34762aa0ea0c",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d1edb3a4-62e3-4e32-b3f8-51543e1cc3fb"
        },
        "item": {
          "id": "8410bab6-3c7c-43f7-b476-45c01d55c446",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "425d9702-f844-468f-aecc-aa95fce4f343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ee464a-e211-40bc-b0bc-0c3f2fb78bda",
        "cursor": {
          "ref": "89967354-b013-4ace-b450-d3108ba356ba",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1cb8b73b-2e11-4836-afdc-eab9a17feeaa"
        },
        "item": {
          "id": "24ee464a-e211-40bc-b0bc-0c3f2fb78bda",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "748b1367-71c0-4004-82b1-cec709fb5e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6c02c7-0a5d-4f83-99cb-a80529de38b7",
        "cursor": {
          "ref": "9bbce8ee-7c52-4a12-b08b-4902e99eb267",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cba875a3-6311-475a-94f9-02741578cec3"
        },
        "item": {
          "id": "db6c02c7-0a5d-4f83-99cb-a80529de38b7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8cdde585-ef4b-4f57-ac62-b870ca5136d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b9c31c-4c61-4e62-9291-61c20306cb1c",
        "cursor": {
          "ref": "0b5b5d06-11c7-4505-b8e5-f52a11f54f5a",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8115a121-4de5-41b2-a5af-5db3af983f3d"
        },
        "item": {
          "id": "a9b9c31c-4c61-4e62-9291-61c20306cb1c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "693afaef-7eb3-4608-a211-fb2e2f11baba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74d812a-919a-444a-afce-9b92357b1fc3",
        "cursor": {
          "ref": "ecf63552-bf1b-4fc5-bd61-5ddc895b1eb9",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "841600a5-acdf-4897-8d48-65ae6a7c7e50"
        },
        "item": {
          "id": "c74d812a-919a-444a-afce-9b92357b1fc3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "31fcc9ef-7784-4d64-868f-a67b1009d701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5116ef24-5437-4aa4-96d3-147f3d240dde",
        "cursor": {
          "ref": "f2066b39-3639-40c5-a3d5-ae1061477c03",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b83c2d90-94b4-46df-bfe7-e4404e04da1a"
        },
        "item": {
          "id": "5116ef24-5437-4aa4-96d3-147f3d240dde",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "44f7c2c7-0fa6-4a7a-8618-8d668ffa4aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72564831-2e08-471e-ba40-c0cbd5b98ccd",
        "cursor": {
          "ref": "89262a78-fa3e-4e7c-8d12-e6449df4ccb3",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5debee8d-3dde-4e94-84c2-519251052038"
        },
        "item": {
          "id": "72564831-2e08-471e-ba40-c0cbd5b98ccd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "97ec15e5-ca07-4fd0-a441-505f3144b3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de81ed01-44ca-4e90-88d5-a0f624510a7f",
        "cursor": {
          "ref": "9ae27df4-0f7f-42c2-bfc0-946deab2abea",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cbace6fa-ae58-44e6-9118-910e60ff880f"
        },
        "item": {
          "id": "de81ed01-44ca-4e90-88d5-a0f624510a7f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5bc91d02-5cb2-48e8-bb3b-9f57ad2e0ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f28d513-ff91-41a2-847f-15007835f239",
        "cursor": {
          "ref": "f9c6ff55-b05b-4aec-a9c4-38590d6a5ee1",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0fcedac1-41ff-4a31-8247-c47960103725"
        },
        "item": {
          "id": "3f28d513-ff91-41a2-847f-15007835f239",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0dfbc756-6442-4446-9b83-a9d485b00dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616f2d00-46bc-4f3d-b90e-9cc0adf998bf",
        "cursor": {
          "ref": "0c5ed729-c594-4948-a2cf-61516932be50",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ec3c761a-638e-40e0-ba27-def1d8f9bb56"
        },
        "item": {
          "id": "616f2d00-46bc-4f3d-b90e-9cc0adf998bf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fc050272-bb90-4ebb-8e11-447b72a25465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f86e133-36c5-4c97-91a8-c7b0376a932c",
        "cursor": {
          "ref": "f0cea7d3-4dbd-411b-9b4d-59dd45193de8",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b0abc3bd-e9d0-495d-a8e2-06839553b3e1"
        },
        "item": {
          "id": "3f86e133-36c5-4c97-91a8-c7b0376a932c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "400d2f61-b1df-4443-ac8c-e8b384e6b6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ac136f-42ad-41fc-a860-20196183811c",
        "cursor": {
          "ref": "5743d778-5231-4af5-b603-2ff705ba7bd5",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ab9f4714-e13a-4433-8634-4399e38cd7f8"
        },
        "item": {
          "id": "80ac136f-42ad-41fc-a860-20196183811c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "89f4a813-a4ff-46d8-82db-741bbbd8183c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47178333-bf19-4105-9a7d-7787da67fd2a",
        "cursor": {
          "ref": "819088cc-b356-4170-aa61-cad27ec7b868",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "14a54165-5315-4091-9dfb-7ef90374beba"
        },
        "item": {
          "id": "47178333-bf19-4105-9a7d-7787da67fd2a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "55edfadf-710b-47a2-864f-045c68df5b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349c0368-2967-4ff0-aa93-053f329ed846",
        "cursor": {
          "ref": "5fedc8f6-b10c-40f5-a0ea-dd6ec1637a23",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "91612032-d476-4a5d-9c7c-a9d4391110b9"
        },
        "item": {
          "id": "349c0368-2967-4ff0-aa93-053f329ed846",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a4a53bd2-1803-4477-890c-a3645bd4ec06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4f18c6-d482-4977-8539-3186bea51c90",
        "cursor": {
          "ref": "862162ba-0471-4809-a418-c03ab6780ddf",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "78f5d67b-0ca0-4160-a8f4-f7a9583833a8"
        },
        "item": {
          "id": "2c4f18c6-d482-4977-8539-3186bea51c90",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9d00089f-c900-40a7-9c55-9c4866cef5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5eaccc-5d4b-465b-b6cd-b7f094b80a92",
        "cursor": {
          "ref": "befd9ac1-8f4d-4ce1-b774-1d6cc1435190",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f5a47fea-ca35-4c2d-ab6a-dcb5f95c0051"
        },
        "item": {
          "id": "1c5eaccc-5d4b-465b-b6cd-b7f094b80a92",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7ada6022-c483-4e43-b729-9f71d391429e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578be7bc-1cab-4837-9971-3618e9455463",
        "cursor": {
          "ref": "cc9c63aa-e2a2-4efc-82fc-94935afae05c",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6959ef87-978f-427f-ab6f-4ef587f78269"
        },
        "item": {
          "id": "578be7bc-1cab-4837-9971-3618e9455463",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7c377a98-ddfd-42c9-8b3a-f6be2cf7aa92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fe9e65-b51b-4f67-a69c-3d6a145f0d59",
        "cursor": {
          "ref": "a39b1f62-9b2d-4b85-933e-48ae66e2b22f",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4d51bdef-557d-4bf8-b08c-3f0169e900be"
        },
        "item": {
          "id": "d2fe9e65-b51b-4f67-a69c-3d6a145f0d59",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "48378348-f38f-4687-9ddf-59f231c71f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f053b8-5bb6-444d-91bc-085eda8345b2",
        "cursor": {
          "ref": "b03063e0-5b09-468b-b22e-19b6e99f7ca7",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b79639b0-1550-47f0-801d-8d898db8acdc"
        },
        "item": {
          "id": "61f053b8-5bb6-444d-91bc-085eda8345b2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "24b794bb-3b66-4cbb-b4b6-03d8b105ee11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a060ac09-7afb-400a-b21c-bdb87ff793ec",
        "cursor": {
          "ref": "b2cbd5b7-2cf4-4d61-85f4-8af34b7e2f83",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b0d0deaf-4fe2-4b28-b1b5-dfac55276163"
        },
        "item": {
          "id": "a060ac09-7afb-400a-b21c-bdb87ff793ec",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "883d9940-6125-450c-b1ee-dece3c0fb9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5288c2-871c-4da1-8574-b6f7ff312ecc",
        "cursor": {
          "ref": "d45a6226-a851-4706-8085-3bdba0fd6ef7",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "95d9b07c-2f64-4540-afff-6a8cf3b0ce15"
        },
        "item": {
          "id": "3e5288c2-871c-4da1-8574-b6f7ff312ecc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9ef11947-25fd-44d0-9c8d-66e0f88e2fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b170b08-9fd5-43e2-a84c-d1ee1500f4ce",
        "cursor": {
          "ref": "80110c89-4126-4988-baa0-7f06ce59e3b4",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "22af8342-261c-4e62-b11a-f801ad6b421c"
        },
        "item": {
          "id": "6b170b08-9fd5-43e2-a84c-d1ee1500f4ce",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "82f200ec-fed4-439e-a005-912436c7ff29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f66e8dc-e72a-4a99-960f-47f3dd841a17",
        "cursor": {
          "ref": "272120bb-1a10-4e61-95f4-d4db6dd87c9f",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "20f57e8f-3194-42e4-aac2-148bb02b0436"
        },
        "item": {
          "id": "8f66e8dc-e72a-4a99-960f-47f3dd841a17",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9ea7915e-8e87-4fd0-a3f5-b829cb03d337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafe1bc2-6f4f-4751-b68d-5226e954cbdd",
        "cursor": {
          "ref": "a35cbe18-e962-460d-a380-84ec268531b3",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e246a0e5-8f0e-444b-9719-d3c6dc76ce07"
        },
        "item": {
          "id": "dafe1bc2-6f4f-4751-b68d-5226e954cbdd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2b32bc3e-ec8d-49b4-bdd7-2158ef6d5bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2a7205-2268-4060-a24c-0b1f18b25718",
        "cursor": {
          "ref": "b9b964a8-0424-4fa8-8abc-789b8b31e759",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2c491b1b-0085-43c6-9e11-25fe4727fbd1"
        },
        "item": {
          "id": "9d2a7205-2268-4060-a24c-0b1f18b25718",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d894f504-860f-453e-a3cb-0155a74dc129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2671ae-1adb-4418-a099-60ffa7a3a50e",
        "cursor": {
          "ref": "fe988071-1527-4bf6-86c3-2a5792409694",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5d5c89cf-a4f6-4336-b57e-7d0afdd75cbc"
        },
        "item": {
          "id": "1e2671ae-1adb-4418-a099-60ffa7a3a50e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2e4db025-d2cb-48f2-badc-890a44b7c6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c093ad-3184-4324-9f33-9cb026945d35",
        "cursor": {
          "ref": "1da3d4e2-291f-4dcd-befd-465ce9d3302f",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "076bf370-64b4-497d-bb7d-3669f41ea579"
        },
        "item": {
          "id": "15c093ad-3184-4324-9f33-9cb026945d35",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "90d94c34-cd5b-4499-8487-a410aa039154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2061a68-dc8b-4e06-975f-e00a672bdf9b",
        "cursor": {
          "ref": "e739f227-17cf-4140-b24d-a36b67920f5a",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "858ef771-7777-4d8b-99ba-90e01a13fb69"
        },
        "item": {
          "id": "b2061a68-dc8b-4e06-975f-e00a672bdf9b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3a2b90de-7f5d-46ff-b03b-76991da4c281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f46ae0b-51f4-41d2-ad36-19911e86fab7",
        "cursor": {
          "ref": "8a921ee9-dc8f-45ec-8168-359160f01bca",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ce28ae0c-d8f0-4ad8-9c70-3b8354b6070a"
        },
        "item": {
          "id": "0f46ae0b-51f4-41d2-ad36-19911e86fab7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "420a4843-b096-4346-8503-ac3c8a4cf1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8b30c6-5f47-449d-bbca-2c512639fddb",
        "cursor": {
          "ref": "7073e5fa-a2e7-4fa8-8dae-5c4c4603af0b",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b6170359-e60c-453f-911f-ad82377572f7"
        },
        "item": {
          "id": "bc8b30c6-5f47-449d-bbca-2c512639fddb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5a581046-e566-4fa1-96fd-99ba43ee61c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba43514a-cf44-4671-bc68-549eea182416",
        "cursor": {
          "ref": "389f6958-b44e-4e33-8274-b54818ad7196",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c109ce1b-c164-4510-ae7b-e356b5485c18"
        },
        "item": {
          "id": "ba43514a-cf44-4671-bc68-549eea182416",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c4fe37f3-d207-495b-b6ad-1bc2b7cb7b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5dc821-52a3-42af-a415-af259776ad99",
        "cursor": {
          "ref": "5393e3e6-60fd-4aae-8a09-1c13f8f21518",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1c0de600-cd85-4e16-9587-1f7efc5e2aed"
        },
        "item": {
          "id": "4b5dc821-52a3-42af-a415-af259776ad99",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "eed6a450-8b12-419e-bbdb-0f2dce2531ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ad2a33-1edd-4b35-9da1-e05fb729b593",
        "cursor": {
          "ref": "e6cef18f-2673-4f43-88b2-cd0dbfbeccae",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c31f0dc1-a2f0-4db7-bb25-60116ab283cf"
        },
        "item": {
          "id": "a0ad2a33-1edd-4b35-9da1-e05fb729b593",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a3cc7830-3bc6-43b4-b9b9-58b309ae2d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d419f073-e44c-4c7c-86a3-424385a78ed1",
        "cursor": {
          "ref": "471632e3-a92a-4fd5-b611-58129373c332",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "820be4ad-e850-4255-9788-669a53cf9196"
        },
        "item": {
          "id": "d419f073-e44c-4c7c-86a3-424385a78ed1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0c3de92d-83be-41ee-85ed-a46a375a2f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb06e91d-cdaa-4a85-bd8f-dd0fe9e08d10",
        "cursor": {
          "ref": "95ed979a-37d8-47dc-98e4-4a3362282668",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b18e8c12-746c-4849-8846-b8c5ecbfac82"
        },
        "item": {
          "id": "fb06e91d-cdaa-4a85-bd8f-dd0fe9e08d10",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d6a395fe-53eb-46a9-818e-6268de1cf86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259e510c-3f45-4139-bc9d-5b421b0400e4",
        "cursor": {
          "ref": "dbd53d83-b4f7-4a8b-95c0-5758216f6fb3",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "786f3229-e88a-47e6-bca8-0ddae80aa016"
        },
        "item": {
          "id": "259e510c-3f45-4139-bc9d-5b421b0400e4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "db95c9de-d1d2-4c81-bf3f-1ea18a877db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8e71bf-b10a-452a-a106-73a0558694c7",
        "cursor": {
          "ref": "0d20a1e7-5570-435d-8ff4-0648bf06d0a3",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cd557272-7369-4bcc-be9e-63febf74c275"
        },
        "item": {
          "id": "8a8e71bf-b10a-452a-a106-73a0558694c7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c8c905aa-363a-48ce-9e41-64efca46bc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787bffb7-69f8-413b-8251-168c02389cc7",
        "cursor": {
          "ref": "9678f508-71d7-4de9-96cf-3333b3465295",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "84d91baf-7e3d-4f06-8576-f31a82b5fbd1"
        },
        "item": {
          "id": "787bffb7-69f8-413b-8251-168c02389cc7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6b0de6a7-87fb-4ac8-9bc5-0e89f3fbb998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621f40ce-b898-437f-91b6-133330374d11",
        "cursor": {
          "ref": "3cb38677-28af-4b89-b6ec-7867535158c4",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "02c77c37-50e0-4407-a3d3-fd42b492ce30"
        },
        "item": {
          "id": "621f40ce-b898-437f-91b6-133330374d11",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2735741d-2c4a-4be1-a50c-6824406938f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ea2701-8a68-4bcd-a454-7fce57022d06",
        "cursor": {
          "ref": "8fad3d25-5d3e-4709-a348-77e9dcec3850",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "61facd54-090f-477f-9fe0-dd6763f24d4d"
        },
        "item": {
          "id": "69ea2701-8a68-4bcd-a454-7fce57022d06",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "dbae826c-6f25-4ec9-88cd-51155b41bd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c32bc7-f91e-4293-9ea1-c848a1474a97",
        "cursor": {
          "ref": "06e7ec80-3069-41ef-9183-6c815ceb5978",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "31eb00ff-8b90-4e60-9cba-a05acb01fed2"
        },
        "item": {
          "id": "16c32bc7-f91e-4293-9ea1-c848a1474a97",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6ec89ac3-038d-46a7-88d0-e6cdfdb0265e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c95baa-1517-49d3-a75d-9346b43808f5",
        "cursor": {
          "ref": "30dfdab7-24b1-40d7-8c98-9d16f6c07dd5",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "495161dc-1af0-4c3f-91ca-0d36700b1837"
        },
        "item": {
          "id": "d1c95baa-1517-49d3-a75d-9346b43808f5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7a43ee05-d4fa-4e12-9c46-7a0e910a83e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f9d2a8-68bc-4be3-be5b-1aff28611dea",
        "cursor": {
          "ref": "76519e00-cecd-4e01-ae5a-56540b3c9aea",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "11a5bab4-5b38-498d-911a-147886206fe1"
        },
        "item": {
          "id": "54f9d2a8-68bc-4be3-be5b-1aff28611dea",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7a3f20f4-d067-4b5a-b8db-b37d7a766f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b275f835-06c3-43c9-8ecb-7ce9d76555cc",
        "cursor": {
          "ref": "9b6c5424-781a-476a-8990-2238e7d39c43",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9b0ec5e3-8967-46c6-b8fd-2af300e2c98d"
        },
        "item": {
          "id": "b275f835-06c3-43c9-8ecb-7ce9d76555cc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fb94c3db-9a18-43ac-8d0f-062b508d87b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772217ac-4269-4308-b415-e49acfe8bb83",
        "cursor": {
          "ref": "05df595e-960d-438f-94a0-1c4be6997d81",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "83f48f52-84ec-4447-aab8-1f06563b4604"
        },
        "item": {
          "id": "772217ac-4269-4308-b415-e49acfe8bb83",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ab259cdc-6295-4bc8-bd0c-c6c499c6debd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37d1290-bd21-48b1-975b-e4dd27c86dec",
        "cursor": {
          "ref": "d463cf37-a7a7-4a20-970f-ca8d5707e925",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1dad5e72-597b-405e-894e-79ee37992d9b"
        },
        "item": {
          "id": "d37d1290-bd21-48b1-975b-e4dd27c86dec",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6acf102f-d6c4-47a9-8412-1f0e30ad7558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da262fb-db24-4bf3-ab01-3dc381f7a04e",
        "cursor": {
          "ref": "cbbc5f57-561b-4282-9544-d201f668fe0a",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e19f81b8-1fe7-4b7e-a75a-74920718f2da"
        },
        "item": {
          "id": "6da262fb-db24-4bf3-ab01-3dc381f7a04e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f66fa4ab-91f1-406c-8085-1f073d1fb4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203783b0-2be1-428b-a9f5-52352cb69e4c",
        "cursor": {
          "ref": "bb557e20-4770-44bc-91c3-8d0fbe9c63ff",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d02afe25-dd2f-4624-a636-c99f187cf6a2"
        },
        "item": {
          "id": "203783b0-2be1-428b-a9f5-52352cb69e4c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "58ec8c8f-5bc7-40de-82ae-9ff28c1c7153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be52c3f-139e-4aa1-96ff-6d4a45c12c7f",
        "cursor": {
          "ref": "463b1f28-f610-4d82-a892-5b61ee6b42fd",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "002af2cc-1f5d-4a14-bcdc-1e790eee9759"
        },
        "item": {
          "id": "1be52c3f-139e-4aa1-96ff-6d4a45c12c7f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "36f144bf-7c31-426f-a697-d4bef1f22ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21aafd37-0f90-4248-a717-aa229a740197",
        "cursor": {
          "ref": "a8906a46-e0d2-4397-9dd4-2e4085f58ab8",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9495c50e-8d46-4555-acb9-3ad20878da0d"
        },
        "item": {
          "id": "21aafd37-0f90-4248-a717-aa229a740197",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "31161df0-09c4-4f52-8a26-5a11b90fff47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc90b0c-6a89-4985-b145-ab7ad6e8c2e8",
        "cursor": {
          "ref": "e6f5f89e-057e-4751-81ed-d9ed93a5a7f6",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4f833fd7-5f58-42ae-9c1e-19a454d0e868"
        },
        "item": {
          "id": "abc90b0c-6a89-4985-b145-ab7ad6e8c2e8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b3ebf5a6-16a2-4a22-81e1-72e47bb8aa8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a6a231-59c0-42ce-bc01-d0de0256e6c8",
        "cursor": {
          "ref": "8848b86d-de01-4594-a972-83cb5779303c",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "de0af4e1-4e7b-486c-9adb-05e990343963"
        },
        "item": {
          "id": "f3a6a231-59c0-42ce-bc01-d0de0256e6c8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e25e6d59-ae47-4d6e-913a-9444ad009064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5929e534-8a1f-4767-9024-c8df12aeb1d9",
        "cursor": {
          "ref": "418e3e81-1553-4801-b09f-ec722244cf09",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "eafe521e-cc9d-4714-b0c4-1170770bd872"
        },
        "item": {
          "id": "5929e534-8a1f-4767-9024-c8df12aeb1d9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bab92d3d-3a96-4708-afba-198bd3646ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc8c4f5-031a-4da0-93a1-1582c1af90b6",
        "cursor": {
          "ref": "9878baa1-07c8-4347-94bc-906acae43d00",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f9abd282-c992-4ff6-afe3-d8454aa7edbe"
        },
        "item": {
          "id": "9dc8c4f5-031a-4da0-93a1-1582c1af90b6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bb8f16fa-12da-4467-a479-7ff79ad0e185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a15d2c-4cf4-4b31-ab3e-83c558b0e8f4",
        "cursor": {
          "ref": "4a7a2839-87b8-4c90-967d-3fffac0276d4",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b8c3ddaa-6987-4964-917e-8691ea6ee936"
        },
        "item": {
          "id": "37a15d2c-4cf4-4b31-ab3e-83c558b0e8f4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "10a4d6f4-b8a0-457f-9518-973102b1a7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919ca112-427b-4f31-9ad5-4cf6739b55ce",
        "cursor": {
          "ref": "d2d4e952-87cd-4390-bf60-b62ab399bebb",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6cda4748-66ee-4093-bdeb-5fd047751a7b"
        },
        "item": {
          "id": "919ca112-427b-4f31-9ad5-4cf6739b55ce",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ed72d265-6c94-4ad0-9213-b7304d8619c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ca6881-58e8-4337-baf3-b4ea19c3dc61",
        "cursor": {
          "ref": "54588602-5ef1-4a40-81cc-420477b2b388",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e5a8844e-a8c4-4668-9f4a-47136137176a"
        },
        "item": {
          "id": "70ca6881-58e8-4337-baf3-b4ea19c3dc61",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e6fbd097-3408-4383-8a75-74efd0863f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676aa630-43f0-49b3-9b5e-dacc4a003e1d",
        "cursor": {
          "ref": "dc6fb92d-46cc-4855-b737-9dbd84d76521",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "da9ee95c-17ff-4898-970f-a5fddd71749d"
        },
        "item": {
          "id": "676aa630-43f0-49b3-9b5e-dacc4a003e1d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5c3d7deb-0b35-4a2e-aa31-351e6a3dba50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b80f17-d6b0-4252-a475-d7feee6d1faa",
        "cursor": {
          "ref": "cac93dad-a909-4f1a-a2c3-59e03a0f88f3",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cbc2273e-7a2f-4653-8938-cce95e3adffd"
        },
        "item": {
          "id": "71b80f17-d6b0-4252-a475-d7feee6d1faa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "62d1b46c-4987-41d9-aea2-a4b8185e9ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c63c43e-3cc1-4167-b942-a383ed8a4541",
        "cursor": {
          "ref": "82b89d13-cda3-4801-9690-e001d6eff347",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4a32025e-f371-4850-9bdf-52220af9575e"
        },
        "item": {
          "id": "3c63c43e-3cc1-4167-b942-a383ed8a4541",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "da5f2b24-4a17-4861-a503-05fe91fac6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e09d53e-e5e9-4b09-8479-85ff7036aa1e",
        "cursor": {
          "ref": "d27cc1df-e848-449f-881a-d0abf6e11041",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b460bd8e-2213-43ad-88af-1c52caf8c84d"
        },
        "item": {
          "id": "8e09d53e-e5e9-4b09-8479-85ff7036aa1e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6898b20a-64dd-4fc2-8a69-270fa3936ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae0fe4c-9334-4dd8-a544-4bfe05e28da0",
        "cursor": {
          "ref": "8745f946-da5d-4ba0-acf9-2c49926683bf",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a4d0936b-e2f3-4b5a-ad9b-b58a65c31289"
        },
        "item": {
          "id": "0ae0fe4c-9334-4dd8-a544-4bfe05e28da0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a4d61577-a3f4-462b-b676-8dd13c4c0040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b3d6c2-876b-4a6b-a9cd-7d0265df50a3",
        "cursor": {
          "ref": "256248a4-5fe2-4b82-a8f0-41e767b6324a",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3bfcb24e-3ebe-4120-80b9-67824eca1b3f"
        },
        "item": {
          "id": "73b3d6c2-876b-4a6b-a9cd-7d0265df50a3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "dd8571e8-4c6c-4748-9a52-82325cfbb323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca99b9a-7523-4ffa-babe-cc469450cba6",
        "cursor": {
          "ref": "9e95b096-9c6c-4ff0-be6c-7b7db68c3089",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f66722a9-4607-47a1-9bef-1027061dd529"
        },
        "item": {
          "id": "1ca99b9a-7523-4ffa-babe-cc469450cba6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ff944430-ac3a-4244-a1ad-84e600094388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04778c8-494f-489e-a460-070762f74fce",
        "cursor": {
          "ref": "88643437-22cc-439d-b8ff-30c6edf7e85c",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b69f7a62-7094-44c8-8ee8-ea4a9b7986c6"
        },
        "item": {
          "id": "c04778c8-494f-489e-a460-070762f74fce",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0fa1922e-3f8c-4f09-9b34-64177a46366f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b6722d-965d-46ca-a557-56e6fa60bb58",
        "cursor": {
          "ref": "4e33dbfe-153c-4b7c-adc1-de5ca75f37d4",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "945f1c7b-55d7-4c9c-91f2-c4925f3c4f5d"
        },
        "item": {
          "id": "94b6722d-965d-46ca-a557-56e6fa60bb58",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "82c1ee84-619d-44c5-805d-ddae6427c70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34324957-d75a-43e1-8247-dd21bf7a0f7b",
        "cursor": {
          "ref": "964bf9f7-57f1-42a4-aa81-8d5218d316b9",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "be2b0146-4a27-458d-a443-6739edb74584"
        },
        "item": {
          "id": "34324957-d75a-43e1-8247-dd21bf7a0f7b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9d4c8f83-65de-49b7-9f80-4dac0d230f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13686083-7bc5-4bcf-bf42-9eadc4195700",
        "cursor": {
          "ref": "c877c971-2e20-441a-b449-651b5a26f095",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "42b919e3-8f01-4cf6-8f7f-07c1184c3f5c"
        },
        "item": {
          "id": "13686083-7bc5-4bcf-bf42-9eadc4195700",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "993b43ee-ecf4-412f-9783-2cc9926d6122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6495a8d1-d950-4172-b0b1-09c179b385d0",
        "cursor": {
          "ref": "6e15950a-a032-4ce1-b466-b12445508740",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6c7b4a0d-0adf-425e-8e7a-68cb2d65f783"
        },
        "item": {
          "id": "6495a8d1-d950-4172-b0b1-09c179b385d0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c59e1923-7036-4909-990c-f1c310fe2004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1cec3b-cb40-4762-a9b6-cb710f12a372",
        "cursor": {
          "ref": "4c48592c-d2cd-45f6-908c-f99ab6f1a147",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d1aa6287-1da9-4154-9c51-e5adb000a773"
        },
        "item": {
          "id": "ad1cec3b-cb40-4762-a9b6-cb710f12a372",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "629e9749-a987-483a-b23e-a767fc3e6beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013852fa-87fc-4a01-bed4-4710f984396e",
        "cursor": {
          "ref": "fc266c13-66ea-4ce6-887a-461fb3a9e89a",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e11719ef-8868-4175-95b3-0faac7a02d16"
        },
        "item": {
          "id": "013852fa-87fc-4a01-bed4-4710f984396e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "eada3d3c-665d-4a80-958b-7faea18909ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e3059c-2dc9-4195-874a-768dd9c72c24",
        "cursor": {
          "ref": "c4ff76a1-7366-42fa-b72f-34f3a906396c",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5fac2ce0-fa55-4c0a-bd3f-c9c765489930"
        },
        "item": {
          "id": "b5e3059c-2dc9-4195-874a-768dd9c72c24",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "707b8806-a76e-468f-885f-acc7aed9283f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2c6cd5-748e-4a99-9775-c0c8bd5a6354",
        "cursor": {
          "ref": "db3f35cf-3360-4b9b-8010-77d3b6db3c04",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0c57986e-66d5-4545-8079-aa3fa293203d"
        },
        "item": {
          "id": "ed2c6cd5-748e-4a99-9775-c0c8bd5a6354",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ab4ada8b-bcb0-4590-87f6-f9615d6fade8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d18252-5eb5-4839-8bec-1c751d25703e",
        "cursor": {
          "ref": "351ad261-c93c-4046-85ae-65b5472c7f6e",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f53b89a2-8c63-425a-8e16-6da595d98c53"
        },
        "item": {
          "id": "a9d18252-5eb5-4839-8bec-1c751d25703e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2942ee26-6094-4dae-838b-4511cc3776e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbfd4d8-9c42-459d-98ef-32672473789d",
        "cursor": {
          "ref": "4104f87d-1f2d-46fe-9df4-8043cb2c4eb3",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a962cdee-7c8f-4713-b3de-4c1e83bc166e"
        },
        "item": {
          "id": "fbbfd4d8-9c42-459d-98ef-32672473789d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "23c38eef-7b08-44fb-9723-40be83d1a86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdaba9a-9f7f-420d-a03a-57adbf07a743",
        "cursor": {
          "ref": "349015b6-a9a5-47f5-b24b-46f0f03b6653",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "690fa323-8fb6-436c-a12f-86bbfe621547"
        },
        "item": {
          "id": "cfdaba9a-9f7f-420d-a03a-57adbf07a743",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ee06f7b6-69bc-4fdb-86fe-ff9bb5d622ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92635b74-0174-4a8d-af54-265b1e79035a",
        "cursor": {
          "ref": "bbe1d7dc-9af8-440d-b379-67b719cd3c77",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a9002370-0f3f-45e9-84c8-c5f2f63b846d"
        },
        "item": {
          "id": "92635b74-0174-4a8d-af54-265b1e79035a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7851ca11-119f-4be5-bedf-91a9caa40dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ef71fc-4286-4c7d-a93e-c16f5dba66d6",
        "cursor": {
          "ref": "1b38dd1d-b4c9-48b8-8a0b-41a20b01961c",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c1aca877-2a6f-42cf-962d-42cb9f55f6bb"
        },
        "item": {
          "id": "46ef71fc-4286-4c7d-a93e-c16f5dba66d6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c5e606ae-da6c-4b27-abc4-6f424a91f088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04936a79-daa2-401b-9b00-877a4b32ec52",
        "cursor": {
          "ref": "b3715694-d5ea-4e85-af6b-99621aab8747",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0e3953f1-a993-4f0c-8106-14dacc9fea4b"
        },
        "item": {
          "id": "04936a79-daa2-401b-9b00-877a4b32ec52",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "34e2b96f-b935-46ef-bd0c-38f86f1fe05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d9b497-c1d7-474b-b7c1-9777cd7c8775",
        "cursor": {
          "ref": "bc7d1880-c649-478f-901a-8adad050a36a",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e4ffbbd2-9b99-432d-a92b-d4077c17c2d2"
        },
        "item": {
          "id": "d9d9b497-c1d7-474b-b7c1-9777cd7c8775",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "330da3d1-7ce9-46ee-a1b4-7e5a3552ac41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9994377a-7b23-485f-a099-32b153be3a60",
        "cursor": {
          "ref": "70edc22f-e568-44b4-997c-535d19eb264a",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "23e7d9ee-c758-41b1-ae43-9b96032c7b8b"
        },
        "item": {
          "id": "9994377a-7b23-485f-a099-32b153be3a60",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "53985bb3-d564-4908-abc6-9db19801c7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b68c487-bfb7-461d-8e04-bea0ac34ec45",
        "cursor": {
          "ref": "f917df90-caa2-42d8-b0cb-759da34d267d",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b796fe87-6b57-49a4-9c02-aca154c09836"
        },
        "item": {
          "id": "8b68c487-bfb7-461d-8e04-bea0ac34ec45",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "529750fa-22a5-4270-94eb-78777a9c7426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5478c2-456b-4366-9c44-752c47861d57",
        "cursor": {
          "ref": "ca02a25f-69e6-4217-a832-ff0bd8a9b98f",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "229c0d24-dced-40ae-8cb9-27baed3f34a7"
        },
        "item": {
          "id": "7b5478c2-456b-4366-9c44-752c47861d57",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e082f6ce-1f8c-40b8-aefe-f11882cd877c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50681e3c-f6ca-43bd-b968-564264965966",
        "cursor": {
          "ref": "12347be0-ad60-48e6-a1ff-00bc65551a74",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "215ee64e-3cbb-4161-8172-082d4454a12f"
        },
        "item": {
          "id": "50681e3c-f6ca-43bd-b968-564264965966",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "aa273227-0866-4288-b591-672f0eada402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e6b6fe-1715-43d7-ae58-eeed6dbd2e5e",
        "cursor": {
          "ref": "1a75e3e0-8ab6-46da-9bab-b8522a9a2b90",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f19ba7c3-2a15-48d0-ad9e-ffbd5a6aee8d"
        },
        "item": {
          "id": "b3e6b6fe-1715-43d7-ae58-eeed6dbd2e5e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f862981d-ed8b-4f59-8f21-61e748402ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e77ef0a-6123-4135-bad2-2abc398b006e",
        "cursor": {
          "ref": "f84a7551-b6da-49b1-ad27-d5650163a784",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "014fc040-f0e7-4f5c-b893-71cc4aabe784"
        },
        "item": {
          "id": "9e77ef0a-6123-4135-bad2-2abc398b006e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d6c47640-4dbe-428e-97ce-e8624a68ad97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160508fa-db44-4bc0-92df-4f78c0af9b8e",
        "cursor": {
          "ref": "414f1a97-5625-4e4b-8811-b81e4ff72b3a",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "51dcb0b0-698e-4a1e-809a-fa5baa6bfa5d"
        },
        "item": {
          "id": "160508fa-db44-4bc0-92df-4f78c0af9b8e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9fd69528-d4e8-4c2d-84a3-99c3cfe83582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d46dc1-5118-4cd2-8c39-4e72b148785d",
        "cursor": {
          "ref": "60baddf0-164b-4cc7-ad16-db6ff1d854cf",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "92773435-a285-4e1f-b531-65ae470038bc"
        },
        "item": {
          "id": "b6d46dc1-5118-4cd2-8c39-4e72b148785d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9a9c9185-7690-4fde-a46d-38e777f029f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f152dd4c-5a11-49d7-8567-7aa092970577",
        "cursor": {
          "ref": "9f56dfab-9d99-4965-8efa-458cdf8c6dda",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "954deba0-da7f-4416-bde9-0ea88606cf7d"
        },
        "item": {
          "id": "f152dd4c-5a11-49d7-8567-7aa092970577",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d4640fce-26aa-4bc0-9a8d-198f0e04be38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af7a2d2-7d99-41a0-8328-7b2ecd251e52",
        "cursor": {
          "ref": "28c5da70-97d9-4a3a-8196-609bd6380420",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d62f29b5-3fbf-4db9-9200-215cabe24fc3"
        },
        "item": {
          "id": "6af7a2d2-7d99-41a0-8328-7b2ecd251e52",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e3ba9481-82c8-4c28-9fd5-caca46eaff2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f9f068-2d9c-45a6-a5d6-260a8fe494c9",
        "cursor": {
          "ref": "8714bf57-04dc-4b8e-95d0-b44edeae26e3",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c5c5d4fb-da56-460f-8bbb-ad362212adcc"
        },
        "item": {
          "id": "c2f9f068-2d9c-45a6-a5d6-260a8fe494c9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b8b100f8-b7ed-4f70-88aa-4088575f1f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12ef19f-2eab-4802-96d6-55a1a7ebdb25",
        "cursor": {
          "ref": "0e508f90-d9f1-4086-82b9-c463bcf73a0c",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "55ee0f4e-38be-4f8d-84d7-5a54adbfd3bf"
        },
        "item": {
          "id": "b12ef19f-2eab-4802-96d6-55a1a7ebdb25",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "226f26ba-357b-48a4-8fb6-2b72c1906eb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4332e398-1071-4d1e-8157-401ec029eee4",
        "cursor": {
          "ref": "ef9fad8f-b6ea-4af1-9792-65cf58af3166",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4cddc316-8a3b-457e-b230-0354e81e3eae"
        },
        "item": {
          "id": "4332e398-1071-4d1e-8157-401ec029eee4",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "1db579f3-8eba-47e0-8726-c7465282aea0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62070e5-45aa-4aa2-bdfa-e018f4913dbb",
        "cursor": {
          "ref": "060ec7f8-ed11-4bb6-9f26-c04bee8eaf04",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "aebb31c5-3929-469b-8146-6c32a2b5bece"
        },
        "item": {
          "id": "e62070e5-45aa-4aa2-bdfa-e018f4913dbb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4f116753-c195-4b62-af28-cc5fb7862ea6",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea778f1d-20bb-4f39-9bef-5ab2c0637057",
        "cursor": {
          "ref": "787b58c4-4cd2-416f-9a7e-583bce6bb17f",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f982c14c-b9ba-49b7-b5f6-b1a748ac9560"
        },
        "item": {
          "id": "ea778f1d-20bb-4f39-9bef-5ab2c0637057",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6402560b-c8bd-40ce-b2bf-89bbda43a57d",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b2b264-e58c-4162-90ac-fae0a74d6793",
        "cursor": {
          "ref": "99cf05aa-a451-4c29-add5-fd365f30bc79",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2622673f-0d6b-4773-b2e0-22d6cd6d2301"
        },
        "item": {
          "id": "98b2b264-e58c-4162-90ac-fae0a74d6793",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5d0250ed-f0f1-48d7-8702-cdf3702650a7",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "33407440-8455-49ea-9339-6db56db4338a",
        "cursor": {
          "ref": "92f226a5-4a0e-42d5-9cd7-597544a23dee",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7510bae7-3b08-4838-a4d6-0c74f80bf10c"
        },
        "item": {
          "id": "33407440-8455-49ea-9339-6db56db4338a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "486fb4ac-4f29-4f15-8222-ca979f52e869",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33407440-8455-49ea-9339-6db56db4338a",
        "cursor": {
          "ref": "92f226a5-4a0e-42d5-9cd7-597544a23dee",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7510bae7-3b08-4838-a4d6-0c74f80bf10c"
        },
        "item": {
          "id": "33407440-8455-49ea-9339-6db56db4338a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "486fb4ac-4f29-4f15-8222-ca979f52e869",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33407440-8455-49ea-9339-6db56db4338a",
        "cursor": {
          "ref": "92f226a5-4a0e-42d5-9cd7-597544a23dee",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7510bae7-3b08-4838-a4d6-0c74f80bf10c"
        },
        "item": {
          "id": "33407440-8455-49ea-9339-6db56db4338a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "486fb4ac-4f29-4f15-8222-ca979f52e869",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f63559-31ad-40e7-b7c2-617452d5d8e3",
        "cursor": {
          "ref": "c5c1f5c7-e361-4bcf-a303-edadc9048127",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8b667f14-c5dc-4562-bb8d-6dcb619a7d48"
        },
        "item": {
          "id": "32f63559-31ad-40e7-b7c2-617452d5d8e3",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "a64eb89a-5b39-4e6b-9dcb-8900f73e7217",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8b8cd3-2dd5-4466-94ca-dc1bdbf5c3a9",
        "cursor": {
          "ref": "6d578ae1-ec87-4466-8fcb-ee080c6c67c4",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "18daca5a-2085-4166-8eba-b445d81af741"
        },
        "item": {
          "id": "3c8b8cd3-2dd5-4466-94ca-dc1bdbf5c3a9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6359a2f1-d7a6-483f-a630-ff318c928c24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8b8cd3-2dd5-4466-94ca-dc1bdbf5c3a9",
        "cursor": {
          "ref": "6d578ae1-ec87-4466-8fcb-ee080c6c67c4",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "18daca5a-2085-4166-8eba-b445d81af741"
        },
        "item": {
          "id": "3c8b8cd3-2dd5-4466-94ca-dc1bdbf5c3a9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6359a2f1-d7a6-483f-a630-ff318c928c24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff94f8e-9e3a-47d7-b443-babb9e91ad47",
        "cursor": {
          "ref": "1115248c-5e6d-4f2c-b33a-82b39546efa1",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d5f8d8ca-a71f-40d3-a108-9539fcc1af51"
        },
        "item": {
          "id": "7ff94f8e-9e3a-47d7-b443-babb9e91ad47",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "fbffe28c-bef7-4f05-9f38-ec8a91cca4f3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 49,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eca0e79-23e9-4918-bf78-0871f4de5c1f",
        "cursor": {
          "ref": "a270a0ab-5b69-42f0-9269-eb6f92fb3d3b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "36f32598-e0f0-43ab-8ad9-feda165a43db"
        },
        "item": {
          "id": "7eca0e79-23e9-4918-bf78-0871f4de5c1f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "36fa6d05-dea9-450d-ac82-08340dd569ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eca0e79-23e9-4918-bf78-0871f4de5c1f",
        "cursor": {
          "ref": "a270a0ab-5b69-42f0-9269-eb6f92fb3d3b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "36f32598-e0f0-43ab-8ad9-feda165a43db"
        },
        "item": {
          "id": "7eca0e79-23e9-4918-bf78-0871f4de5c1f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "36fa6d05-dea9-450d-ac82-08340dd569ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955245cf-2c5a-42cd-a59b-08dc2fd21acc",
        "cursor": {
          "ref": "fb877834-ad61-43b6-93d5-5fb4c3694560",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "523d7b77-0f0d-4a5d-965a-aaa1cc3c1f2d"
        },
        "item": {
          "id": "955245cf-2c5a-42cd-a59b-08dc2fd21acc",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "312e586a-5f85-4f6e-828c-f9c9f6f30e5d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}