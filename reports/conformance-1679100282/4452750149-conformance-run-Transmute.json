{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f06259fd-0f0b-472f-9e3a-915577fe08ab",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5ba148e0-5b1d-42b3-a56c-f56173937d11",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c2cef6ab-975c-4922-a511-a608eb5fede4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "23563e75-16ec-41db-819e-b5ad8acc8302"
                }
              }
            ]
          },
          {
            "id": "d6062eb7-a11c-4e77-b33c-295a6b208511",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1e6d3b93-961c-453e-b825-560fdd38e3b9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5a9b539a-d303-4463-8d68-93c8d0b919a1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3194a4a6-6f04-4b48-8ace-9538a9a4b1fe",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "07aae678-c127-4201-8077-6903ab3f2ad4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "086fe4be-440c-458c-bfff-c2bd65e12b31",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec905e33-8c66-40d8-98be-8caaadab279f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e69c165-651b-413f-8d36-3e672647682c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d323db64-37ba-46f9-ba93-c8080f141535",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e0bd2d3-a314-414f-8cd2-6ace0489a2bb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "65de775d-f51d-49cf-b5ab-b39cdb75c5c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "464e9250-f521-4679-8415-e3bf8a49bed2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3a0b8dd-72fb-4d9d-961a-b47b0ee1ea65",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "31a8ea10-0949-4c42-884b-c43a9b37a64f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3b6d2f0-0a39-4be5-9a2c-41b29b7a83b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8af7d1e2-84cd-4050-854b-4636e96c75ec"
            }
          }
        ]
      },
      {
        "id": "647861c8-36be-4106-9204-cff3dfce1208",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "da709e32-129b-452a-851a-ea07e6b81a01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d398973d-0148-471c-ad9d-fbd52f652426",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0fe7423-cb1d-4b70-9856-ccf785cd8322",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e688d855-aaa2-4131-a329-0b7de12a7bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bbd7b9f-0db4-4864-90c8-d45f91193b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c6bf46-bbdc-4fea-a0a7-7636521ee737",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bbf96e-a475-4b3a-b1f1-33676c132275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a0703d1-e627-42f4-afa5-ac739601d4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5d84af-3585-498a-8fc6-2c8864e3a7ca",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b2ff8d-a81e-4c32-8449-e85d4da7efc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83f86f66-71b3-4175-8725-9de265cba83c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "632945a9-7e28-4bed-8683-1b82dd7d8fd0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d451d56-e674-4769-a7f3-4e3a34143d73",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696fd79b-ab13-4d92-8996-5d635319f712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "389964b4-ce46-4304-b6e6-855d5b9d6e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b80a4d-d85d-47cd-aed1-be889285443d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc2674d-bd6c-4a68-bd51-b5245abecae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35aa3ead-7057-48cc-854a-29f17e9371e4",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dc4ba6-487b-4dfb-b317-7c3746fbb5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a94aeae-700a-4dc2-bda9-c49a05c719f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b27c96-f605-4044-a4c4-d2515966fb2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "790ea48b-960e-43b3-9ca8-c9997f15c199"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "35fb1ce3-4238-43b2-a78a-c1c29c63ae57",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9032146b-a47b-4f83-b463-cdf64a4b8da3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c4496a4-0818-424a-bd01-3079a04db6bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ad0289af-31e6-4b7e-a414-ca5c6f690edd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da898619-5a05-40ae-8c65-32fdfe36fda0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "0a5c2e22-0c44-4e5a-8296-cdfb9e52830d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a45d5693-aaa2-4e7e-81f5-96710f74b39c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f07b4ae1-9c2c-40ff-b769-bc45d8b86eb8"
            }
          }
        ]
      },
      {
        "id": "c701b6ca-6bd2-4dd9-9625-8d087aaa2a48",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e8e39e26-00f7-489f-ba30-fd8f4b0a0a6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8f42244-bb94-4f11-afea-38187d2d7337",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9bfbb2ab-356e-4e76-99ac-09c3668647fb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c691cc-23c4-42f9-aac9-443cd748c83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e29c271-5dab-4f97-a8c7-fda972642fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef22c90-58a6-4919-bbae-066378eee7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad8fc6de-9b3c-4544-ae9c-7e628a9acf77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9b7e42-94f3-4d56-9be6-1f7fd006de62",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0adc54-b9a2-4d19-9d8d-134d948f42f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2607e8da-df5e-4dde-982d-ce5e4abcffb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd20118a-eb75-4700-9483-81b7dbb61821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae4c85cb-4036-4e33-b646-c98bab71117d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b068b5c6-b9b7-435f-a07e-dee8abb21223",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4252080-4498-4cbc-a620-8e1f2058c5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b36d42-87c9-42cc-bbc4-89c2d0d6c7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82abeca-91d4-4ff7-a098-0b17ba539ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb0a10c5-2f01-49b2-8467-ba6373064617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c64defa-69c4-4d22-8195-866e9c110809",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c111cf-20a9-4cf8-bc18-ee40f8232b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43eaeeea-c694-4e50-8f92-740d9feb38bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e09f8c7-f1bd-4a93-90cc-138ae6592f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2f94226-d8fd-47b5-82e4-a65449a549ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6f5648-9e7f-4b9c-8cb6-25e5ea131058",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549a127c-86e6-4840-9738-0768e93b6916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4ed577-ba41-4148-897b-48693d2698e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f727b0aa-a6dd-43dd-afff-dee19d31faf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd74f3df-5706-4f94-a663-e691973d7e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7263cbca-6b60-45cc-86bc-33a97744f497",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37149c98-085c-4360-839d-3fee1a345fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3493dfa7-97f0-4a70-ab41-e8f6ac886551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81503940-d8c4-42bb-8d2f-f676f0da3865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e3038c6-c46e-4ee8-b053-6f615456e4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26aabe5-9f99-451c-b5dd-f1282519f2f6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721a7cf3-5cbf-46fe-bb82-c514768bb416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e92b3bf-0a63-4bd1-9973-9e75d8f4916c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f75d0b6-aed6-4fbb-b2cd-4ec9e6d01764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4414db4-6e89-4eb8-85ea-126fda186008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683eda4f-4beb-4319-a58a-5db30f6e2dfc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b93fbce-bd2f-452e-9efa-19568715a757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1380de61-c48a-4b1a-9eec-eb9c1fc6efd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76fca40-1a9c-4f8c-b46b-bbba559f6bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "032efc7c-7b6c-478d-9073-a0261f366892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a1bc6c-5b76-4461-ad02-698901b5f72a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5b4809-4c42-4008-9f0b-216b7231178e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a5b1ce-b547-4b9a-b5bc-49d36e054490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090ada74-7c51-4a9a-98b6-496cfd8e7f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f7f64f3-33cd-4435-aa8c-323446755c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692d1f78-c1f0-4135-ad14-8e63c612c299",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea8cf4a-dfe7-46ce-86f0-d26fc7f7339a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbd655a-6c27-4803-a415-9c627cfdfa5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea9be90-7e9a-4776-98d6-2a65ba6e06bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7d15504-7622-4d84-b5e0-86a5b8a73011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0f9199-fefa-4ce5-9ef2-150065eb1762",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c484ae14-663f-4586-89f1-7d347baa1b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdb49f5-b348-4a04-821f-dbbb03edf0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e95cea4-2ed7-4991-beea-d79f7de30536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4915227a-fbc1-4c69-a53a-7f8223329355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ed42d2-23c1-436e-a3f4-34b24fbe9b2b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530ff6e0-5c22-4b0f-954f-5db6223eab27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4285f6b6-414c-492f-a5fa-15ef8e100f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5166ba3-9c2c-4f2b-bc69-043702632554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "788f74cd-66ad-46ac-add7-2d0d9d0ebeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f49b9e-234b-4afc-a6b1-c0fb29d81dab",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdeeb14-42c2-4a05-8f5c-e93f93653b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0cfb728-64de-407c-8299-8865269ea3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f0f817-8ce8-4b74-8c02-0a03d6987013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2aacf0f-751c-4081-b418-54e097740957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe70905-c62f-4d1c-888d-021aea3fc110",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946045f5-27ba-44d2-b69d-85254b4c8ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31721418-9dea-413f-b02a-c5eaa8ae01de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4e520f-7bc6-4f40-84f0-2dee9ead3346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f442ffbe-b55a-4158-b0ba-e90af8c70fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2933aed-bd40-46db-8920-a7cab7cf5a83",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1b6254-9771-4789-b45e-6b613f4637f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bbff07e-4b8a-4089-8a32-7e1712e4c61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4069520-4dff-4823-8afa-471114642c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3da8814e-0fb6-41ab-9f43-e36f055c0b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68936286-547b-40cb-bd70-b025137653e0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573bd7ba-9c97-42db-902b-ddbbe28ada90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2ddc6e-4a52-48b9-97c4-a9e77130e807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec26a2bd-4d87-4476-aa81-c5922d2ccffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8040e49a-a0fd-4061-9e58-aa2f6660e399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0437e738-b63e-4c16-bb3f-da5615099074",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59adc9c-349d-4755-b00e-dde54d7357d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5151d82c-8fba-48f5-956f-81c7d2aec822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4fd2a2-b8bb-4af8-9cb2-6a76751ccbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cca0db02-937a-4bf1-b62c-6d2f133908de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44a0382-00d6-4745-92b1-d6874e5cbf37",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf4d0d4-95a9-4bb1-8478-fae83ae76e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476c139a-3bae-4aac-bb68-fff0a26d35e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862becc9-9518-432a-ae64-2300d9faefbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a68f6c-a94e-4465-ba7e-b3fd20d6b50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14ce7cf-e2c8-41f9-8f6d-28925f8d8a69",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07890aaa-d719-495d-935a-fe3a5e07c56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd5de74-8b4a-4c55-bd99-899d01b8fdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ab6953-9f17-4321-9ab4-41db84876b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ed7560-533a-41a3-b31f-e739f2ce54e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1963f1a5-fd20-40e7-a4d3-f8f52b7054fc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b85126c-12a9-4d52-beab-ba5d5b91fd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab65701-db27-4502-8a87-2d5c761b4a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ec62a6-b05d-4e50-ac7b-ea9b38710747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9f5624-2a9e-485e-8de6-e07226d38a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b0024c-97b9-4117-8519-4e91979d29af",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e735229-a199-4f54-a46a-565481e1a948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64d0706-8216-487f-b583-0f94ae28af23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0dc4f7-a29b-4e07-b42d-5ed439498d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4183bddf-889a-43e8-8fc0-394fe13219c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6929fcf5-22ad-484d-bfd7-b7161621654f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20f0f3d-3572-423b-b4f2-0b8b4e48f6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d5731a-e302-4f24-ad0f-a03e4f074183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8666ce-b64f-4a57-9be4-da0a23d78cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca77ca4-f8f2-426c-ab23-809e611b0b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0f9e67-f08e-4202-ba78-99bf2c9c1c22",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4614740d-f7bf-4c28-8eb4-960853ff25d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f76bb75-c480-4331-9ded-e0f0a0f2fd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca9a121-05b8-401d-a875-5b3a182fb561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d409b315-fc09-4f46-8ed4-af54a426fd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ebeb09-68f0-4499-bd83-3917bbbdead1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55659afe-9f5d-437a-b0fe-62311b915601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023b7431-0307-4507-995a-e5d035000f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4fdd7f-33d2-41ad-81ba-bc5f2de43652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "19111c90-0824-4662-95e2-20fc15f5caac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efcdfef-7cf0-438e-8900-1d7236012cc5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fadb414-c482-4f6a-bf56-31afe9b40220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a31797-e99c-4f94-9f6e-bfd3edc2dac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a985ac-e18d-44e7-90a1-d7cc1c85e761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "794ab202-6f64-4193-a5e3-8eafb84a6684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4682ed00-5d17-4173-861c-9669751e496f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f920f8-b171-4003-ae31-a4af2d3ffcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707c3ac5-8456-4268-a060-5485d985c9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d461f3b3-2909-420d-baec-4dadf6100643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e464038e-5a83-4649-8eec-5b08e2939276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b14c7f-4b98-48bc-96eb-886b877ace0b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415c97bc-ab29-43d4-ae22-7c5575ef0280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19af3ea-6651-4131-bb2d-c05241459978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e20aa22-50ae-4a2e-838d-7a7374044795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0a5828-0a06-438b-b6ae-e0d7d97dd8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76eaf70-3abb-4346-b80f-756372466ddd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6e1de6-3073-457f-a7b0-a847e4f3bfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8dde7b5-7661-41fd-a5a1-97757023dda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef640fdf-1f95-49ff-b50a-851b38e31379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdaef78c-83c7-4cfa-9e32-ff1f5f919de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f919f339-231e-4c6a-a8a1-f02740ee32ca",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058891d8-dfe2-46ba-a31f-24ec873128cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2410d536-2ff7-4579-9ca1-494d4498a596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f756f78-c664-462f-9496-723b58aac641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25d32ba1-bea2-4177-a830-706fc98829e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3eb003b-1afc-4e6f-b938-a520c76c120a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf25a7dd-6252-4252-bd97-f80e248e0261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9474c920-8828-4b0c-8680-f275d3f6139b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d426295c-d884-4263-86a9-8fb2b2fb127b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf5d2ab-2d15-4880-adc6-60102b1429af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d382b1a-7e6d-4310-ac0c-9efa41fd8269",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d573526d-8a39-4f24-b2e8-12737750036a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551d5f3a-eb54-4600-b78d-6528b46f0864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82060557-a6ee-446d-bc8a-6880c84e537f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "676d29a2-6cd0-48ac-a8a3-b453bbdb01bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0457fa68-8417-4ff9-ac0a-45dbe1a75971",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1516edcd-d790-4f1f-80d8-7511f450e279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1210db-fb75-4b2b-82c7-ccaa92226c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8349a3-7255-4514-bc50-a4d3917a58ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fba5e9e-f19e-43ce-a1fb-9507bd9098ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06dfb706-2b17-4eb3-8657-ba8c02cb0bad",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c2ccfb-f9e4-4168-b299-3420f852a983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497ab46b-36b3-48d6-8dba-d1c6dfbb06ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45668a3d-10cb-463c-9bac-608a06b5679c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71336cf9-9c69-4e9b-98be-0d04c012fa2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8850b7f6-78ff-4987-b778-8cf16e8ae795",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2594dcd4-dbab-4d7a-b4ee-8d5700708ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d385abe4-659e-469c-9419-4e39fb1a3e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c587a4b-3bb5-4ad9-baa3-fd3a924353ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "060d9076-b036-4ef5-8847-2a56b1d9e86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caaacc3d-7ca7-4400-ad49-2402c17766a5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2c1061-a7b6-47da-912a-bf7eb75fb461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba0aee2-fc98-4049-83ca-11df9e6cbde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c2f8bf-98e6-49f2-aac8-285594ebf222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "79124c8a-c55c-481e-99c0-d786ffcd2f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa167e39-8a38-412f-8d67-72de121fc081",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8828011-d07a-44e4-b352-08f8b1b59220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e621e8e5-ded4-4ffc-9a03-a6c1b5ba3416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a92e16-bcd2-4143-afb5-9056b152cf2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7c9436-4fab-4e36-b92d-ec6c6eb04e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d724e6-e6f1-4f07-88a6-c19f98eb6113",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6365eb36-9221-4f50-8683-f57ebc1fa7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7004c89-e9d4-403a-b657-b53562244c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c219883a-bba4-4fcd-a676-0efeecbf677e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e467cc67-78b0-4db6-af92-ee7f05761a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8ed9a8-6188-4a7c-b961-ac4fd1e81e9a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd1541f-d810-42e5-99db-582f2f0b4e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e325bed3-096c-4371-bd7d-2431c588ee90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cbaf39-5f21-44e4-8669-9cecf79b5118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "898c9e8d-38a4-493a-9e59-d4f26c5bccbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89f0e78-877e-410a-b5ae-0737d548fe96",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50ec425-5c76-47ea-bb3d-fdea8144666a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5956be6-1a81-4697-a6f4-de2ff94cc3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b106b3bc-41c9-465b-858d-5825bb06dd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c317070-9956-4ee9-9c14-9f9e1c950ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b2dc88-d8f4-44da-96fd-91da023af52d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bc73ef-1441-4a96-b85e-7c0f8f5860d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cd5a66-ad30-40e8-8bad-fcc6674107b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e15ca4-19d7-4f74-b951-f1ac1b9f3b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b3bf8f-a7eb-4661-b9d7-e5e470d33f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b05c736-663c-4c7f-8759-e0a38cb154fa",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949f0678-05d5-42a3-9cd8-97c8ddde21b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a544c90-9fbe-45bf-926f-ba61f6fd3a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3730999a-47f7-4e8d-a3ed-1f497a66ff1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e609ecd8-2845-4b7b-b66d-e8352f45d7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1251f800-5f41-48bb-a27a-4de9f27111b2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f19ee6-5b35-4cf3-abff-6a8a8ce494cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67eb35e-0e50-4342-bfd3-51611372db09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1d677e-e11f-4e55-9f82-ed79f7205207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b1edcc69-b30a-4586-9a47-ae49c044e461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b385f5-2fb3-4a3f-b87a-c048ca60ddec",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ec5c22-ede3-4aca-b5d8-9755f11eb6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7a4fc2-10f2-4fdf-876f-4508ab4dc787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289e020a-8e53-456e-b0c7-60b4857edc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec1f41f-2e60-4edb-b53d-066e0266a99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a025dde2-1a54-4b8f-ab99-8aba38daa2b7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427a4336-2b7b-4ce6-8099-6c43f018a7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56520cf2-6765-4c3f-97ed-d9aec5fd5c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00d19a0-90e6-44f3-a334-88739a509632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "72c71159-717b-4967-b5e1-787ab2074fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1c05ec-06dc-4a28-a46d-9173424a76a2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b0ef99-0317-4a52-96e8-88055661d560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3740ec0a-a878-4e6c-b04a-f5995c24339d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aff70b1-2192-45be-94b8-5d6548f4e2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "095c296d-8b89-4bee-a8e7-325f3a61b5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57a24f7-fe0a-48f4-9511-9654eadc90c2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717e9a23-91b7-4ba2-9c6e-d5b76024c98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55514a6a-0a8a-4e9a-9a4a-bf56b82cf0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eefbdba-2a95-42f1-a7c0-1c2012f651cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3704e434-48d3-4c1b-bcb5-38bf890d9447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18f0a38-6e38-453d-8961-4997f3ea9308",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91630180-ae49-4e95-b13c-eea1002feb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e296d93d-e50c-4527-8a50-ca4976a668d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9f84ac-9c42-4818-abaa-d27f4f15cda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "308662d1-ece7-41d7-96da-ebdb2ce25615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c974002-5436-4a56-b235-60638048d2b9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fcde9a-d627-431d-9c1e-35b17e47d320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44ed531-9754-4f8d-aa7f-d7ce0fd5d550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66139b7-765d-4651-a5d4-c1e1cb16e5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "100bf8e8-9ed6-4850-8ccc-ad9bb9cbe513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac01912-e41b-46a5-9b91-b8d88c0c72c1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33aa833-b8ad-4c41-82ca-f86fc8f9453d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf26536-3eee-44f6-b2c8-18c8a1f191c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c12047-8999-40f5-bfe4-210613130c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6305ffc-d24e-420d-ac1b-d4d6c476563f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c6ba22-d73c-42c4-bf2c-6484cb5998c4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083b509e-1f7d-4dac-aa98-4181f9dede13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc69d3a3-5ccc-4e95-b0bd-54e747188811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28928224-9a37-43fe-b41c-5a809ac69344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d56f8ed-a6a0-4e87-80f4-0b2022ed4ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33f05ce-a474-455d-8c4c-b0c34f21f4e6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3803dba0-3716-4f0d-9447-e0d5a611c744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a04a3ca-972a-4d4a-9860-fc6808e2247a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532c347b-cd4e-4547-96f6-b1dce0fc46c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4788020-45a5-4298-b33a-0014a87cf007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b1bd39-9a46-48ed-b243-c024f3ad78fa",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507f01d2-169d-42f9-b592-bb3b6c05143e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52063ecc-8e93-48da-90c3-5037e9c273ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d61f591-e539-4d88-9992-8a7d7e5e48f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "42c77f48-9652-4512-ab2f-f3da86818397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d66992-bf48-4544-ac33-f67a4743472d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13cafaa-d40f-42c9-89bb-b7a2fed8fd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3f699f-e9f3-4068-ac4e-570b3b4d4e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4c9fce-00f3-45b5-b393-ecbd7eed7ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f04496-eaf3-414c-b85e-1199e78c060c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021edaae-c050-4492-a9cc-7bfed3e18081",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17abe80d-41f4-45d2-92c0-a9c7fd3036cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a22410-955e-485e-bdbf-816e474d91ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb881652-e083-4257-92a6-f16901282660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6d614e-985d-4a3f-b5c0-27e2ce4d5770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607db5ff-2e15-4767-92a8-7f2dda8f9aa8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27858e5a-c1bf-4fce-80b3-87b57869a923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c88031-94ce-45b4-8ba6-c6aa7bc334ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572d0f13-21ce-4931-835b-fb35e41bf920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d75b3f39-2e1d-4d12-9a9c-d2673632c934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2effce-b85d-4199-832c-a30497ed5714",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f607b31-822a-4b73-b34e-eb1288f79d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1653f430-7677-4118-85d5-acba70fe7beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3639797b-c16c-4ee8-8eac-05a2edcbc7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "309a15d9-1075-43fe-940e-cb00592f217e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743c836d-5d54-4b7b-a02c-a2db87d2b7c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3109e750-e471-40d5-9184-0d39c2626d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881e3512-474c-4525-b79f-28c84abb40ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a4232e-7ba0-4615-b548-2a17ab1f0231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "21cd02a3-bfb6-4212-8fe8-1f7e10c3e7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba03c078-79b7-41f7-823d-90721eeeabad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083f6968-2813-4692-a5fd-cae3f3f729e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d6f039-198d-42fd-b1b2-50c15fab69f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f05e8e0-dfc9-4f3d-a41b-2a532ba4eb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "387e688e-1b49-4b5b-94bd-d936c5068f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e3e780-086d-4941-9f4d-518275ea0560",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f00024f-60b5-4764-8467-1fdaf0190dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc1979b-0691-4e55-b6e1-6381b3ed88d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5fee8f-672c-4f91-abf5-e74bbd73bc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "82a4c3e6-3424-4de8-b5c4-a53186200542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f950d624-3628-47ba-8d07-980b8c72e0ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85eb699d-50f8-4625-b2d5-b61a6109a3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb5ff20-579d-490e-9cf5-ff42000c3538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ececff4-4c0a-4050-a9f0-74a2dd9dc3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2445167f-ed5a-4526-8092-907f307cb491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f5fba5-f1e1-4dac-8954-6500b1f60178",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ada279-81c9-41e5-af39-3173802edc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd257de-0738-4ba7-ae9d-565f55fb79b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa8afed-32b8-4fc7-9da3-b6ec9448dc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "91e6aa94-78d5-47ea-88f4-ab8d042c30be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5405d52-a13a-4a50-a6f7-064ef96e9222",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a1bdaa-efbc-4960-8504-1abc0e066cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4653a991-f12d-4974-862a-bc562bbb1e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11d9964-a88a-4d21-8715-85484d16d270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c072ec4-f0ad-443c-b37d-1dc983aca8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51eebf8-71bc-4dcb-9954-acfc72b9785c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4161ed78-5cc9-4e77-9b20-747a06e15653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f70571-7bdc-45a8-9fa7-7119a5b4c2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac04c8d-e16c-4be7-97ee-b2eeaca74ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "afd9e09b-d264-4e39-90ef-98088bb38f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d935948f-2167-4503-a803-bd0dcf018083",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314c783f-6c8a-4cdf-8023-9ade7a7a52bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d418bd1f-6956-4a65-9327-871d7817b1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588aa6f9-7d12-455a-becc-39df89667cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27212d3f-c1d1-4197-9b9d-a5d3e8a86040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4223d54-fd23-4905-864d-951df377d565",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1661ebdb-c6cc-425d-83c9-6dab4ce3c1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6c52b3-6be4-49b0-abb1-2e6158928290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0681b76b-32c5-4b0c-96e3-ff33ab0e15e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2eb639f-04e3-4d7f-9ac3-fb634e6331ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a3962b-a4a6-45d0-9370-cdefc47738ba",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b74ab67-be49-49a0-bf49-e1c7ae704eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006b98fb-a57e-4d37-aa28-a74c6c0a5ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc35c405-1f9a-4223-aae7-15cbda1a8ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f431865-9a56-45e9-a92c-03cf480776e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38477d71-0feb-44f6-a077-ac7580bcfb7a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0204a0e6-eaa3-4c64-8216-d9533a4cc236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce59cd1-e229-4278-b717-225217a015df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7425d477-add5-4de1-96df-836f15b2ebd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea92228-e5a0-4293-9768-d1d6b0eb17da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a3aebc-0ae0-413b-8a35-55981e388e02",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e2cef3-b5dc-4201-8a29-cc9b5dc64fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218ddf1f-cf3e-45bf-924d-f6689e9808f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79f9d5c-e76e-4ef8-b60c-4348a7c83602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cadf77b-567c-4c28-8c80-918bfce4dd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd84b11-a9de-4d4f-aa02-b2460d39ac74",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbf6332-d3c3-4578-a5f5-34427b45602d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf0213c-843b-4b81-af2d-4f19357bb548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d8c030-f1b0-43bd-bc08-64729581502e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e12ea8-a38c-45b5-a2c8-440a1077b509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3338867c-c3d4-4966-b007-2331379f9447",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30da59dc-4e03-4117-8aca-7cea92d297f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35abc18-e7b6-42bf-920b-517f7f8456d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd04c94-fea4-4903-b1d4-70afbb00804c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d032ca-314e-4b47-aceb-fe3814fa8f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5a87f6-e835-4fe1-b592-ddad255387f7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708b9ecd-eff9-4f67-9f96-a29ff43aef3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "820d8b90-5f03-402c-afcb-18d98743d94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4928e3c9-d069-48a3-a440-0d2d5bc88545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a36217c5-9b4e-48cc-89a2-3a6c8ba01909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5812ad0a-95e9-4ea5-9740-bc27fc816d2a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170bf48b-df56-465a-a6d1-46eada481d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11d8a83-f949-416d-8a37-cba19c27d96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361f3762-e75f-4dcf-a597-94d6f442f814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64cdc00f-ba06-4662-9e10-382f7d8abbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b86d6e2-9236-40da-8851-cb44ff4a91fc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e620605-cd4f-4c9d-9b4a-1685ee6e9807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e16176-c583-444d-89c8-c403d6a2ae0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5622b9-7155-45c3-852e-60a30c3175ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdeecd5b-f787-4011-b8b5-6b43ada76af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65291148-2088-47e3-8528-4e2d0d497cd3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ba560a-9e01-4fc6-85a0-112e64987e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4752fc7a-abd5-4cb2-82da-92253756c5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c7044e-a671-4425-8b8f-e7f3a94ddf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f25e4f-91a0-4052-a21e-523b08ea2d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1429a571-f6b1-4527-8ded-7f269d4c89c5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09a78ca-fff6-44e7-91e7-598e5959c330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882da2ef-8fe0-4729-9320-114d2b547bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db620ef-99ac-43a4-8929-955ee210f035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b586b1b-ed84-45ec-b5d8-e11d07ffbd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec12b4af-c9fd-45b8-996c-37ec8d945854",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d95a17-bcda-4b43-8e40-3f73d6f8686d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c78837-31cd-453c-af9f-3ae23e11d515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9065afd-429b-48e8-952f-689fa211b801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4891d7-07aa-42bf-b89d-9488023cf169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d053f568-92f3-4a5a-b1ba-e03b31a99128",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf566ab-7c0f-47ac-bd50-0778a21cc648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f385d95-0fb8-4925-873b-d4f104ceba51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d257c7f1-094b-4f74-bbd7-740daf99fe50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64a96398-f3a8-49a2-a77b-1e765f2a9d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a5354a-d235-4ab9-9a6d-a50bcd0a2b6b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7003a89f-b0f7-44c1-90c3-77d2c88fffb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1a3e41-8bba-494c-8ed1-4d2e582f5cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3058afe5-fff5-4672-b176-5dd6157b60ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "022318aa-3eee-44ee-b488-de9b22aa7c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257388cb-3610-466e-ac8c-810b4d86b163",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9405ecf1-c72e-4aff-8407-ac0bf8df5b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9661865-0193-42ee-8b0f-59fe1b5f327a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71209ef-2923-4f19-a6cc-73b76d46b7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f44958a-d769-479d-b32b-e0b329cd1c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bb9205-a141-423b-a345-5d41f6973554",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57129955-4a92-42f2-a995-13eafc0d472a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d13645-56f6-4152-8053-74d7bc075a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0bb9ef-1fc9-4d66-8494-8fca9f45a80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b05bf707-2cf4-4b86-bb97-c854cfb09d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb66efd-e533-42b3-bbf1-09b03f1f91ff",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08128cea-384c-4131-a923-07019e223e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64427d2b-318b-425f-991b-0ddafe7b5bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d1bc43-4274-45af-a6f1-cb7b5eebfc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01d7ae21-099d-4c35-83d4-6f36fd6829dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6537dd2-fc60-4881-916f-126f465f88c4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35008cfd-aaed-44a9-90ff-4a0cc42c874b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed63181-f330-487e-a428-273bbbf76893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4729433-3d7e-4352-8f8e-27ed18ee61a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2964dd71-1c70-4d05-9f02-b8f6ca9d95e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a88ec89-89de-4385-81b2-3057ffe12e85",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f819031c-fae0-445d-9324-f8af3e2b2f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb62d82-90d6-4e69-ab7f-2af98fea901b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d1e0e9-448d-441e-ba4b-9784474fbe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb81d393-3247-4317-ace9-68ff89d755ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb04dd8-1357-4dde-b554-f1886cb6b49e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f82b6c6-987b-4d6f-9442-5150c0dcffb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487cc26e-367c-42da-bc04-7b500e6efd0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204af748-e70f-4157-9985-6debb002b0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71f0bf7f-d035-46a8-a83e-3a81c63f1d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d44c5f3-227e-411c-96f9-2d69bd3f6151",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4efcfb-c268-4b4c-8def-9288879fe6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc0af40-b52e-4cb9-be4e-6b661aa1382a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4e7367-29cd-481f-8692-7ce3b1a2d443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4c708d-052f-4abb-b5be-b07f5b9fb2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c0ab2d-d0f5-4b4e-939a-4aef68137fac",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be772ab-37a2-49c5-8166-e6e6ce900600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce3695b-398c-4029-9b84-78d17afab94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ed9a80-69c5-4970-896b-10e71ab540a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e95d2abd-0e10-4562-babb-84e304fdf9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ad86a0-bb5b-426e-b9df-95a783b06ed5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cac7de-b606-44e5-ae7b-ce2b8dadee56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b97ea98-1207-43fc-847b-64b26f433957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d074097-efc8-4b0d-8a4b-88aea3151612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "40283fce-3f90-4153-b9dd-18433bddb1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c78d6fb-f51f-435a-a5ac-09514cdf9fca",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebda01bf-7bad-458a-a374-3fbd436656b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c68a98a-72c5-4888-bdf7-8b7d7dc27f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210f3929-56ad-4b63-a690-e3349d41d3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "457efe06-e4c2-4b95-a180-3dd01ba1910e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b712f86-c15e-4ca7-9085-601cd4489008",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa85fc43-93a7-45e3-bacc-d3d7b454467a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99d7969-6b6f-430e-9903-df634a6a9b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2455c7cb-7f98-46f8-ac02-c01d3ffa2d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dac52796-4970-4535-8e41-2ce2d4362b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c835fcc-65b0-41f2-8970-7ca66ebe9e1b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54975a50-4cb5-4bd3-a2ce-0448b29ffce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d9393e-a0cc-4b75-8896-181e89f08264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13722b29-a87d-4108-9c5d-4f85b690c264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8280b8fb-0d46-40b5-91d7-6f77fbbcf33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84e51c6-823f-41a8-80bb-0827089ab8c2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076c8918-db03-4d77-be97-1d0e7990dd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca9e6e5-43de-481d-8b5c-267f08dbc4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d7ec4e-e649-4382-9511-9a6e5ffa427b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "48f10cb0-dd53-4aa7-ab96-3527925eea26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c194a99c-65ed-4bf9-b472-2fe2c6a14c95",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cc04bb-7901-4d6d-b7f0-979e28c48040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "59b09aa6-93b7-4dc6-9848-e0dcea603581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cad64b-3f7b-4a3b-9ea7-278735584c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dff885f7-2de4-4e74-bcda-2607c8e95670"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18593885-af87-437d-a8bd-1d36d3f51d69",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "761a2d88-ed0d-4398-b209-1e8f90869b4a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1208448-162c-482b-ba64-bb6a34bb0628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45406ffb-9f32-492e-8487-006e415b5e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd434e51-3766-41b5-8c8d-0eac6ae98c93",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fab396e-2e0c-4f82-bf54-59748dae7c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d29f345-d13d-401b-899f-4dd87dd7f41b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7edd7f-a617-4e60-8424-a41e6050c3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8197804e-9f4e-4840-9940-7310fa88c5c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e6acbd-17b2-4a01-915e-317fccb3a530",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4506539f-770f-4dd4-8502-ecb6cb16d57c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65c3a570-8b09-4c01-a5ff-c165ecfdfa50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d500af7d-284d-4e66-8a0b-6366f0cf494b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "894bfc8e-7128-4fe0-82a1-975f46dd95cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "816d9baf-65e3-41b8-ae7a-6b44e09a85aa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e084a185-0ff1-47f7-9945-09bdc0dac05d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89a02c10-54bf-42d1-ba25-64427e95a622"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2455269e-f94b-45b1-882b-959f37a1fef7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "634f4795-5a33-449a-9848-59e81b80f077"
                }
              }
            ]
          },
          {
            "id": "f187057f-228b-4091-8c3f-0756863a1562",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2721c0f1-9ab5-40ee-88dd-6c209faaa616",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9829f22-90ba-4109-8ade-c9df13c15a6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89202f1f-f466-4811-994e-2ea871cbaf3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e19942eb-7961-4a4c-8e03-87e582715f4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "accf3a0a-e24a-47e9-8f24-5ac47289af03"
                    }
                  }
                ]
              },
              {
                "id": "8e927f79-5dee-467d-847c-83427d801fa6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11669e69-d1c5-4593-93ca-f5093953bbce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77872c45-de62-4160-920e-fbb372015d52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32f83eac-5700-4861-82d4-b629b1d8a632",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8fb4dc6f-fbf9-4d9b-81bf-146ec92a8558"
                    }
                  }
                ]
              },
              {
                "id": "c5b502ec-e6df-4a60-9c2f-b94ed23a41da",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "338fa2fc-72c8-41f6-a45a-d5fb75b15f05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a55a9d77-ce42-4f29-836e-5271e32106e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28ec7ee1-a6d3-40d8-91cd-d81a1a479b3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68b563e8-6dbf-4d3b-ae99-69651ef6ca99"
                    }
                  }
                ]
              },
              {
                "id": "1791d407-7920-4e7f-9a79-2cad42176702",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97042936-ef09-406f-8134-85825d0a572b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc712301-3ffe-4863-bfa2-c146b6535999"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f454fee5-c075-4322-93c7-230e9e54dcca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e90fad8b-5796-4999-8496-709a59290d26"
                    }
                  }
                ]
              },
              {
                "id": "e2ad23b7-3b7a-475f-beae-9279f2039696",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e205e7a7-04d7-4dc2-87b1-2c11785ad661",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95562457-c508-4153-a22d-c1f210f6537d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2cd7a3d-eb68-4d3d-8db4-17edb500a347",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f4cbf6d8-e73b-448e-a723-b255d744910e"
                    }
                  }
                ]
              },
              {
                "id": "6263ca59-5765-49ff-91bc-f42a1c6d41b5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b2d00d2-1ce4-4ffa-ad88-c229604b7848",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aef39433-ac50-4e17-80dd-964c036ae78a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d765d67b-c285-4131-a4a8-923fa5586f76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "51339c86-f280-44d1-8624-2332c41a54f4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2ed665ad-05fa-4746-92c6-ac326d26ec90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "554c9d52-7615-4926-a65c-7813ec885767"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b1fbf53d-4af3-42d6-8e04-493db52f9e23",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3644522b-b5a6-4251-92de-8ced0d5c8700"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69b5efd2-6c77-4956-9df7-912933de6dd1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e00f4df8-db1e-48d0-acd0-924c2e2d4a0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85eb172e-6f17-411b-8546-31ef78c3446a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e7e1b8e-d445-4caa-8da4-cc365cb27471"
            }
          }
        ]
      },
      {
        "id": "09bb9206-005c-42de-8eb0-096f34e3ceac",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "723cf327-1a34-4bef-88d4-6ce576de3919",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53b654dd-01a8-4ac6-989f-fb1ec6210eee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d8d4e762-2351-4a84-a7f4-0328ed192201",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38591bdd-c55f-42cd-ad70-c3dd4647e109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3556fe-dee2-4571-8f8e-a970b5a69fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34774cc-80fb-42a8-b29a-fcbad46f74f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "669284c7-c67f-44a1-9fb1-3c56fb9134b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addaca68-3634-44d4-a015-a4f06b42897d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa494fa-04d0-454d-a93a-bed135025861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e9934d-11bc-436d-b957-2cf9bdebd5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cacf52f-c343-429f-a7be-3c7e382e921a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d029640-1ebc-4c01-aef4-081bbd538021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f88d12a-88e0-4d82-9c77-e5fd5ff9b91a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8368b63e-ccda-4f74-b2be-1b0961cf6527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4622ddc-e634-4700-8f7e-fd3f4b3c769d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129f278e-a286-418e-bd28-d47b98ee7dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b81300cf-a288-45b9-94ff-8d2927796536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4a0e3e-fc2e-405c-a5a7-d551ead671ee",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8b21b6-cb84-4691-ad6f-8a996bbd29fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a3d30a-0e98-45b3-aab8-77bdfc33c757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df93f530-d60d-47f5-b7f4-261fb9297ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfa92fb-f14f-4b2e-abe9-5cf50cf03ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fe77f4-d11d-43c5-9dd4-3244acbcd0ab",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ab9e35-883d-4d11-a2b4-b20f292f670c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b78851e-e94d-4ff5-8ff8-81de7022b09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f0d122-d211-46bf-aa81-6b54397d336d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7d05b5-1a50-4e5d-8fcc-d7a28582a45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f8449e-272c-4329-892b-6d46fdfcd247",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc9dbdc-f780-47b5-99c6-226a1e62f7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcd8396-58cb-4213-afd4-d99a82607b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3fa01d-feb0-43bd-aeb5-67deeb7d82ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ac0f60-c3c6-4d57-9c24-5e8428da8992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c4e3aa-1504-4e3a-bc92-bad4155dc18d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8dc1c0-9c53-415e-8ce9-ccb666218bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5f323a-5286-46de-a492-424aba03971a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4f45ed-c2b4-43aa-9958-9154ccc4ed34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4c1df4-bbf6-49f2-83b8-6106259ea019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd3358c-ed5c-4d5f-9107-72e418c12d1f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ac7ffa-5886-4ebc-aa2d-97c0695e24a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64bd662-9833-4412-85eb-64a8b919c556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0058efa6-6c2f-4f40-85dc-3c19a3d99e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91454f9b-4f1e-4146-80ab-3bf4619c2f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687a41c8-19bf-4202-b726-b82041d15f8d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f389f0-4ec8-46cb-8601-3e7ea4b6b132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb1bb0d-3d3f-480d-9d0c-9a7895f78598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d487c43a-edd6-47d8-b9dd-5448b139c78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1768a501-d965-4de1-98f3-293bb29fdb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898833e5-cc3a-4993-8b04-8e5ee69708a0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0730fcc7-dab8-4bbd-9eed-0edf90852144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70f9614-590a-455a-925a-40fb8acfa494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51a8a9a-0476-412a-abb7-b64a43dc097e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6b0b93-f822-49e1-ad3b-4f408f426df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7638808-6987-44f4-b070-90514f9fb4b1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d201dbe2-2fb9-439f-8759-d2dffe84036f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4953c07-f016-4649-9eba-7b762c84aa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbbd103-78cc-4a9d-980f-6afa6c96d1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "78f828ca-d72d-4965-b076-ec3bb9b66178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1b74cd-e8f8-4719-941b-b47005f113a4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495b1d95-9659-4240-a7a3-d22042e1580c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f8cb3a-7ef2-4314-93d6-b7f8a77992e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d966cedd-d1d8-456f-9856-222900d0b533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5f16a0-6b13-48d3-92b9-9236a642db8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e629b3c-f1ba-4e8e-8ee9-fd1e87346c13",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc74cbf-84f3-4075-8220-66bc5c3996b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c758b74c-8b66-4e28-a9ca-1060c476bdee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb248591-cec2-4023-9129-8b735870c2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc70c4aa-aa8c-4dbf-aaf2-4eb060debb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1533037-54b2-4ab0-95fa-1089681a6dce",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1179676d-9384-4e1b-a9e2-f16b4150a59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4fd6ae-8741-452a-a88d-b19b3f54bcdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053fb22f-7175-4d4a-890c-7af73b260819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec442ff-dafa-468f-8264-3f1ef7e3059d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ba6cc7-73d4-408e-b11d-e215fc20e5e6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d7e3d5-6a40-4789-97aa-076d9cdb684e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f6dffd-a2e8-4a7c-987f-aa9a6a4f69af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d02d37c-4c90-4dd4-b2e3-9f59b3c00e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1658235c-fa4d-47b2-a023-348a5283a4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd52f85-9108-49fa-a09f-def97ea345dc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe00a978-4e10-4e50-b54d-5c7c4b870f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c4b37d-04ac-4f8d-8034-2f1cfaee97d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cba4ad-ff3e-45f9-bf57-1f77af294b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "39d0319e-f789-4257-814c-d8e03b552c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd21b33b-3495-4329-8c67-da816fa48121",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069f1bf6-059a-40c9-97ed-18ff03a8bf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc0308c-5e24-4aed-b84b-55e8d9bd479c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d41a69c-e85d-4e96-b45e-ee233aa453eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c06f306-f878-423f-88c7-63b77eb526c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec86cb8-d7a3-4edd-9ad1-945cf81bc4f9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fadeec-651a-4638-a9ed-a27336c85901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91aeab06-e5c6-4f6a-bcad-e7f2f9c5a581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f73505-400d-4fab-bf80-bbdea9b18b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1901891a-9c3a-4c2c-8522-61ddcf4ab0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9e3628-dfb4-4fa9-ad08-436698d529b2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5ae9a8-456a-45eb-b167-202cebc0af15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325a2b0d-dbd4-449e-bb62-9ccaa258bd14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4220b37a-dc43-45d8-8c9f-8dc0210c25b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb379a65-edb7-4d23-ac84-981d2f05fd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a926e64d-4481-4304-9cc2-224db9da00be",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3113652-057a-4e8a-9c09-9031af0660b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f62470d-96bd-4a81-a394-74a9fa40bcdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ccb454-0b66-4061-98c4-a705299404ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d9db2e-be85-46b5-9a7b-c15484eca4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385a7606-4408-420f-b1a1-2333cbd580be",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b20c7d8-4a6c-49c5-94c2-68eacf5c2089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927723a2-5158-4efd-84c7-bb9bd770f427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e5fad3-4510-4290-adff-34771729bc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a509f13-cdd6-4708-98d5-c4b76b4d5203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916c4c13-a9e2-4694-8b52-30cc2ee2973f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff472d3e-9704-487c-903e-8e2383c37047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953b65f9-0b91-403f-b98a-1c6fd366df49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962240aa-5e7a-415a-bb41-24eee503884c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d56b6985-d685-4d47-911d-fed909c96805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d72c9e-edf9-4589-a9f9-28d0ca15d0fc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd7fade-3c95-4cff-90ee-e6ddbb4171de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9b92d1-ed4a-4a42-86e9-331bfc1f72d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da69ea2-49e1-4381-a08d-19d39c9f7d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77928952-77ae-447b-8a16-1971c7f3fa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ff0aee-beb1-4595-b3a9-9a3bf9685027",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187801c1-504d-42b5-a6f6-591b4e94bd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7a3b37-8228-4e53-882c-41913abecc67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13601d72-f117-4ce7-983c-ee7d1ad7013b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50301909-766d-48bd-8928-86fcd3d81631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0123b2be-9c96-4d1c-a0ff-3a49338827fe",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178ca622-8a47-47c4-883a-3647f8ad1e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6697757f-91e9-4c5a-9a4b-a36ee9908b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95413f79-2c13-429a-bf95-e52a3947a144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95a6e57d-c80c-4c8a-b86c-4e6c65af3a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e290a1d8-aab5-4f77-96fe-a3d8dcf0261f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9653b02-d38e-4cf0-9cd9-86bf73f7a1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b099800-6993-450f-8ceb-21e3d0e9fa17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95dd17a-2c48-406f-b5ea-7a5b70338cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90707785-9a6c-404d-8c84-3ad4a6f0d498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d349b191-588e-4b16-ad88-3ac4a1e50dcb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99dbf78-1d2a-4903-a289-75ef44099911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082ff90f-17db-4ce8-8825-4887696eb822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243ab6eb-51e2-46c8-9d9e-bedc22c53c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd301a1-1a9c-4031-9d9c-f48bcb2e4b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e3adc7-618f-40d9-9b6e-1379c2354e9d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957d03c5-a983-4bf7-b160-24bc631f6378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c37a752-338e-49e3-8134-727fd0bcbacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cbf5cb-ac42-4f87-80ee-949b7a169217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a62d010-da67-4221-9f2d-d835a396e344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda7f289-71d9-4f94-848a-ed7283195802",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5699077e-e8f4-49ed-932b-acb3ba864f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086746ec-6528-448f-91db-9fd8c0d078e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5301e5db-0b06-4a68-85bf-9a818e96a3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98fac29d-b251-4ce9-83f5-9b60f7ad16a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc2c607-b5ca-449d-ba8f-683440ab0423",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981b0e88-dc3e-470a-a78a-87caf9633f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91613d13-978b-4cdc-9343-1cdc8eb9e3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512f62f2-3084-45fc-a376-9007a9eca4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59899781-158f-47aa-aeec-2c7c8304017e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c274731-f31f-4ebc-9180-3d79517d4c01",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601db429-26ad-4e91-8891-6d8300368be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7675c94a-e7c9-42fd-9cd7-96406b4b6e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258fa159-b2a4-417c-8d06-0dad658351ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4279d9e6-d09d-492a-b7bf-bdd6a0abde68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3097df-34f7-4bab-bce4-7270d56598c7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40570974-1c87-49c2-9fa1-175b14bdf019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610d2d49-947c-42c0-9043-33067b6c91f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b9d0c7-0af2-445f-9163-cf1e6f0e1bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f75761b9-55f4-4bd5-a675-533d6b771523"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14017cbb-c715-4d3f-a9c5-ddbcb60bacab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a46bb7e5-7853-46d4-a080-adf1eacdf59f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd5053e-e191-4326-aef3-98c4a4c22d29",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7064ae79-98bc-48e6-8882-e55197676ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4b46a6-1093-4ed2-ae07-df54416910e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c52c1bf9-6df7-455f-a02b-29c741acc59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8736d0-e47c-4f6d-a8df-b3fae47b7d71",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a128a02-eeb6-47c0-aaf8-a14cf87d2bda",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1657d2-870d-41dc-bbec-a418ff5fe336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66232097-2a47-408a-9d4f-ab68d68e95b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0b379e7-6218-4155-baa6-50391ae7abff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "122c15b7-fbfe-46c4-bb7d-0e29fa2e18d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3579dd5c-164a-43e8-93b4-0340051e0ff0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9680a489-04f2-43d7-a997-d813b92e6760",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4702de7f-1b27-47f6-b1b0-82ca12b3bbc4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a3b549d-955c-4437-8104-248df28cd804",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e772d9f5-96dd-4daf-85fe-568070025dc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5764bead-fe62-49f2-9e39-53b0a3e762fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a177e864-879a-4ca2-8c80-8f9bc2319d53"
            }
          }
        ]
      },
      {
        "id": "1e11ea29-a98f-47ab-aac4-12ad15b1c665",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c3bcadd3-54d1-457b-8dd7-8d15f1a54f1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d1edc3c-aca2-4e04-907d-9a87ce18c21f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "21335f0a-dd4c-4c6d-824e-df55650acba4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee578a8-42df-48a2-a633-75c3d713e50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5995f8cb-a932-4375-8403-0007ad6cebe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6f2198-7203-48ae-9204-51a7b385432f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e831296-e12b-49d4-8e41-ff39ad247f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328f69d7-205e-4bc8-8085-06439667d354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69bd23e-4d82-4661-a510-dc685ac5c56e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d994b911-2824-484c-9cc0-e2546e61ec9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f74ab7-4f61-4b9b-9501-c09a9ee0e60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8857e8-c252-4194-88cf-e702316c1d63",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c4cbb9-bd0a-47eb-8b1f-49400398ea16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708a236e-b945-4992-b96d-52879cb20a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d787c177-394e-458d-88b1-d6b32e4d04b5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1448c484-eec3-40ac-8c2c-0d7f15762524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403ec7f8-53b7-4a2d-b356-df5fe63b61bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94681872-6714-4fc8-85ff-9114d1207ed8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4a9f12-7343-4a8d-9cc0-a4320d052682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424fc7df-09e9-4c07-9e7b-4d159303d95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af22f849-635a-4bcb-a315-f0c6baed35ba",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65a01fc-bac1-40c7-916d-8c94fc960bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356e57cc-cef8-4101-92d1-500b3edef5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba52efc-8a4a-4631-9a51-83857340fee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4a6158-f271-4418-9a69-ca0778835687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ac66cf-4f9d-446b-9cf8-95fb58def177",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76623486-9b34-4101-8825-ae0a4a5beb0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8aa2683-4106-447c-9eb8-257bdd43674a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747f5903-3765-420b-a715-6ff4043093f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9818d6ae-66fa-46e4-9add-638223391041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1840e92-ed40-478b-ba0a-72f0402fccd2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e864938-ec38-466b-958b-c037e143a35b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d811a197-3c79-4d4c-b258-5d3dc80dddbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ac9077-0923-473f-8d71-f8fda5849d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7dccbe-27eb-4b6d-b999-ec9251ec79d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071e274c-f939-4562-9137-399ebab93ffc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc0e97f-571c-44c1-b53d-7343d6c5878a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d8415b8-ce1c-4fdb-ae3b-1606ec72ade7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4384f55d-48f1-4ef9-8346-1a82a452e75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b567de9-a4a3-4957-b531-018af2443010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61328ee-cc02-4763-83d4-9b88b577f64b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25810c3-80ab-44cc-9604-41ff6b1a8c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ad96b0-4c47-4451-9005-c08072ef6ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084a405b-a131-4645-aff0-afbf39a81262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2467de6c-7399-4f1c-97c0-4d814da94fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94395bf0-3ac1-4383-a446-9338be1a458f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a0c396-7123-4c95-857b-06340c863769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfe536d-76d4-464d-b2c0-723a6f61e08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f131fd8-78dd-4ea0-a981-7c569750dcfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d3b734-ed61-43bb-99d1-de4eea218f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb053ed-ed83-45d4-ba13-c7a87c0c8ea6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876a3424-8aca-4273-bb78-fec9141e783d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74b3f813-fcee-4160-baa8-98bc0776948e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cc8598-cf4c-4680-8aa7-7b007bd33702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfe11d8-ed8a-446c-96a4-77d11dfacae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea65f506-11dd-49cf-99ba-41555c790752",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9d8085-a6a7-4d12-945e-17958ef62e4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c968cc-6da8-4f3a-ab68-64161a6e4c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400a2775-1dfa-4bc1-94b5-baf777722831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd89e848-86f7-4f01-a49e-88deb8906bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e747fe9e-e33a-4201-b61e-912d1a1aa2d1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ef39cc-3db4-4cff-ba43-5487650a5ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f39f249-c49f-46a8-89d8-a7ea81993ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c02fe6d-9c32-47a6-bdf0-c1bdd3aa6558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f421d008-9dc9-4d2e-a503-7a78b78de238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ceddeb8-eb88-4dc4-9b7b-8f59ddb39dde",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f152a4e4-c9f5-44d7-bfe4-0b4f36d09149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d5ecbc-ed4f-43a7-917e-8568e793d0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c28df8b-aee1-4ecd-9afa-d1cf581437c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da09aef5-3586-49f1-800c-1cc67872dbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a58fcf0-abfb-4a43-b3f5-a7cddfe4a71b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b36ec0-110b-499a-8765-ccc3b74387ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59bccf7-5707-43ee-9c81-8ac9b9211d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c570fd43-003f-491b-b436-cba5416c0303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0875893-c68b-4b57-94d6-88d0e7b91d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0144bf7-1f53-495c-a3aa-bbd9c5651273",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8950160-c935-44cf-beb3-ae3df066f5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a5917f-68a7-42a4-b986-cef053589f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1125dbd0-0db0-415f-be33-05aa3c2240bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b03db44-e9a7-4c11-80fc-2538b8c6c0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ea9b10-a3b7-457b-8e2c-dd03f3c43bbc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3abcfdf-4511-413e-9ce6-571bb0e5e0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c82f94-f9d4-4e0b-990b-caea17a1689f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cef16f0-9d52-4c83-9e36-0188da64763c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d85fe6-c508-4ae4-a2ac-623d24d1923e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3fb88e-2eed-4882-b091-dee4445d3bc0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3799b207-9335-4a55-b30f-0439c4a8d937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f186328d-51b2-4e53-9efa-c0817b8f38c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9ab9db-986f-4885-bd92-b3390facb144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4b33a9-e913-4064-aef0-75132def4187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141b516c-09fe-4dd0-8dfd-531ed01930a7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f2586d-654d-443e-81aa-4e6ea14660b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8145ad6c-a539-4b5a-866b-cb17b5204ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68837bf6-18d9-4afc-8e12-6ff4485f8532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4ab42a-6364-4a1c-8872-e4771e4194af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8aeba58-b24b-49a6-b566-b97144848519",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c4d520-645d-41ea-aa03-564e70e1827e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d32cd8-18d8-490e-ad18-b7b9738f0018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd7e31a-d450-4a17-bd0a-133ccee5dbe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667465a5-5b86-4ea3-9d72-f74b85afbfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c0b58c-23cd-486f-bb64-98cf872edb3b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76378828-63c0-4f6b-8606-ee66369a4eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c90c141-cf96-4199-a67b-4f3518984efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a4ec59-c2f9-4f3f-b8b8-60496dda45cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be78d19e-6701-4159-b3aa-80f777daaa52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9b1493-4390-49f5-a688-a67ef865736d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f145a842-1749-4b35-994b-25ec6010ff66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c86350d-f5c4-4ae9-aa61-3193c0b8c991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2588d50f-a57c-4d9f-93a7-1914eadeb4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545369cd-3b64-45e3-8544-dc5a07216f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54969ebc-c199-4c1b-8efb-32e69094d983",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b917f404-750e-4518-a1f1-e8c48568f21a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42a0bc6f-cb93-4c6c-8c6c-66d61d121202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ac71df-2d06-4248-8634-aa8788e4605f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150cb832-5c82-47bb-aa09-b1c4a8dc990e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cab9e29-11b6-4b28-9951-312be9c64918",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db890ad0-3467-4217-8ea8-c89d4c2c12ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73c54361-2773-4cac-ac7d-be3697d7a744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8379842-40d0-4127-a07a-d22ff94698bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6deac78-1715-45ec-b8b8-553064de6a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6948d47-f22c-40ed-8691-efe5e1eba54c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50db6c74-8d4c-4a0f-aa54-025aa30c7298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09764772-3570-4126-a90a-ed458d09fd19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d3ed94-1b03-4761-af45-1d100a03d806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b708dc3-cb03-45fe-bb77-deb4e2b7ece5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9bfc56-3b67-4519-b723-8a8fc25222b3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8290e6e-be8a-4c46-9d5c-4262a031bea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160fe93b-47d0-43ff-9372-ef08e7932a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0964d848-d589-4587-99ca-62afb5cb4f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55b728d-1dd1-433b-8af9-938ddc393e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004a7f08-b46a-451a-94e0-2d1046aed49f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549facb5-41ec-412b-89c8-112c8cd67369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b335cdfe-9db0-4c98-a326-b02685ed67fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2667555-ca54-48d6-a42c-94189255d87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1fe3fa-3617-408f-9ae5-8d2fe00d5bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0efab2d-424c-47d1-9080-63f2cd0aaae7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a86ad1-18c0-4ac2-b350-f8e25b671f81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b009f0f0-2d86-4378-8d71-3beffded0daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bc1ff9-5bce-4435-a7c1-4da61304096a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ed7a16-22ad-4c95-90f6-beb49e54a58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054ff63c-1c36-4849-8384-b51a22dd087c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91c1eec-29f7-47e5-8e1c-968975d1e463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e78561e-4b7d-452c-baa2-9b31935b1547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeec36cf-d69e-4589-aa9e-8baf2a5fb2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ee1515-59e1-4a4a-82d8-192798eec3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05655b9e-8992-4581-9a29-b525bf4d3a21",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0362b7-1713-4b0e-80c2-b0ad9d97a10d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26206197-571e-46ef-87ef-2f0b5b205f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141261dc-44c5-418d-81c0-b5d108bf49be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d048f8b2-1cc9-486e-a45d-d413b9a304f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc00916f-128b-44e9-aa08-4231626e5e0f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe22897-cedf-4ad5-9c4d-64493867e3a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcdc9ada-6a80-4d03-b117-b6c0f9e0533d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc3e843-4bc5-4b57-9b17-266b285a4e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e850c1-642d-4f4a-86de-803bb4f84b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67e4399-ac71-48a8-b6eb-cccd6a2f051f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5db0fa-1f8b-443c-b47a-3937b8cdb7e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3c228cc-14dd-4185-a18e-45b23736acac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db7a124-47e2-4d55-a877-b6913a8c5750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee38a306-147f-4c5d-80ed-2905f6967f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b150f08f-83c9-419b-a345-ec5365443427",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b44cc1-735f-4d53-aa00-724362a3e694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97183794-96cb-4a8b-a22b-ebd1e933892a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92ced51-6b1c-4d05-be7f-4745c908d44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a86651b-048c-4157-92ad-23c3f6161737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56871e6f-63a3-4b1d-99b3-5b7427d832a1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb1f236-368f-427f-a472-0a7467cf8dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1014921e-abb4-46af-96c2-46eec99882b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f969028-4d55-4823-bc78-928c624d8752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce59dcd-4dd5-45ea-bc52-6305d37aa45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b99416e-966c-4ed7-b927-6ff6df16e423",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33306de-cbcf-48e0-a0cc-727b2b35bfc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483c7788-94d7-48f3-93a8-a6417c4c12b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fce332-770a-41b2-9cd0-bb278a86346e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799c0680-6f19-4d28-8ff1-a5c3e5919038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f39c70-462d-4ab1-b07d-9baa507fcde2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c93344-1f96-4a52-8bfd-1649b2bbd33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d08559-f44c-40f8-b794-d363f5a6383e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ac88eb-6fa2-4f4d-8607-d585de64444a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da13e94-610d-4657-b39e-31494835f68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616f6412-8448-4191-9ce4-dd3ccc71f8c3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8973cd98-dafe-411a-ab3a-f3b7fb00b166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e964077-a438-4b38-bccb-efb07c84bc96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33323e79-1c70-4fa4-8b16-bb4d67970d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638f7247-248f-40a4-8439-559c9621f6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a62811-ce08-4ebf-b896-ee1d440c56bc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4782e3c9-2c5a-44bb-99c0-2bfaa0d8ff93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24dab96e-eeb9-440e-9c31-0e09f94ae64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006398ca-986d-4fe5-a630-03f3e22c3bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad42ee75-761d-4a4b-9331-9d63d7d645b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef2a675-c978-4920-9576-1c0fdc2d42dd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214e9c0e-1d36-4ea6-9225-99071a9d9cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38252d89-7821-466d-8ab5-4d794aba3754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df96bb8a-75c1-4e4a-87e0-c8bf46034aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0b65b6-c404-46df-9c3e-db970ef3f233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61391bab-460b-4261-8464-c7e13be1bd5e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8356127c-77d7-48f6-bedd-d11ef19b7a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5740599e-1b67-47f4-a723-eafc183c4cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7151a38e-01e4-4b9d-a096-74af0491b68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b7176a-afd1-427e-81a1-e6070ac04076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f497472-1128-4cca-8289-62f0383846a2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba16440-4f26-4297-ac01-f54960ac8519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9a34cf-4ed7-424a-ae32-bbe72eb263a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb658a01-d47a-41d9-aea8-8628907c72ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0a9459-6dad-4186-bb83-3e9839cfab46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aee4559-e715-41bc-9739-faefd1c75982",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f168515-d565-43f0-9232-b386a1c94854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72990194-8659-4b9d-bda0-9ad41ef759e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26ab57d-927b-4efc-b0f1-a57cfea79881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895bb386-1855-4e78-95f9-7e87e12169a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e83209b-a0a3-44b5-a579-ad395875f67d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9ac47f-4a73-4fb5-a8f4-42706db0e30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ddeb284-2c52-4264-b07f-ce72ad430d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81dc7b4-a116-4316-b811-2b3433a65cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753e1057-6f94-4419-8972-f9a3354cb490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29fb03a-c4e5-4e70-859e-1bddbf8b128a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5070b6-93d2-4781-adc8-61e48d417753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261f1517-0084-4717-bbef-3bda96d4a436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a587e6-ba62-4bf8-b836-5237046d1c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c218a601-55cf-4923-a85a-124106a4bbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2b0ace-3cd8-4722-85e7-eb0574c3d976",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6e8adc-6f08-4a33-a962-9b2d715c0011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd6a31c-9ea6-42b2-9bb1-685bf36cdd96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dded01a-8cf0-434f-b4fe-4bfc601ca8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c195fda5-afe7-4764-9697-4d31fc85139d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffed4b9-85e7-41a1-98e8-28985906ea8c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c55b7c6-f3a3-487e-860e-7d42321dab58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449aec11-e5b0-47c0-8649-2b9fc4ca5b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5358d6e-ad5e-4ce7-beb2-29f5b282c71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873a9c68-f79b-4f8b-8dcb-62a8645d2432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e81777-dedb-478c-b4c5-9176f2d39352",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0498e3b7-6c75-4d29-96ae-a02013b93823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4debd39-58d9-45a5-8da4-e36d8ffc260b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0345e65-c492-42fc-93af-c3b8bc13d253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c7a92b-868d-4da9-b371-c56fe3bed44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8934cf-11ee-4745-8459-31718710ddbb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa5d939-8ff8-4cd0-8815-251d66d81320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705d30c7-9cab-4610-b75e-faa35f45d6e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38224316-26ff-4945-a08e-506293cb8638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0fa726-9302-4564-a504-557d256570e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affbf991-538a-4b65-be51-9d01f637e161",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121dfdb0-5135-47a2-b6d6-d9ad9021c8d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36e02fe-8698-4932-bebf-732f77ae9a9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd720b28-adaf-4bdb-85fe-d487a0cda02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62139c50-f46a-44a7-b578-aec656c77dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ac4775-f976-4b02-ac80-4a776bde3f91",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a9cdfa-5fc6-4c4f-b01a-2b76a977b0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ae48ae-bbb4-4be4-af3c-6abd6935ff41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f3e8b2-78de-4373-b8ab-06479dc4ad7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d7a040-2c2b-4480-995b-99cd1c03a358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6712a28e-8de3-4a50-a5f6-2c3b1a447e12",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d048490c-cbf9-4403-bac4-96041c7277be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa04e5b-4fa8-4689-b5c6-516e6e0ce314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb5a833-cea7-4497-ab98-a4e3c961cfd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76fc407-df16-432e-b94c-727da6daff75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eeb944b-9aa9-439b-9ae3-7de4ef333b98",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cec51db-b5d9-4523-8339-c0c2b6580fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1f76c0-ff17-4cec-b5e8-8370bac640cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb5f5b1-5c48-445c-b69e-1fc6f3c8901e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a084626-ea97-4919-a198-bd7eb8622dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d86d329-b6fb-4a70-9ba0-672c28145307",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46f785c-b570-4a6d-b96a-21967a11fd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c56b40-b72e-4e17-859c-b1299bd0c8a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec6cb3f-0997-4bcd-af02-feb8139345b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656396f2-c925-41a6-bcaa-26c53542e51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bf61ca-8792-4777-bdf1-05eb4e0d7a59",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e4149d-1f56-42f6-9d73-06937bd2a5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aad578e-ce62-4b2d-9497-c252b6d78cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af82240b-bb4c-4704-91aa-c691749f045c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020684a1-cfe0-4958-8c32-ac2a61c576c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa25721-646e-4adb-ba62-679a6d790bd2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca8aad5-3cb7-47f0-afbb-8412b90bf512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656d8fe6-c91a-48f1-857d-de6dcd29d4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf947de-a61e-49c4-bb6e-191a12da6fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b98692b-9888-4809-a506-c209e6b15799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d090435f-f167-4391-9a82-518d9d4cd9f6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3d06e7-36b7-40c4-aacc-43621e97bf29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410ae540-a905-4af9-b725-2a95fbdffc87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2ff42f-6ef0-4642-842a-17e47bb064d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bddf0d61-fd9d-4e64-b42c-75409bee274e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b2e3bf-835e-46ac-bab6-cb78dd69f7a3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea35aac-fd4d-46a7-9877-eb1bd5744111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b1dabe-94a8-4cb0-af4d-0f3f4aaea841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f5a492-f485-403b-a2a8-e7226ebbe5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ddf71d5-0b6f-4071-8273-9c9cbe521205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0746cc-6bf2-4f62-9d07-2cf232f829c6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6750e1c-9545-4da2-bee6-c7f18809c8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a486517-945f-4c88-b324-0405ce3798fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e281a7-c686-4327-b72d-f1df669b02ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff64cda-f6c4-4207-a45e-c7a1e6946179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4970b8c5-818a-47ac-8a70-866ff3b33e94",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dffb41-72dd-4fb8-acb9-af4e18bc45f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff186047-a729-47b6-8c10-06031d962138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4677e3e-8990-4ee8-a1ec-0b2c934844ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef11b33-3a2c-4f2a-bd9d-73c9b2598152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c184794-4089-4b1a-bf58-101d9829a8f4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5805a1-a4f6-454e-a3ad-975b52a104af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193fdb8e-8528-4c13-9456-22b2c2ae15ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432a840e-f96a-41f4-a625-d4e40ef26800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68728254-0442-4220-b561-3c28a7f4c0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df834301-abbd-4090-a097-f7fc9c2107d8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0458aae9-8a7d-4ff6-a266-de0bc6d551c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226a7dc1-dddd-4a98-a936-16a3d0ee6dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842a5dfb-c701-4474-9cd5-2d8bf33100ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6ccc03-ec29-4354-9f84-cf3390e5a6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f7ca7e-c9bb-43e1-a9b2-73ad91c4f23a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e37fe27-4848-4730-b18f-e8f2d3f1e49b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f2cd5e7-926f-4bb7-8f24-2cb6e216be84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc6c511-76d7-496b-a648-e4419175e098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600b2de3-3661-4509-83ef-c5c842607f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd93fbfc-e3f2-423d-b7c3-dac73a9a93b1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed24dc87-68dc-430f-b925-80406c00a4cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d9a422e-99d6-43c6-bfc0-8f2f5f6896b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27887bb4-4dcd-46fe-b386-4e784eb2c70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dac7957-aec9-4b3d-93cb-51d3b67554ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d189e35-488b-4bdc-a2a9-0ad2750de338",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7594c5c5-0312-4c71-83c7-9447778507c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "838219f2-8469-44b3-bdad-94d9e3c1ee38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ba9bd8-94eb-450c-8699-918472115330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413631ca-53ca-48dc-82ba-c870014a0778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfda4a5-188d-43b3-95dd-46a03fdff7ef",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95650378-e10c-483a-9b8a-cc041ff75261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6194f442-ffb2-4786-8ae2-79ed4864da67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94971b1b-8343-4928-867d-2c020c843ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14f7703-1b79-430f-894c-2b9425b18e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b6957f-5393-453a-a889-7c14955dfc64",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d43fd3-0303-412c-8f13-28450fbeb975",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41b553bd-8ac7-4c9d-b9bc-2306bb1c82d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fdbd0a-0f63-4661-946b-35303aacc9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3720c081-e28a-43f6-a206-b8ee73835327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a558ee73-6621-4703-98b8-eccfca7045e3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69626818-aa87-4385-8a90-bbf213ccf824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "456df181-af84-4c6b-be28-e215ca24255c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729b195a-41e7-41b5-8be3-18f4d16d89bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980fb8e5-62cb-467f-9e23-e5403cc66c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426017ca-dcb8-43d7-8673-b4722b6c7f2d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6319ab79-6e6c-43cf-a244-fc841617b791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad214a93-3778-4381-b60b-102403ab7adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96714e38-9ecc-47bb-b00d-fb989fa00c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7489da28-e2fe-4cee-99d4-3ab035b570f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216c61e5-eb88-46f6-ab2b-79f0f0d89fb0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fba6ac1-ea65-434a-ac86-d25543eefa56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e13b8b86-29bd-41db-9c41-b53926fa5904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed2e916-4db1-4a90-824f-1f91b9570dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7547585-3809-4258-aa60-f30d91be7094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeab0cc1-3bdf-4a42-8d22-c4c8e0a9fa98",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be627f6-d291-41ca-a7fd-0b74605f2b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5e0fb60-a7e7-426e-847c-e705d4a4df46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49f1961-c22a-4feb-b85d-73c9a7457ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0fd683a-a72b-4e90-92e9-0722637baf1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4931a874-b075-487d-8b4d-51cc4a69140b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3596190e-381c-46af-bdb3-cbd92ba0c273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8a2ca17-0433-435d-9480-0f0779119a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2840e1ee-b63c-47ba-bb87-3a2e05658e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93216f8d-9286-4d16-9fc0-5921a7b51449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b08f3e-72a4-43c9-81ac-82a8985e570c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12c3c96-d89e-48ac-8a72-202c31395498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d6e2a2e-873a-4501-8626-bff4be4892b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6659d85-130a-4c78-b726-7bab11159b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb2810a-6652-4cca-a387-aa4ed6c44da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5330560-81ef-4ead-aa3c-5bcf5ff068bf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ff755e-d021-41d0-9cca-14b8878f828c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1480384-9bcd-45e0-91e3-173532e74196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c39c5a-ffa4-4281-9d32-903933592276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b19b48-21a3-4d68-af45-8218186eda43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2059bbd-29c0-4dfd-930a-95c4a59adc8e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9b0be3-1b22-4b7d-ad6f-c047b4165435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cd26f3d-28ca-4f39-a9f6-1066bcbe762d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8f0141-1027-4c2d-b535-07ac188631c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad25734a-98dd-4a12-a530-fe51e63f9782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b497c5e0-3c13-435d-adaf-36651b1ac77b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6196494c-e9fe-4c85-bba9-cf16874baa58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54a75117-a476-4def-8ae6-0bd9daa9ef4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aee38d2-e55b-413e-9d83-b7b2f3d551d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352cd6f4-3c47-4ecd-acbc-739e1ac9e3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977d0cd9-8580-41ee-8213-7945ff69fe77",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9b7686-4d2c-45b7-b923-dae82875c9d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6129871d-e657-4736-b50a-033c2fe97968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a59eb15-79e0-413b-b981-d0e9cebd7aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3741fbbf-1e90-4da2-88f0-6f6467c24311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b597a41-5e41-4db5-88dd-205f158286da",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a272c97-07b3-4f75-b1e8-821f6b6d43e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d21325d-f4a4-4309-8b2f-9fa442e08aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c4f8e9-62b0-4cf8-9a97-524c8203bae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16750834-9805-4c1b-b16a-89179f463039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011e4131-8659-4206-a2b7-b2bae88d31dc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bbdb4f-7ffe-43c8-be37-434799eeb50a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f218e07d-00c6-498e-8b72-44c20fdbfb64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a08e7b-f7b2-4857-8ef4-5950e51b8b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f865ee-59f4-4a61-a212-4482a7fb4a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060e1c86-971e-42ab-930b-b3450a7d54b4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9efc80-8c2b-4d3c-8635-eb301b063b64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b56de0c4-c200-4519-82d8-a5cf089a6c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c74e10b-0ad1-4d9c-8d8e-b162bcd2d232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8ff4be-99ef-4d5f-9945-6a6520aa8f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cef7d9-9197-430e-bdba-7b350e7c1038",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a05612d-cac8-4e92-9cec-0a8cbdd7d817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b74a52fc-5d3c-40c6-a1df-0171bf81c9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e986d35-ba3f-4f91-b56e-153f8d705319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a69f2e-dc00-43e8-ba28-2e1b601d8b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847703ae-92c6-4565-8094-057dfbdd9ac8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f6b538-de98-43f4-9e0e-0f83f9a1b888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bc28f1e-41bc-47f3-b788-910fe9446307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fd9afe-a479-4284-af4b-147f7fa1bf1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a5f334-5632-4c5f-970a-9e8a7754c829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4766e47d-1922-4d16-8f8f-63f777398ca4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d417e38e-aea3-4d2e-81c4-e4ef6090bac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85ea53df-9832-4719-86ef-ec6abb2ef2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b468d535-524b-4b75-99da-401a7c6c0437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c53d8f1-1d17-406c-95e6-c84123007c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9170aa7-44b9-47ad-ae03-71a8e694ff5b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57be8821-11a8-40e7-b6bd-9c23753ef4d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a77b8ad-6d3a-44b1-92c6-c8d372f48d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a873f87-b77e-4994-8c9e-92ff2bf3f9d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1575ae56-60ee-49ad-aed5-e8f28876e158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92efdf7-6bc0-4ae5-b19a-f66fdb63450d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f57a9fa-6048-4017-acd5-2c90a980700e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ad5861c-6d8a-4e08-be55-6295b3351b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437b849a-41d0-496a-93a3-d6c55705d0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b426898-cd1e-4809-a7f9-6fdc70b284bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5566bc95-27cd-402f-b5f5-05acc0ac296e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f16bf8-2c91-4c04-bb49-e99e6807cf91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93c69bde-ef8f-4eca-8880-ebb770eb75fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd59336a-728c-4e96-bc9b-129c07f273ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca9bf26-1e36-4349-a7d0-635eab1fc212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce0f860-9ecd-4838-aed5-2049fbc879a0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6d8bfb-ae69-4d09-9870-2dc4d70e04d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f61f208-c750-4141-bcad-1819fa68da99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8223ee-a896-4722-a399-38a982500599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a167ae0a-32bb-473e-ab01-d820628da64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053bd520-b332-4ca9-9b30-6278f387efa2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f21e3b-839a-4f70-958e-5c93f2df242f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b213ce-3238-4df5-b563-536e16ab37ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3cf4bc-85ac-410d-becb-8643d8277789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2f3203-6931-4470-a2c7-2e3dbd221ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35eabeb8-d652-4f99-bb31-98d26665e160",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9beea20b-28c3-4f55-bbff-8909720529e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6b6814f-1f52-4a5d-b5a6-c0be69b09bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbcfac8-1401-4793-a8b3-6c9ca6d5b253",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6189f745-1883-4723-b552-0a497f334638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58ffc94-bae0-456b-8964-0d0647ce7e4d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cca3983-ad9f-4be1-9dd4-49d0c5bfe5e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d6f4430-b207-44ac-a201-d219efcd2d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e624ef9b-3a47-4a12-9e7c-bf557182af7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744ffd96-534b-4afa-b30c-dedd1de707c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58647fda-786a-457d-a623-877a5547cc0d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dc78d1-0169-4bbe-aa93-d02c90ac057d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e94fb5b7-4af1-4357-8b02-778c3b5fe8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0803573-4efb-4b96-a739-64096b262364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c4341d-c4df-4a49-ae90-ce6b93c4c252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a30fb6-0465-4fd3-8f06-ea0de1964d66",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d795e1-8850-4d4a-a04c-6e885055680d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "274592f5-2614-4df1-b4a3-7b508dd5e947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bbc199-589b-4a87-b4d0-3bd314b2cf04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6de6cb8-ff41-470d-a32c-44ad6135e1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04dccde-f9e8-4ef2-b82a-5ddc30f70036",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9024410f-d5a2-40e4-9201-fe1df266c801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c9e63e-7985-4c5c-87f2-a0c7d8b798a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd80d3a5-298b-46ed-a51e-8d842a60dcde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a619309-411a-4bcc-8e6e-d2e5b79d98f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0dbe32-c7c7-4183-bff0-f3919793ba9a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee789b6-7515-43f1-85ef-d73792eea289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f753de4c-a1fa-4047-8c1d-0e25a7d61a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06073ed4-bebb-456a-be3b-5a1e170e3a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b086c688-ea58-4eee-952c-087b555dee9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d39c8fe-9255-4ed5-8a53-4236b635a7a6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cf212c-856e-4780-a3c9-7d7084c0b955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1759caa4-91e1-4666-b7b1-eeb57a4f1f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c100fb2-c63c-4edf-94fd-0bfb73a4a5ae",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cdc032-d8eb-43c9-8043-2127147a72dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b365e3-90e8-4181-b11f-bb46f09f2038",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bf1d70-ba77-451c-ad8e-9f6aa8056b17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ae2d30-5c5c-45ac-9986-aa165c79cc3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2e5552-f7b3-4216-9e3b-875dfe6c5c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc51ac78-e0ca-4073-ada3-ff7a425f2dfc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7083d272-cfff-4f0d-beec-be4a9c46bec6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3de2eae8-63f5-4820-9689-8b71e9e07849"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdefa9cc-ad6e-4207-ae66-bf07844f2961",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b25fb4e-8d6f-4da8-ab6e-5cd2ee5500f1"
                    }
                  }
                ]
              },
              {
                "id": "63d559d7-ca11-4b54-80f4-08f9d7188746",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbab036f-b8cf-4de4-86d3-a98261439ede",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e661530a-7784-4130-89b8-7802d45c6d06",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4baaf3c4-c23d-474c-aff0-a13b2f52b28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c8f882-8795-4780-945d-bdca97519dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edbabd93-5be3-4ee3-aacd-344f9c947b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9819f91d-d2de-4e90-a495-4149edef726c",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4f56f1-2d58-4f8e-bbaf-03f330aa3dd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e27d6758-35b8-4d58-a4f1-c1f1752186eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29901b8-a337-4db3-8e4d-2b1810075890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "351b370d-8b50-44d0-bcf0-bc1caca37293"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7258171a-a52c-4e41-a233-f15d3e7fc3fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "923c3a52-37d3-4c0c-b1e6-f67e82e7591c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "feb7cc7d-62ee-4ce4-8b3b-d88aac91df3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c71dc70f-4f63-4fe8-9961-b19520098626"
                    }
                  }
                ]
              },
              {
                "id": "ea7fc7c7-6bb0-4c6a-ac91-38d7a0b1e980",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "47b33834-be35-4fbf-a2ff-89c8f06dd58d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8208d65-edb8-416f-bfa8-3ae44abe44c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "82e3af96-7c09-4399-9904-3cab72168f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595011b9-fbf6-4d1e-be3d-6fe7199d32bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d172459c-88af-4ef7-af4c-93d1336edc6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b596599f-4c72-4540-a2ad-2f7dfe13dfcf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7b0e76d7-4200-46de-a077-8e941055fe83",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d42517f6-2690-4539-af90-5c877ddfd3d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8bc9bf70-e864-4359-96f4-33270dbc8312"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7e653df-1343-4453-a743-6a67dd0bbb70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b42504e-f5dd-46e0-9d47-e17a548ce803"
                    }
                  }
                ]
              },
              {
                "id": "1dc09d79-fc26-4ca5-bc74-17765ea27f62",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35770a24-a7e6-447d-ba89-3b0d4878cd36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f2d5bb35-cedf-43b4-ad25-560e4242587e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f87ab4d-89b9-4376-ad70-cdcda527bb44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26faf8c6-6f2e-4389-839d-d6c7b83c87ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c4ec815-f350-432a-8c52-8049e85350ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5aec90ca-16c5-4c61-a7a1-33a883fa8719"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02359ca1-b005-4204-ad27-f14974ee792e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73f83586-b7fa-4c31-bb84-c77972957066"
            }
          }
        ]
      },
      {
        "id": "3401ded3-6590-4033-ab38-d18edec0ceb2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0004432a-4c40-4b5d-884f-e4a015c632c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80b52b2b-3e97-4d05-bcc2-8ba68e66a5f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dfe1997e-f79b-471c-a07f-d40e68ab4742",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562429ca-7f83-4a31-a421-5a28ac69fa70",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "04a8df78-3e52-43f8-abfb-08a40866af73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08653cb3-83e2-4a97-b6eb-612b164e27ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47ab4fd1-5b45-42dc-8c45-a5b982e78dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0a3394-4203-4c52-a4c2-a209748f4b91",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe4aefe-8fc0-4b1f-9227-e0761f7ca27b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9dfe2309-cf41-416a-81f6-91c7bd81e99a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2463ff-6f76-40bf-8b71-0e4e3ac36ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b2631bf-613d-4f59-bb6b-afe0f20c4896"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c31f4f78-739c-44a4-a70b-1b7b932f79cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71d3cf78-d1fb-44b9-a30f-dd7d3e006e6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6839b9ee-bf11-47ff-944c-43a768c00085",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f55c8730-8612-40d6-bf5e-ebbf4b0d366c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfbcf0b3-a66d-4ca9-b7e6-3a6e179f512a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b188706e-60a8-4622-aad3-7185c03efbe0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "139114e9-67ab-49a2-820e-b7e3760d791d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0be067c9-e44c-47cd-a108-fc99832aa15b"
            }
          }
        ]
      },
      {
        "id": "7a17e773-34ce-47b8-b55b-b880ef08d6c9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2f738005-1d7d-483f-bcd5-0d4ab7fa08ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5796a1c8-9cee-4f39-b72e-c613ac5d380c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54415ae9-b7c6-4320-b8e7-3e165817ff4f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55e2489-c1e8-4892-be09-1e0447af1895",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a7e8ddf-e534-4b53-b919-e154c70f1398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa86034-fa92-4f99-aaa0-bf7ab2aff1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0491642e-f5f6-43fa-bf96-6ccbc39107b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ebc377-872a-4fd3-be64-e88547b7f69e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0160473-a7fe-48fa-ae2a-a15a08862bc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c6008533-89be-46e9-8f67-a9b44cc0cfb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e407ec8f-f3b3-40bf-bacc-2bf708ff4160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1042d390-b9f4-4cac-be0a-e8bcd7bfb9a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28865b97-3784-486e-9c79-2ae42a39637a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55b96d31-9894-46d6-bb19-fbc741406cca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c408f64d-380c-4182-a808-795cfbaf072c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e43f44fb-8d07-4f42-a0e7-53c617dcd0a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "573f777f-2c4a-42b4-a285-665c3d4aa3b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3e4f83ba-a581-43b1-b78f-c239b3f45b25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f0059ea-9412-4a9e-a1c0-b235d9382c8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87c6d4d3-2d05-49cc-977b-29ed26789cd5"
            }
          }
        ]
      },
      {
        "id": "62497079-95fe-40bd-a0b3-d40d94b8f042",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cadc88ef-90c6-45e3-8fdd-2359ccc624df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e6a71a2-9f76-4587-9bc7-fa2d22b00b59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1bbab576-f362-4dc4-8121-201a461dc83b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbba5b58-439b-414b-ba7b-e2dd9a182854",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b624af6-e952-44c3-a2ae-fc1bade12969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7ab7c1-8c86-4e66-975c-42d0016e1d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b422855-1b49-47e5-b0ef-e8c614f49eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023c3aab-2f23-4caf-8eba-ff10cfef3e3f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ecf5fd-03b9-4bcc-9c8b-3dbfe30a7269",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f72bc9a4-cdfb-4900-89eb-dc36047fa3c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8451427a-b9f1-443d-a1f1-3bf8b5994edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8704a60d-9f66-4947-8efd-c2b473ae7f3c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5667ca4-2843-452e-8022-b1e647805b08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0be2cba7-18f0-4fff-b0b0-416fb393481e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c5385bf-4dbc-4220-9d9c-493948b53474",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e957507-1d46-4450-88a3-7b642f44db50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f54fda1d-f070-4a7a-8a81-51844fe28dcf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e42921cc-c99b-4271-b7e1-c047405f34aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56d20b78-76e7-4fee-89e6-7ce1be4a9cd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b6049f5-ceee-4e6e-ade6-ed2ab76e3bd4"
            }
          }
        ]
      },
      {
        "id": "f4f174f0-56e9-4b18-972e-fef35f1c12a8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11c11ae7-a047-4d09-a70f-22c70b9c0f99",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f707d8dc-be59-4e2b-8cc1-18513f25c8ad",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ddc7e0fa-a558-499f-a716-286b7fff3e26",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d02c31c3-75b8-478c-b4ae-8569b1e149c9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f37c23e2-d43a-4418-ac90-2bef0560cdd9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 696.7076923076924,
      "responseMin": 15,
      "responseMax": 8013,
      "responseSd": 829.8903398007923,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679099921114,
      "completed": 1679100114495
    },
    "executions": [
      {
        "id": "5ba148e0-5b1d-42b3-a56c-f56173937d11",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "efc77f92-f0bd-4362-9d03-ddda7c958ac3",
          "httpRequestId": "78cc13f7-fe81-463d-b4e7-e6ef51659c02"
        },
        "item": {
          "id": "5ba148e0-5b1d-42b3-a56c-f56173937d11",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4dcbad23-1a84-4616-b7cd-e4cdd1bd4474",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 0
        }
      },
      {
        "id": "d6062eb7-a11c-4e77-b33c-295a6b208511",
        "cursor": {
          "ref": "a53feac8-a38c-4399-a122-1c831d811bf4",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a476fa2f-afe0-43ec-85f8-c51d95d7ba36"
        },
        "item": {
          "id": "d6062eb7-a11c-4e77-b33c-295a6b208511",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "92d99ae2-6eb1-4664-bfd7-83388efbcf5a",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "086fe4be-440c-458c-bfff-c2bd65e12b31",
        "cursor": {
          "ref": "c72da11c-48b6-4d84-b871-123b972f2304",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ea300d78-6dad-4fa4-9e35-25e7cabada9e"
        },
        "item": {
          "id": "086fe4be-440c-458c-bfff-c2bd65e12b31",
          "name": "did_json"
        },
        "response": {
          "id": "ea724a65-5102-4092-a7b1-f81ef397f900",
          "status": "OK",
          "code": 200,
          "responseTime": 772,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fe7423-cb1d-4b70-9856-ccf785cd8322",
        "cursor": {
          "ref": "75b5b11d-3475-490c-8b4b-19baf77574a3",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "91400928-81e8-412a-9a77-67136a0587f3"
        },
        "item": {
          "id": "c0fe7423-cb1d-4b70-9856-ccf785cd8322",
          "name": "did:invalid"
        },
        "response": {
          "id": "5db1bece-9079-4bde-a764-b100731198fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fe7423-cb1d-4b70-9856-ccf785cd8322",
        "cursor": {
          "ref": "75b5b11d-3475-490c-8b4b-19baf77574a3",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "91400928-81e8-412a-9a77-67136a0587f3"
        },
        "item": {
          "id": "c0fe7423-cb1d-4b70-9856-ccf785cd8322",
          "name": "did:invalid"
        },
        "response": {
          "id": "5db1bece-9079-4bde-a764-b100731198fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c6bf46-bbdc-4fea-a0a7-7636521ee737",
        "cursor": {
          "ref": "5e641d33-73e7-4278-9f3b-607f345abfa2",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a22be63f-e961-4538-b6c9-2072064bf12a"
        },
        "item": {
          "id": "b8c6bf46-bbdc-4fea-a0a7-7636521ee737",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "45d5bf06-d0e8-4b95-bf0d-415ad3002770",
          "status": "Not Found",
          "code": 404,
          "responseTime": 650,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5d84af-3585-498a-8fc6-2c8864e3a7ca",
        "cursor": {
          "ref": "0be691d2-5d8f-45cc-909b-f9e99d7b1a39",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4f135c76-e21f-4b4b-9bb1-74a4fd05c26b"
        },
        "item": {
          "id": "8a5d84af-3585-498a-8fc6-2c8864e3a7ca",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "47f3451c-ef6d-40ae-8efc-311f7e11f266",
          "status": "Not Found",
          "code": 404,
          "responseTime": 596,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d451d56-e674-4769-a7f3-4e3a34143d73",
        "cursor": {
          "ref": "071981d3-409f-441d-a2bc-6502f248d9b6",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "92b834bb-e1b5-473a-be02-d40660b98baa"
        },
        "item": {
          "id": "7d451d56-e674-4769-a7f3-4e3a34143d73",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8710d016-757f-4cf7-b718-86fc56542afd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35aa3ead-7057-48cc-854a-29f17e9371e4",
        "cursor": {
          "ref": "ad0b17ae-f9ee-4789-b37e-0d2527943d0d",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2ab9a6a9-346d-4598-9c73-0fc1e7d07a0f"
        },
        "item": {
          "id": "35aa3ead-7057-48cc-854a-29f17e9371e4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5f68631b-c7b3-485e-9bc2-8994624f13b1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 551,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35aa3ead-7057-48cc-854a-29f17e9371e4",
        "cursor": {
          "ref": "ad0b17ae-f9ee-4789-b37e-0d2527943d0d",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2ab9a6a9-346d-4598-9c73-0fc1e7d07a0f"
        },
        "item": {
          "id": "35aa3ead-7057-48cc-854a-29f17e9371e4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5f68631b-c7b3-485e-9bc2-8994624f13b1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 551,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9032146b-a47b-4f83-b463-cdf64a4b8da3",
        "cursor": {
          "ref": "e456bd8f-6352-4b43-bb5e-4ba172f8db2d",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7f42b5a0-bd32-49f0-8ccb-966fe01d1ab4"
        },
        "item": {
          "id": "9032146b-a47b-4f83-b463-cdf64a4b8da3",
          "name": "identifiers"
        },
        "response": {
          "id": "d1014ab1-568f-499a-96d0-17ec0f189a09",
          "status": "OK",
          "code": 200,
          "responseTime": 981,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfbb2ab-356e-4e76-99ac-09c3668647fb",
        "cursor": {
          "ref": "acd603ef-cb73-4f58-a9de-9dacaad2e14a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d2bce5cd-bfeb-42be-9b73-2ce8f1a16e29"
        },
        "item": {
          "id": "9bfbb2ab-356e-4e76-99ac-09c3668647fb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2cc66c6e-a66e-4d36-a605-a78f937f965d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfbb2ab-356e-4e76-99ac-09c3668647fb",
        "cursor": {
          "ref": "acd603ef-cb73-4f58-a9de-9dacaad2e14a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d2bce5cd-bfeb-42be-9b73-2ce8f1a16e29"
        },
        "item": {
          "id": "9bfbb2ab-356e-4e76-99ac-09c3668647fb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2cc66c6e-a66e-4d36-a605-a78f937f965d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9b7e42-94f3-4d56-9be6-1f7fd006de62",
        "cursor": {
          "ref": "7dda8c1a-6b4a-43ed-9e95-7cf6d84e30d1",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "91616f2a-5b30-4583-bd53-784cc133457f"
        },
        "item": {
          "id": "9c9b7e42-94f3-4d56-9be6-1f7fd006de62",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dcc3b05f-02b6-4439-af82-eb98aa14c54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b068b5c6-b9b7-435f-a07e-dee8abb21223",
        "cursor": {
          "ref": "fc1c6bd2-f2b8-4acf-a7c2-78f35b5896b2",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3b796e21-5d25-45f9-9265-ff6a2a827778"
        },
        "item": {
          "id": "b068b5c6-b9b7-435f-a07e-dee8abb21223",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b9e6bdf2-1b3e-493d-9b75-f981b8ae4694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1007,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c64defa-69c4-4d22-8195-866e9c110809",
        "cursor": {
          "ref": "e29823b0-3789-40b9-a5fe-e226768b5eaa",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "186b3195-ae3b-437a-a1dc-988a29209da3"
        },
        "item": {
          "id": "3c64defa-69c4-4d22-8195-866e9c110809",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "988b2494-ff6c-47aa-90ff-0aa14aad394d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 929,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6f5648-9e7f-4b9c-8cb6-25e5ea131058",
        "cursor": {
          "ref": "9d6fec2b-248f-4369-b6eb-1dfe377fb8d5",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dabe66e0-669a-435a-b01d-933b42f05601"
        },
        "item": {
          "id": "be6f5648-9e7f-4b9c-8cb6-25e5ea131058",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f78f1798-8c2c-4d35-b150-ecea4e4a8af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1046,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7263cbca-6b60-45cc-86bc-33a97744f497",
        "cursor": {
          "ref": "8692b567-d87a-4306-a6fc-40d423de9778",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b034fc7e-2b4e-4595-b7a6-86840a2cedcf"
        },
        "item": {
          "id": "7263cbca-6b60-45cc-86bc-33a97744f497",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "94140f0b-7441-4d2f-aa0b-e6c828a9015e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26aabe5-9f99-451c-b5dd-f1282519f2f6",
        "cursor": {
          "ref": "7d2a5053-26aa-4b8b-bf13-5247e442130e",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f65b537a-093f-4755-9b30-636a8bd5eca3"
        },
        "item": {
          "id": "d26aabe5-9f99-451c-b5dd-f1282519f2f6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "659dffd4-80f4-47b7-8dfd-59637cac63db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683eda4f-4beb-4319-a58a-5db30f6e2dfc",
        "cursor": {
          "ref": "078b06b7-600a-494c-ba64-4262c7c5fb03",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b94aca94-bd94-4f56-8b31-5be9a7842c5f"
        },
        "item": {
          "id": "683eda4f-4beb-4319-a58a-5db30f6e2dfc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1b74d563-2413-410b-a92a-5b242066c131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a1bc6c-5b76-4461-ad02-698901b5f72a",
        "cursor": {
          "ref": "5acb9e40-6874-4080-8e98-ee16c08911b3",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bd0fc569-0d33-46fa-b620-b46e7e95a411"
        },
        "item": {
          "id": "a7a1bc6c-5b76-4461-ad02-698901b5f72a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fc80b6b2-2cc9-427e-a9f5-34b570c260b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692d1f78-c1f0-4135-ad14-8e63c612c299",
        "cursor": {
          "ref": "e9af4821-4da2-41ff-aec8-297f31937de0",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "321f0c79-7235-4681-8a52-d1b7807dc97f"
        },
        "item": {
          "id": "692d1f78-c1f0-4135-ad14-8e63c612c299",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "357bf88f-437b-4c8b-8e33-8233d95b4179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0f9199-fefa-4ce5-9ef2-150065eb1762",
        "cursor": {
          "ref": "d9729779-fe4e-4818-bb80-2e17439f4c80",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7863abe6-3aec-4b61-b255-4b8d309a6061"
        },
        "item": {
          "id": "ae0f9199-fefa-4ce5-9ef2-150065eb1762",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "944c1f03-957b-41a9-b20c-0a379f66ec8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ed42d2-23c1-436e-a3f4-34b24fbe9b2b",
        "cursor": {
          "ref": "bce946db-7374-4a87-ad11-f48853051438",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "16daacbf-85e5-46c3-9cba-552c5e555ba5"
        },
        "item": {
          "id": "23ed42d2-23c1-436e-a3f4-34b24fbe9b2b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7c02b8e2-f797-4c69-ba86-863a60c6f9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f49b9e-234b-4afc-a6b1-c0fb29d81dab",
        "cursor": {
          "ref": "5b192c23-2424-4c00-863a-c1799fdc6d67",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "23ac1872-a7bd-43df-9227-7a4ec90a3f88"
        },
        "item": {
          "id": "66f49b9e-234b-4afc-a6b1-c0fb29d81dab",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2b3e5af4-c25a-4e46-8b2f-aefd58a81d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe70905-c62f-4d1c-888d-021aea3fc110",
        "cursor": {
          "ref": "e440e973-57e3-402a-8ff6-9828db29831f",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f6969a8b-2ce4-459b-9ce7-e11dfb07c8c3"
        },
        "item": {
          "id": "dfe70905-c62f-4d1c-888d-021aea3fc110",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d23d9a8a-962f-4bf1-a8cd-ac413517535d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2933aed-bd40-46db-8920-a7cab7cf5a83",
        "cursor": {
          "ref": "08ad81f0-f075-48d3-9c93-8296c5e539a1",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cde218b2-e779-4ace-8e77-be5e85b341c2"
        },
        "item": {
          "id": "d2933aed-bd40-46db-8920-a7cab7cf5a83",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0d19eee6-786f-4b62-8984-bb84fc1229b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68936286-547b-40cb-bd70-b025137653e0",
        "cursor": {
          "ref": "efc05806-e014-4a26-af11-fbee03fb9162",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "83b4441f-a625-4176-9cef-56851a06ad28"
        },
        "item": {
          "id": "68936286-547b-40cb-bd70-b025137653e0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cda6b612-c2ba-4a62-bca9-27a33ee81a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0437e738-b63e-4c16-bb3f-da5615099074",
        "cursor": {
          "ref": "33222d0b-876a-4d08-9795-7f777f505436",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bb635e77-af1b-4c0e-96fe-b973015ed332"
        },
        "item": {
          "id": "0437e738-b63e-4c16-bb3f-da5615099074",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "bb832fd8-d62b-4681-9f62-70ec3ab2b8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44a0382-00d6-4745-92b1-d6874e5cbf37",
        "cursor": {
          "ref": "eae5be00-980e-4c3c-800e-d83376c9135e",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d6c7f10d-b0f9-4f3a-984b-252357a46d6f"
        },
        "item": {
          "id": "c44a0382-00d6-4745-92b1-d6874e5cbf37",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e07f9003-7fb4-4563-bde4-851ccc649f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14ce7cf-e2c8-41f9-8f6d-28925f8d8a69",
        "cursor": {
          "ref": "382d5abe-f394-4e00-b93d-10b5b29e2d45",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "418954ba-2af1-4baa-90bc-799b10f1a901"
        },
        "item": {
          "id": "a14ce7cf-e2c8-41f9-8f6d-28925f8d8a69",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f76af30d-8676-4c11-b8c1-566c78ea3743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1963f1a5-fd20-40e7-a4d3-f8f52b7054fc",
        "cursor": {
          "ref": "f79068e8-3d1e-4fe1-a17d-8a033b838d8b",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "863b47ca-2c7d-4a15-9000-e2b33dd7eb70"
        },
        "item": {
          "id": "1963f1a5-fd20-40e7-a4d3-f8f52b7054fc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6149f6cd-1f47-4b6e-9fd8-f5b13c9aa66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b0024c-97b9-4117-8519-4e91979d29af",
        "cursor": {
          "ref": "7c6a95d6-9b7b-4f9f-9f93-922ec2c80c63",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ebd0ce46-44d5-4799-ba68-f419de89c845"
        },
        "item": {
          "id": "08b0024c-97b9-4117-8519-4e91979d29af",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e187cc32-5862-457b-a151-69a8bc8e5f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 961,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6929fcf5-22ad-484d-bfd7-b7161621654f",
        "cursor": {
          "ref": "49e3586b-a66c-4f31-8c58-a2553f3f5948",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "15d2e847-c774-42f2-a402-3125c6fae4b7"
        },
        "item": {
          "id": "6929fcf5-22ad-484d-bfd7-b7161621654f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "253925d7-7a87-49c7-b6c0-a6e02ec725aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 887,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0f9e67-f08e-4202-ba78-99bf2c9c1c22",
        "cursor": {
          "ref": "e5d383f7-97bf-4cfa-a0d3-0e5a402d23ac",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dba7d162-683f-4827-84ff-bafb1312a157"
        },
        "item": {
          "id": "2d0f9e67-f08e-4202-ba78-99bf2c9c1c22",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8ab90835-35f3-464a-9c68-8db253c24997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ebeb09-68f0-4499-bd83-3917bbbdead1",
        "cursor": {
          "ref": "07e627c1-f2ee-4445-8ee2-e4c94b0e6b40",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "73000177-74e0-4c46-ba21-2f8df87e3935"
        },
        "item": {
          "id": "d1ebeb09-68f0-4499-bd83-3917bbbdead1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dd38d08e-9f06-4e15-8463-8c0c267336d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efcdfef-7cf0-438e-8900-1d7236012cc5",
        "cursor": {
          "ref": "c3ccd730-fa27-4302-adda-0f3a2e083336",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fccc346e-1b8a-472e-8405-290c63200dc4"
        },
        "item": {
          "id": "4efcdfef-7cf0-438e-8900-1d7236012cc5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "44219a83-2046-4681-b58d-63e5d4e4d6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 987,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4682ed00-5d17-4173-861c-9669751e496f",
        "cursor": {
          "ref": "edae08af-0429-4a5a-b324-9e5d00fbc8f8",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1a5d3a31-1d9f-44f0-94ce-d6a74434d601"
        },
        "item": {
          "id": "4682ed00-5d17-4173-861c-9669751e496f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a6ff4aed-a66e-4eb9-9464-5822b9ac1c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1004,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b14c7f-4b98-48bc-96eb-886b877ace0b",
        "cursor": {
          "ref": "0068c288-653c-40b3-bbfe-b9ea576013aa",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "168a2613-9c41-46c8-930f-ddb8eaac40b1"
        },
        "item": {
          "id": "94b14c7f-4b98-48bc-96eb-886b877ace0b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ff564329-7a1b-44fc-8af9-778fd5e68d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76eaf70-3abb-4346-b80f-756372466ddd",
        "cursor": {
          "ref": "7533cf1d-7cf9-4025-a2b1-354ff42f42b3",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "11a493a6-b99d-41f8-a69d-d9c1481986b9"
        },
        "item": {
          "id": "f76eaf70-3abb-4346-b80f-756372466ddd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0e52a6de-dbc4-44da-8748-e981a5df4963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f919f339-231e-4c6a-a8a1-f02740ee32ca",
        "cursor": {
          "ref": "403ae62a-56e4-4038-b3b2-0eb6774f8b5b",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fad7f9f3-4746-48f8-ac44-f6da36965e36"
        },
        "item": {
          "id": "f919f339-231e-4c6a-a8a1-f02740ee32ca",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "cb8d5458-e01d-4f59-b580-9fe69a5c582d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3eb003b-1afc-4e6f-b938-a520c76c120a",
        "cursor": {
          "ref": "418a3d49-1d02-4d45-93d8-b21db8fbe924",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9df71359-a5ac-43ec-a17e-10437b628a7a"
        },
        "item": {
          "id": "a3eb003b-1afc-4e6f-b938-a520c76c120a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "013c86f2-d778-4ae7-9cd6-4ab89f9e1fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d382b1a-7e6d-4310-ac0c-9efa41fd8269",
        "cursor": {
          "ref": "66d0c830-a912-41c8-b032-4be67c7b336d",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "65319070-8d00-4421-800b-f9b66432ee65"
        },
        "item": {
          "id": "8d382b1a-7e6d-4310-ac0c-9efa41fd8269",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1d4e01dc-4688-4c11-9059-28db1edb789d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0457fa68-8417-4ff9-ac0a-45dbe1a75971",
        "cursor": {
          "ref": "5821ec3c-8466-4421-98eb-7fdff2f7d65e",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cc5e56f7-3555-4fa2-9f28-b9be553d8523"
        },
        "item": {
          "id": "0457fa68-8417-4ff9-ac0a-45dbe1a75971",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "714dbee7-4aa0-493c-bf0b-2ba6780bf210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06dfb706-2b17-4eb3-8657-ba8c02cb0bad",
        "cursor": {
          "ref": "2e271b1a-2080-417d-8e15-de8799c8555b",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bc3c3dec-79c9-475c-8f10-bd5a8945bc99"
        },
        "item": {
          "id": "06dfb706-2b17-4eb3-8657-ba8c02cb0bad",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8ca280bb-58ee-404e-9324-8ee6f5852435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1123,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8850b7f6-78ff-4987-b778-8cf16e8ae795",
        "cursor": {
          "ref": "f26209a9-1fd1-46e7-ae1b-8590f28e55a9",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "762fa5a2-4e8c-435b-af05-1561f4353d1d"
        },
        "item": {
          "id": "8850b7f6-78ff-4987-b778-8cf16e8ae795",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e1606e19-c9b6-4ddf-ac68-897c404ae531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 944,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caaacc3d-7ca7-4400-ad49-2402c17766a5",
        "cursor": {
          "ref": "db059cff-364f-4779-bfcc-8bed548b71bd",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "76cdbde1-6776-4e45-b16e-f424bce6bdc9"
        },
        "item": {
          "id": "caaacc3d-7ca7-4400-ad49-2402c17766a5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9c628f2b-4bd5-4779-8234-3fc3a70aa96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1400,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa167e39-8a38-412f-8d67-72de121fc081",
        "cursor": {
          "ref": "6e8e63fa-3c4a-45c3-9da2-c197f23d3b8a",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9a4fb131-6b91-4b26-aa39-b2d818cbda08"
        },
        "item": {
          "id": "aa167e39-8a38-412f-8d67-72de121fc081",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "295c10cb-4ce9-4521-b334-99c075df0458",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1644,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d724e6-e6f1-4f07-88a6-c19f98eb6113",
        "cursor": {
          "ref": "d44abfd8-7a09-4100-8de4-c2f08c9a96d1",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e6c756ea-48e5-49f4-a6d5-fad97db133e2"
        },
        "item": {
          "id": "f3d724e6-e6f1-4f07-88a6-c19f98eb6113",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e0c6c764-cf51-47bb-ba6f-ce58685c3843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8ed9a8-6188-4a7c-b961-ac4fd1e81e9a",
        "cursor": {
          "ref": "015ca845-11c5-49c3-9fe5-9b1b5a858bb8",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "085df765-5fc3-4b43-86f6-f1c413693a1f"
        },
        "item": {
          "id": "5f8ed9a8-6188-4a7c-b961-ac4fd1e81e9a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "abc985b1-0e30-41a9-87f3-fb218c6c43b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1057,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89f0e78-877e-410a-b5ae-0737d548fe96",
        "cursor": {
          "ref": "7afc43dd-a15f-4802-97e5-041b31ac8c37",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "77be8c92-76a8-4d70-9f1e-1317426b465f"
        },
        "item": {
          "id": "a89f0e78-877e-410a-b5ae-0737d548fe96",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8911e6cf-6ebe-45c5-a933-a56b14415937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b2dc88-d8f4-44da-96fd-91da023af52d",
        "cursor": {
          "ref": "449fe880-eaf1-44ca-855e-7bcd136c0292",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0c5ebc21-7cdb-4cff-a996-9313e04b4968"
        },
        "item": {
          "id": "20b2dc88-d8f4-44da-96fd-91da023af52d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "67359ef9-ce0f-4002-ad62-d8256b4bcbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b05c736-663c-4c7f-8759-e0a38cb154fa",
        "cursor": {
          "ref": "a666614f-669f-4edc-b946-5aa8783bf588",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cb12c035-1e84-4a6c-b494-79d61b969197"
        },
        "item": {
          "id": "9b05c736-663c-4c7f-8759-e0a38cb154fa",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "40a8e867-93f0-4ddf-8b19-91bfaab3c6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1251f800-5f41-48bb-a27a-4de9f27111b2",
        "cursor": {
          "ref": "9af2118e-273f-438e-8ffa-199662ed999b",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "621a9b0c-adbf-4e6f-822a-34e18126d5d1"
        },
        "item": {
          "id": "1251f800-5f41-48bb-a27a-4de9f27111b2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "52e84561-21bd-4c80-adc0-9d709c03fd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b385f5-2fb3-4a3f-b87a-c048ca60ddec",
        "cursor": {
          "ref": "b172208a-b53e-4de7-b5ee-2b5d67a4a2e1",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "365097b3-c75a-4e5a-a4f1-a7c9a3b1a584"
        },
        "item": {
          "id": "e6b385f5-2fb3-4a3f-b87a-c048ca60ddec",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c606016b-33ed-4f05-8b1c-b9a273153023",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 733,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a025dde2-1a54-4b8f-ab99-8aba38daa2b7",
        "cursor": {
          "ref": "919dd556-ba67-492f-83ff-68ab3064c785",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "579657ca-72e1-4947-b558-ec671844f13f"
        },
        "item": {
          "id": "a025dde2-1a54-4b8f-ab99-8aba38daa2b7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "43631415-6868-4aa4-bc34-abade9ace560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1c05ec-06dc-4a28-a46d-9173424a76a2",
        "cursor": {
          "ref": "72809379-07d7-4e7b-a648-136f382f4163",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e39497e3-0a58-4ef9-893d-b9776c7c0c70"
        },
        "item": {
          "id": "9f1c05ec-06dc-4a28-a46d-9173424a76a2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0c399b5c-c700-4d55-ac32-7d61f933c796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57a24f7-fe0a-48f4-9511-9654eadc90c2",
        "cursor": {
          "ref": "50d4267d-1d56-4cdc-941d-7cbabe5d7618",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2b69de7f-7db5-489f-8855-b26840050874"
        },
        "item": {
          "id": "c57a24f7-fe0a-48f4-9511-9654eadc90c2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4b19c65b-5d85-4aad-9b8a-b9b933895113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18f0a38-6e38-453d-8961-4997f3ea9308",
        "cursor": {
          "ref": "4ce79098-aacd-48ae-93c0-8604dfe5dbfa",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "01365040-e287-472f-b083-604805f654e3"
        },
        "item": {
          "id": "d18f0a38-6e38-453d-8961-4997f3ea9308",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "095e8d72-e426-4a1d-acad-26ee142e7fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c974002-5436-4a56-b235-60638048d2b9",
        "cursor": {
          "ref": "78ba1b82-c836-4e83-981a-4883dc9c36db",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0c7a27d7-c286-4664-8991-63af3d4d2a51"
        },
        "item": {
          "id": "7c974002-5436-4a56-b235-60638048d2b9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2b61f30c-c16a-492b-88a4-ef6f94b9befa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac01912-e41b-46a5-9b91-b8d88c0c72c1",
        "cursor": {
          "ref": "8b864b69-394b-491b-bb29-cccb94bacd0c",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b92c925c-5e06-4eba-8977-328c7bf55704"
        },
        "item": {
          "id": "dac01912-e41b-46a5-9b91-b8d88c0c72c1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bf17dd0f-7257-4d7e-85c3-d787a6528712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c6ba22-d73c-42c4-bf2c-6484cb5998c4",
        "cursor": {
          "ref": "bfd0717a-61b7-4892-a66c-edcc9d635794",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "529b65f9-de66-4642-bcab-e3e35a8d3762"
        },
        "item": {
          "id": "f2c6ba22-d73c-42c4-bf2c-6484cb5998c4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "72d82282-b110-4ca1-8d80-b883696d0e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33f05ce-a474-455d-8c4c-b0c34f21f4e6",
        "cursor": {
          "ref": "51d87039-05ac-4495-bf8c-f27c83a90c1c",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5b08d172-adc6-4777-815e-304cc89fbb7a"
        },
        "item": {
          "id": "b33f05ce-a474-455d-8c4c-b0c34f21f4e6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "712e08bb-9e39-47f1-b995-0ced8d70ebfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b1bd39-9a46-48ed-b243-c024f3ad78fa",
        "cursor": {
          "ref": "57c258f6-7f4d-4eb0-bca9-ac83d3e3aa2b",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c1e08c68-26a6-461e-b6e9-b0c2d2201db7"
        },
        "item": {
          "id": "90b1bd39-9a46-48ed-b243-c024f3ad78fa",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "19c7f504-1255-4422-8cbf-de12ab33d2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d66992-bf48-4544-ac33-f67a4743472d",
        "cursor": {
          "ref": "1b57f22b-2db0-49d9-b71b-550cfc740bdd",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "20436d9d-1d06-4e8a-be97-0f2696cd953d"
        },
        "item": {
          "id": "20d66992-bf48-4544-ac33-f67a4743472d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "44596f0f-48e0-4d46-977d-d3d463e28880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021edaae-c050-4492-a9cc-7bfed3e18081",
        "cursor": {
          "ref": "174d1f20-cefd-4e05-bb44-c34d6aa879ec",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "86717512-36d6-4d27-a66a-0a820ec60dd9"
        },
        "item": {
          "id": "021edaae-c050-4492-a9cc-7bfed3e18081",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f39e96a5-e438-4da5-aab1-b133acedb033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607db5ff-2e15-4767-92a8-7f2dda8f9aa8",
        "cursor": {
          "ref": "7446600d-b4b0-428d-a7fa-a1f5dc21c69f",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "74983f68-d39e-4061-91e7-7109e4651399"
        },
        "item": {
          "id": "607db5ff-2e15-4767-92a8-7f2dda8f9aa8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0dd14e5c-f736-4a6f-9fa9-c250d6720b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2effce-b85d-4199-832c-a30497ed5714",
        "cursor": {
          "ref": "62dd843c-a133-4e66-8464-0f19f5e3321d",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "18661621-4156-468f-b6ad-47e9897795ed"
        },
        "item": {
          "id": "0f2effce-b85d-4199-832c-a30497ed5714",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "079cf341-32b4-40b5-a506-9f1d185638e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743c836d-5d54-4b7b-a02c-a2db87d2b7c3",
        "cursor": {
          "ref": "d6f52268-e41d-48a1-b3ef-69832138f0dc",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "96ebad4f-a8b7-494a-9827-e46427af296a"
        },
        "item": {
          "id": "743c836d-5d54-4b7b-a02c-a2db87d2b7c3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "11a8ca21-437e-4f36-93ed-6d2708ad4941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba03c078-79b7-41f7-823d-90721eeeabad",
        "cursor": {
          "ref": "0bbb9049-a054-4984-bc83-166db6071a72",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "735ff767-2c38-48cb-9aee-d1486e907c75"
        },
        "item": {
          "id": "ba03c078-79b7-41f7-823d-90721eeeabad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c4a3b050-79b0-4646-9500-502de1f6cce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e3e780-086d-4941-9f4d-518275ea0560",
        "cursor": {
          "ref": "285301e1-95bd-482c-ae58-657b51884899",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c3ba4578-7b4b-43a2-91f9-a89b3380c260"
        },
        "item": {
          "id": "a6e3e780-086d-4941-9f4d-518275ea0560",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "864b8757-5121-443e-ac17-9c67348fa84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f950d624-3628-47ba-8d07-980b8c72e0ca",
        "cursor": {
          "ref": "020e0a69-141b-4954-b31f-0811a97634d8",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "56051de4-7b77-4a54-8156-fe38ee2523fe"
        },
        "item": {
          "id": "f950d624-3628-47ba-8d07-980b8c72e0ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "86ab3daa-72d8-4f2c-910b-c4018cb52932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f5fba5-f1e1-4dac-8954-6500b1f60178",
        "cursor": {
          "ref": "7094bbd8-2d3c-49cd-83e5-ea349b874d73",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b3d31916-1ea6-42a4-8bd3-379f34da5d34"
        },
        "item": {
          "id": "22f5fba5-f1e1-4dac-8954-6500b1f60178",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e01f83c6-7682-4b95-bb5b-b39d6700a9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5405d52-a13a-4a50-a6f7-064ef96e9222",
        "cursor": {
          "ref": "40c8f42f-264e-400d-8772-4620c2b5e9dd",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ac9c71be-3211-4bf0-8d52-845f736250a2"
        },
        "item": {
          "id": "a5405d52-a13a-4a50-a6f7-064ef96e9222",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e3b39caf-18ae-4cda-9bff-9c47eb20d2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51eebf8-71bc-4dcb-9954-acfc72b9785c",
        "cursor": {
          "ref": "c6a9edf3-c463-4d19-9988-644eeb2267fd",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "46394381-fbe9-4006-ad79-f5ce77802ca6"
        },
        "item": {
          "id": "d51eebf8-71bc-4dcb-9954-acfc72b9785c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bc10d19e-3f8e-4ea2-965c-4a9a1b084035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 912,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d935948f-2167-4503-a803-bd0dcf018083",
        "cursor": {
          "ref": "561ece3c-b011-41c2-ae4d-adf96c6d0104",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0498064c-a9ec-44e1-be40-78ccfdf4b618"
        },
        "item": {
          "id": "d935948f-2167-4503-a803-bd0dcf018083",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "326440d5-1968-4f00-b6e7-96bf8e8828b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4223d54-fd23-4905-864d-951df377d565",
        "cursor": {
          "ref": "bc0f1266-363c-46e1-b7e4-211ec102c8a6",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "70bce731-70de-4b5f-8380-3155ddca5139"
        },
        "item": {
          "id": "b4223d54-fd23-4905-864d-951df377d565",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2cc6d695-c9a8-432c-a23a-b7446a77e650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a3962b-a4a6-45d0-9370-cdefc47738ba",
        "cursor": {
          "ref": "2d7caf6d-fa35-432c-8c28-c78ba3252c5b",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e0b544bc-8f55-4bfb-9161-e274402afb74"
        },
        "item": {
          "id": "d1a3962b-a4a6-45d0-9370-cdefc47738ba",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a4eed439-7577-4673-b513-e938256001b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38477d71-0feb-44f6-a077-ac7580bcfb7a",
        "cursor": {
          "ref": "6571522c-5ebd-4d82-8c5b-1c164c112513",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ccb14889-ced8-4fd0-a846-b922eb23ec95"
        },
        "item": {
          "id": "38477d71-0feb-44f6-a077-ac7580bcfb7a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a28eae97-bb39-4a08-b190-14b9eb7aa7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a3aebc-0ae0-413b-8a35-55981e388e02",
        "cursor": {
          "ref": "c8c38823-e50c-4234-acba-62d235d6399d",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bc9b5426-c673-478b-9c01-5bdb11c4f899"
        },
        "item": {
          "id": "94a3aebc-0ae0-413b-8a35-55981e388e02",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bf6e3eda-1dfb-4692-bb56-1407d6ae75b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd84b11-a9de-4d4f-aa02-b2460d39ac74",
        "cursor": {
          "ref": "f4cd0d87-1bee-4c6c-b2f9-e6e1c4bc4264",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "90e08568-9f97-4b54-848d-4720e6d79fa7"
        },
        "item": {
          "id": "0bd84b11-a9de-4d4f-aa02-b2460d39ac74",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e4b58d38-9470-4d4d-afde-e5ced0a68089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3338867c-c3d4-4966-b007-2331379f9447",
        "cursor": {
          "ref": "1f64f27f-2a89-4947-b9a7-59afa73678a2",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f1f736ed-f3e5-4c20-ab68-93d08826e018"
        },
        "item": {
          "id": "3338867c-c3d4-4966-b007-2331379f9447",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6b5d18ef-f6ad-4f4c-a720-31e282aff892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5a87f6-e835-4fe1-b592-ddad255387f7",
        "cursor": {
          "ref": "62d873ae-b6c4-45c6-b946-9fe37e0c1a95",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "65ef203f-0ffa-4aa7-9720-cfc611ad273c"
        },
        "item": {
          "id": "7f5a87f6-e835-4fe1-b592-ddad255387f7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9cbca3fa-a55f-4b8c-9539-b85e1fc837df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5812ad0a-95e9-4ea5-9740-bc27fc816d2a",
        "cursor": {
          "ref": "68fbb647-de2b-484b-98c7-08a972913445",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cadf0e4d-bc1e-43f8-af87-2c07e89f4e86"
        },
        "item": {
          "id": "5812ad0a-95e9-4ea5-9740-bc27fc816d2a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "02d2e8bf-8a85-42bb-9fd5-1a0a3236f380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b86d6e2-9236-40da-8851-cb44ff4a91fc",
        "cursor": {
          "ref": "c5639495-9da1-4fcf-bc6f-2468b01c644b",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "53141e40-c3a2-4989-8542-6cb2a1936efa"
        },
        "item": {
          "id": "8b86d6e2-9236-40da-8851-cb44ff4a91fc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "85d3513a-e853-425f-8e37-17f87fd5dc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65291148-2088-47e3-8528-4e2d0d497cd3",
        "cursor": {
          "ref": "2bae6c12-24fc-442a-9f98-809619d36332",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6dc8ee62-ae82-4d64-a6a1-e53a05e2add0"
        },
        "item": {
          "id": "65291148-2088-47e3-8528-4e2d0d497cd3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e10370fc-8053-4883-b7d2-11b95353d36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1429a571-f6b1-4527-8ded-7f269d4c89c5",
        "cursor": {
          "ref": "32ef9b80-6580-4fe1-b159-e5aeaf3f2486",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "996c0f5a-e39a-4a06-a99e-7b76ba26b27f"
        },
        "item": {
          "id": "1429a571-f6b1-4527-8ded-7f269d4c89c5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "bbf99eba-a65f-40c3-ad6a-a787e01aaae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec12b4af-c9fd-45b8-996c-37ec8d945854",
        "cursor": {
          "ref": "40265647-8870-4bb9-9413-ac5e25e1c8d6",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4c7af245-47d0-4d0a-bcd2-9e0fa1a31d50"
        },
        "item": {
          "id": "ec12b4af-c9fd-45b8-996c-37ec8d945854",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6a8e2a84-51e4-4a22-a1e1-b06ef498642e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d053f568-92f3-4a5a-b1ba-e03b31a99128",
        "cursor": {
          "ref": "28bebd16-a144-4136-b3e3-969d5ea9f2f7",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "65008e7e-b09b-4706-8601-299dd91c1c41"
        },
        "item": {
          "id": "d053f568-92f3-4a5a-b1ba-e03b31a99128",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "170fa639-ef99-4945-962b-89334a7355a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a5354a-d235-4ab9-9a6d-a50bcd0a2b6b",
        "cursor": {
          "ref": "a0430bea-0e31-488e-ab5d-6e93842acd43",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "122a5890-d0a8-4322-b8af-b0bf17ec1e98"
        },
        "item": {
          "id": "16a5354a-d235-4ab9-9a6d-a50bcd0a2b6b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8aa1d075-0802-419b-a60a-a88ae9f6d986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257388cb-3610-466e-ac8c-810b4d86b163",
        "cursor": {
          "ref": "3a72d797-0a3c-49b2-be20-e6b60f05ee54",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6c2732f3-ee23-44db-b370-1287cba7e590"
        },
        "item": {
          "id": "257388cb-3610-466e-ac8c-810b4d86b163",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fe047873-b10c-453b-8799-7d3f13299004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bb9205-a141-423b-a345-5d41f6973554",
        "cursor": {
          "ref": "907a93bc-bf2e-490c-90c7-efacc5269cc9",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c31df28f-22a4-4f6b-b1d6-3eb6808b5a11"
        },
        "item": {
          "id": "05bb9205-a141-423b-a345-5d41f6973554",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "670deef8-14ce-437a-9014-88ce79d740a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb66efd-e533-42b3-bbf1-09b03f1f91ff",
        "cursor": {
          "ref": "41d8ae15-bded-4b67-9f0b-c272a2523389",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8fa36118-2113-4840-ba6e-044fa30c15f1"
        },
        "item": {
          "id": "ddb66efd-e533-42b3-bbf1-09b03f1f91ff",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "11045a12-8216-468f-a6af-0cc355b67a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6537dd2-fc60-4881-916f-126f465f88c4",
        "cursor": {
          "ref": "b283c4c4-5136-4491-bbdb-010765a2fc57",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3b9c5e80-a5f8-452e-816c-d9c9acfc61e0"
        },
        "item": {
          "id": "e6537dd2-fc60-4881-916f-126f465f88c4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4c7f467d-eea0-4348-ac3d-66d29c17b60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a88ec89-89de-4385-81b2-3057ffe12e85",
        "cursor": {
          "ref": "d65aa4cf-96a5-4432-b554-a774a664315b",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3a680fc1-46ec-4088-a9ee-6d30491ba206"
        },
        "item": {
          "id": "5a88ec89-89de-4385-81b2-3057ffe12e85",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "09c79c47-2c57-4066-9815-74d8f7c0266f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb04dd8-1357-4dde-b554-f1886cb6b49e",
        "cursor": {
          "ref": "17c56762-ceb7-4be1-abe1-b97a463bd262",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b41270ae-dc62-4166-9fee-6a28038f387f"
        },
        "item": {
          "id": "6cb04dd8-1357-4dde-b554-f1886cb6b49e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3278d81d-bc1d-490d-bca2-781ed653797c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d44c5f3-227e-411c-96f9-2d69bd3f6151",
        "cursor": {
          "ref": "442fda5d-a8fc-4a5a-a111-9c7efdda7458",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5c3a68e2-3f06-4b45-ac7c-e73f41537b03"
        },
        "item": {
          "id": "5d44c5f3-227e-411c-96f9-2d69bd3f6151",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "530a3958-0871-4581-a1c7-e3a01d89b0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c0ab2d-d0f5-4b4e-939a-4aef68137fac",
        "cursor": {
          "ref": "021bb346-6dfb-4752-be5c-39270f17e262",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "67962cc4-5968-481a-8885-08ccc1e9baaf"
        },
        "item": {
          "id": "55c0ab2d-d0f5-4b4e-939a-4aef68137fac",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "da22a77a-ec5b-457d-9a7a-7585afd4c7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ad86a0-bb5b-426e-b9df-95a783b06ed5",
        "cursor": {
          "ref": "575fa7d2-d7ed-457e-bc0e-e6fefaaf31b5",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "82d61ad7-2846-4c26-b254-30ca3468887b"
        },
        "item": {
          "id": "d0ad86a0-bb5b-426e-b9df-95a783b06ed5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cac69f64-4c93-470f-aac6-a4624886209d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c78d6fb-f51f-435a-a5ac-09514cdf9fca",
        "cursor": {
          "ref": "a1ef222f-8b57-477e-9068-6291d6c2f208",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1c280fa5-d5a9-454c-aafe-996723b71e65"
        },
        "item": {
          "id": "7c78d6fb-f51f-435a-a5ac-09514cdf9fca",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3cb2233a-d189-4e3a-81fa-5e508e111f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b712f86-c15e-4ca7-9085-601cd4489008",
        "cursor": {
          "ref": "e9bb5bbd-d18f-4b5d-89d7-efa18f5cbb91",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b9b85203-5674-4341-a3a8-b63be562ada5"
        },
        "item": {
          "id": "8b712f86-c15e-4ca7-9085-601cd4489008",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6afd90ea-60ba-418a-b94d-c59987831d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c835fcc-65b0-41f2-8970-7ca66ebe9e1b",
        "cursor": {
          "ref": "c66ae6a2-5e34-4e52-9ca2-ffd328f50227",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6621256c-96fd-4e66-abb0-a026c4028c08"
        },
        "item": {
          "id": "5c835fcc-65b0-41f2-8970-7ca66ebe9e1b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "381c277f-266f-4a72-9029-a9d23fee0a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84e51c6-823f-41a8-80bb-0827089ab8c2",
        "cursor": {
          "ref": "17332659-a4e1-47a1-9972-736b1114224d",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "221c9c14-8514-4d52-9a31-d9a1474f90b6"
        },
        "item": {
          "id": "a84e51c6-823f-41a8-80bb-0827089ab8c2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6e97cc1c-dc1f-46e1-8de4-e19a453a381d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c194a99c-65ed-4bf9-b472-2fe2c6a14c95",
        "cursor": {
          "ref": "d1c12dd9-56f8-4215-b960-191d1cd00dfa",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7a17429b-6813-467d-b1f0-3865b9278f92"
        },
        "item": {
          "id": "c194a99c-65ed-4bf9-b472-2fe2c6a14c95",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "658f8c2d-4e7d-4037-838e-4ad19436528b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761a2d88-ed0d-4398-b209-1e8f90869b4a",
        "cursor": {
          "ref": "9ebe12c3-51a6-4374-9e26-025054514135",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4a248d26-2435-41f7-a928-8d3abaefd494"
        },
        "item": {
          "id": "761a2d88-ed0d-4398-b209-1e8f90869b4a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7681aa9c-f3c3-4aab-982f-ab6318fe6a52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d29f345-d13d-401b-899f-4dd87dd7f41b",
        "cursor": {
          "ref": "5655289f-a2f9-4040-bdd8-5094b1aad078",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9e5d6258-c869-4103-a208-2cf7bcab337e"
        },
        "item": {
          "id": "4d29f345-d13d-401b-899f-4dd87dd7f41b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f27da015-cc51-456f-9480-9f4c75cd7726",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 584,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2721c0f1-9ab5-40ee-88dd-6c209faaa616",
        "cursor": {
          "ref": "23a45b0c-7f24-494a-ac88-0769d79519d6",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b5858fc9-61f8-402f-9a05-bfcb0900f162"
        },
        "item": {
          "id": "2721c0f1-9ab5-40ee-88dd-6c209faaa616",
          "name": "credentials_issue"
        },
        "response": {
          "id": "51c1d2ff-a705-46f6-ae4d-d36469677beb",
          "status": "Created",
          "code": 201,
          "responseTime": 8013,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e927f79-5dee-467d-847c-83427d801fa6",
        "cursor": {
          "ref": "a7497049-4a29-4698-9c31-3e46e3ce8327",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "70da0442-ff1f-4a4d-ab31-7de397a442fa"
        },
        "item": {
          "id": "8e927f79-5dee-467d-847c-83427d801fa6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6365968b-ab52-477a-ac8f-5e36acdfa4de",
          "status": "Created",
          "code": 201,
          "responseTime": 4350,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b502ec-e6df-4a60-9c2f-b94ed23a41da",
        "cursor": {
          "ref": "7f4aa5cb-2066-4cc1-a27b-0faa460fb91a",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "09013991-9f07-442e-8031-049dfd2b50a1"
        },
        "item": {
          "id": "c5b502ec-e6df-4a60-9c2f-b94ed23a41da",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1ef96c43-e4d3-4060-b625-c3ffb820febb",
          "status": "Created",
          "code": 201,
          "responseTime": 5022,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1791d407-7920-4e7f-9a79-2cad42176702",
        "cursor": {
          "ref": "92d9ff33-2d69-494f-a202-0bdaf96952c8",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d57724b3-558d-4d17-8958-ebfeb2ab7f3d"
        },
        "item": {
          "id": "1791d407-7920-4e7f-9a79-2cad42176702",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "801736a0-97cc-4a8b-a42d-318d469e44b4",
          "status": "Created",
          "code": 201,
          "responseTime": 4232,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ad23b7-3b7a-475f-beae-9279f2039696",
        "cursor": {
          "ref": "47784a6c-9371-499c-83f2-aa72adb85966",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0c374f1a-ec03-4fec-b144-6509cc51796f"
        },
        "item": {
          "id": "e2ad23b7-3b7a-475f-beae-9279f2039696",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5f520b3d-b778-4562-a9ca-1dcfc1c1cfc1",
          "status": "Created",
          "code": 201,
          "responseTime": 4348,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6263ca59-5765-49ff-91bc-f42a1c6d41b5",
        "cursor": {
          "ref": "38207aa6-52f8-4633-b7bd-d00a155dcb09",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5f01de73-e976-4c59-8ab5-c2d3c1d5708b"
        },
        "item": {
          "id": "6263ca59-5765-49ff-91bc-f42a1c6d41b5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4dbb8ffd-c7f3-45e4-b553-311ac07b3735",
          "status": "Created",
          "code": 201,
          "responseTime": 7668,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d4e762-2351-4a84-a7f4-0328ed192201",
        "cursor": {
          "ref": "2f1406c1-aa46-43ef-8385-ea036aba0058",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7896552f-2429-4a8d-81bc-290cb9241241"
        },
        "item": {
          "id": "d8d4e762-2351-4a84-a7f4-0328ed192201",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "17bb101e-4d87-4f04-850d-89040ac26c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d4e762-2351-4a84-a7f4-0328ed192201",
        "cursor": {
          "ref": "2f1406c1-aa46-43ef-8385-ea036aba0058",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7896552f-2429-4a8d-81bc-290cb9241241"
        },
        "item": {
          "id": "d8d4e762-2351-4a84-a7f4-0328ed192201",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "17bb101e-4d87-4f04-850d-89040ac26c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addaca68-3634-44d4-a015-a4f06b42897d",
        "cursor": {
          "ref": "847d1a73-2054-4292-9fa3-8c44e9cf8941",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "03803bab-5111-4dfb-8f16-6d677d385d37"
        },
        "item": {
          "id": "addaca68-3634-44d4-a015-a4f06b42897d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dda66a4a-7a7e-4add-9107-2a7650ee6bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1036,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f88d12a-88e0-4d82-9c77-e5fd5ff9b91a",
        "cursor": {
          "ref": "2ba5cac6-00b5-4fcd-8232-31224eaf5818",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1dedd45e-f8db-42af-b2f7-074be1da7b3d"
        },
        "item": {
          "id": "4f88d12a-88e0-4d82-9c77-e5fd5ff9b91a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0ef6a9c3-be6d-4e07-b1a9-b34e48cea072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4a0e3e-fc2e-405c-a5a7-d551ead671ee",
        "cursor": {
          "ref": "2da0838b-1bf5-4ef2-90b0-0a0b31d29a92",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "33af3613-67e4-4818-bf4f-fec7cffb7ef6"
        },
        "item": {
          "id": "4d4a0e3e-fc2e-405c-a5a7-d551ead671ee",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9c2275f2-0230-4ae0-9485-7e53d8f48e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fe77f4-d11d-43c5-9dd4-3244acbcd0ab",
        "cursor": {
          "ref": "0365f787-7744-4591-b96e-09068407dedd",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "581b8a00-50c9-45ae-9aef-10adda5d4548"
        },
        "item": {
          "id": "19fe77f4-d11d-43c5-9dd4-3244acbcd0ab",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bd621e95-4b0f-4b3d-bfe5-4af6021ca0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f8449e-272c-4329-892b-6d46fdfcd247",
        "cursor": {
          "ref": "d200c0cd-e23f-44c4-bde4-09aff718b5ff",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "127e2637-7416-486e-b423-327a041adf37"
        },
        "item": {
          "id": "68f8449e-272c-4329-892b-6d46fdfcd247",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6a6c5645-ed39-4fce-af62-c1ececa49319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c4e3aa-1504-4e3a-bc92-bad4155dc18d",
        "cursor": {
          "ref": "2f8df181-ca2f-4783-a644-190ca6af5bc6",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "753562d6-081e-4875-a7ee-dc7b0d341ed5"
        },
        "item": {
          "id": "c2c4e3aa-1504-4e3a-bc92-bad4155dc18d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dcfcabba-3ecc-4ccb-b6f3-33a5857a2172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd3358c-ed5c-4d5f-9107-72e418c12d1f",
        "cursor": {
          "ref": "c9368b5a-facf-4d6b-b6ef-0a6f00d98cc1",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fb51a8e0-29a1-4f82-97a4-bc50590975ff"
        },
        "item": {
          "id": "4fd3358c-ed5c-4d5f-9107-72e418c12d1f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8354eef3-56d1-4588-8a08-7bdeafa853f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687a41c8-19bf-4202-b726-b82041d15f8d",
        "cursor": {
          "ref": "106a858c-d4da-4062-93d1-1158762292dd",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5e8913e3-746c-41bc-95d3-603aa91bf7d8"
        },
        "item": {
          "id": "687a41c8-19bf-4202-b726-b82041d15f8d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bbdd80ed-3210-47a3-b9df-6c0323f6c161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898833e5-cc3a-4993-8b04-8e5ee69708a0",
        "cursor": {
          "ref": "cd05ecbf-0561-4ff7-bd98-995320e88636",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "08650724-7c69-4a5c-96e6-37d5fab05046"
        },
        "item": {
          "id": "898833e5-cc3a-4993-8b04-8e5ee69708a0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3612c4fb-534e-4de0-88b6-c74330fb6711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7638808-6987-44f4-b070-90514f9fb4b1",
        "cursor": {
          "ref": "815446f3-e26a-4f26-93fb-2b7b420e986d",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d97d8a9c-9392-4af3-8eac-83c9fb1e53a3"
        },
        "item": {
          "id": "a7638808-6987-44f4-b070-90514f9fb4b1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2c194008-ee01-4328-bb10-18fc9161ae4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1b74cd-e8f8-4719-941b-b47005f113a4",
        "cursor": {
          "ref": "d7ad05a2-36ec-4929-81c3-5d40582153c8",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4e40c759-0f73-47e9-bc53-4957497913bb"
        },
        "item": {
          "id": "fa1b74cd-e8f8-4719-941b-b47005f113a4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "02f72a40-3ca0-4f30-b0b1-aafcabaa37ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e629b3c-f1ba-4e8e-8ee9-fd1e87346c13",
        "cursor": {
          "ref": "af3d76c8-21f9-4e7f-8848-7a1d95c5161e",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ac82a085-aece-4ef8-92d8-45bd065b09d4"
        },
        "item": {
          "id": "3e629b3c-f1ba-4e8e-8ee9-fd1e87346c13",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "159abc3e-21c2-4da5-a8fa-b0e13c969563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1533037-54b2-4ab0-95fa-1089681a6dce",
        "cursor": {
          "ref": "d39e0f61-fe9e-4050-ae9c-1fd561d017b7",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e3604ea2-6ba1-4553-a0d0-be5b193c3eab"
        },
        "item": {
          "id": "d1533037-54b2-4ab0-95fa-1089681a6dce",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "07a008b8-e0d7-4775-ac52-26b333b632fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ba6cc7-73d4-408e-b11d-e215fc20e5e6",
        "cursor": {
          "ref": "ba884ff9-bde6-4a8d-9d90-e5df8b0ab477",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d8ae0f14-9bc3-489b-8e4a-5b6c9372e331"
        },
        "item": {
          "id": "06ba6cc7-73d4-408e-b11d-e215fc20e5e6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cb49e293-3f4c-4934-a8b1-885442bee2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd52f85-9108-49fa-a09f-def97ea345dc",
        "cursor": {
          "ref": "a2ba501f-48a4-4f33-9cd1-0b8add5609f8",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e4c39178-afbd-4ac8-8a12-660ca718a307"
        },
        "item": {
          "id": "2cd52f85-9108-49fa-a09f-def97ea345dc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8b71cd34-16d0-455f-b6bf-1242e817d820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd21b33b-3495-4329-8c67-da816fa48121",
        "cursor": {
          "ref": "d1b9f4c4-6c94-4120-abfb-1fc4ef73bdc2",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f9eaba17-e30c-4f48-b633-204f16d01d80"
        },
        "item": {
          "id": "bd21b33b-3495-4329-8c67-da816fa48121",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f56f0317-fe6c-4671-afe5-f72444901155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec86cb8-d7a3-4edd-9ad1-945cf81bc4f9",
        "cursor": {
          "ref": "e3f82227-b32c-40ff-8011-370757c9ce41",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b1c05de2-a786-417d-98a7-4d62f84fe052"
        },
        "item": {
          "id": "2ec86cb8-d7a3-4edd-9ad1-945cf81bc4f9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "087ec560-9c5d-4749-a9c9-31f0584a33d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9e3628-dfb4-4fa9-ad08-436698d529b2",
        "cursor": {
          "ref": "8c0deb90-82cb-47de-8fd1-3a12cebb7a82",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a76ce99e-8d92-4b24-994b-d3582a25cfad"
        },
        "item": {
          "id": "2f9e3628-dfb4-4fa9-ad08-436698d529b2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "42d8d449-dfda-4b0d-a6df-2e8673d4a86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a926e64d-4481-4304-9cc2-224db9da00be",
        "cursor": {
          "ref": "e4a451d8-df8a-4c08-960e-64faa5d9b438",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ad21f284-95e8-4731-a4ff-e447fafc653f"
        },
        "item": {
          "id": "a926e64d-4481-4304-9cc2-224db9da00be",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1648e8ff-bb5f-46ab-9f43-7275e8d5fb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385a7606-4408-420f-b1a1-2333cbd580be",
        "cursor": {
          "ref": "07be2cf5-79bc-4b40-85ff-965a7b97ee4a",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "26e3f074-6f6d-427a-9d09-af8134bef47c"
        },
        "item": {
          "id": "385a7606-4408-420f-b1a1-2333cbd580be",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "71c7628d-ebe4-4621-9ff6-d6a3f4774ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916c4c13-a9e2-4694-8b52-30cc2ee2973f",
        "cursor": {
          "ref": "2027c2c7-6342-4b7c-9a37-c0504820bf44",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6fb1bb6b-0539-4ffa-8ea3-d2f577beff72"
        },
        "item": {
          "id": "916c4c13-a9e2-4694-8b52-30cc2ee2973f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fab3df59-421c-4d27-8eaf-d11e4cc7f51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d72c9e-edf9-4589-a9f9-28d0ca15d0fc",
        "cursor": {
          "ref": "181c7433-dd3c-45b1-b469-f6e4aad14691",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "52aab754-661d-4915-bd2a-0c1a4c7fe55c"
        },
        "item": {
          "id": "47d72c9e-edf9-4589-a9f9-28d0ca15d0fc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "541ec7e7-5f7d-4eaf-8e23-e2f8c39c46c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ff0aee-beb1-4595-b3a9-9a3bf9685027",
        "cursor": {
          "ref": "46fd91f2-09f3-426e-ab7c-3114e52802f8",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b15796b7-7004-4dc0-976e-441b34ab4197"
        },
        "item": {
          "id": "60ff0aee-beb1-4595-b3a9-9a3bf9685027",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d3ef3224-2ee0-4d78-9b06-7f7ff7556018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0123b2be-9c96-4d1c-a0ff-3a49338827fe",
        "cursor": {
          "ref": "ae281be2-f986-431c-84fc-f414511c25d5",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "31a5f289-16a7-4097-930f-1767c182cec1"
        },
        "item": {
          "id": "0123b2be-9c96-4d1c-a0ff-3a49338827fe",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fcd69086-2d01-4404-8a06-7296583d4f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1108,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e290a1d8-aab5-4f77-96fe-a3d8dcf0261f",
        "cursor": {
          "ref": "9bbaf597-b778-4800-9c5f-b786e38a3563",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f878e077-3fa7-486c-98e2-ec0bd38c2a02"
        },
        "item": {
          "id": "e290a1d8-aab5-4f77-96fe-a3d8dcf0261f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "871fa5f0-121a-49fd-8b98-0a716ef40731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1206,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d349b191-588e-4b16-ad88-3ac4a1e50dcb",
        "cursor": {
          "ref": "d31e70d5-af7c-4167-a88d-c83be48afc8b",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9462c23d-4f7a-4b7c-bcb6-a71c8e8d2600"
        },
        "item": {
          "id": "d349b191-588e-4b16-ad88-3ac4a1e50dcb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bcff9ec6-6685-4c82-8408-7f9057ecb18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1004,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e3adc7-618f-40d9-9b6e-1379c2354e9d",
        "cursor": {
          "ref": "f0dd1322-fbdc-472b-bbb6-28e50bec0bd3",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1ba965b0-27d2-4202-b881-f6993e1c08d6"
        },
        "item": {
          "id": "78e3adc7-618f-40d9-9b6e-1379c2354e9d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e2082d8c-ca5f-473c-a3ec-98e5faab9104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1024,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda7f289-71d9-4f94-848a-ed7283195802",
        "cursor": {
          "ref": "882b6126-2ef4-4ab2-84f5-e2e488793d09",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4dad7946-1e34-4cc2-835c-6326adc345f5"
        },
        "item": {
          "id": "eda7f289-71d9-4f94-848a-ed7283195802",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "385353af-5db6-4803-80d8-ef95a8f33e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc2c607-b5ca-449d-ba8f-683440ab0423",
        "cursor": {
          "ref": "448f42b2-2aba-4c70-beb3-f4d61d4adfb1",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8a724035-3c0c-4567-8011-bd94cba19a64"
        },
        "item": {
          "id": "4bc2c607-b5ca-449d-ba8f-683440ab0423",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2f76da80-c5ca-4012-a469-d54192c6ae9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c274731-f31f-4ebc-9180-3d79517d4c01",
        "cursor": {
          "ref": "ab7b1c13-e288-47f4-8ed1-092ee406a91b",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fca33a94-834d-44e3-a0ce-1270227c651f"
        },
        "item": {
          "id": "7c274731-f31f-4ebc-9180-3d79517d4c01",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dc758bee-1dff-4732-80d0-a2fde1b53088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3097df-34f7-4bab-bce4-7270d56598c7",
        "cursor": {
          "ref": "163a9372-2972-4038-a884-681f39b1bd3a",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d59df1e2-968f-4025-bda2-b7194e250e2f"
        },
        "item": {
          "id": "8a3097df-34f7-4bab-bce4-7270d56598c7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cdf4efb2-f583-466e-bd5d-99d238795d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46bb7e5-7853-46d4-a080-adf1eacdf59f",
        "cursor": {
          "ref": "b8a23726-0568-4bb4-8617-16dd9f7e9168",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "83c9a2c7-cada-49ce-b821-4d1822ea99ab"
        },
        "item": {
          "id": "a46bb7e5-7853-46d4-a080-adf1eacdf59f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0d798d50-c6e2-47ec-b140-4dbdc2b5eba8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8736d0-e47c-4f6d-a8df-b3fae47b7d71",
        "cursor": {
          "ref": "2c47249e-95d2-49dd-9c0d-88a114d23db1",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3c0dd67a-843a-422a-9446-3620a9b1319a"
        },
        "item": {
          "id": "3b8736d0-e47c-4f6d-a8df-b3fae47b7d71",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "afcbe49a-6b07-4be7-af15-5c359853db3e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 607,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21335f0a-dd4c-4c6d-824e-df55650acba4",
        "cursor": {
          "ref": "ae50d617-5a6c-40a9-b3d1-8de35912b4c8",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a03d9dbb-6561-4d95-881a-1bd218df1a4c"
        },
        "item": {
          "id": "21335f0a-dd4c-4c6d-824e-df55650acba4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ffcc4555-0405-4422-8a37-78b2e7497cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21335f0a-dd4c-4c6d-824e-df55650acba4",
        "cursor": {
          "ref": "ae50d617-5a6c-40a9-b3d1-8de35912b4c8",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a03d9dbb-6561-4d95-881a-1bd218df1a4c"
        },
        "item": {
          "id": "21335f0a-dd4c-4c6d-824e-df55650acba4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ffcc4555-0405-4422-8a37-78b2e7497cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6f2198-7203-48ae-9204-51a7b385432f",
        "cursor": {
          "ref": "2b237133-07ba-4add-8afe-3639fb7302dd",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9b053042-36b0-408a-840f-61ad71ebcb97"
        },
        "item": {
          "id": "6f6f2198-7203-48ae-9204-51a7b385432f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a3948449-b97e-4baf-bcbd-5cf0deb722c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69bd23e-4d82-4661-a510-dc685ac5c56e",
        "cursor": {
          "ref": "c58a3959-a8c6-4e7c-8e96-d33a3479a9e2",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ec0fe90d-e3ae-4e78-93d3-3d6ccf20b7bb"
        },
        "item": {
          "id": "e69bd23e-4d82-4661-a510-dc685ac5c56e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0d20ed93-a520-4c07-a70c-2a75b835c106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8857e8-c252-4194-88cf-e702316c1d63",
        "cursor": {
          "ref": "13ee9411-591d-4b93-a143-0f2b7697db33",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "309219db-63e9-46e5-b0ad-45d260423deb"
        },
        "item": {
          "id": "aa8857e8-c252-4194-88cf-e702316c1d63",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f4fe42a9-d71f-400f-8f84-1a0682968fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d787c177-394e-458d-88b1-d6b32e4d04b5",
        "cursor": {
          "ref": "835985f7-62c8-41e2-9385-d1a9c48e2eae",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "808e3572-8fe3-49b3-9db9-9ca39b4fae23"
        },
        "item": {
          "id": "d787c177-394e-458d-88b1-d6b32e4d04b5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b90e89d8-52f9-48b5-a15d-95390fb2adab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94681872-6714-4fc8-85ff-9114d1207ed8",
        "cursor": {
          "ref": "3c814bef-0bcf-4623-b920-a872ee0ce604",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c1ad6dd1-ed13-499f-9536-375025928b30"
        },
        "item": {
          "id": "94681872-6714-4fc8-85ff-9114d1207ed8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "eae14513-f996-44ea-ae73-47fe8c2ccda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af22f849-635a-4bcb-a315-f0c6baed35ba",
        "cursor": {
          "ref": "520cf6a0-610c-401d-9068-562956149090",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ee7ca203-c3e1-4a25-859b-503c919ce8b0"
        },
        "item": {
          "id": "af22f849-635a-4bcb-a315-f0c6baed35ba",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "df3915ff-2249-442d-9e24-9080f88ff8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ac66cf-4f9d-446b-9cf8-95fb58def177",
        "cursor": {
          "ref": "ad2c6325-b5a6-45b0-9b5c-946441aeceb4",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0883fd34-daa5-4ccd-910b-126f645f7363"
        },
        "item": {
          "id": "55ac66cf-4f9d-446b-9cf8-95fb58def177",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e471718f-6e90-412b-b18a-3db2309b5bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1840e92-ed40-478b-ba0a-72f0402fccd2",
        "cursor": {
          "ref": "e216ed43-1d20-4d3a-b64c-f289149bad9d",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0e9881e4-c602-4c1a-bf3a-b0da26036565"
        },
        "item": {
          "id": "d1840e92-ed40-478b-ba0a-72f0402fccd2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "82a42037-6319-4a03-b962-2ee90893f203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071e274c-f939-4562-9137-399ebab93ffc",
        "cursor": {
          "ref": "d99dc669-dcd5-416c-a0f6-27dca5d90e5f",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fb6f2271-a7ae-4495-8df5-2f10aa6b2c47"
        },
        "item": {
          "id": "071e274c-f939-4562-9137-399ebab93ffc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0faebb38-59db-4bfb-99e2-d37b7860909a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61328ee-cc02-4763-83d4-9b88b577f64b",
        "cursor": {
          "ref": "91922e9f-14e1-4370-962a-2b2dc4997e64",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7f91fa4f-dc5a-4b97-94dd-f4c059e6e98d"
        },
        "item": {
          "id": "a61328ee-cc02-4763-83d4-9b88b577f64b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e085dcb5-447d-4145-91db-6615182bff52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94395bf0-3ac1-4383-a446-9338be1a458f",
        "cursor": {
          "ref": "91fef62e-dbdd-4058-a7b7-0a574aaa6231",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b9ea3181-5da0-4a9b-a738-72f58196fe7b"
        },
        "item": {
          "id": "94395bf0-3ac1-4383-a446-9338be1a458f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f06b473c-9be9-4934-b723-cc796bdafeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb053ed-ed83-45d4-ba13-c7a87c0c8ea6",
        "cursor": {
          "ref": "2d5a9170-6ab2-4b41-a144-579c4fb5bb4c",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5e76dd53-66a6-4c2f-adb7-1fcb3b1039c0"
        },
        "item": {
          "id": "bfb053ed-ed83-45d4-ba13-c7a87c0c8ea6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "04889891-40a5-45a6-aba5-fc8b5dfd77cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea65f506-11dd-49cf-99ba-41555c790752",
        "cursor": {
          "ref": "0b126a4d-44d6-4b24-ad66-5fbd84382d51",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f378d5be-8c6f-4a6b-b94d-68b46cbf1b27"
        },
        "item": {
          "id": "ea65f506-11dd-49cf-99ba-41555c790752",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2da920f7-c685-4e23-98da-2e167cf7c869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e747fe9e-e33a-4201-b61e-912d1a1aa2d1",
        "cursor": {
          "ref": "1b879e12-6b87-44bb-b1f2-237ce77b488c",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bc8f610d-76df-464e-a59f-3168b2c5a410"
        },
        "item": {
          "id": "e747fe9e-e33a-4201-b61e-912d1a1aa2d1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5915ffe2-d1b7-4b0f-9e60-89113d27f33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ceddeb8-eb88-4dc4-9b7b-8f59ddb39dde",
        "cursor": {
          "ref": "88a8fec5-de17-4051-b937-e5b9ff868689",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4ae3a140-4644-4e43-b3c3-bdb7b9395d35"
        },
        "item": {
          "id": "9ceddeb8-eb88-4dc4-9b7b-8f59ddb39dde",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9c2c551d-34d0-45bc-83be-562c33f613b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a58fcf0-abfb-4a43-b3f5-a7cddfe4a71b",
        "cursor": {
          "ref": "b52ad005-dce8-4db4-849e-6189ce9a52e3",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0eeb6810-097f-4066-abf9-76d25e7543f1"
        },
        "item": {
          "id": "1a58fcf0-abfb-4a43-b3f5-a7cddfe4a71b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e6e34cbf-5e78-44b7-9360-ddfe5aaeca33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0144bf7-1f53-495c-a3aa-bbd9c5651273",
        "cursor": {
          "ref": "79b2f2dd-6e2d-4ffa-90f8-c3d56ed30f7e",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fb7e8a9b-6994-4033-b13d-210d351f75f9"
        },
        "item": {
          "id": "e0144bf7-1f53-495c-a3aa-bbd9c5651273",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ca8f0c6d-482f-47a3-937a-40108edce051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ea9b10-a3b7-457b-8e2c-dd03f3c43bbc",
        "cursor": {
          "ref": "bf5d41ad-eaea-49a1-ab48-3468316f976c",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d2a6618f-b8ae-4077-9334-4bbf5654fe0f"
        },
        "item": {
          "id": "e2ea9b10-a3b7-457b-8e2c-dd03f3c43bbc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dd1ece7b-9722-4d53-b468-43c1513b3248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3fb88e-2eed-4882-b091-dee4445d3bc0",
        "cursor": {
          "ref": "a9fe1114-31fe-42e9-b671-c1e8ea37f8e0",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "eac41522-7169-482d-b15e-0c719e2431e9"
        },
        "item": {
          "id": "ef3fb88e-2eed-4882-b091-dee4445d3bc0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f8c629c7-d2e0-40f4-ba7d-b1b38c624dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141b516c-09fe-4dd0-8dfd-531ed01930a7",
        "cursor": {
          "ref": "2fc5227d-55f9-4d0c-98a5-fc290b9b4885",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f5791dc6-226f-4d60-9aed-09b3b35c88c0"
        },
        "item": {
          "id": "141b516c-09fe-4dd0-8dfd-531ed01930a7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "26fe25e8-2f3f-4cad-9fe8-94a36534e4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8aeba58-b24b-49a6-b566-b97144848519",
        "cursor": {
          "ref": "fec3f210-da74-4438-a1f1-f6582a7643bb",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e7240dc3-a077-469b-9708-e6cddad5aed9"
        },
        "item": {
          "id": "e8aeba58-b24b-49a6-b566-b97144848519",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "da66d909-12c7-400b-a6de-c628c3967652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c0b58c-23cd-486f-bb64-98cf872edb3b",
        "cursor": {
          "ref": "9e00d37a-5b29-4a01-a005-5b0662ab6ae6",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e6fb1dca-7d4d-4b83-a3b9-24340bf78f64"
        },
        "item": {
          "id": "b0c0b58c-23cd-486f-bb64-98cf872edb3b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2c351335-8d3d-4e3e-816a-b3caa520947a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9b1493-4390-49f5-a688-a67ef865736d",
        "cursor": {
          "ref": "3732a74b-af5e-491c-b3b5-4933c2f5b51e",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f451635b-1ae2-4606-a29d-d7f00105f6f6"
        },
        "item": {
          "id": "7a9b1493-4390-49f5-a688-a67ef865736d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "63c78538-5392-45f5-9ddf-dba043a6b37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54969ebc-c199-4c1b-8efb-32e69094d983",
        "cursor": {
          "ref": "800fdfe2-2478-4b24-8700-6935c5ae72b9",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f1df754d-21c2-4440-b2ef-f9eca98cf8f4"
        },
        "item": {
          "id": "54969ebc-c199-4c1b-8efb-32e69094d983",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1e33f425-7cd4-4db4-810b-0599f8558188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cab9e29-11b6-4b28-9951-312be9c64918",
        "cursor": {
          "ref": "b9cbccb7-0a77-4d58-999b-f2ba097fd5f1",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "676497ab-1cec-4a97-9fdd-f4708697cf29"
        },
        "item": {
          "id": "9cab9e29-11b6-4b28-9951-312be9c64918",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "13ba4610-40e0-4202-824f-ede64785c919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6948d47-f22c-40ed-8691-efe5e1eba54c",
        "cursor": {
          "ref": "5ae84b6a-7419-4b18-ba30-bf25c1ae50f5",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e183e4a2-4b14-4591-a059-af57a4c95a6d"
        },
        "item": {
          "id": "b6948d47-f22c-40ed-8691-efe5e1eba54c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f7ca597e-b971-4c91-a841-5b587e452ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9bfc56-3b67-4519-b723-8a8fc25222b3",
        "cursor": {
          "ref": "c0fc5971-850b-4ee7-bb9b-84587fb9afb7",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1e723f79-c527-4e20-ae7a-5474814e8a4b"
        },
        "item": {
          "id": "ee9bfc56-3b67-4519-b723-8a8fc25222b3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1e4de42d-5951-4799-b1a4-db719c7244bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004a7f08-b46a-451a-94e0-2d1046aed49f",
        "cursor": {
          "ref": "ae937e15-60ad-49ca-876c-aeebc5bae545",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9975a36b-1104-4759-a8c2-e32ff86b447d"
        },
        "item": {
          "id": "004a7f08-b46a-451a-94e0-2d1046aed49f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "daf116ca-a7a6-45c5-87e3-40d535737304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0efab2d-424c-47d1-9080-63f2cd0aaae7",
        "cursor": {
          "ref": "07ea0243-844c-40e6-9ce0-e421633e70f4",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "66a7f458-58b3-4a68-b9b9-6f570ec1fef5"
        },
        "item": {
          "id": "f0efab2d-424c-47d1-9080-63f2cd0aaae7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "eb79b575-0d28-4744-b0c2-9e6a6bf6b3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054ff63c-1c36-4849-8384-b51a22dd087c",
        "cursor": {
          "ref": "8c3d8885-a733-4347-9d0c-dd19732afc84",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3a7e2142-7b2f-43b8-b983-76f9bf46b70b"
        },
        "item": {
          "id": "054ff63c-1c36-4849-8384-b51a22dd087c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "726ae862-442d-49af-90f2-65c2ee2bcd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05655b9e-8992-4581-9a29-b525bf4d3a21",
        "cursor": {
          "ref": "3c2948af-bb2c-4b42-89b0-d7c18eb262ee",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c212021d-cc40-49d3-b4ce-020ff918ce90"
        },
        "item": {
          "id": "05655b9e-8992-4581-9a29-b525bf4d3a21",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0194bd10-bebc-47a0-be3d-29289a5239b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc00916f-128b-44e9-aa08-4231626e5e0f",
        "cursor": {
          "ref": "ec504f2e-d1e1-4b1b-a1eb-051de5e97a36",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e1cf5dbb-e6a6-4b43-9f2f-863075e5c853"
        },
        "item": {
          "id": "dc00916f-128b-44e9-aa08-4231626e5e0f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4bd12f0d-76c6-4d2e-89d7-c0865373ca3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1008,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67e4399-ac71-48a8-b6eb-cccd6a2f051f",
        "cursor": {
          "ref": "7c332018-d778-4474-9344-76cc55e61f2c",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4d9e672f-b8c9-4c19-a973-6be4c7d8020f"
        },
        "item": {
          "id": "b67e4399-ac71-48a8-b6eb-cccd6a2f051f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b2b88bb1-4f91-4070-8921-6e87143b896d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b150f08f-83c9-419b-a345-ec5365443427",
        "cursor": {
          "ref": "4a6d965b-3384-4db4-ad7b-2afd895b7fe9",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "519d5c24-9909-4536-b5dc-4cacf71c47c3"
        },
        "item": {
          "id": "b150f08f-83c9-419b-a345-ec5365443427",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "321cd8d8-b363-4a14-b6b7-82dd903f9104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56871e6f-63a3-4b1d-99b3-5b7427d832a1",
        "cursor": {
          "ref": "6d08512c-7cdc-4fdf-9248-4b4314c2a83c",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b50584ab-412e-471a-a6c4-927104d41a37"
        },
        "item": {
          "id": "56871e6f-63a3-4b1d-99b3-5b7427d832a1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dbabb1e0-9761-47b3-93eb-632631d29dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b99416e-966c-4ed7-b927-6ff6df16e423",
        "cursor": {
          "ref": "4aeb4833-8549-4c85-b9cb-5f6687fb3f8f",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8971d9e6-d4f1-451b-844e-7c696d864ab9"
        },
        "item": {
          "id": "2b99416e-966c-4ed7-b927-6ff6df16e423",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "82cc3f45-d4bc-4fcc-bde9-177618e49ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f39c70-462d-4ab1-b07d-9baa507fcde2",
        "cursor": {
          "ref": "ce699c44-9b92-4e59-b5ca-941483f7d23a",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "89614370-7ba4-46ae-8d4f-c1929560fd05"
        },
        "item": {
          "id": "a5f39c70-462d-4ab1-b07d-9baa507fcde2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f9a107bb-17ef-4cbb-850e-ffd697ccb3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616f6412-8448-4191-9ce4-dd3ccc71f8c3",
        "cursor": {
          "ref": "a61b689e-f3bd-41d3-85b1-45a85a4efae1",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "69e7e9fd-1969-4ad6-999e-909a085ff1e0"
        },
        "item": {
          "id": "616f6412-8448-4191-9ce4-dd3ccc71f8c3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bf7cfe31-7185-4142-a5b5-7a0658a9db96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a62811-ce08-4ebf-b896-ee1d440c56bc",
        "cursor": {
          "ref": "b25f7d89-6dae-4b93-b4d2-c15f3ace3d17",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6802f4b4-1c4a-4912-b1c8-f828b1b52e3d"
        },
        "item": {
          "id": "b8a62811-ce08-4ebf-b896-ee1d440c56bc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2ceebd7f-3f62-47d9-b320-dfc1b64fa42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef2a675-c978-4920-9576-1c0fdc2d42dd",
        "cursor": {
          "ref": "9dc0d059-6648-402e-a89a-5859807a4674",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "507c2cc1-47ed-4d63-9411-754d2e6a527d"
        },
        "item": {
          "id": "aef2a675-c978-4920-9576-1c0fdc2d42dd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d43af18e-9eea-4283-a1a3-9319b345a82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61391bab-460b-4261-8464-c7e13be1bd5e",
        "cursor": {
          "ref": "7b878b4a-2fea-43bb-877f-95d359d3b332",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c126613e-c63a-4f0c-bd7b-e785ea0a34cc"
        },
        "item": {
          "id": "61391bab-460b-4261-8464-c7e13be1bd5e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5e2d7e50-e4d2-4250-bbe5-ca1e4a272a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f497472-1128-4cca-8289-62f0383846a2",
        "cursor": {
          "ref": "697b0dfb-48e5-422a-b0fe-1e63ca608dbe",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a463cffd-d5e1-4a7c-b493-4228bd70b9f0"
        },
        "item": {
          "id": "9f497472-1128-4cca-8289-62f0383846a2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5fb3a997-37d3-4ba7-8aa1-e01b75f156b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aee4559-e715-41bc-9739-faefd1c75982",
        "cursor": {
          "ref": "95ca422c-d24c-4800-bc93-25fa9a83ae7d",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4ac6fe49-b8c9-41e1-9d03-feccab1ac9bf"
        },
        "item": {
          "id": "6aee4559-e715-41bc-9739-faefd1c75982",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "106390dc-2084-41ff-ae04-2a35100bfcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e83209b-a0a3-44b5-a579-ad395875f67d",
        "cursor": {
          "ref": "ec07f725-f97c-4199-857a-5b2f977fc449",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "74e435b2-4354-4543-9979-b066d031cc55"
        },
        "item": {
          "id": "7e83209b-a0a3-44b5-a579-ad395875f67d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5e5fd24f-708b-406c-b362-848382abae08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29fb03a-c4e5-4e70-859e-1bddbf8b128a",
        "cursor": {
          "ref": "ea05c409-0125-425a-bb26-54dab58729ac",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "306a10b5-585f-40bf-83cf-b7df258ce3d9"
        },
        "item": {
          "id": "b29fb03a-c4e5-4e70-859e-1bddbf8b128a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0d7d1d54-acda-4c12-9850-4f0968c89246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2b0ace-3cd8-4722-85e7-eb0574c3d976",
        "cursor": {
          "ref": "02185238-e45e-42d3-8748-21a2240b9a75",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "71165ae0-216a-4512-9d75-b3a397498682"
        },
        "item": {
          "id": "9d2b0ace-3cd8-4722-85e7-eb0574c3d976",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c87e7502-fcc0-4853-a1fa-9dadbfd6adfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffed4b9-85e7-41a1-98e8-28985906ea8c",
        "cursor": {
          "ref": "955ce369-eb1d-44e5-9646-3fd585b294f0",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ebf98487-78ed-4173-ae3d-695824a821c3"
        },
        "item": {
          "id": "9ffed4b9-85e7-41a1-98e8-28985906ea8c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4d11d7f6-e341-4859-94a4-2d0243cbfe39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e81777-dedb-478c-b4c5-9176f2d39352",
        "cursor": {
          "ref": "3ed607f3-f924-44ff-98c8-b26713cd3d0c",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "57ed2e15-bd85-42cb-86bb-01f84b767740"
        },
        "item": {
          "id": "50e81777-dedb-478c-b4c5-9176f2d39352",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b0c0158d-0408-4d21-b08b-60d2a0a92c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8934cf-11ee-4745-8459-31718710ddbb",
        "cursor": {
          "ref": "e5ae4409-ec75-4e45-9136-ed88b05a34dc",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fccbe1e7-171d-43d6-ad2f-aee0ed0226f4"
        },
        "item": {
          "id": "ec8934cf-11ee-4745-8459-31718710ddbb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cf0840a3-e728-41fe-8526-747fcc52d58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affbf991-538a-4b65-be51-9d01f637e161",
        "cursor": {
          "ref": "96cd60c4-20dd-41ea-9c81-799d9ed443ef",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "94328c17-9e9f-479e-b6f0-ba9049bb9def"
        },
        "item": {
          "id": "affbf991-538a-4b65-be51-9d01f637e161",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "271fe11b-b121-4326-b35f-404c3ab7ddeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ac4775-f976-4b02-ac80-4a776bde3f91",
        "cursor": {
          "ref": "694705b5-6f62-4b4d-b779-90076ea133ae",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "57b75aaa-07a6-4f9e-a533-9214736b88a9"
        },
        "item": {
          "id": "48ac4775-f976-4b02-ac80-4a776bde3f91",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1c768f31-b79c-4ca8-bc10-0d420f223009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6712a28e-8de3-4a50-a5f6-2c3b1a447e12",
        "cursor": {
          "ref": "d448bb26-b7a9-43e0-bbbe-d38932af657b",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c3c55d7a-52c6-46a4-8eb3-0bd1d5c82e91"
        },
        "item": {
          "id": "6712a28e-8de3-4a50-a5f6-2c3b1a447e12",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0ae7b07c-0666-40a9-b1e5-10b08c33e011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eeb944b-9aa9-439b-9ae3-7de4ef333b98",
        "cursor": {
          "ref": "7f7070c5-5f52-480f-a686-eada86320512",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "83e6d779-2e4c-43cd-bcbe-6abe0e5ee49b"
        },
        "item": {
          "id": "5eeb944b-9aa9-439b-9ae3-7de4ef333b98",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5d531ab5-b944-4851-8a75-2ee8395c71fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d86d329-b6fb-4a70-9ba0-672c28145307",
        "cursor": {
          "ref": "80ef4855-5796-45a3-b48b-edbaad816da5",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d9643c1d-cb98-489e-8521-3c66a68aa0c4"
        },
        "item": {
          "id": "6d86d329-b6fb-4a70-9ba0-672c28145307",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "09893361-894f-474b-b727-8b8f11612029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bf61ca-8792-4777-bdf1-05eb4e0d7a59",
        "cursor": {
          "ref": "ecfb4582-d1f7-4167-a51a-7593fc1e0a81",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2ce59c88-fc67-4e8c-8558-5e9a77f96b43"
        },
        "item": {
          "id": "25bf61ca-8792-4777-bdf1-05eb4e0d7a59",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "46704eb0-1d26-44a9-94b8-b48e5bd857d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa25721-646e-4adb-ba62-679a6d790bd2",
        "cursor": {
          "ref": "af08b203-3505-4937-bc3b-98a16a3129e6",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8cf6814c-24a9-42ff-bd0d-e874a08e9632"
        },
        "item": {
          "id": "6aa25721-646e-4adb-ba62-679a6d790bd2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bb52715f-4001-48fd-896b-23b1524bd008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d090435f-f167-4391-9a82-518d9d4cd9f6",
        "cursor": {
          "ref": "6f3cc1b0-7e9b-4038-8dd8-b9a900c7cae2",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "76800672-86b2-4c0b-ba13-a4fc2e198050"
        },
        "item": {
          "id": "d090435f-f167-4391-9a82-518d9d4cd9f6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "00875bd9-0151-445a-83f5-4defddb54e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b2e3bf-835e-46ac-bab6-cb78dd69f7a3",
        "cursor": {
          "ref": "f48bc6a3-512d-4e0b-a25f-4c9c7dab3136",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ed1893a5-549d-4aa0-8dc5-e6a554a60abd"
        },
        "item": {
          "id": "81b2e3bf-835e-46ac-bab6-cb78dd69f7a3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4c29b29c-d9f8-4cde-832d-f94149d62177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0746cc-6bf2-4f62-9d07-2cf232f829c6",
        "cursor": {
          "ref": "05b1a743-cfe9-4686-b8e6-4468ec4afc8a",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "139f6716-59a9-4461-a5ee-63d89f86fd10"
        },
        "item": {
          "id": "bb0746cc-6bf2-4f62-9d07-2cf232f829c6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "62f398ee-4148-451e-bc97-2af007fa72c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4970b8c5-818a-47ac-8a70-866ff3b33e94",
        "cursor": {
          "ref": "7126e21e-2b2b-406c-866e-79d06d2ffe35",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e1b72e8e-dfd2-4c29-9de5-85cc8f4a0406"
        },
        "item": {
          "id": "4970b8c5-818a-47ac-8a70-866ff3b33e94",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a7b2b20e-5f94-4fe6-90f3-15375f24e46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c184794-4089-4b1a-bf58-101d9829a8f4",
        "cursor": {
          "ref": "1d289991-bfc9-4874-a880-86d351db8636",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9a0361bc-c128-489c-b302-380091425e26"
        },
        "item": {
          "id": "3c184794-4089-4b1a-bf58-101d9829a8f4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9c28ac3c-9394-46f2-af29-fb1c5584aedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df834301-abbd-4090-a097-f7fc9c2107d8",
        "cursor": {
          "ref": "b0c3aef2-c48c-4368-9d9e-fbaef4309b01",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1a0f87d1-abd1-4beb-998a-c92ee3dc3aa0"
        },
        "item": {
          "id": "df834301-abbd-4090-a097-f7fc9c2107d8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2fe2a7ed-aed8-428f-a8bd-0d9629af2f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f7ca7e-c9bb-43e1-a9b2-73ad91c4f23a",
        "cursor": {
          "ref": "89129900-1777-4e69-b4cf-52f059431e93",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "53c670a9-8157-41f2-ac43-6a2cc6476af1"
        },
        "item": {
          "id": "f7f7ca7e-c9bb-43e1-a9b2-73ad91c4f23a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "82e639a5-63c4-4366-9059-31638df4db2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd93fbfc-e3f2-423d-b7c3-dac73a9a93b1",
        "cursor": {
          "ref": "51f47158-3c57-47c9-9994-650f0384292e",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9936b1e8-3ad1-4588-a88b-57a6a934cd42"
        },
        "item": {
          "id": "cd93fbfc-e3f2-423d-b7c3-dac73a9a93b1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3d1e0942-3762-48d9-9fff-1f0618e38ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d189e35-488b-4bdc-a2a9-0ad2750de338",
        "cursor": {
          "ref": "6f5fc418-6f0a-4f51-9bef-40fc9000fcca",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d6242837-29e8-436b-a062-3f1f831da1b4"
        },
        "item": {
          "id": "4d189e35-488b-4bdc-a2a9-0ad2750de338",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "13437146-96ca-42bb-8b3a-80ed805459ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfda4a5-188d-43b3-95dd-46a03fdff7ef",
        "cursor": {
          "ref": "427bed6e-7504-4771-a331-7879435d7b5b",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7b7a7913-b55f-4e0f-8c50-5461ff454d21"
        },
        "item": {
          "id": "0cfda4a5-188d-43b3-95dd-46a03fdff7ef",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6ea91814-557e-494b-b57b-194dc522c637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b6957f-5393-453a-a889-7c14955dfc64",
        "cursor": {
          "ref": "482b113c-efa4-4fbf-8e1e-04c55a7c5171",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d7a44174-3d05-47b3-882e-56ef428f3381"
        },
        "item": {
          "id": "c9b6957f-5393-453a-a889-7c14955dfc64",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dac4561a-15e4-4672-8491-9beb7eef760b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a558ee73-6621-4703-98b8-eccfca7045e3",
        "cursor": {
          "ref": "4d3122cc-c7c7-4fc7-8770-654848ed8ccd",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "94ac19c0-0084-46cc-919c-b52e78ad9931"
        },
        "item": {
          "id": "a558ee73-6621-4703-98b8-eccfca7045e3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "66a582e1-fb5a-4a15-9de7-2fba7bcd57f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426017ca-dcb8-43d7-8673-b4722b6c7f2d",
        "cursor": {
          "ref": "2f69ce20-5548-4700-ac3b-25a07b530c25",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "df48d983-262c-4dca-822a-6146e32cdad1"
        },
        "item": {
          "id": "426017ca-dcb8-43d7-8673-b4722b6c7f2d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1b836754-9572-4220-a248-7a9d7edd62ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216c61e5-eb88-46f6-ab2b-79f0f0d89fb0",
        "cursor": {
          "ref": "e7b5f9e4-4f05-4507-a8e7-99a7e52eff22",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2b69d7f0-2089-43c4-bcae-d90e6a32af35"
        },
        "item": {
          "id": "216c61e5-eb88-46f6-ab2b-79f0f0d89fb0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "76a207aa-9d09-42ab-876a-d2518936dcff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeab0cc1-3bdf-4a42-8d22-c4c8e0a9fa98",
        "cursor": {
          "ref": "3d94dba5-36ad-4a6f-8060-7c824d1cf0c2",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1f97b519-3f39-4196-866d-75183ec8f0fd"
        },
        "item": {
          "id": "aeab0cc1-3bdf-4a42-8d22-c4c8e0a9fa98",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "86bb0d6e-574b-448e-9d64-89f3d7a36327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4931a874-b075-487d-8b4d-51cc4a69140b",
        "cursor": {
          "ref": "5129fd2a-b90f-4790-b8c0-1f5212d48a47",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "118e23a3-9ff3-4e56-a8d6-e521fd41b4e6"
        },
        "item": {
          "id": "4931a874-b075-487d-8b4d-51cc4a69140b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e3fd926c-21bf-4d85-b7f5-2712b8dee614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b08f3e-72a4-43c9-81ac-82a8985e570c",
        "cursor": {
          "ref": "b94e1854-dff6-4089-9871-8efb8e3285d6",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8624fa19-6958-4182-be6a-1210acb5f046"
        },
        "item": {
          "id": "d7b08f3e-72a4-43c9-81ac-82a8985e570c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3db585a7-53b3-48d5-a6e9-c76a55be525a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5330560-81ef-4ead-aa3c-5bcf5ff068bf",
        "cursor": {
          "ref": "fa4db1c2-89a9-4e9e-87e0-d18d8ceb90ef",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5e46e1a7-ba89-457e-ad9a-212356dc5cd3"
        },
        "item": {
          "id": "b5330560-81ef-4ead-aa3c-5bcf5ff068bf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3911deb5-66e1-42cc-a173-902f1d0d5867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2059bbd-29c0-4dfd-930a-95c4a59adc8e",
        "cursor": {
          "ref": "9b222ef0-1356-49f6-8fb0-cd1882c7910e",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9c4ba85b-a023-42ef-a977-462b2039f091"
        },
        "item": {
          "id": "b2059bbd-29c0-4dfd-930a-95c4a59adc8e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ffa2edd1-6ed7-4928-92d3-9c7187b41a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b497c5e0-3c13-435d-adaf-36651b1ac77b",
        "cursor": {
          "ref": "17b7afb9-8896-4b0e-9bc9-1952fbf04f67",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ac66b1de-e49c-4ca5-97cb-db6190a39b7b"
        },
        "item": {
          "id": "b497c5e0-3c13-435d-adaf-36651b1ac77b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b6480048-fa16-4230-b32a-8f2436b06174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977d0cd9-8580-41ee-8213-7945ff69fe77",
        "cursor": {
          "ref": "acd89577-de75-43b6-9954-19a6f6a69b9b",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a9b9d72d-96bd-4abe-8a43-3cf16e52d739"
        },
        "item": {
          "id": "977d0cd9-8580-41ee-8213-7945ff69fe77",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "179bb657-039e-428b-bbbe-114f3d3f427b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b597a41-5e41-4db5-88dd-205f158286da",
        "cursor": {
          "ref": "30de4f72-1578-411c-ac5e-b2c9013fa3e3",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e6ed5ee9-0a14-43ee-9f88-3970ea7aeaa8"
        },
        "item": {
          "id": "7b597a41-5e41-4db5-88dd-205f158286da",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7b07247f-407d-454e-a3c2-a3786ea77f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011e4131-8659-4206-a2b7-b2bae88d31dc",
        "cursor": {
          "ref": "0764a60b-b4ca-42f3-833f-77db170d1bc6",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2388fa41-537c-438b-ac64-69bce04fe3ed"
        },
        "item": {
          "id": "011e4131-8659-4206-a2b7-b2bae88d31dc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3b335e85-9ef4-4e59-bf5a-ef159bf8fff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060e1c86-971e-42ab-930b-b3450a7d54b4",
        "cursor": {
          "ref": "3efc2b93-5597-4cb4-ba4e-4037610bb83c",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "35345ec2-207e-4112-883d-55f2ccb8f8ef"
        },
        "item": {
          "id": "060e1c86-971e-42ab-930b-b3450a7d54b4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7adbd954-2ec6-4103-940f-8ac3da08e2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cef7d9-9197-430e-bdba-7b350e7c1038",
        "cursor": {
          "ref": "58612f43-ec3d-4cc3-b73c-a5ff8b488b55",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5a623089-abf2-4148-be24-1380adb1a8d8"
        },
        "item": {
          "id": "33cef7d9-9197-430e-bdba-7b350e7c1038",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f139865e-5684-4296-a354-dc6504a3feac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847703ae-92c6-4565-8094-057dfbdd9ac8",
        "cursor": {
          "ref": "6e901b3a-f53c-403e-8088-a62202651aa0",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "332a8606-fa92-4d0e-b9b5-182175de3d90"
        },
        "item": {
          "id": "847703ae-92c6-4565-8094-057dfbdd9ac8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "03cd59ee-480e-4632-8264-97f7236384fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4766e47d-1922-4d16-8f8f-63f777398ca4",
        "cursor": {
          "ref": "c4ac99b0-c52c-428a-99a2-10e2430daec6",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "526e3be5-af4d-47d9-96af-2f9e9d3220d7"
        },
        "item": {
          "id": "4766e47d-1922-4d16-8f8f-63f777398ca4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7a395f54-da60-4e6f-997f-f0d56380289a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9170aa7-44b9-47ad-ae03-71a8e694ff5b",
        "cursor": {
          "ref": "9800f8a3-3c86-4d13-b958-94995a0a3eac",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c00de29d-1656-460d-a816-1a1f0525f77d"
        },
        "item": {
          "id": "a9170aa7-44b9-47ad-ae03-71a8e694ff5b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "54b5f40a-e19d-49a6-a486-d67014aeee45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92efdf7-6bc0-4ae5-b19a-f66fdb63450d",
        "cursor": {
          "ref": "c6559a23-c2b8-4bbe-900b-1b2bcf0a2969",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cfa17668-b855-4b66-830c-ef9aef87853f"
        },
        "item": {
          "id": "a92efdf7-6bc0-4ae5-b19a-f66fdb63450d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d7637e2e-170b-44d5-a0a8-cffba74d9fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5566bc95-27cd-402f-b5f5-05acc0ac296e",
        "cursor": {
          "ref": "43b0a546-2417-411b-a0a2-bd4c33612339",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f960f5ee-1a57-49cb-ac5e-9427183a4738"
        },
        "item": {
          "id": "5566bc95-27cd-402f-b5f5-05acc0ac296e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ebe5faef-68cb-4370-8981-72fe84c7fe41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce0f860-9ecd-4838-aed5-2049fbc879a0",
        "cursor": {
          "ref": "325ff9cb-68bf-4876-bbc4-6a319109602d",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "dbf061a8-799a-432e-a007-a69b1f9ffc63"
        },
        "item": {
          "id": "1ce0f860-9ecd-4838-aed5-2049fbc879a0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7a56a137-05a0-41af-84b3-de66f8195909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053bd520-b332-4ca9-9b30-6278f387efa2",
        "cursor": {
          "ref": "0e45ac7e-47a9-4d6e-8165-00a84b629ae9",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1d830d72-5a1a-4053-9b42-8dff146347ca"
        },
        "item": {
          "id": "053bd520-b332-4ca9-9b30-6278f387efa2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "effec9f3-8eb1-4190-b099-abce72e9d512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35eabeb8-d652-4f99-bb31-98d26665e160",
        "cursor": {
          "ref": "8ef07e0b-11c8-46ee-b541-abba8f3badcc",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0ef4b6b4-094a-4737-80d2-223c16ef5965"
        },
        "item": {
          "id": "35eabeb8-d652-4f99-bb31-98d26665e160",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "06a336bb-64b0-4205-9253-ec6fa2b544c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58ffc94-bae0-456b-8964-0d0647ce7e4d",
        "cursor": {
          "ref": "7f02ce4a-bb0a-4baf-9c65-b1edeb953e1d",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1bd097b3-7a50-48e3-9709-eb468933af0a"
        },
        "item": {
          "id": "c58ffc94-bae0-456b-8964-0d0647ce7e4d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "afb545d2-c51c-4fbe-aaba-a57f5f9281ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58647fda-786a-457d-a623-877a5547cc0d",
        "cursor": {
          "ref": "d1be7d98-bbbd-4a12-9f42-1fb8fdd2788a",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "440fc209-41bc-45c7-b2de-ccf57076638e"
        },
        "item": {
          "id": "58647fda-786a-457d-a623-877a5547cc0d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b3a9b4b9-f1f9-41e5-9bce-c9119e96375c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a30fb6-0465-4fd3-8f06-ea0de1964d66",
        "cursor": {
          "ref": "84a3df95-a07c-4b2d-ab83-7125b720b44a",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f6de4318-6c42-4ab3-9f47-379afbd7006e"
        },
        "item": {
          "id": "f7a30fb6-0465-4fd3-8f06-ea0de1964d66",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6f785fad-fd29-4ee3-9903-73666ea276d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04dccde-f9e8-4ef2-b82a-5ddc30f70036",
        "cursor": {
          "ref": "4ab8048c-6557-4b05-bde1-121d58df2515",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ba5c2900-d201-48ec-9bd7-c79a44ba29e8"
        },
        "item": {
          "id": "f04dccde-f9e8-4ef2-b82a-5ddc30f70036",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5de9dec4-7062-4af7-9c55-87bdc5951a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0dbe32-c7c7-4183-bff0-f3919793ba9a",
        "cursor": {
          "ref": "46aed88c-9f1e-4267-8cf4-2a1599e47d32",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8fd46222-54be-4363-a088-4e9d078ef2b4"
        },
        "item": {
          "id": "dc0dbe32-c7c7-4183-bff0-f3919793ba9a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3e97eb36-20ed-4452-9bcb-eda9a894df97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d39c8fe-9255-4ed5-8a53-4236b635a7a6",
        "cursor": {
          "ref": "de553f29-3693-481b-ac4d-0a62ed98be07",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "045c99b8-ac62-4ca5-bd71-6c56e141dc1a"
        },
        "item": {
          "id": "2d39c8fe-9255-4ed5-8a53-4236b635a7a6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0e1869b1-96ec-486b-ad17-43a317213009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b365e3-90e8-4181-b11f-bb46f09f2038",
        "cursor": {
          "ref": "e3873151-98ea-4979-9185-70a50032ce51",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a335c1aa-409b-4bcb-b430-8dc7f97fb4cd"
        },
        "item": {
          "id": "66b365e3-90e8-4181-b11f-bb46f09f2038",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fbc31e50-c9f7-43bd-8e3d-ebbe79c56b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbab036f-b8cf-4de4-86d3-a98261439ede",
        "cursor": {
          "ref": "41989e21-2316-49d3-8b14-8aa3f8705a58",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2c546bea-483f-4092-97ed-3fea3bf1709c"
        },
        "item": {
          "id": "bbab036f-b8cf-4de4-86d3-a98261439ede",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "197a5ee8-b2f7-4a3f-a634-f50cc8f265ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9819f91d-d2de-4e90-a495-4149edef726c",
        "cursor": {
          "ref": "0794ab63-9b34-4c69-bdf4-4c2917ccb9e2",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3776b722-79b8-439d-b5fd-7c5d2133ad6b"
        },
        "item": {
          "id": "9819f91d-d2de-4e90-a495-4149edef726c",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "0cfd7148-7f26-4996-b1a6-9607fb244772",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 367,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b33834-be35-4fbf-a2ff-89c8f06dd58d",
        "cursor": {
          "ref": "d124f07f-c0bb-46ac-b96a-5ea23456a2f6",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "54e03904-8b15-4459-94c4-95032dea8a1a"
        },
        "item": {
          "id": "47b33834-be35-4fbf-a2ff-89c8f06dd58d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "74c99483-e88f-47e9-bcb5-0efea2d30d38",
          "status": "OK",
          "code": 200,
          "responseTime": 415,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0e76d7-4200-46de-a077-8e941055fe83",
        "cursor": {
          "ref": "4c665c92-3b47-4552-80e0-59050686b148",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b1a9c9d3-76ad-43cd-9a1b-caa58d9fecbb"
        },
        "item": {
          "id": "7b0e76d7-4200-46de-a077-8e941055fe83",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6b74730f-ca90-42e5-aba4-570bb5b32ae8",
          "status": "OK",
          "code": 200,
          "responseTime": 1838,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc09d79-fc26-4ca5-bc74-17765ea27f62",
        "cursor": {
          "ref": "7b3ad65d-ddeb-40f5-8404-f0e4f4ba6089",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "118949c5-01d5-4bef-8231-78cad0de0a36"
        },
        "item": {
          "id": "1dc09d79-fc26-4ca5-bc74-17765ea27f62",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8277d68b-41c7-4324-b05f-61173b8808b3",
          "status": "OK",
          "code": 200,
          "responseTime": 1533,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe1997e-f79b-471c-a07f-d40e68ab4742",
        "cursor": {
          "ref": "26ae84a4-3269-4ea9-aa77-49575de2e62f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "de17b44f-958e-4040-bc5b-4ac5682283b8"
        },
        "item": {
          "id": "dfe1997e-f79b-471c-a07f-d40e68ab4742",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "82de958c-407a-4d09-ac70-d1f2955c7738",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe1997e-f79b-471c-a07f-d40e68ab4742",
        "cursor": {
          "ref": "26ae84a4-3269-4ea9-aa77-49575de2e62f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "de17b44f-958e-4040-bc5b-4ac5682283b8"
        },
        "item": {
          "id": "dfe1997e-f79b-471c-a07f-d40e68ab4742",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "82de958c-407a-4d09-ac70-d1f2955c7738",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe1997e-f79b-471c-a07f-d40e68ab4742",
        "cursor": {
          "ref": "26ae84a4-3269-4ea9-aa77-49575de2e62f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "de17b44f-958e-4040-bc5b-4ac5682283b8"
        },
        "item": {
          "id": "dfe1997e-f79b-471c-a07f-d40e68ab4742",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "82de958c-407a-4d09-ac70-d1f2955c7738",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0a3394-4203-4c52-a4c2-a209748f4b91",
        "cursor": {
          "ref": "5691159e-4623-44f8-9998-5e912ddbf39e",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3a05edbf-f610-41d9-94c5-bc3fb6ce657b"
        },
        "item": {
          "id": "6f0a3394-4203-4c52-a4c2-a209748f4b91",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "43de3d88-f488-44cf-b5f3-a6960c37da11",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 370,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54415ae9-b7c6-4320-b8e7-3e165817ff4f",
        "cursor": {
          "ref": "5018f890-799d-475f-ab77-8183689c9c64",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0911abf7-5e50-44f1-b01b-f501612144be"
        },
        "item": {
          "id": "54415ae9-b7c6-4320-b8e7-3e165817ff4f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "126b5a87-de9b-42ac-aae2-b1c5dc1e4044",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54415ae9-b7c6-4320-b8e7-3e165817ff4f",
        "cursor": {
          "ref": "5018f890-799d-475f-ab77-8183689c9c64",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0911abf7-5e50-44f1-b01b-f501612144be"
        },
        "item": {
          "id": "54415ae9-b7c6-4320-b8e7-3e165817ff4f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "126b5a87-de9b-42ac-aae2-b1c5dc1e4044",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ebc377-872a-4fd3-be64-e88547b7f69e",
        "cursor": {
          "ref": "9c0fdd74-17f6-4109-9c0f-1eac49d76bea",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "409b9622-cc0e-4f66-bc45-5fcb615c5876"
        },
        "item": {
          "id": "75ebc377-872a-4fd3-be64-e88547b7f69e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "76fcd112-d503-42b6-8b50-11a7eccfa817",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 584,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbab576-f362-4dc4-8121-201a461dc83b",
        "cursor": {
          "ref": "494bb1d8-2d7f-4637-a693-22d11ebadab4",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bab9e61c-558b-49f2-950b-69f7b22c73c0"
        },
        "item": {
          "id": "1bbab576-f362-4dc4-8121-201a461dc83b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7c8996cc-5fa2-4d6f-af07-8170c1868814",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbab576-f362-4dc4-8121-201a461dc83b",
        "cursor": {
          "ref": "494bb1d8-2d7f-4637-a693-22d11ebadab4",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bab9e61c-558b-49f2-950b-69f7b22c73c0"
        },
        "item": {
          "id": "1bbab576-f362-4dc4-8121-201a461dc83b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7c8996cc-5fa2-4d6f-af07-8170c1868814",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023c3aab-2f23-4caf-8eba-ff10cfef3e3f",
        "cursor": {
          "ref": "f138f518-e8e3-4112-a53f-72ff3c6e48db",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "80f60404-ebec-45de-8261-b46900af7b50"
        },
        "item": {
          "id": "023c3aab-2f23-4caf-8eba-ff10cfef3e3f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "b097d147-f1c2-4cf7-9f0e-b1eb30829c1b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 564,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}