{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1fa6e0d7-9fec-47b2-8b2c-764da31c898c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "08db86c8-4351-46ff-82ae-826209f41e00",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c142e89b-e1ae-4234-a4d4-5e1d898dad02",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "222e536c-5df6-47e2-9233-40c13bdacf42"
                }
              }
            ]
          },
          {
            "id": "4b492ff9-81fa-48e0-8fbd-d12b8db8cb89",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c295e76a-0e15-455f-9d7f-b095688fc240",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "90bc677d-1392-44aa-9a71-3818ab4b0e85"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6da81bc3-fd86-4882-b6f5-edb96f51d3cb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8eb369db-2b42-485c-8737-5ead1f677204",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c7bfe965-52e8-4132-b564-0b33e2f898b6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "680bf353-9f98-4fd9-949d-ab735ef2a071",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c09b1ee-3218-43a8-8233-c96f4875f549"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0cc79172-7432-49b2-b6d6-451508227766",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7eac1ee-e01f-4411-8281-d6afd1871e44"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7959efbc-461f-438e-a9b6-5acf79368361",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c2c679c-c569-4203-ba2a-80608898e6b0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eadfddba-b2f7-449d-bf60-0dad7ac62bb7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e9e479e2-1018-4364-97d2-589b59e9e540"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10039771-ac65-4a1c-a0d5-21e8d106b3da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "acbf817d-6a43-47a1-83da-f6f07d6b567a"
            }
          }
        ]
      },
      {
        "id": "bc636d5b-e558-4c56-868f-bec6329f51cb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "067c34fa-080c-41eb-8b6e-38b0c841bfb5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f3de44d-d12c-4d54-92f3-c8c2a1b84502",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e68b972c-5237-4f85-8cf1-1267f61aa3cf",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff56b31f-3e36-481b-911f-889e10c90a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8adbc6f3-3d99-45b3-9164-7692d78abcf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ebd121-79fb-4a96-b935-6e61de17b0cf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657519fb-17e1-4838-84eb-7410f6c8ffd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10c4ce9e-df31-456e-a0db-67c77b51f314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748ef92f-0822-4560-87b4-df80bc978550",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7c585f-37a4-45d8-a26d-11a5531005ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e76b8100-48d9-4119-ab42-7b5c263a106d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "432af385-f716-4f02-bda1-7b7fc9570b10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97ff2653-53c5-48aa-b347-fa4714928268",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf16ac5-6eea-4628-8d24-9109df724ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec78b300-7b39-4765-8e2f-36177edc770f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f9d08e-507a-4bdb-ae53-12ca36a29b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1520c38-5dfa-48c8-8bb8-2ba4ef24d747"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c492191a-39de-4c4d-bccc-9e896d44388b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6e51b50a-f899-4791-bea8-6b69776cb279",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdeab15e-9b6b-4683-9b44-45df420ed00d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "67462af8-9ced-4d34-9613-0035ec69d3b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd4cc399-d7ba-4d95-aba9-ceb29d84d084",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1bf66fe3-bd3f-4204-990e-7472bea3c5ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a347af75-1cab-45fd-9002-7eedf678f7d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b1386f8-6437-43af-98a5-47043a29dd56"
            }
          }
        ]
      },
      {
        "id": "a46d53a4-657a-41b2-a68e-aea3113c3781",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "20504136-2a89-41cf-bf25-fd88b45ecd0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db1d1948-6512-4e0d-94b6-ab547a6b2709",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d8c8bbf0-23e9-484d-a629-c6265373e7ad",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8ddb52-bfa3-4375-b2d8-c686bf1ea834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b1ae98-311f-44b0-a300-654204ec1720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ff67b8-f7d0-4534-9f16-f7baf222a790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e71bdb3f-3af6-49db-ae37-b01fa92d21b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3288ba35-8971-4f22-bf19-c4e72d931f16",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff8a3f9-5694-47f5-986e-4b360db760c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709a301c-6c75-462a-b46d-b3118872681b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d77f043-d8fb-48f4-95b8-f4755f169c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5da15637-bed0-411f-ae23-e395a0c8bcf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1144fbce-7d5a-4222-92db-c4164b25b73e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab9f490-ee67-4745-b33f-90d626336462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550b064a-c631-4e0c-ac32-dc8d833162b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed836cfd-0b4f-4724-9a3a-4c3301b78ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56d19e02-80cd-4c1a-ad9c-16cc1e02edad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b14797-80bf-458b-a64c-15180bf9c427",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61964065-2335-464c-a868-91ccd1cd9ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0617ac17-ebd1-465e-ba99-a1983f97ed83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475da5e7-841d-474b-bb03-0b8bd7eed36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1ab7546-f79c-4461-ada9-7acb101751c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f928832-3f67-4c35-92f2-c5fde50d99fd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b191548f-1f53-4072-b195-7b1e72cf6206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f01c579-3e77-46b7-866a-e7c9e4211231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bcdd81-5398-4283-b1ca-dc58f0e6ed57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22c0a518-0a41-48c0-8329-c9cfe44c60bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb0aa18-1e4a-4dea-b85c-a49ee8c612bc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bf80de-9128-4c93-a90e-b792f1e2f81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4ac831-7b50-4b8d-9858-0b5dd89609b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb769f1e-9ad5-4df1-ac25-6561b0ca3e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "415b10eb-8cd4-4040-8980-97f8a403e4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b18384-98ba-4607-953b-f3a29878e4c0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433e9990-8c86-4e01-977f-ab005040c7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf332d5-bd04-448f-944b-fc8b349794cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbca29e-5d94-4281-a65a-65d44348f200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbd5d723-e2a6-4323-8f1a-6fd59cf0727c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3362b88d-cef5-4b2f-a96f-1fb44b8bab94",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edeb280-461e-435a-b42f-b199941677e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d52f47f-8975-4f80-b519-4bc910826277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54445541-1754-466d-9d36-2110a1d0d846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "405d8845-5a3d-4c0a-99c6-22a74b141eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0983c61d-5130-4a08-958f-c99b07c50218",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd95f5ce-8aa9-4b58-a061-a872ff0e4904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55242de1-6275-4896-949a-9d4943af7f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7e7625-10fc-46f8-8e1b-b43ae912a17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdbbf51b-b7ab-4012-a9a0-c2fd34daaffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8bb92d-2c31-4256-85fd-bd7379141af0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb594970-ff50-429d-9674-a54d546015b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c38166b-904c-4163-8ae8-476a71a5cadf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec9fb3a-cfd3-4cf7-8f6b-c2552c0be4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a7ccd99-7682-4fde-9246-da4e291701c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86870067-6db3-4e6f-8f4c-fe969b628ed4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b332ec-cf8c-46d4-abf0-a9f06b5ccb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a681e64a-7d28-41b3-8251-e39e582ba3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100089dc-1779-467e-9b31-7d1434332931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e887960-3354-4814-997b-8dfa538e3c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29b612b-4441-45e5-a5f5-a46373146b10",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cd9b90-5cdd-4489-b1f2-8a0d74b6fcb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfead793-8927-4a9b-9182-145f8988d870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19870365-d115-45d4-a4b0-e5a687c2f221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e3ff9cf-b824-4c18-8cf0-c37c66a164b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf27a402-209c-4bab-807f-733813a832ad",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fe1cea-2a63-41c4-9079-62279820224d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45caa330-b334-4ccb-bb7e-668f48914de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e25324d-06df-4daf-af7b-f7a68d7ea3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d36ea7a1-7cef-4086-8176-811dbd6fcd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2741fa8e-375e-4ee8-96a2-453bc1453c29",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772042cf-4f6b-4082-8d36-4b53f7b72044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efddcd67-5492-44b4-93cd-a63239047016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b7827c-4552-4c72-87d3-6ceea87f0693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f9962a5-f06f-4f74-bb53-0c1274928a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98acce44-fcb4-44f7-9343-4e4a0de16143",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9252bb35-46e7-440d-b162-b9a95ae83759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d561e3cd-dddc-49e7-9159-1b9f4947aedd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a14adc-a66a-4582-a562-518ef5681ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7947e971-3bc2-4dd1-898f-d74fb97cf05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbc1cd6-f3bc-45d2-9b91-66c5ed3f7b1e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31ae44e-a2a1-41e5-97bd-c6c740226f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431bc767-e00a-4a10-82c3-63e7c34898a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9124dc-6466-4b72-a049-6a8674d0cc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd58520e-547a-4882-b2dc-583a68ce365d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f54901-adbf-4dc1-a6df-7cc250218f5e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56eadda6-950b-4c09-99fb-0af23e5cf7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efd731d-83ac-4c5b-8fb8-a280e3cc45ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1125c13-5951-4a3a-95ab-61938616762d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4b2ae09-f8ce-4c4c-8b46-18e4217b71c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac11325-240f-401c-9010-53564bda810b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c4b503-b1d1-4227-8890-2e6f02ed59b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e153c5d7-f15b-4aaf-b41c-2b6eec39c8eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04c15d2-2bdd-4771-811d-68457f74c8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cdec6d0-9497-4e0a-bd94-c67692859d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82101da-a57d-41b2-9253-15690d8d63b6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d61b6b-78a1-4941-9f6e-72f63ea7bcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3c6353-3f73-49bf-8a1d-a53e78e8c43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9a64dd-4b17-48d6-97d1-3840407b3f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f35b5b0-1178-409b-9955-af4cb6da5f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555bc2b0-8e7a-48cc-ba90-cc035f20cfeb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268cd4a7-32a6-492d-8588-5c627fd85d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68a1b84-fa61-4632-ac98-e7c3d9949f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f4dec6-1546-4f77-8c97-bfac6f6bf2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7403c4-5ea5-4058-a1fe-ac186308de93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d040a4-2589-4f58-963d-6c605a76fcbd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee160939-328d-4e77-946a-6339abdd2708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0865b0fd-d2d3-4f96-81e4-8a809bacd437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea34750-9efc-4e7f-bde7-2d937686ecf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f527e8ef-a482-45c7-86b1-6ee31fe1a92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8777196-f80b-4840-aee2-144fb6f3121a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75e8781-7637-460a-aaa6-42fe3e421d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03a23a8-3f18-4d43-8cef-f7b2a7de6846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc38fac-e0bc-4fca-b98f-d6fa06e56f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd012cb-57cd-4c02-8bbb-385ff6ae1a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec38bc05-67dc-4186-ac22-8dcdbfc415c9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15128aba-2ce3-4932-9616-13835d2c6d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1180145d-1033-41ee-a49f-05f00b175313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c906c476-a4f4-4e97-895b-5650c4e49318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5068d17f-460c-4eb1-bc90-4b920830f048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99a7de0-4014-4660-8498-716aadebc549",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94651930-f7ce-4af1-970a-798461a61354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4dad00-a33c-4681-8131-36c9b8178121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66d2753-bddc-4399-9f3e-d0e4329ef0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed4b3fc-ca4d-427d-b50e-6ee4963cc02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9586011f-8f6f-4bd2-bb8f-a855f07db223",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715a087a-7cd2-4a3a-8163-8b69bee6a5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b54cbe9-2020-4306-a016-63fba51ea8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f731ddb9-ff1b-4fd2-b50c-87ca8fcf85d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab187407-277a-4a73-8957-4cca147594dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab40335-3966-4eb6-b59e-7f712d0389b6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cc5122-b93a-4a42-b291-88323cc80190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68fe598-9c86-4d58-89df-4c0ad76594b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e63e304-0ea6-479b-b98f-e533d21fa250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70de10a2-df4a-4574-9bb4-8199215e43c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0104984-ba14-480e-876e-a1d799340690",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dd6498-862c-4afc-a8df-2642bf7444eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a7e08f-bd56-4081-a58e-212d8beb5ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e17494b-dcb3-4e62-8bb8-24a8a5f4151b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e35dbb-ad08-4dda-9844-a15951d0ffb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00cd996-c3cf-4acd-a3e1-174ca7f397ff",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4eb683-0976-4276-a84d-17fb6ecb1f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd787a0-e3c2-49e2-8618-0662c7412b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee0ffb7-f2c9-4b7d-8054-7196d453f183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b973f15-d8d7-4cdc-b00c-c97f5d10a6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f4a1a9-5df4-4407-babf-4c9985a96d46",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07d2804-b560-49e9-95cd-3114362def10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd32d8ab-26e2-40ed-b2ba-f837e315ac9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970502ca-85a0-420e-b038-ae94d5014d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c93304-da57-473f-950f-91e80348550a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0a0e5b-3653-4534-b05a-dc521ead6ac5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c306f2b0-9258-4431-8323-9eef94d75dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbc9a3f-4f93-468b-a6c3-687a05692218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb614d93-4877-4b91-af97-081fab2dc1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c294be0-3f5d-4df6-b094-0939e28e6ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4dd9a7-9bfb-491f-8199-c077aad49e79",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bd97b3-e152-4acb-9482-d6ac652d8366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312be653-7154-4182-add1-ccc86c29f1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c52425-d50e-41a4-a846-da8fca1b1841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff5e745-4ff6-4559-9821-74f7c0e79745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9488eec3-ef2b-40f3-b035-5a969c4ce4e4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff309d28-6e4f-4565-9d87-f2f05ae7d1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa010d3-67e8-432d-aa2b-f5cdda544d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dc0317-5391-48c6-92f1-4a3cb45ab185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3dc3633-f8d1-49ee-b44a-ac66200b2c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc430a8b-eced-4b2b-9bda-2b7dcc8a539e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30300308-facd-4cb5-805b-d1c88e786c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400f46b4-7c5d-49f9-9f62-1ac2630b8264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eea2f37-b32a-46dc-86ee-ef478c35128a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe3119e-7aa2-42dc-bdff-93f00297d3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4c2c23-35f9-449d-9e48-5deee719876b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bf7de5-c4ec-45fe-93f7-5c5fcaa43cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b41ca6-7c7c-48d2-875c-e94a9eefb78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b320d2db-eae2-438b-9e9f-9f53df7d0d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3d81b6-2956-4ca6-8f2e-827eac70259d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f194fab-bd66-4cbb-aa82-49eb40c288e7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f10fef6-a2d0-4366-bedb-630d61349f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1e970d-b770-475e-8246-478b9b1ea530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d22ee50-3450-4149-9518-1a7c97b84cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9a52bfd5-d311-4795-8113-ee5c1b792155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7eb1773-b3c2-4ba8-b30a-ea5a0911e290",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d714e1e-c724-4bb5-8983-33752a346dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c79e80b5-18e7-4043-a0bd-fedeac32dc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8d4528-1b56-494b-82bd-bc8b1c758849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f79d1cbf-5ee6-45d5-9d8a-ca054d736d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d57d11b-1968-4b1b-89e5-28427bec36d5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9119d189-9768-44cc-8088-236aae42fc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f7f2b0-66ce-4d47-98a7-ae1dc7e0067f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d01f7f-cd5b-411f-80d4-2bc969c119e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5c2071-3b2e-40a7-8bae-bc637d87fd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501ae918-f7ce-40eb-abe2-1db7730ac2b4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a146a21f-f746-4711-ba81-80fd06859f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba528a9-14f3-485e-81b3-a71c40d17ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e176a854-ccad-4038-8a53-62f7c2e3fe2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "13b5f15a-8508-4034-a004-8f6c12259774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa4b2e4-91c9-455f-90a9-e24e6d3ae914",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0852a2-a6e1-4465-a460-4345650d99f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8558e6ce-0d2f-4bea-9891-030c3a7ce2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546b7944-0f5d-4053-a641-34f4440f42a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcfc4c1b-53db-49a8-a926-4a2f02bc0a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c831a0-3729-4402-89bd-d970eaa9e8e0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fad892-ea1e-41de-9184-c5815b8bf428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d122e5b8-5a1c-4ec3-b071-48fa6c726c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b2a163-5db4-4b08-aad9-9b94cc87094f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8f0642-8bea-4505-bbff-a847cb7c608c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666eaf20-1b01-418f-b9e7-30ee1d91242e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b017d0d-4ad1-4310-8584-bf94dbd8e2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12146a4e-2ddb-4fc9-82fd-1fde6d3f2ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ec9809-36be-4afb-a784-a5bc9822279f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dacd2d5-22e7-4894-9da0-412130ce035a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88376f41-c546-4f47-972a-8ebc0f2d0ecd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b65828-185e-4444-b2b2-262a3ce1e353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c661ca6-86f0-4bb2-b0f3-bbd1ac484b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05c003b-f985-4ab4-bd52-cc2ab491a443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7d7d84-41b9-4998-93fd-fc7a52afd0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f582e49-7d5e-4953-988b-395a0e01870e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76968980-4da5-4c4a-ab85-0700b4dfc7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c78ca5-d81f-4b04-a875-cab1f7602a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60e6949-a91d-4f5c-bdb1-fe8b7aaf5fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2103fbb4-6801-4592-9cfd-5283d8479250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be6cdcc-2d07-4db2-9b2d-98b10c96b40b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c95192-96b2-4408-8ac4-ec9e020e043e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0b0be7-bb72-4b71-b1a3-d2eca85eac53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2935a4-a254-4aaf-aaca-0b3b8b6aa1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd8e1d6-39d3-426c-9a19-4b7715040460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e87ed04-02a7-4797-9404-38407c518468",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7116bb40-04b6-4179-b2d8-a009a7a73497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fa2d4d-e787-48ad-820b-f1cd1b0666e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9878619-182f-4359-8424-94203c3c5f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e832f982-a7f5-4cce-9ea8-7575217778c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0a724c-2c47-464b-b9f7-b91be1c5193d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3585dc35-92d5-4509-8b31-dd94d72b381c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5712c2b2-e6a2-457c-a80d-54160ad232c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcae154-f238-4275-ac86-474898ab4331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cfb612c-7421-4744-a527-3b9fc8f481eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec1b084-ee82-4d03-a8b1-78e05abc4999",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb691e7a-8033-4182-a590-e9f5500ea0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11e181f-03b1-4922-8f03-ad6743847d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252ebffa-b818-436e-b364-73f9f663de62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1851bc0-cb6c-4f75-a725-f1fbe96e1bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fda683-0cae-44df-8f6c-25b740f62b99",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a721bd0-e580-4431-8b61-ea56a06c5baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342a9b89-702e-48e6-b70d-e1e34c1ce228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb24943-0930-4545-b4e3-131914e93a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e39124c-4856-4656-a29a-3413b253098d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbe97a8-3ef3-48c4-978b-3b21e7c8d3ed",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc9ffe8-c249-4db5-b0ba-e279cc96af24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d344e9-4c49-49b3-921d-cb1947d75a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b916051-3875-4c5c-b65f-97db4261e386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9e8ec8-f828-40a0-9ea0-60e6ccb0b50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53828240-f1c4-482d-b3f3-d12a0ef90d96",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1778c7-b2c2-4c75-bd39-305c691fc138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78be674-c962-46e4-9dbb-f87b344f4bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880e5aa0-9402-4ee8-a4bc-9244713eb81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70c811b9-a216-4c9e-b71c-42642e161a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6b32b7-1abf-42ed-bc47-30b54814950a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7740776-89ae-45b0-8275-f4fcc8cb8c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c38b20-1919-4e79-94bd-c1afd0818f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8393a9-11e5-4f73-9caf-d2b131ea3cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c317d0-a247-4d8e-b8a4-168ff160dec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef94be30-19f6-45b8-a893-e3fc945bc730",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ce3bf1-97d6-4ad9-b40e-3c96496ec55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b91868-78a6-4d37-9c6d-fa0fd7098afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd3fcab-a15b-45f7-b544-8aab237b2678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9c6b39-50ab-4530-b542-985d201980a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968ca317-e424-4656-a1e2-517962c4ac8b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f168906b-70db-4bf3-a88c-df923af4827c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7884972a-72b5-49e0-af30-088855ea481c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7360cfaf-4272-4df8-90ef-1a33a6e47cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2554934-f228-40bc-8bea-5061d5e4ed76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b829d3ce-2517-4b37-89e5-5bfdef6172b8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591101f6-08c7-4c44-ac56-6c9d3dc6465b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122278b4-f851-4966-aead-43c4f22979b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadcded7-306c-4421-a1d9-001c3a9169e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc90c357-ad77-4c87-b24c-f0917a3728bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dab037-1006-41da-b618-90811f990a2e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91168f71-2ccd-4ee7-ad32-4719163754cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0918a7bc-136d-4c36-8348-739b9bfebd2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b148d8c-b79a-454b-b83a-1411d09ea09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e115fcc1-ed8f-414e-bfd7-b2ce391319be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec48d9cb-c2dc-4a6a-996f-d6b81cd37a68",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde84ad7-4a11-42ba-95ca-664716374a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e592a05-2c5b-4395-8dc4-3478e4297e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561d1278-978b-42c9-8b7d-a863c95f736b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bf230f6b-b0c0-4805-962d-e116034200be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf0dea1-bc20-48a3-be1b-4921b623e9aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df9f1ca-efbe-4efd-a93b-4acf64d69ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1cfc8d-9363-4ba6-a03f-cfbff1308030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d18453-8966-42db-90b6-eeb7af074696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2b9511-b424-40e4-a9e7-cd9479129c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48e32dc-ea49-4721-90dd-17c6cb0469e0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c01a441-1372-4b9b-b47e-e5d143119287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a358807-ca5a-4290-aa1a-dd725c8476e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7091e22b-973f-4fa7-85b9-ba1117b7e6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0d829f-ee59-4ab0-a462-431bde902319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b5f036-fd87-413b-ab6b-e53f9894c583",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d658866-74d5-4acc-ba31-92034a0118a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61536e74-3995-4004-8605-8c68f9492d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd495279-e49a-40a8-99a7-900b1014d440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0df24239-b77e-4702-90c0-bcfb66b82d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbff38fa-608e-423a-9411-5a11078fafa2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d19ef46-04cc-4aba-b027-50bb5919e074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53bef62d-c7e0-4f94-9534-9305a81bb7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14c6350-2d74-4b6e-8add-76ff8050ee81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1aca97-a3ea-481c-91c8-37f4e9e70de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43595f52-b8f8-4e81-b9a1-d3696be4f8d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0f134c-db98-4d67-ab4d-164d252e7bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86531550-8a5c-43bc-8d0f-d50217812708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859554c3-20a4-47f5-a5ff-e4b191a30522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4df195-3117-4f6c-a21b-d5d9421cb186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9190d6-68f8-4a6f-9da4-8cbc9e62c07f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b7f27d-8af0-4915-87df-7f8ab9cbcddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e13b9e-46c1-47f3-9617-6226947d001b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439caef8-3a6e-4cc9-9544-dcfd58ae0311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d9e7bf-2aaa-4fd5-be80-8ab72865e0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c08ad5d-741e-4610-b4f7-bb789d4bdaf8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898e1150-b507-4e15-8013-be9825e8d051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62d0bf7-1c95-4d58-a80e-ea0ea096a1ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff9b16d-b7b7-42d3-ad91-bf82ef2493e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3430a0-94dc-47b6-b3c8-c0eed0532db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ef2cbe-1ef5-4b60-b00f-94c699d236a4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79608ea4-8265-4cf7-8cd0-6a5802567940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9135831-0b52-4034-bc61-33506ec1cde3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb304638-fbaa-4013-8b2c-2bf164824b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f1e2ae-f43f-4b75-892f-cac745fb6763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6a8398-9d06-40fa-abe0-d34f4a71d37c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea824f3e-5652-436e-a510-190afaaf3ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c45fbe8-df76-4fe6-9641-004e511a05d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c352859b-54a1-4e00-a4b7-3d9b63a2bef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46a8581f-389c-4b8b-b637-bf9193a375d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a1583e-c7c4-437c-aa11-df03cb44a0ce",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5053a9-2e7f-4101-919d-28eaa0c4c7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8c69f3-561c-4f64-b550-d77b4bdb3f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43374d00-44c8-4fb6-95f1-bf604e118079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef220105-ade5-42a0-87b9-05946a33c31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49510f62-7c8d-4fc6-ab43-e5d7deb41b7f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7bd0a8-f8da-46e8-a889-38ec88e1ff9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855b6089-a38a-4825-aef1-e13addb38f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f3b851-c414-46cf-8591-4d5f08bc5d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd5fcfb-25fd-4c63-aed9-db5e89116b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6592bbd-94dc-4ce7-b0ae-e52e4929075d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e56e4f2-f8c7-4c22-b5c0-945946705258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a040d2c2-a89b-4051-b5d7-b60dd40ac620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3decd98-7885-42a6-8765-9ac47a373861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc03e89-d132-4c34-a478-6d8abc8e59e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52254da5-f63a-46e0-973e-d04d9a171ce1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddca1f6-2b75-48b2-81b3-a1047341353a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5d4579-7421-48e4-b824-9d98a4a81f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ccce97-a9a9-4c82-91d1-f901e22ceae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb132d1-20f3-451a-82d6-f8693678e68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac49c0a-ad40-47ae-a791-5193a560b549",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f46231a-4c07-4b8b-a2f2-2b709f29f471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67152e8-8441-4928-915d-ad656eea50e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abec7a1e-8caf-44ee-9e40-c588bfc4cebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "615d7751-bfd0-4cf5-b37a-8909b428be64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc44aeda-2250-49a2-860c-3aabcbf74f2f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f7b0e5-b03e-43a7-bd8b-febb585f169f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26586ed8-dde9-4057-bad9-1703bed8f077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0dbb2e-742e-4f7f-8e20-c451d97e952a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a54bb4-2d02-4e2d-b88e-70b6b57a0db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47340913-ea80-482b-8ed3-7de5338a30f5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2dcf22-7ee0-4098-b627-2d472eeee08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ec18e5-6e01-495a-89a2-4ff0401c1523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9afd8ea-fbbf-4a73-bdf6-6bdb042f22dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec47845-ed19-47fd-a9fb-4c5a9828a16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc43800-6a16-44ac-9d65-0e4e1aacef83",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cb0a81-d05d-4e21-af91-81bd54dbd967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af655a40-8bd6-4c8b-80b0-15d097a682c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7a27ec-8044-45a2-9d8d-61182c6c7668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1916d30c-71ad-4fd5-b014-03d60d3a0593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2922c8-9498-40d6-ac4e-97ddcc581df7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63dba85-0df4-4a0a-aa93-ba51d1a5b3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc62843-8dc4-4686-9885-5c76d5212937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523186be-44f4-4886-8f04-c9401b7ceb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3222696-ed23-4a4c-9b91-9112c31ce68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cae1136-6c6b-4b28-918c-b6c5b258d202",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c84f184-765b-4d06-b870-f098ed6e7b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b7c739-1b35-4402-9fe2-e7864461cd5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb6a29a-9023-4153-b1d7-becb3f11d165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6e3a92-880b-4f7f-926a-b11f175cdb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdf09f0-058d-488d-baf6-e0d941ce6470",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48715b71-843b-417f-ac68-a526f279ad5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42345ab5-94ba-436b-8625-be93d824aeeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d6488e-2075-49d8-a7f9-b3235e0aa79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70ef9512-7fb2-4623-aa81-f0377cbdd405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9304d1-69cb-4033-9c54-872464450b65",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba44a7a-a8fa-45f9-a4c7-ecb843431f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d4b6cf-cfb4-4952-a8e0-119cfc9a08a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce14da4-12b0-46a9-bcca-ced455c1b85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e224cb1-9027-45d3-91cf-b1b3d6856235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d7c2b2-2843-43bd-b07e-c2a7fd24402b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7d2794-271a-4700-9d73-82749aa3d47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5fe0d8-f22a-4a1a-92c6-d8219b3ce40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49ad799-a414-4fed-9a6a-c54e8c4a561f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68113c21-deee-49a9-82a3-943cdb1960a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3731aab4-ca3d-413e-959b-7fc63959b4b1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3dc986-4af5-45db-bb80-5c2739e30449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7442f6e5-af4a-4ff7-8a20-a0775ebb9e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbfac64-70b3-44a8-a262-ff5b4081fa6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b060eee1-0769-4d7c-a536-68cdfc9d50e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486a2463-464e-4900-8192-d48c2e6057a2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc2e6c3-750c-4488-8573-1bfe0c8d79cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea45bd4b-d53a-4d0e-bebb-c96a39169a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404de63e-d024-4c29-aedd-8ea6f9df31b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e76b7bc-d56e-40fa-9e6d-6a51b0d382f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a04ca7-01ed-482b-918c-290584842ee7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6097f13d-bbbe-404b-a024-299dde0bc184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e8472a-a542-4a88-bc0e-2f27a621f159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a73fc9-13f7-4f14-b966-941cfa2cdac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dadad860-a282-4050-927b-54e70988f5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee80aae2-6e32-4a76-82a1-0a947d9b981e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfca382-2047-42e5-8d52-3752eb3e9301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d067d15-b729-432e-8b16-ff5c2205897e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c18bef-fc60-46f5-a019-b3f26c10d6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a90351b-5bbe-47ff-b5e8-3ffcac857073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a00f81-1318-47fa-89c5-703290b5c8e2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7937ec70-a3f7-477d-a3c7-a3554fb93f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9facca68-2860-4736-9a84-ae7f8bf39097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b13eb3-6327-4e8f-bc09-0a5706f098bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c535e96-6b1f-49e6-b858-7419820f65ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452b6642-b423-491f-afd4-df48e9ed8510",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98fe989-e0bb-4408-aa7b-edfabac16f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26162eac-edd2-4d0f-b963-0ec71639224e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb90172-fea5-4d0b-a03f-efce07b1bd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb225d2-7d41-4371-8f1d-358754f44fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36e5769-7582-4043-ba32-9a1592f31249",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce65875b-3481-484f-b954-ab7d9ce9af48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca32d8ff-925d-4333-8986-e71230fc6f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf61517-3ba0-4850-95ee-5048892f9ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28a2a51a-5e77-4a3b-b560-55012d98ad47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436cedea-385b-4b5f-9e86-d88c092bb2ad",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d00f99a-5234-4c5d-b51e-37339962ae26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ddf8315-0b54-4b63-9dd9-44aca767c84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9626e8-351b-44a8-9a02-19868c1bbccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3906f942-21e0-4494-b3d2-719536d26aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4bbb0d-55d0-4ac0-ae9e-2ab6e824733f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32443524-bcde-489a-97a2-ac7e5eb9988c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6829ab3a-48cb-4201-b40a-8ef8ed47c9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e095407-7466-4cfe-a363-243bcea81753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "33c521ed-4a68-4321-83a8-ca0c7d1b1f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a215d17-82bb-4c95-9173-cad68134dab7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead07d8c-489a-4ebe-86b6-02b86d4b93f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c57b5a-e2b6-47e8-8f27-abb696e964fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866d3594-7fa9-424f-985f-fdca29267ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a52d2418-b877-45b0-82b4-5b86331c8d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfa10d0-197d-43e6-a34c-4c31fa79aa83",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf92f83-b588-4364-9287-e957511fe200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e17f16-4d59-437f-9754-3bafe44e8859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0e662e-cc44-410a-b6a4-077c0fa762de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "607a1d0a-401c-4e43-826d-fde30926b1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5388368d-c509-4880-9bb6-9897dd4af37e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5df2894-c78a-40d0-9bae-220a6ce2aa1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81194077-879a-47ce-bc05-2a4e94f9155e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d369c1-c3a1-4944-b9b1-e797116fa072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "35e8d09a-4a05-4ace-9edf-8d6f7dffba53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c395e6-1e1e-43d3-838f-df0f537e0da1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de623ac-0655-4a54-af1e-d95a62db205c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e97388-c695-4e14-896e-cb7c10006ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c4f0da-adee-4f2c-ad5f-d2431b5f07f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee8e653-3644-41b3-9151-5f32e6807a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35369855-4f45-47ac-ac5d-61d056711df8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a518a75-379b-4d01-8522-4256ef794dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f3b48400-b8b8-4f45-a654-1d4832c3e475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7902b5be-e790-4dc0-b4a6-efb9ab6560db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6c86d9-a8d3-4e46-851a-65035d2da03b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee7f8a31-d0ed-4e3d-a8a2-af1c1bb61f70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "872c8688-8d04-45c0-99a2-3248b850c087",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5812a586-1abd-4752-8d46-4030d4fce11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8aaab901-6787-4cce-8c3b-1c77a3695987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb8a5a5-9df5-4158-810b-657e1ed802fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb220157-2af9-420d-ab2d-2556ffb2c0a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bce7adc-a8f8-4fe8-9e6d-e817cd8767fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "942aacda-d8cb-45f8-a8c6-6da91329b769"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9fb089f-df22-4de5-8cb6-1af07f17be5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b61ef6cf-bede-4579-9c74-cef2fef988c5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "41a94970-fb20-4b56-852d-abb0478a94ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "850ef1c1-38c4-44b1-8f8d-3fd8fc8f6d01"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9b4d14d6-4fb3-4396-bb71-3d88a3179d4b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f70eecac-1e88-45f6-bfd1-a563348d4e81"
                }
              }
            ]
          },
          {
            "id": "142aaf22-21ad-4c8d-97c7-3c40235ed905",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d297a98-bb62-44c6-b2dc-058fed1af3b2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "aa2991f5-edf4-41c6-b491-374658d63b11",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebef61e-4aaf-466f-8bf1-a8b977ca2aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dd810dae-26ae-4cdb-8222-c2a1b7d7e0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27479b2-b331-4b1e-adf8-81b27fcf9041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb74a204-0691-4fd0-9df0-1e0936845377"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d55a5826-a275-4b48-8c8f-fbe6456abd4d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "216db4a3-5787-428d-b739-f814d5995649",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53c0f91d-4443-4a01-9054-d226166c4839"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a78226db-205d-4bf0-9ef9-8058ebb742be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f77a4fe5-e883-462e-9350-7f3e5a5e7c4b"
                    }
                  }
                ]
              },
              {
                "id": "ecdc3e4a-1c2f-4fe5-8de3-5ca5fafae80a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "042bca90-9363-4d24-8eb1-78addccfecdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48fb56f0-bef7-4e16-9b43-3b4f236b7beb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98e2a105-e6c9-438a-add6-a0afa8396649",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6664f12c-4eb6-429c-a260-d85395f0fd0f"
                    }
                  }
                ]
              },
              {
                "id": "7e2b9735-516f-4228-8c9a-a11b98bad1ba",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c30c996-240e-4ad2-b6e1-5ae607261b97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7baafbad-5033-4d63-b9cd-d5d91e0e250c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "add688da-73b6-4523-bdaa-eca5540e47ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4f6f8bde-3d65-4b36-8c03-3610c3065f7f"
                    }
                  }
                ]
              },
              {
                "id": "211bfd77-91c8-4adc-a705-6d3d48e4c8b0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56c5db23-f689-462d-9d3f-f2e83e4030bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d4dfbcc-774a-417b-8459-cfac5e4cf3b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eee9e33a-e9ce-4754-8c46-5edb2c44765d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8e7ce479-63a2-4e04-869d-52ea8f721d51"
                    }
                  }
                ]
              },
              {
                "id": "a0e2aab1-ca04-4faf-8ec8-71a1b78141d8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "442de86a-83fa-4902-a227-e2857d9331d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebd3e0cc-3b47-42a7-a388-6470060c2eea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71e597ac-9f3e-480d-b931-10a2a519817f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6179a253-3cd4-479e-bd63-9a245f9c845b"
                    }
                  }
                ]
              },
              {
                "id": "3c4f5e63-f854-4913-93f7-079743495cf0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18b18711-953d-4964-b133-839b26531ae9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3715bfb8-1fa8-4fb9-b80b-3431ad5796e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfdf76d2-8ef1-4b74-a350-5033bb27b1b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "72a3dab7-f8ce-48b0-b2cb-46f8c74fad8b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8f593f4-4ed4-4edb-b335-211280b0a81b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0388d712-d969-4062-ad53-e0bb53ddfef7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f2d3648a-8e4f-4caa-99db-f356114ab8f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6677b830-4f4f-4028-badf-d50f3c8cc7da"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c05c4ea-e0a3-40d8-bf27-4ef0d2c8a333",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6a6813f2-5320-47bf-ad09-059206f5d2c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e42b9f78-3dc0-4213-8cc3-c7163841f64e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f23c736-1422-4ffa-9239-6a5f6c66a2ad"
            }
          }
        ]
      },
      {
        "id": "0b8f8e05-873a-47a5-8562-7571eae086b1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d8bd00cb-f6f2-4060-9f9a-2d413947391d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a415d3bd-518d-41b8-beb2-d1734ef6832f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a946dcbf-32f3-4a37-914f-7fa8152f36b7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fe94b0-00ff-466f-83e2-0e171eb2ecf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b0e014-dbe9-4a0d-adc1-ea4198bca02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795025cc-42e7-42fa-b677-fcd06dacf0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "02a4d973-32d0-4e6e-85bd-93a9ad140aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32ca7bd-f966-4d26-9d37-defa688f7fc1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f475f34-9e1b-4f93-b782-52eea116f943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff90434c-fd71-43bf-98ef-e0c39e2e0f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0677fe-641e-4f01-9d79-c4a18f88c307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5574e2-1bf5-408d-a9ae-6a4e2fb10a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ff5db3-77f4-4c6b-ab02-72282d54f6d7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0566b6ec-01ea-49f2-85af-70ce836a90ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f8de53-8cef-44d0-9fd7-e03114ea6179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c5357d-a871-4f28-9295-e672a30b7302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73566ce9-af7a-4bfe-abf7-96ee78da0fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27337456-a2d4-4dff-977c-b158f9332301",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a64169c-f1fe-4200-b785-7c8a5fc0629a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273ec611-715f-4a7d-9fb9-6b85f0f6a39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e117518a-7147-4645-a6ac-d83bcdeda898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d603d19e-3db0-42d5-a50d-d2c99d9550a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a06bb5-944c-485d-8872-f3f99667d86b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b335f89-5382-46ac-89c5-ea5f2acad9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ce5684-2c4d-4912-8f69-6ed8cf7e89ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127a6467-7a8f-49b7-8204-c05e75230872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a655c9-a2e2-4640-96eb-e1afb79a5ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88673133-0b60-4f67-a0ea-91f95f48a54d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c549cf08-7a9c-415f-bd36-3bc9126798a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aced0e3e-517f-4431-9dd3-b49c445644df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8a37cd-e203-400b-bc20-7ba2658a9d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b68db158-9881-4466-a9e2-805ac1d3ec58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7f5504-a4af-4af6-a3b8-d2ddcaa29075",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41180775-32a9-49f8-b265-7da989fb3512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667eaa73-101f-4db1-a6c3-ccc7d954fc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4e2279-6d4d-4eae-b484-e69234f84aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4772f3-ad51-4bb5-900d-5b812bc529e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4977ef30-64aa-40a4-99b8-9813afb44c4e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f71aabb-8d18-4b5f-8c63-2ddec53221dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80355234-8766-424e-9029-15a6507d5a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a2de40-699a-41ab-a75e-ad8261540d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2953b9cf-a30a-48ee-92bd-d966c580812f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4b1eb2-e979-49e0-8c83-d749a9c8e110",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397c2e83-2b8f-4eee-8899-b34e4108734f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf2fa37-f7fb-45d3-917d-eb713c9ab3b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a3de9f-aadb-48da-9548-7c36c252d5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83e1b679-d762-4f89-a1f3-b48c5133e532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fb71e6-7683-4df9-a11c-f42647074dcb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7096bba6-1450-48fe-a66b-6760180353f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7831ab29-8b13-4063-ab6e-85a23c366e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c437305c-6347-4a65-97c0-ffb245bf37d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1289896-6678-454c-9839-35f6e608eae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf6b64d-ad73-423e-ae85-368791a0a991",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd65e8aa-c3b7-4209-81a3-bd3545b8a698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a927489e-2ca2-464f-86d7-d4fe1bda7ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a381b4ed-25d3-474f-b9c2-03e3849eec46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "eb58e4fc-5190-432d-9123-4dae4ade7a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44547cda-00d6-43de-9784-be5cbb448720",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f114bc0-1159-4790-8721-c28c1f59ee78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7f4d55-51b4-486b-9255-88d492305152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f00390-7528-4302-b349-9a37474d3ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a8d61b-69fa-4cbe-ba2a-249ef8fee2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87124337-6b84-42a4-a999-6a8bdab14549",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9832dd4c-da61-4e22-a7c9-00e40287fefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018f0db6-da72-455a-8eaa-6ab4f78e0ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73f01fa-e986-4610-8b06-2b67dccce818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ec9565-2be9-4221-bfa5-8bc7aa89265d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9ee4fe-1a55-408c-8d3d-1fd465fd94d8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f09c0fb-5391-4798-8517-3978a122a133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f7dab1-18f5-49d9-851a-0cdf88cac353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a089d419-55c9-45d9-9854-7e99a336e666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4139f55-f6d7-4747-b48c-9a2bcc0c665c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9697d64-b8fb-4db5-b3f4-8a0e240b07e9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b44474-8979-4950-9a0f-653b8821b6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09424c3c-67ce-4b6f-ba3b-27270c0d1bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de4b54d-abb6-42f9-b11e-ca305cf9072b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d69f6edd-02c2-4ec9-9d54-dcbaf30027da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f98874-5220-4bdc-83cb-943b11d4d55d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e667898-f9fa-4cdb-9e4c-ce16983bc76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e68e8d9-8cda-4553-80b0-408f8f8fe61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11455e16-799d-45c4-8397-e5d16d8bd735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "46c1df5a-936f-4542-b9fd-30749c74d300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561bc8ee-da60-432e-8c6e-5abd0ec2154a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee490ab-85c5-4c51-bf4a-273b2317c707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218d0d65-517d-4554-b404-b7452413077d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4838dba3-0cf9-4374-9a1c-819655c97fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f0f071-8201-4b61-b85c-7fede0bb69d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c280f1c1-4b20-45fa-b3c5-d6662894e08d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf91e688-9030-4b68-af28-e298ac5cb338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfce8c6-767a-4cef-b701-5d426b1cc345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf88a2d4-0e57-40fd-91de-0faf566888a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3f5eef-da9b-4be9-b266-0de8ca81fb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b62ec34-269e-4868-a9f1-ea02216194ef",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5d41f6-4174-41eb-9213-9022b10db352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d886e73-b744-4ca1-9822-f7d7928ee68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6460cba-9dc1-44d3-8c78-4c60ccf5cbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e26b0bd-1d86-4fae-8a2c-d8444dd2355b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93695efe-fa93-48f7-a128-8c6ba191f569",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd6a1bd-f243-426c-97d1-9e44908bcdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0921bc4-1d57-4f62-a926-6a1b52ca9e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413e2484-a47e-4d9a-b31f-7f18a86d948c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2435aa3-82ee-4953-a28d-aafddbd23551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ee767d-8716-454c-87ca-498f1d55ece4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e336ba6-0a10-4130-93b5-0fc3c7b1eb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abe3a12-defc-487c-acc1-3b7a3384a6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7c3cf7-4947-42e5-848d-acabaeaa5699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cff529-2b52-4085-8e07-fdadf92c9cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a57dc1f-4376-46bd-a5cb-ac805097c577",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ca9972-3263-47b5-bfce-26c5cf0c7c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a530053-4dd2-4266-8810-5e667e91fc79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c660ce55-12de-4e1f-91c8-fa4c2003c710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f30bdc-0482-4a8e-aee3-f365259b87f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863a1f62-954f-4165-b5e4-0f307e87cb71",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7425f2-c5b0-495e-9a47-9119a1fb8385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c173a8e1-73bf-4e57-adce-5d8842f518eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a5b246-2bdb-4166-8a3d-6ef05c8cd1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4fd4ee6-adbe-4b7a-96c2-5fea2b64cdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ae5efa-510e-4f1e-984b-6105899dc06e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e65b351-1bf6-41f1-be93-24918d5a4f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d867e9-1caa-4423-82cb-eed6ee3047a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f7de68-5b2f-42ad-ba00-293178243de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2fcccf-1d77-4c2c-a126-af4993b48c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd699742-48e4-45e4-9906-b63283ba10d7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f9b48a-4b59-4501-8155-73be3ea27de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e4f6cd-30bd-4d01-815c-f605c664829a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d6db2c-dbb0-4e6f-89fb-ff71a8d968f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e27b62af-1465-4541-9977-8cf085b30407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2655891c-52f0-4ef8-ac41-14052336c1b5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923bed79-054f-4eba-83a8-d584aed83f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64238817-0e56-4643-b5ef-3bc2d71c74e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e270add9-07d5-4ee3-bb3d-5ffae09c36e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28cae4b0-027b-468d-841f-ca8f5f9c89ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003cea36-1575-4d7b-b3a0-c49e85dcfc62",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ae5834-228e-4af1-a36a-caf3a6fa9061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5daa93-e141-4f19-bc7c-75af3ec40a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3136d21d-e686-4cab-bcbd-04b853dd17ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9eb2583-338c-424a-bd74-deac1c8b9e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d7f105-8119-43db-9857-de7c1733c1b1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d3c894-0b1b-4466-b433-4560fb6e693d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d1819b-d345-4e5c-85d4-ed788fc305b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ee047e-05fb-43e8-bf55-7b84711c3ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e324d62d-e7e9-427a-8247-c4e4984a1273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6256573e-d881-4efc-89d2-132a73c3307b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e37e33-3f51-4526-8805-be177cccd06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40447a9-2f6b-460e-bd40-92a6b9e43a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e72bee-6f27-46f2-90ea-413deb205c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "145368a7-d71c-4abe-a0a9-0492ea7e8f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0d6996-5547-45c6-9a0e-0da78b9c1ac3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fd4b3a-1e28-4c77-a234-273f30edc5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfffe90b-1f7b-4706-8336-b395612bb995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7455375-c7ee-489e-997e-23567f41a124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03075d61-b9a5-4b3d-94de-0046418e6ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20194f29-bbd0-4ae9-8be0-7809bd6c09c3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d638a7-ac3a-4c56-a3bd-9984e6142ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2600a7ef-e3e5-4481-aa81-c76c49e00bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdd0040-224b-41f9-9b67-6fe67c018d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88298b88-b500-4647-8bee-f323796b204b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940c7158-f960-4816-9a18-b3c67a31bfc3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863a29b9-8809-47fe-951a-0ef5e29afbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d242ac5e-f9be-43b7-9dfd-80d5ca98ab70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c1aa5e-06da-4e94-a778-a0e318725ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2aa296e-b898-4e47-bf9e-642121bae6a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "767fe80b-b776-422e-84dc-e049f97ff905",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b11d018-71a6-4b0c-a136-0b0f33b9406b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21adb498-53d8-46a4-8f19-6ab2c4f22c89",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dd37dc5f-2b4c-407d-b6b3-8045f039bdcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7e1bc6-9da7-4252-bd8c-279f73b7b9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dbca006d-04a7-463a-a60b-fd67bbac10ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34a27997-bcdc-4378-bcff-99bd064aa57f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d7cd199-9efb-4d87-babd-aa34aa4c0473"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f693f2b-6078-4394-ab52-ed7d667b8da5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e863529d-8b79-4779-b06b-54a5833573f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8129c8bd-4cae-4c38-9903-72d8405fa0b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a281d1be-dacb-47cc-a623-7faf625bdcad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75c2d3fa-a9fa-4943-ba06-4a7cd9392162",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a87f3000-ce46-4e9a-954a-c9ae7b853496"
            }
          }
        ]
      },
      {
        "id": "a89773be-d156-4da4-a980-ba04bc4247f8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c65e3d83-3f07-4216-ae40-21af30ebaf02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddc5c8fb-2efb-4a75-b987-7240cf0df258",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6b63aa24-777d-4d2f-9bfb-79eb93751694",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2458f0-cf63-4455-ae75-df830f121170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e071132c-89cb-4def-bced-d3937c1d3392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0f096c-6a3a-4f65-8c0e-1fc2ef1e6872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7944fcae-c644-43d2-8e80-a7064d230b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25203d7f-ee28-4d9d-8747-a0b870f13c5b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6e74ef-9fa8-4098-850f-4cfa79977c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7447036-b4ba-41d3-ba46-0aef83578419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2ffbb9-09ab-4106-8d78-f8fa207d32c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a18bbfb0-d8b7-4168-af66-b519d4290218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27abe132-77f5-4374-b5ce-d79156fccf56",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c46943-eb27-4434-ae18-3c4ad7935483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c603a9ae-2ace-4827-853d-e5e2fd784aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc771ef-9067-4962-82cd-9b7b9fa4bf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7923b1e-a423-4faf-9487-0a1fbbaf6527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9d6f41-b22c-43c0-8a32-6328ffd2e560",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa7f970-c19b-4c8f-becf-8895d7f8a3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddacb1a-68dc-48db-9ce7-6599392005d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f975e649-a1ed-4649-a736-986d58a82e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf9801e-d0e1-482a-adbb-3f29dc538414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5afc32-4937-4ef0-a103-c27c9f6c077e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbd63ae-0f6b-4142-bbcf-9174aa41f1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f5e12b-90c2-4236-abcd-3224e1edeb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41319286-1c39-4722-a34d-a4d146b16e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddbaba1-c80a-4776-8df6-172824f3c699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971c0c7b-9833-43c6-872c-6056e952b06e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5bb25c-23f5-459d-b908-87eef2524c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4351aa65-d698-4d49-89d1-3eec82e157ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86666c80-fd1f-470a-bbbb-873aa6e44d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1597ed7a-b284-46c7-965b-9bca6b823fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9beb50ad-e852-47f2-873b-9a1037233b4b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371483a1-1e92-4184-8288-76f3b72b022e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7518cbff-9fd5-450b-a36f-bf32895642dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0209889-f3bb-42fb-a277-fcecb9e7ed18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d362c2de-ef7d-4370-b324-fd9e63249dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88039a9-c22b-4ccf-9ac5-e19a36cf3595",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211f6d6f-d218-4819-a38b-cc5186b74a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a43035-7787-453c-b00b-9cd52478745a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5350022-22ff-41d4-bc09-c9b612b25f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21a50c03-2872-408f-8c56-a2f166afc770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015e4b00-f05c-4195-9c6c-b0278eeba9e8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f7879b-0b26-47bf-a8d7-f5f6905bb08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6772c5c-e36d-4f96-8d99-99a6a3b8d832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3c559f-dfda-43d4-a03a-d33647919319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7919cd6-05df-420c-b530-8ee1e7e5876c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38272eb9-1c25-4019-b266-8d3f8dcf67eb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7276db-c563-4a80-949a-7ad107d0e4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5679e47c-429d-4974-9091-f9453daa38c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e80d2c-3593-4495-ae8e-ce4509fedd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92f00736-6f53-44b1-9321-e87582eea107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a946370-8c44-4612-9aef-5403c940c3af",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431bbff1-f17f-4ffb-9bfd-951af81a7cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c810b48b-06ed-40bc-9cce-446055e0ae95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7da88fd-a592-407d-bf0e-f444b9c6800f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "02343365-eef1-4623-96db-7f1d240b783f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35fe13c-6c50-4237-9365-aed516a84e7a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a32f79-1fef-4853-a024-95650d42f5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6bdba4c-362e-4d47-9dfd-2c77bd0179f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b661ce-9f3c-4b64-af67-c16d0c6bddbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7aec81b-1a84-4aea-9950-0636a2e6468a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1eb746-c018-4230-8c58-dc6b814faa43",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e450ef9c-370c-427f-85c2-a7ef18861b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbf6337-2a80-4199-957b-8ea4f09870d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bf4586-bbaa-4ef4-9f87-8cda7171482a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08dcbefa-75e5-4cdc-8611-808fab74ba70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6dba12-893a-4da9-b2e7-0de8c1a038b4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bff8d5b-c508-4e66-be54-d43e7779cc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6643a936-cd93-4141-a5bc-d15af800a09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b3503c-0127-41ac-bd6a-cdc84ad19389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a09eefc2-88fd-41f5-a621-bfbdfc9da6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73b7d0e-219e-41d9-8792-50523572fff2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125acfc0-3056-4b57-9799-e871fac25043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f54271-61de-49f6-8508-44d2f4bc81ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123f69f4-f726-456d-a866-7d0a3f103af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8e5f32-b96f-4fb7-babb-35e499a796d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6fa01a-0628-45d0-9422-8dc197afa7d4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bf7eb4-139f-4260-a32b-b73b627efa81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0d00b2-788a-4cdb-8099-fe63fca523d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7304b834-758d-4b93-8d23-841e5013398f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a9f14f-e3e6-462f-a748-3ed1f7adb294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20646ae-1107-43d1-8897-e47b90f053c0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba8f4c7-1827-494c-8181-218cd89eafbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958b1f1f-39db-4dbf-ad47-4354e9a09ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb9ac2a-01a1-445d-82af-e2aef6c688cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5510ce73-fe31-43e7-9e54-e067adc473e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb78c237-e187-4926-8852-3aea8512f974",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ce1204-7bd0-480f-969c-3eb8139ad535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5e93f5-05e4-4e6a-8da0-ff0d058c525b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d025886-a71d-414a-a6f9-0b762361b7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5dcca7-aa56-47c6-a34c-176e3c83603b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f82b3f2-b882-4bf2-aeff-677e6084e900",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3327723-953f-4b54-a7e9-8d97493d7f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f22ce9-f3fd-4419-b9b4-b1b7500e10e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9a0337-aa36-47e7-a40d-20e7ab4ef9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4087fec7-63b2-458d-91e4-064428ed9a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c1adf1-d8aa-4bd1-aba9-ee5e458027bf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5789f5a1-4d4e-4aef-94ec-87ad0feedc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0c16c9-ec01-4445-9417-8621d06a80b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262ab327-517c-4303-8bc4-b414d4228415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0cb11e0-3823-48bb-a80f-1dc96a08c732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31455278-2c70-46f7-bd75-f9fecb05ddf2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3faad4-fb2c-4e16-840d-5787fb4a57f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27c79a1-adf7-49c7-ba45-db047711967c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5532f148-8666-4ca8-9716-8694348b430f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5a17b8-c6f5-47aa-9c07-10ee1cfa976c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e30c287-d441-48af-a11f-50d4d4d36904",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffd90d5-f280-4749-a6ff-c1b028107deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bac170e-0b7b-445c-9b55-6916c97ac64a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fde1fd-931c-4a2b-9774-05797dd1eb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9979ca90-f936-4d4c-9363-0cffb188cec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35952fde-fd34-4334-a644-f5793390354a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff952375-0546-4224-83ab-0ddf35f1dc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838792d3-227d-4a60-8b13-1cfb5d05605f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2ae3c1-e705-4800-b5c4-fd117bfb5763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44baaf35-b09d-4c9b-96e4-1e78d85b4068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d95d037-d960-49e5-ad8b-aed3c16282d9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1732ad9b-8012-4451-b2b2-af457af265f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ec531f-2350-46f9-bf7a-30c96a92767e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a875a73-aaa3-458e-807d-487336915c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff39ffb-8782-440d-8578-a02e8789cea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872f24f1-805e-4df0-b392-312b4d81eb3c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8ac691-55d8-4125-b42c-10522093762c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d19cf0b-6116-4e00-badc-353413c2af0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bcf819-b43b-483f-a6e1-93f7effa7e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d53a451b-93ba-4f9e-b7dd-6fb732315935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d3105e-f7f2-4030-adf2-3f598a7d1416",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148e4383-bbd2-41f9-b7ed-d315967bc037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20359b34-0fd4-4b0e-9011-3d9aa9f136d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154abaaf-470e-434b-b7d6-0dd47065a2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "429df14a-c5b3-44bb-ba8a-89d3622cd42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212c3547-ab66-428c-bb93-3fc0c61f9daf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6484cc6-2be6-45de-948f-f2b4418a3825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b5acfe-aa4b-4556-a455-a91186966433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12616ead-92c6-4211-8081-2de4e05c0c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9272762f-3592-4e1c-9b12-d8574737596d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d02944-fac0-4fa9-a69e-325ce0f18380",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eae8fdb-e9cb-437f-a25c-e70696a3fe34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea4ad86-5b21-4c49-84a9-e5ffdf396e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40056ce-273e-485c-8c61-40ff30be2269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79834a8e-1695-4f99-a91b-8398e715691e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bd244b-2b8c-48ef-8c37-17aaa7ebe518",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d59e259-40a4-4778-8a68-8d40aa23735b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2ac226-f82c-4053-98b8-18a420a3e302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1502b3a9-4ecb-4ea6-8be5-8f88339cfea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86e4bfff-04df-4271-86ae-486fd04f3994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229d0453-bcc6-4c1d-ab4e-103f7c9f892f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ec5832-73e1-4c93-994d-4630cf237ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20291e5e-263d-4911-9643-954d45d915d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9991b4ab-b388-4520-aedc-7a07be5ddceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd851b4-2e29-485d-a9b2-16d9487c4879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa2be8e-ba63-485e-8651-f9a481e1e227",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcd8604-d25d-4549-a48e-e0cc3bb2427c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d54367-a504-4c1c-a939-ec83b7418800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47565485-a15e-4796-a4b9-c904e7df4055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e83ef80a-8986-4005-8d20-3a52d3e2c72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddf5cd2-9df0-4f09-b05d-ba5cc430a552",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93cb8a4-93d3-4fe0-9cb5-a66a6c65a168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de50845-51d9-4422-af30-fa4a274fa1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d9da69-64ca-45a3-8277-e7132afe8147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f9aa6e-0905-457b-ade7-049f62bf8eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8b337d-fa51-4774-8ddd-d7a42338c4ae",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fac47d-9025-434c-94dd-835cbd824428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d5e4ea-ef8b-4f7e-9057-f6c13b925d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0a018f-740d-4a10-a50b-90d7f2019e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c7b0f9-3f66-4aad-a3c1-2f2f73bd513e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93eb9581-d9b3-406c-8d22-3b08b53fd809",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3650b48-da61-4bb2-99ee-d4d488318de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e106ee-c632-4f56-ae4b-21ad28e1a9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e131458-b512-47ee-a849-2b89f5b5e6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dde97001-6617-4b15-bdd4-98abc47f7770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9131eea-72cc-4f0d-80be-d7f88f8f449d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd56ea2-5de8-4bf1-8eba-656cb125eca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88936a77-3257-4a5f-8717-f37ee1870eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e354cca6-79c0-4f7b-ae72-ac059a5797d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6178fa45-3390-439e-a6dc-f3a6909e7a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523521de-36f8-4c99-bb38-f1aa009cd553",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b8508b-e547-49f8-999d-16d8f22b8176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f183ac-7cec-44e7-a338-b1d9167c48b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c3ff2e-3a04-45e6-a985-b88b7f96e365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e383ed9d-5926-4f41-8433-ed68523d9a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab5d292-b335-4657-aa54-bce89b6c4a3f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87eae619-e5a1-4bca-943a-e43dba62a39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff803c0-6bf4-4c82-a21e-48c3d51a0932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05fabe3-dc1f-4b89-ae7a-b49a0e998d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "328e6ad1-c2e5-4e9d-ae4a-ce5e2db7e11a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "34064312-7136-4cfc-b5b2-5f1358ac1f09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c59a237d-c6be-428d-8532-7a956dad66d9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7464482-52a0-4972-9ecb-1f4344f3bfa0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "235523f6-f065-4245-8a29-20a910557939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbdd974-3267-422d-96d6-a37dc4ddd230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f40aa71d-a5c7-4659-97e3-df3b7f25bebc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27a2c17f-75cb-4a70-aa68-6559170538f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b724fbd3-0662-4cb6-88f8-db9c37205261"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "899165fa-68b4-4db4-b79d-de3e80dcf925",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f55d01d-ce7b-4d36-876b-5be318c81c76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d7c4237-b2b8-43d1-99f2-6551ef2a9070",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d875bf02-de6e-4343-8409-40154fd29e3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69e57860-1e4b-40a3-8a7d-06991192c9da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "559b17dd-68d6-44b1-90a4-9a35fdf28d99"
            }
          }
        ]
      },
      {
        "id": "c0aba165-16ad-4696-b193-1b464c1a9b89",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bf7925bc-0430-44ad-b5df-ca2cd16c06f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7169c7f-fc62-4726-8fa5-d7d495d5e16d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "88ac048c-3ca7-40cf-b528-58d2d01c1013",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a6dd3e-0c60-49ee-8b9c-75006f8a5186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f81230-311b-4f0f-9916-bf87dd10b833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a40ac9-a18c-4203-a724-5b89e540d912",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f80fa6-5978-4928-9c46-d7e65ae0465d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5a8cc6-df4d-4f60-995a-d4435e46a324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f2ca3f-b0ae-4694-859e-8712738f16e0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad51bea-66b6-4774-8154-8bcd4c383823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e4a436-024d-4932-87ab-63658c4e39af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b892799-0d4d-4e02-9013-db4b3fc0b9ab",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f517bf3-2ca7-450a-92d0-fc4617a2c837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f35faaa-e653-4f22-ae1b-5f41f9aa36cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9aa8c33-b8ee-4748-aec1-7b2fb56711f0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ff4d14-8c92-4c7c-a833-4ff6210ff210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25921ab-7a1a-4a9c-b7f9-cc81cdbdbf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf74b75-11ee-4cc7-bf4d-1d9d34a0979d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac02cea-f7c2-41c8-ab46-f508af08335c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f5943a-0065-41fc-a685-469ca0456763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782c462f-ccf3-464e-91b3-7f24c173df50",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8847a9fa-705b-42e1-ab7d-9d2cec8c2bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8518e29a-e8bc-4e4d-b001-bdf2b37a9841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4436bd4-4ef4-4b9f-a7f3-b5027f256f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08bd65e-3318-493e-b24a-3196eaaf87a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09622c65-2fc0-49da-b20f-b7dc6f84ad36",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21dff28-f64d-42dd-8db0-ac47ec879d6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "199caa7c-8cb5-479a-a7e1-64d970639929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38499ad2-dff9-4b21-89db-f7a5d3c48b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39afe909-f2dc-499c-a7d7-8947a0b09ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569351e8-a417-473f-ba55-8e95af7a44fd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2233721-1f38-4bd1-9552-9a7d1bf0e33c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa3d0196-8f11-484c-84ae-bcd9bbf429a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1591e2fe-4a9a-4f1e-8bd9-e5de0e84ff4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63ea9d9-c5b5-4c76-8549-8a1dde2e65d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5626430d-b69b-46e1-ac25-70558cf3efbc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17620108-961a-4cff-b7d0-f815496cef2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7fd9b42-eb17-478c-ab25-44811c1d2d38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabc60c3-f6f2-4e67-a88d-aae2531c8bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6d534a-aa46-4753-866c-d94f52749f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d95d52-4ba5-48f6-8413-4660ac3b236e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d1205f-54eb-4a91-8057-783f29d1d016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ad894f-e6df-4bd6-8117-ed879ef2a314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f966eaf-d096-46da-93bf-50ca3bf593e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3b11b0-aede-4f43-a08a-06a1a373c892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afac1e3c-ad62-4561-b65b-a2e9ccdf7b1c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6e6729-da5a-4f60-a64c-a6d73807f565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54de372f-41c9-4512-98e4-7ddb0d6de53d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cbbbb7-900f-45c3-a0b6-434841963244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0efa7c-f528-47b9-a201-fa28c2ea1990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a698e3-bea1-4740-8e8a-3153f8028ed2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623bab68-dfa5-4e47-aa09-24fad423ffa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74059edf-1e67-4c6a-9f69-629c3d5a0226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1b9eca-29df-4974-b40e-b5f31b3c1a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305d7118-d689-48af-94d8-8473fa03a139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c15ffa-6968-4891-aa88-7d14fe6755fe",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335c8efc-c065-443c-b7a4-e2dd49811dc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d12497b-e9af-4da4-9acb-25e5f98ec8b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614939cf-459d-42e6-b2fa-80fe26bfe914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0106368d-f5d0-485b-881c-be3deb5065a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d36d57-6bae-4bf3-b655-9b2a4e4b4aed",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1737531-4251-4ce0-9239-ed367ed94250",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2901889f-083f-4337-a3d5-ba69c8bd177c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d95196-f8f8-4d1d-80a7-3878d3a81698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c071e7d-a08e-4cff-8b4b-692c416e20e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77400da7-1cbb-4c4f-b01a-9cdfce57ab76",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236b9ab5-3339-428c-a323-7b92d5db9f1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29456a4b-5cd1-45cb-9e7d-4dccd8ba1cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0219a0fc-165b-4868-b6aa-8f08944e3792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7661bc-7881-45ec-aa45-decbbe366cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41359373-2284-460c-bfaf-76f5f97ff5a2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40539be9-82cf-43ca-9b5b-24b3fd896a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f91829f-eb3d-4304-9c9c-9d23b9d88ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca192922-a286-4268-9916-f4c0c2969e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ea6812-b39e-495f-bf44-473519714743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1c04a9-1d06-4d15-b452-9510e03df332",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179de45f-be5f-4e01-8044-20a3f80a5f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7eb435-96ee-49f4-9f70-7f45ffb35204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdb877d-6602-492b-a7b6-63cfa3bc4476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e7867c-8929-473f-93f1-d3c8f927a53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b4e68d-6147-429a-8cf0-d73005841576",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d490c262-f7b5-4e60-b489-8445f636ebb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0674c4e-5d81-4658-813b-6f618c9c515e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892176e5-9edf-4edb-a6c5-4786e1ea3202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819f931d-8c5b-4764-aee8-4a36f4221a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c057bb-703b-444a-bb08-64638733f4ea",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67595653-e69d-4f86-a368-3cb208659cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e00992-d93c-43b0-ae71-841bd19dc0f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0611bf65-db3b-4916-b883-8c2f392a71ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0e3a45-d41b-4d4a-8fbf-42127128b497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45864146-8245-4cce-b606-bb1fc8cf8347",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4daea29e-b6d6-482b-9a2c-fd224e216b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "debff2ab-3066-4f76-a427-37279ff78c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2cb643-780f-479a-8507-6167af7a1497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b00c70-cbe6-499f-ac52-5fa43e2d6f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a7ebf8-8932-45df-910d-02b6d746ea6f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff527694-3988-4d2c-bc0d-345fbd8e3ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50de635e-b489-4343-9397-5e6ed7291b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ad1efa-cc52-4db0-9d1f-3b1b96d88f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13cc345e-c265-42e9-bb85-e4e82a1537ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e382be-bb5e-422d-9ddf-7116940c97ed",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fb6ee2-82e7-4eef-944e-26979c054bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e67225e-f9b7-428d-b74f-483c08c6dec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3560b81-7ee6-45c2-b966-3c931fa2440c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87874d35-00da-4e58-a61a-4bf9d670febf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5309a6-daa4-45ca-bd0c-d3213d7ccb5f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c8a73e-1ae1-4d66-b64d-4f6db10eee83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6754be74-1c33-4395-879f-5839476319ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1c46da-12a6-41a1-9443-d55dd25dc9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa70aeb-02c3-4ae6-ae09-09ca9acbb8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364d9587-8fa0-4058-a9b0-ef488faad158",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb59c7c6-ba75-43cd-820a-a9a8c532d4f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c45ec9a8-a3c5-4e9f-8d75-31a2839c050a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f52cf6b-c189-4c3c-8631-843e76f35ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa121e0-28e0-4da2-b88b-8b744dbcb4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17991db-250a-44bf-83b5-bd6e7f95528f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01346ec-6bb2-40c0-a911-3b4ae465ea45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36e82ef3-5338-4336-ba97-bf1cc94a7c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2641f1d8-1329-4998-97c4-1b21664e690e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951d5410-6810-4484-b852-482cd11dcb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8022e5ae-8b03-4568-9f1e-9ed74d17a877",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d93728d-5fea-40d7-9364-9963c42a5339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a25c8a-fd00-48a0-bcbd-45ae7c8d1e29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1c6b07-3f42-4925-a7bd-fccd4dbebac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4604d8-0e27-4846-b29b-264a6845ee33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3387f4fa-0110-4f51-b227-1f9a26815309",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78602cf6-ea91-493a-85d1-1f8bd9d398ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7c135f-6921-4a8b-9338-f446ec213a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abca511e-58be-4735-ad06-7f885e906d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6275e279-5ddf-4f11-91db-0221eda4cc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8dce23-c585-4288-b6da-359e56f450de",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd1a918-f498-47f6-b040-9bbfe2358bd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2711d93b-a9e8-4c8b-bb7e-6226b9a4ee73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a3d6d0-4fe7-4776-90bc-73a45dae9aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bf4734-dd43-47a4-b072-c32f196d1bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55eb993d-f492-4898-8d53-3a777bbc20fc",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a48b71-9889-435f-8d9e-6b41a56b3776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef273210-bcd9-4c7a-b3a5-786406b20adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5159d406-1e7e-4a23-9529-c3cf74000329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4490f6ff-aa9d-4f7a-9a74-ad370a41ced2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1bb8ce-b4fa-453a-929e-02e33715c209",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703f95d8-f54d-46ab-8722-dbab1c9f6db4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d93ab163-9fe9-443f-82ac-98ec4b648300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411c104b-b26c-49bc-8b5a-8842558cdf5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8d543d-5156-4ab0-a22d-20d3b2ebefee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36908e9-494d-4f02-b8f4-efcf5f1620bd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16f5962-8b34-449e-bb14-161d4e823303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7439e18-adbb-44b3-aa5f-6ec4665177d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14231a3a-510c-45a4-b027-90d7a0bc117b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6136819-46b5-4348-bb8e-17c7d4096cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44dce811-4fe1-48b7-b7f6-b8a8e6dd9c28",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af071ae3-cf39-4ca0-8297-58a748af5422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "319f2e61-b7a9-43ed-b9bd-0f7e2cc3c6b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc971a38-c2aa-491f-b5df-e582306508dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e8a5d6-7e87-4537-b132-55e80b142542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ece0e4-1472-43d9-956a-c7b3822f3492",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40bc39a-837f-4ca7-96cc-d64a98d681e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "805d83fa-d7e6-4d58-951d-63d745900899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ff22d2-dfec-40d7-ba34-4e154ebe9914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075f4105-d075-4fb4-9537-e7c135db0685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46725a38-ce58-4532-a1af-0fa6c155677e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a65b0d-5f39-4971-9b94-bfa97097fd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1684665a-93f7-433c-8f3d-153b766f66e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae94e5c-46e4-4173-92a5-426dea9709f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503c0d0f-e15c-43d8-a2c4-7fe02de72b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fded8e28-b2a1-41bb-b747-673554f7a628",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee21d243-5de6-4225-9001-1ae67bea3f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec258ad-e4bb-4dd3-bee7-9ef7ba6ff169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548381bd-33f8-4369-85e2-419b741f99c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a3da9b-0a34-46af-8402-46b7a591b835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ebe02d-d777-48e8-85a8-4e3e2e80638a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11eda723-c6b1-458a-a9ba-8bd61448861a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7167690a-4040-43ea-accc-a47fedf6134e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd8462f-c769-4655-a9a2-ec643fad9c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe039562-5ff9-4d79-9534-ff51255bda6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7c5083-8861-48f9-a89a-8b1e0707d306",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e96256-893e-431b-8797-42b20899e165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d7a816-0409-42dd-a0c4-a455dd35f8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956a5618-e685-4066-9d72-514be2cf1f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11eb98ab-1df5-468c-828c-58f534e717f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c536c1-2ef3-429b-a01e-ee98a2a146c9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601aef61-ea7e-4520-b12b-fb9f71f07a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899da326-4e9b-4e37-801a-5ffd9f5995f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c07917-4c3e-4ef8-a535-5d463ef60dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e8b338-46f5-4643-b8b2-e26c21744ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5aa0084-52a2-4442-bb1b-0f41203b257e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7144015f-e580-4b2b-add8-756f8e9783cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbba916-16b3-4862-bbdd-5ce6f321fcf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b80a05-1be5-4061-956e-0e3ec975d736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215b20ca-796b-4841-b89c-8aa1fb3cb536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82878fe9-6ae0-4d80-86db-f416c5079736",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3f8c80-ee8c-4ccb-ab18-731ba86c83a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d98759-c0a8-408b-b7be-7016adbfc6b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bafb59b-3eb3-4797-8fdb-a79b568a8d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bffb3127-5bd5-450d-85ba-31164fb75f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b000607d-59e1-4ce5-8787-182e985d82b7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d34b554-ab19-488c-90c6-78e33629e179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5630f407-599c-48dc-90b7-8477729f8f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f50082-d8dd-4395-ace3-82cc77627250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1cef32-8bda-4fed-b634-a00d47549c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aeabf45-e978-4f8e-91b4-54d0cf0f2117",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fc4145-b135-40d3-88d1-7f57b973637d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e313b16d-a362-49d2-b0be-ae2c090c3f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40049c2-003f-453d-a4b1-06616eb4d07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5c8c36-365a-4f76-9db4-beacbc9cd000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9b3629-348c-4249-8cd9-128527921587",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c65bbe-2f41-48a6-84ab-deae474a1eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c949b5-787b-461a-acef-213210c1eb81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e2abe3-b503-4480-a3ac-e362909ffa1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87039d77-2563-4b1d-8e2d-54cc14c1a510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a09508-fd59-4e30-85c0-1f9347e6d6c7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8d6d60-8534-425f-aa7f-027cf4686a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a43536-6459-4e3d-9b38-a2cd1d43edf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe6a271-9efa-406b-903f-147666234a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf131081-84ee-4051-b1e6-da31579c2ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb269462-e94c-4491-8ef5-3916d76a441b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89120bc-abd4-4d43-80d0-03c482df4b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876681a7-0d24-4c05-82fb-02e8a7e010ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7955318c-53fa-4317-a633-a1134ddb503f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3ad7b4-a310-4e7a-a7f4-c5c029d0848a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1d0057-cccc-4ee3-a977-157877efc9d7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9965e9-7bee-43e8-8411-1fdb3eb1e782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2568aa27-dbfc-4aeb-b907-47c2162a5a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5ce3c6-37e2-49cb-a245-5fb262444406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920d7b68-1db3-4828-b876-8af2d9a3306f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5c7068-bf15-4490-bbaf-f5a433aa3297",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74aeef9-aad8-4155-81cd-c457f401183c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbb1e10-cdc8-438c-a481-30a1a05b5bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bc7f21-2b6c-40ae-af79-705d1c64145f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9691d636-42cf-4fb2-b313-502bfc4002df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e94b9d2-64c3-4565-82c4-0d81868e1b22",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6648408a-d2d8-4c25-b2d8-4adfc7cba113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f143113b-83c3-416b-ad0f-f5f14e3e63e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448ff06a-39df-4ac0-ae5e-5284bbeb5672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb66e3da-721b-45e1-a9a1-a29b86bd5108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab144038-55c5-40fb-be08-5c4c77269754",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd9f1c4-b728-4621-92db-8e2f07f8b5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18042b8e-74ef-4d7e-919c-7b104dcd9815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df083f3-1053-4dc9-b478-13f06ffe3cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64803cfe-11be-4bed-8061-c53d5beacbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61cde48-65f7-42f7-89d8-53c734dfe965",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e2826e-6b35-4bac-bd60-ad88ff27f6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f810f1de-6d19-4c6f-bf76-19cedca2fb12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1fd9ed-0d42-4daf-bcdb-73a6360c84aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7db9041-64b5-4308-a2da-19ff434bb501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487d4963-8f7d-4378-9efb-d2fe8995a992",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4a45e6-e85f-4ab2-84aa-eeed32aa469f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251300a9-7c8f-411a-aadd-a24fe17d74e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea03f18-1c07-49c2-8b5b-d21c3df2d930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e878d9a-92e8-448a-b08a-6bb327cb3833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ad8590-984d-4c34-b1b8-54cd7c26735e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42765f83-2abf-4e05-872b-976f875f151d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0984c104-492b-446b-bdf9-34fdc3eafbe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac49166-2288-4ee0-b4a1-6595adb1c6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34e53d3-2906-4faa-8f13-af5a4a222fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f2ff62-4ca7-4e3a-9a4e-1beea964cc26",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba34cec9-f3cf-4267-8381-069f31fb0a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd6e2cb-a680-4ac1-8230-b6ea160ffded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22fa6d3-7b2d-4d45-84fb-0c6a922cae28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee5763b-1e72-4483-b497-c144c311f680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6181ab1d-93e3-4053-8375-a65473e82fb5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67556d99-22d3-4474-85a6-021e3f6178a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6495298-947c-4141-81fb-2ed8514cf541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ddd886-e6d6-4956-af7d-1ae55802249f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aefd6d55-d745-4de2-af94-90b2df84a8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7755b5-9571-42a0-8cdc-0c6dacc49f10",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26284eb1-fe0b-4f08-9168-ded42302a292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f1d92d-bbbd-4754-900b-de26112fbaa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834a7df7-ca64-4d4b-af39-dbcc8400e729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf166c1-38f8-460a-beb1-60b1a9b76e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbcd0ab-32bd-4a61-a4ff-590637165658",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2fac3e-49a4-455e-80a8-a25081bb2619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540159e7-12ae-46e7-b9fe-d27dee93bf2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0c7ec4-0d5d-44c9-aa0c-5c4748962a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34222205-0092-416e-be50-8a6cafa37b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a82b631-a9a9-4029-b45a-6ed6d6104276",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bdae2b-a2ae-49ed-af26-53325dc15633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cebf91b-dc2d-4199-894b-8fcd8848182f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb57699c-65b6-4521-88f1-7701937fa19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd57a49-e410-4960-8031-0a94a7466102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2584b011-908e-47b4-a1ad-65567fd46c33",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d5621a-7ca7-4f03-94db-2cd3f051c340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4359ff-fef5-491e-a4b9-46de01a03d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df420aec-7475-479b-be68-38300a488a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb92a59-ffaf-409c-bd30-f410bcc5f47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12dd05e-c797-482f-9fce-181b774d2310",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2a0671-69b9-4be3-bd50-32eb2e7e7355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e68b39-a438-4584-80c6-3aacdaff0383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba0eaa4-c3e6-478a-8f6d-2bb432c55926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5016304-6b61-4bfd-bcac-aff15df5a352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938f6aca-a034-4943-af2a-44d93be6f3fa",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77369849-0376-4408-9ba3-f54d8b54cc10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20bd006-3d6c-4812-acdd-0f365ee5e92b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508ff8fb-f294-4d55-a67f-254797072cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af664c0-7c0f-44ed-9409-6267bf0141a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a1a276-8a91-4aa0-b0e4-605e11e5631f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e551ce-d872-47e4-8b5d-34058536a35a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c613c1c0-2191-4874-aef7-2356e7af82b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1d0e2d-86c4-4837-927f-8557cea826f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c8f176-ec22-4c7e-aacd-35f8a152fc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99b803d-1ee0-41bc-907b-66480f849bae",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1798f5dc-64c5-4421-a81d-ff7b80af4eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f7a214-d1ed-4309-9a2f-3fec325cb5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5dc827-5c8a-449c-94b6-173b2371cb59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9dbcee-6819-41e5-ba24-a01ed26e44bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bcdabf-ce5e-4d18-b16e-8126fd07e5b4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a2a65e-cc5b-4be6-a310-bcda9ac3bda9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c016da4-832e-4da3-93aa-26e37b187338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a74dee7-31e9-4caa-8a21-0eb878e73dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce95de33-1629-49a3-b6af-9e0ce8ee8f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b0a6c5-45ff-42f1-9f98-65138688a7f8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1838c1a-5b6e-414e-8ec8-da8cdbce3ba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceebd407-8ba3-4579-b27a-cc06ce280a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d19f478-6fa5-41ca-a66a-e6fe5e468391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcbcea5-fb6c-45f6-aac9-03c1adfbde2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88975d7a-ef0f-4ff8-9280-33f35e94f6b2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e3de7d-a55c-48e7-acb2-de4a5dd01083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "060cdc90-c8dd-4f9c-95e6-69bdc5311830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295584b4-ae4e-43f1-86d0-fa88eddc3084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c6a35e-ca86-43fc-b93a-cf95ffe80b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab81dc68-d053-4cf4-b51c-c3bf9aa5c91c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d29d1a-a3ab-4b54-9a73-ea9ed6a36529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a7c950e-df90-42c7-b842-1442bda6ad9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5cd6db9-9e12-4583-abdd-5ae0add20f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019fdf5e-7dab-4b5c-a486-6824256fb346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc7864d-ebd5-4c3f-8ecf-f19ff56e6196",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6681e84f-2c27-445b-9c7b-dd1495eccc63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e3fb726-ca3e-4cac-84e0-bcc661dc125c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce4586f-d2a4-4573-80d0-534af9c6f5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6efd68-daa9-4604-9d0c-cb311452a9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099558f4-f352-4509-b859-2d2cf512d3f2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964bd15c-8305-47b8-aa1b-29f0b5b89792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deb0b608-bbd0-448f-bf16-2c29e93bc4b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8b6c40-2177-4173-8487-3453a9ff6cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a06aa7-06fa-4f5e-b420-6d323ab7659a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da83346-3800-42e1-b16c-e40d4217d2b5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62f21a1-5cbd-4e46-abca-2a936ec4c371",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ffb95b5-915d-4bdd-a9e0-59ba6ca569a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b63fb1-1bfe-47b1-bc47-ff22a149f22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3dd42b-42a7-460e-84ed-475bd2e09d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3c97d9-89e6-4162-9fd4-c1946a747722",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7642bf-8521-4229-8c41-6945ce549ac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f213e60-b875-4f45-8bae-72cc16263746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28476220-5e6a-4875-b940-8b8e4014c7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1035f3c0-1852-4fac-ba76-28650cd45831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e1f392-75d3-45a6-a165-25500a576212",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554a6db9-e7e8-4763-9d73-b35cd1054120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9314d5a-8d9d-46fb-8bc7-fabb0af3ddfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef08afc-580d-4d19-8c9e-d89a663661e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c76a83-5744-4968-a172-a6b2a5cb70eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fad9613-e22a-43b2-93da-92e97b3bc4a0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eda83f4-875a-4e9f-befa-21c95fc98938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39b86a26-c090-48c3-b1bc-77cb86c477dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635fe12c-b1a1-4ed6-854d-bb5eea411ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292cc99c-44af-49a2-8544-e7ababb5300b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6c6b36-e835-4721-be18-d1b7cb46e87b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19be6f27-8bbb-4312-8a45-5f46ebd4e045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e63d1751-401d-467e-8d29-7c0ac2e82d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15187f0c-4743-4a46-9fb2-a9c7085f752d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5c2458-52e2-4098-87b9-2ff6a7a6a0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022a123c-8a8c-4cf6-85c1-799529f22f3e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da41d3b-8980-435f-b372-a25177ecfc40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6297aa71-6b82-408c-b56f-c2fcf76b56fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "826b6e32-6cfe-40ed-9710-9d05a2f47f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242d0831-f745-4da7-b637-e6d61493f429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704e08c9-e0e7-43db-a971-9a84f76c5fc2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156a4456-e154-4647-845b-fc88f646b2c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cc8e268-0d14-4692-97ed-373db0193db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6878a11-9c9d-4fd0-8e9f-87eb007c7e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac5bd3a-b9b9-4173-a1d5-21d18ccdd21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d98f735-3165-42ae-945d-8739aafec5e1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965cb25d-945d-4221-890f-1f691db025c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da40e559-1fb2-420c-8bad-88dfc3e84fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d24f82-6010-4853-8b14-1eadf5be64d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63791de5-468b-4f81-90fd-e0b01993fdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ba7493-6c62-4120-8494-473a4bb6f895",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4c14df-438b-4d97-ae2e-4ab7d9b3c134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5f28158-d017-44c5-a736-ff2236abe1f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c327eb36-7d00-4c0d-8129-e98c582efc0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344fbda0-235a-498a-be04-bb32b155f19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24789906-045b-4f0c-a8bf-db87aeaba665",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0459c853-7aaa-45e9-b769-8e93a5a9c519",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16a39e67-a5df-4bc1-9be9-03388967172f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cb8984-9d92-4aab-9c1c-67123828659c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41262b2-fc0d-445c-9581-145a0a102fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129ef378-be86-445d-844e-f1c2ff78d6ca",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f3d12a-a536-4f9a-8467-7cc260b62103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0288c993-fbd0-43c9-9a53-f234d4f21a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69089d8f-028f-4051-9658-1d6df389e442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3433f0d6-a4ca-4538-b76a-cb9965586c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2858da-a986-46e2-9dfa-f21832528329",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3329201f-00ad-4503-b16b-fa4ce060f9cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64b8ccf3-e4cc-403a-ad9c-c5569707ebb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63210d6d-47da-4101-af08-5f11a7cd7d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccde58a0-5915-492e-bd8b-c6a1e0394d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78cb522-cba8-4928-9682-a1bcad128b3d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844a2862-c35d-46f4-aef6-c5ba0e3052cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a2569f6-7c12-4841-9f47-0c4ee9f2597a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f7864c-ed06-4696-8db7-2f25fd67e02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d321db9-07f4-4a11-80bb-1fa2f40d25c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca4a7e7-955f-4585-835d-8ac7731b9060",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03999bf-9b1e-4ed0-98fe-b4f2d7b17822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdf32194-be3e-4558-939a-033ff1cb878a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b072fe-3af2-454b-9722-0406b49849e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab0c798-24fb-40cb-b4af-abffcb390dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cbc7a6-b1fc-4aa9-9079-3cfce82506ca",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0b4fb0-e212-4d9a-920f-653892a7f70d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58850ec0-171f-4e43-b0cc-585577e17334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23309cfc-f514-4f68-94a1-01b86552b880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a37063d-b72d-4cb3-be3f-fed24a2728e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a88907-e3d9-4b62-a4d5-36deead98569",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca6b66e-6a6b-45e8-8ead-9e3518f07eca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e1b8ec2-77ee-403f-a16c-0b6424615b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7559234b-1f06-4731-997a-1884b76524cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046794ac-a93e-4857-b7b2-1b658f9e35e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e72428-917d-4ff9-a56c-9eebb6ed4aa5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3940d2b5-09b9-4302-abb3-6be014d143f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5641f500-f2b2-4fbd-9bc3-e6fbc0d99f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b4fcaa-d2d1-46de-830d-d0a3e1fe0920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68cc47ba-79d3-45f8-b908-d19b491897bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b34758-a0a3-4b0e-b5fd-af99577a98de",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c66f1e-6f8b-43ac-a3c0-1720cfe822fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1029faa-8d9c-4ba7-b0b1-a325885e8233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7998fd1-e050-4524-b36b-0d3eb19f8d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bfbcd9-dfd5-4185-8d77-b3d66b6a97da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b180acb-ffe7-4109-961a-2b4dca05877e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e4904b-9ac4-42ba-b6e1-de2f8faf6cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cc9e64f-f9b8-4ddb-8945-69390d68d3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9428d45-870c-4b03-9d3e-43cd00b79790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce48b5a-115b-4fbe-a9ef-978dae1ea10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a301715-8fb0-44e5-90ea-b70b0fded20b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3748b7-31f1-4f85-9746-e81bbe79a32b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "604b2cd0-5d30-4cf4-8163-85beeeefc6ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e0950e-430a-4326-b444-be603061e2f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7314c8af-aa59-4578-a6bb-8297d0d18e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcbaff5-5962-46ee-90a0-264037350436",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab0e6fa-6785-42f9-bad3-951ffd2340c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "031a401b-7729-43ca-992c-6eb06f0885a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cfc800-8293-43cc-9e3b-ce345ebd81fc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c83959b-56aa-4f71-9ce5-721408ff3fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a54f861-eb11-4d5b-bad3-97030e2717e2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2223098-2864-4ad3-94fb-4376758e0746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5fadea5-de83-4058-bdaf-e7c52e3f26f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "348f28c4-b283-48b2-9989-e03071c251e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce30772b-c40b-429d-a2cb-3cf45479199b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6108c0-940e-4158-bbec-5921fe567435",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0724bc39-ee7b-4d89-8f8e-0e0d0705a7cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df0e414e-9f22-40e9-b2ba-8ea208bf1dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c31d99-8c40-4245-913b-00f95cee0b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794c4078-ee34-4940-b4d7-16b2af0958d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cc9b14-3519-44d5-aeec-50c82176daad",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f0e847-10cd-4e78-a688-129c03c3f97f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34de715d-034a-4114-bb98-22c5f0b088c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cdd02a-4316-4e89-a884-3f3e4c7617b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472d7d91-f11c-4d57-9b16-fff91e756553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e08952-eed1-4389-81a5-ae925733944a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce11df1-5a5f-486f-9681-4a7c7af69f75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f1ed1bc-6441-4a5a-8d8d-6261350ac1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4985f74f-d919-4fde-aab9-218a7b2753e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709974bd-d314-441e-b0de-e63b7689e91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39eedac6-b31f-4e21-8d99-4cd33ce77f64",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16df686-ad36-4f21-ada6-e073aa195567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd1881fc-48b6-4535-b42c-0d6fb8af851b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41896b49-96cd-442b-8a77-3938a5a2a4ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395a8e1e-2057-4e64-b7c2-6122eaf476d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8829b2-215b-49de-81eb-34f92aa447a0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80be5f5-4e0f-42f4-adb9-aa1025d32cf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a37faa44-e3bb-4d4f-a0f8-31dc992598f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5501031c-4d24-4674-8a85-5a09398e21d1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2f0af9-3714-4f60-9915-a4b09f7d0913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8741fdec-b3d0-4757-94b1-88f36776f80c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd301557-3996-48c6-96d4-8e7b87388e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "725d1067-ea9c-4e91-b511-6ab7c6fdfb30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc46e02-8c3a-43bc-9be2-4b5aec5412df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab3c591-46dc-4828-bd8a-3f5693171256"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82db39b3-f0e2-44f6-b607-58db62e874c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0e332e4-6a1b-4eaf-9fbe-ccdb9ef1ae88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bba22c98-c00b-4e25-adfc-e5d0ae5f9723",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63fcd3e0-d90c-4157-9144-253d8b63ba98"
                    }
                  }
                ]
              },
              {
                "id": "4bdaa220-ce62-44b9-b0a3-f419b80fcd2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aac23643-b0bb-4894-a0ad-696b2fb18cbf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbbdf69-721a-40f7-ba47-5032014d8d20",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e894eda1-e2bd-4abc-aa11-5fa381668836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad614af-3c14-4ce4-86e8-d689a61f3a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "908ea64f-5ccc-4f2c-98f7-eae0e3ca20ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9924852d-d481-4c8c-88ec-1cc6215d0da5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5a70597-d304-4cda-a59e-d9b2c4f380e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c900d47-9189-4bcb-a322-73ea82ea0fc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7c97127-cd1b-4d47-a570-07ab8a952480"
                    }
                  }
                ]
              },
              {
                "id": "9063ecb7-83de-4c6b-8d70-3236d98d9aa6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0b0c1119-24c2-4db1-bedf-433a7837efa7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361e5db1-9ada-4ce2-9c5b-670b2967a27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4aa388ff-c952-483f-8ac0-f1c47a1c97e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc4b07a-ccd5-468c-a5b3-e823db87dd47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0532e2-d147-40c5-a4ef-f5387c142d95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ace19d41-c8a4-4933-9d60-60d09f7b7c82",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd4f729f-1993-4534-87bc-74ce88fb1c3f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a67a4b77-1e66-488e-8d09-4157276bee40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e837a4f0-0428-461f-9c27-c25d0f223bd8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e620f75-a25b-4bc4-8858-af59710d645f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e53c38d-630b-4173-aee4-76acfc88ff0d"
                    }
                  }
                ]
              },
              {
                "id": "c847a180-f7c7-48a1-ad9a-d65971422d2d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87cb6983-a24f-4313-b3d8-ef7ced1d734d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "253e19a9-e534-4ffc-853f-73bae57ce503"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c31c339b-2092-4138-a010-a22e54faa76b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e458b88f-34ca-4600-9bcc-0e8946ae881b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44f31133-3d23-41ad-8b62-8a0aafefcf5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "36c9ba9a-0574-4c05-ab26-9c025b0900ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76eda996-72ad-47ab-8a88-09f51f5d04ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f16f075-822d-4f08-a850-3ac82ff4ba4a"
            }
          }
        ]
      },
      {
        "id": "ebc1c25d-a973-4690-b299-e05fd3e29088",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "680ccf10-4949-486f-80ae-1a6d490c3a0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2286c81-b170-48cb-aa6a-5f1902db1e5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05e89091-4654-41e4-8a27-2586560a8141",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f668de-e371-46f3-b7ce-fe533724351d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e4c58779-26bb-4a59-9839-2f267278882f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7af20b-1fe7-4390-ae22-85171ec5cb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05897a63-052f-4365-b241-cefd978b0df5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e09a0a9d-1155-4d7f-87e8-324cb4d96f3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd230cb5-37b9-4630-8b4d-ddec456b646a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9277cbb4-fb14-45df-a82a-e3f51fef4251",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb99a3fc-1a4b-4ce6-b6d1-c8de0a59eeea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "efb9e1c3-751f-42f0-8b9e-afba7d85898d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8af71177-41cf-4ec3-8725-1f1067d6f0eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "924c7835-ce0f-4bdb-928f-dc192d6c0785",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2590b69-4e2c-4bbe-a766-af87d8a4f287"
            }
          }
        ]
      },
      {
        "id": "d54bacf1-3fbc-42bf-b1ad-bacb10f09408",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6529d6f8-ccdd-46b2-881c-c96b90f09bd1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74c2168a-b5e2-43ce-a27e-fe6994afa5c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "145bdc05-d72a-40a8-bda3-10732e544e50",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541d4cd8-88b9-4b9a-924b-2ac80449d77e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d0fe129-0c84-4499-9105-394015a9c06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d146f2-e8bb-4842-ad4d-a40a75fe0ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67025ad6-277c-47d0-aee1-a72b09d37994"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e522214a-54d8-4450-8b27-5c4d4b5d10a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35e8c86f-cc38-4737-bb9f-e008c550eca0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c24efe45-efd5-4096-ad4b-3e1101fc44f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e5601bd-18ed-430a-bdf8-a7239cf6dd72"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ffacb37-e46f-4908-98a4-6770feaaf273",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "65b8bc6a-f469-4346-a949-e3c2aaa370ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be30e8d6-5f0a-4b62-88ae-673acc1a3b27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4fc940a-4adb-4aa1-9f00-8a1a082d7a31"
            }
          }
        ]
      },
      {
        "id": "a2b901dd-ed0d-4bb5-8122-86d101e50846",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "62cbb2a2-ed99-4364-865a-c1bff9534f74",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d9994e9-1976-44dc-bf8f-01045a4021a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5119dd55-6559-4e95-9533-038b6a8172e9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bc74da-1e63-41df-b7c6-bf6aca6bfa8d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31c2532c-d5c1-4d6e-b757-6bff7244e119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05407905-983f-4875-bf34-b56b64efc2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e223387-90c0-4f1a-a2cc-4df14027f15c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8c6642c-daf7-4e39-8ff9-61c542bfd8a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "846f8719-0dc2-4b1f-9275-19fe11708123"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5329f171-c149-4f9c-bf33-b8dddf8e1853",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be27c3ef-1675-4d36-ab51-3246648cdbd3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16b129f9-415d-4f42-9134-e6ec2f1e22da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d09d22aa-a4e3-4d11-a268-aa5d27d15d5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "745d457e-b092-47b1-ba9c-42583c66e1f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23b2b5de-51da-473c-8f30-a8459be3b20c"
            }
          }
        ]
      },
      {
        "id": "cf5067b7-0db4-48d6-b3b2-fedfb56fdb31",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1e085d9-2cb9-42e5-a9e8-cc64bc2a4d76",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8731f5e-1dfc-480c-b0c3-417252901be1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "be6053c6-6bea-46f4-9d1e-f82f87a8cc1e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d59d1888-1b9a-4466-a798-2766996aa2ee",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "001c8c8f-5152-4407-a19d-6e48cc88e581",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.294736842105253,
      "responseMin": 2,
      "responseMax": 339,
      "responseSd": 23.39149958854546,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710031016462,
      "completed": 1710031027517
    },
    "executions": [
      {
        "id": "08db86c8-4351-46ff-82ae-826209f41e00",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a201198b-318b-4b68-ade1-3d4714468adb",
          "httpRequestId": "6ffb85a7-099d-4f9f-9fb4-f865d9ca32f9"
        },
        "item": {
          "id": "08db86c8-4351-46ff-82ae-826209f41e00",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e6769339-def5-4b43-bd5a-8c9e33446f70",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "4b492ff9-81fa-48e0-8fbd-d12b8db8cb89",
        "cursor": {
          "ref": "6f628cc6-b452-4ea1-bcb2-806a62264df1",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "657d4f63-5bc2-4b44-907d-8c973fa4f35a"
        },
        "item": {
          "id": "4b492ff9-81fa-48e0-8fbd-d12b8db8cb89",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a4ca15a4-0b33-43ce-8387-39f901800133",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "c7bfe965-52e8-4132-b564-0b33e2f898b6",
        "cursor": {
          "ref": "9e23ea34-4fd5-4e09-b8dd-d13fd0ecdcd4",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8d7e2010-9ca6-495b-b434-b8f766929c0e"
        },
        "item": {
          "id": "c7bfe965-52e8-4132-b564-0b33e2f898b6",
          "name": "did_json"
        },
        "response": {
          "id": "bb00f07f-d3b5-4b8b-98a6-6dfaeda61ce1",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68b972c-5237-4f85-8cf1-1267f61aa3cf",
        "cursor": {
          "ref": "99c11dc4-f4e3-4462-b720-6ab083549b8f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0dc9f735-a93c-4d9a-8658-b91e88e61267"
        },
        "item": {
          "id": "e68b972c-5237-4f85-8cf1-1267f61aa3cf",
          "name": "did:invalid"
        },
        "response": {
          "id": "07a440da-6378-42f6-8683-03fbb4c2e5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68b972c-5237-4f85-8cf1-1267f61aa3cf",
        "cursor": {
          "ref": "99c11dc4-f4e3-4462-b720-6ab083549b8f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0dc9f735-a93c-4d9a-8658-b91e88e61267"
        },
        "item": {
          "id": "e68b972c-5237-4f85-8cf1-1267f61aa3cf",
          "name": "did:invalid"
        },
        "response": {
          "id": "07a440da-6378-42f6-8683-03fbb4c2e5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ebd121-79fb-4a96-b935-6e61de17b0cf",
        "cursor": {
          "ref": "e13feec0-c1e7-4aa1-8115-5cf2a62c9bd6",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4fbb4303-4903-4ba3-970a-48e05a4833f1"
        },
        "item": {
          "id": "60ebd121-79fb-4a96-b935-6e61de17b0cf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6f5fd500-fa65-4ed0-aa76-daab2587f6bb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 85,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748ef92f-0822-4560-87b4-df80bc978550",
        "cursor": {
          "ref": "1cb11b8c-ef23-4edb-8a2e-3bba5fafd8d2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "22e63141-f08e-472a-8702-355236536c61"
        },
        "item": {
          "id": "748ef92f-0822-4560-87b4-df80bc978550",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c14182da-90ce-4b8d-8a10-ff9690a9a185",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ff2653-53c5-48aa-b347-fa4714928268",
        "cursor": {
          "ref": "4a3c3696-28cc-4d7c-9b05-bb3ddd7dbaa4",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c422527e-65eb-44e0-bdd1-f87dd0d92101"
        },
        "item": {
          "id": "97ff2653-53c5-48aa-b347-fa4714928268",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ca2cc9f3-085d-452e-afd2-f9228052436e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e51b50a-f899-4791-bea8-6b69776cb279",
        "cursor": {
          "ref": "2c9c1479-9aac-4b00-b14e-66cd14898fc8",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "22e06a84-f94e-4a97-aa22-2c714d98d1d9"
        },
        "item": {
          "id": "6e51b50a-f899-4791-bea8-6b69776cb279",
          "name": "identifiers"
        },
        "response": {
          "id": "7df45c5b-820d-4bd3-9cc3-7f88edbf445d",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c8bbf0-23e9-484d-a629-c6265373e7ad",
        "cursor": {
          "ref": "736c717b-ef3a-46f1-a0d5-7dae7c744c11",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dd803859-973b-41fc-8df3-a3e5439fde18"
        },
        "item": {
          "id": "d8c8bbf0-23e9-484d-a629-c6265373e7ad",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "244ef55f-a7e2-45ff-bf78-b3f491bbada7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3288ba35-8971-4f22-bf19-c4e72d931f16",
        "cursor": {
          "ref": "fe5c2f7f-ea15-4baa-ae78-bbc5944bb8f7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "03691717-b98d-46a2-a4d3-fa72e4591ff9"
        },
        "item": {
          "id": "3288ba35-8971-4f22-bf19-c4e72d931f16",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4ddcb7e7-3bde-4edc-b1e3-fa312c2aaf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1144fbce-7d5a-4222-92db-c4164b25b73e",
        "cursor": {
          "ref": "c4c16e3b-3ac4-4378-ab0b-0ffd15c6d51c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b3cfdc86-f2d5-4a59-8f67-92195d85792b"
        },
        "item": {
          "id": "1144fbce-7d5a-4222-92db-c4164b25b73e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3fdb266e-a1d3-46ee-aff6-ebfd1877b155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b14797-80bf-458b-a64c-15180bf9c427",
        "cursor": {
          "ref": "47eaf26e-9ca8-446f-a81d-dae4d5f8e3b7",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f250d10d-3384-46f8-80d2-96bffb1a633f"
        },
        "item": {
          "id": "f2b14797-80bf-458b-a64c-15180bf9c427",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a395574f-c234-401e-98cc-1424c3454229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f928832-3f67-4c35-92f2-c5fde50d99fd",
        "cursor": {
          "ref": "7cf2d580-1337-468e-97c6-9291deb9235b",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "48f55b07-6b12-4059-a91a-0111ef150ebb"
        },
        "item": {
          "id": "5f928832-3f67-4c35-92f2-c5fde50d99fd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3e49a78a-1c8b-461c-b06b-086a2c8e81cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb0aa18-1e4a-4dea-b85c-a49ee8c612bc",
        "cursor": {
          "ref": "5882755e-cb4c-496e-8304-5c3c6e6abf12",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "64a790e7-fb4f-4566-84a3-77086f029f0b"
        },
        "item": {
          "id": "aeb0aa18-1e4a-4dea-b85c-a49ee8c612bc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "51e8a916-fc4f-4043-bc37-46f563511fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b18384-98ba-4607-953b-f3a29878e4c0",
        "cursor": {
          "ref": "d989e539-9576-4588-886e-4436a01bc74b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c2104431-9eb2-4a06-8433-c4380639999c"
        },
        "item": {
          "id": "f3b18384-98ba-4607-953b-f3a29878e4c0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "65833bd6-102e-403b-b256-947892e73235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3362b88d-cef5-4b2f-a96f-1fb44b8bab94",
        "cursor": {
          "ref": "fb11bc0b-d281-4db8-a561-5ec3a98d7422",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6984799e-846b-4c46-b87e-5e78ede6442e"
        },
        "item": {
          "id": "3362b88d-cef5-4b2f-a96f-1fb44b8bab94",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a1b67fc7-0437-4d98-8c23-8a089c83063c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0983c61d-5130-4a08-958f-c99b07c50218",
        "cursor": {
          "ref": "5056b41c-d56d-400c-86c9-625fe383e047",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2911be1a-ad53-4517-bc5e-2cd35f114107"
        },
        "item": {
          "id": "0983c61d-5130-4a08-958f-c99b07c50218",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3c354484-4538-4067-a290-cdf375f01427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8bb92d-2c31-4256-85fd-bd7379141af0",
        "cursor": {
          "ref": "198e4de8-180c-475d-a08c-c67130ceeff2",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ab5c65bc-a2e6-44ec-9562-69baa0dce950"
        },
        "item": {
          "id": "1f8bb92d-2c31-4256-85fd-bd7379141af0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d7715d31-b46c-4030-a8a0-12ae96c7bf3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86870067-6db3-4e6f-8f4c-fe969b628ed4",
        "cursor": {
          "ref": "3cb9e4d4-bb39-40ee-9ff2-0abd6a825a37",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a1e59411-23f8-4eb9-af9b-ff30859c3a85"
        },
        "item": {
          "id": "86870067-6db3-4e6f-8f4c-fe969b628ed4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "14fafce7-560a-461e-917f-19a1a0ffb3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29b612b-4441-45e5-a5f5-a46373146b10",
        "cursor": {
          "ref": "84a54281-7c50-4e50-8ce1-4f1148a84454",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7e8a38dc-5f52-4426-9f74-85fb5c381190"
        },
        "item": {
          "id": "e29b612b-4441-45e5-a5f5-a46373146b10",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "be3e4dbc-1a2b-42ec-8229-e8a3e1c801b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf27a402-209c-4bab-807f-733813a832ad",
        "cursor": {
          "ref": "1380f17f-3209-4c97-aaa0-9a39af79d251",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "adf04544-ad5c-474c-9b4b-55bd11e47ca5"
        },
        "item": {
          "id": "bf27a402-209c-4bab-807f-733813a832ad",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dbd19867-d85c-4570-b471-5d7925398e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2741fa8e-375e-4ee8-96a2-453bc1453c29",
        "cursor": {
          "ref": "5f384d63-d0d9-4f1b-a13a-e0a475fa9d3d",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e1725d39-86c5-4239-a214-b47e23004e81"
        },
        "item": {
          "id": "2741fa8e-375e-4ee8-96a2-453bc1453c29",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9cb09441-2052-4c09-adb5-f39fb80d91b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98acce44-fcb4-44f7-9343-4e4a0de16143",
        "cursor": {
          "ref": "3d6136e3-2ec3-4665-aa3c-0540307301e8",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fee62dfc-10fd-4c5f-9542-cf472eae0038"
        },
        "item": {
          "id": "98acce44-fcb4-44f7-9343-4e4a0de16143",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6ac5460f-d447-4d0c-b036-4ef360b059f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbc1cd6-f3bc-45d2-9b91-66c5ed3f7b1e",
        "cursor": {
          "ref": "8deb05a7-ebdf-4405-a9d6-790a33017820",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7ace7fc9-9bb3-4a04-a0b2-f24f7f59f186"
        },
        "item": {
          "id": "dfbc1cd6-f3bc-45d2-9b91-66c5ed3f7b1e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "80fcb237-6fe1-48e8-a39f-4e85848abab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f54901-adbf-4dc1-a6df-7cc250218f5e",
        "cursor": {
          "ref": "b199c629-a46c-4794-a132-20bc3d493ee1",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7184d7b9-c63f-4c50-b17f-f04473d9fc61"
        },
        "item": {
          "id": "04f54901-adbf-4dc1-a6df-7cc250218f5e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7b3281de-6f03-40d2-aad3-7252673ef9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac11325-240f-401c-9010-53564bda810b",
        "cursor": {
          "ref": "53f2c081-4ed0-49c6-b1f0-6b3eb596c845",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6d229df2-9542-4924-9231-853774f7e4d4"
        },
        "item": {
          "id": "6ac11325-240f-401c-9010-53564bda810b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bdf4624d-e20c-4410-a1c7-d4fa718641de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82101da-a57d-41b2-9253-15690d8d63b6",
        "cursor": {
          "ref": "5a74bb6d-1d9a-4993-80c4-850dfa4fcf72",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8b1c16a5-66ff-4ed4-a010-871e3616908f"
        },
        "item": {
          "id": "b82101da-a57d-41b2-9253-15690d8d63b6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2dc66c98-11b8-4288-9fd5-c07c181dfba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555bc2b0-8e7a-48cc-ba90-cc035f20cfeb",
        "cursor": {
          "ref": "a6ef09e8-f70d-45f3-a95a-9c7e7f4fd6f3",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "66c87e21-f8ea-4dd2-9f1c-d2f0aed2a323"
        },
        "item": {
          "id": "555bc2b0-8e7a-48cc-ba90-cc035f20cfeb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ca9e95ca-bcb6-4d0a-be5a-441e36e24959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d040a4-2589-4f58-963d-6c605a76fcbd",
        "cursor": {
          "ref": "dbb94559-8db7-4fff-af77-7ab5403fae7c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "efcb9ea8-3b0b-4c30-a834-cb89c0dbe830"
        },
        "item": {
          "id": "39d040a4-2589-4f58-963d-6c605a76fcbd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8946aab2-54a8-4565-b01d-68066899f74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8777196-f80b-4840-aee2-144fb6f3121a",
        "cursor": {
          "ref": "295e88f9-9dad-4814-9a81-43951d10d438",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9dd474de-2067-4ea9-b492-0b96c50c6ede"
        },
        "item": {
          "id": "a8777196-f80b-4840-aee2-144fb6f3121a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7c10c9ec-424d-455b-895e-edaaf6f43b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec38bc05-67dc-4186-ac22-8dcdbfc415c9",
        "cursor": {
          "ref": "35580f6a-dd5b-4b4d-bd62-a6db17f31086",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "62f5676e-c6e4-47b0-8c31-45930b404bf1"
        },
        "item": {
          "id": "ec38bc05-67dc-4186-ac22-8dcdbfc415c9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0596f1e5-71ce-4e49-b69d-9873539531a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99a7de0-4014-4660-8498-716aadebc549",
        "cursor": {
          "ref": "18e3b67e-b173-47c1-9dba-285b7e1db860",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1f103192-0098-42b4-aa1e-e95da9f2a9f8"
        },
        "item": {
          "id": "f99a7de0-4014-4660-8498-716aadebc549",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "93e8b8ff-8f0e-4dfe-99ee-70ae2e673e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9586011f-8f6f-4bd2-bb8f-a855f07db223",
        "cursor": {
          "ref": "5c732792-0bc2-4711-b47f-730e852065ac",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9d792c06-ae86-4c60-b208-386f2973c19d"
        },
        "item": {
          "id": "9586011f-8f6f-4bd2-bb8f-a855f07db223",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "50acdd1a-8477-462f-a183-8de9cf01e76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab40335-3966-4eb6-b59e-7f712d0389b6",
        "cursor": {
          "ref": "7d92d7e1-27fc-4e40-b337-22a70acbe58e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6ca9f88d-d4d3-48dd-a4d8-728bac2a2ef5"
        },
        "item": {
          "id": "7ab40335-3966-4eb6-b59e-7f712d0389b6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e0e3b8ee-a397-4203-a197-d334f6b9243c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0104984-ba14-480e-876e-a1d799340690",
        "cursor": {
          "ref": "5e1d0a9a-dbdb-4828-8ad1-116f88bd67e5",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "aa07511f-64cf-455e-9231-165fe8d619d6"
        },
        "item": {
          "id": "f0104984-ba14-480e-876e-a1d799340690",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "677cdcad-a40a-4b1a-8537-df2f1158d6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00cd996-c3cf-4acd-a3e1-174ca7f397ff",
        "cursor": {
          "ref": "935dbabb-28c4-442d-9772-3fd127e5226f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7962dbd9-e7eb-42fa-acb1-5711a290fa79"
        },
        "item": {
          "id": "d00cd996-c3cf-4acd-a3e1-174ca7f397ff",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "17a399d6-5326-413d-a836-f84cd39870b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f4a1a9-5df4-4407-babf-4c9985a96d46",
        "cursor": {
          "ref": "d4946928-d59b-479e-a130-6831cc3fee6e",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "be3cad25-f31e-4fa6-9277-0d8254464881"
        },
        "item": {
          "id": "b3f4a1a9-5df4-4407-babf-4c9985a96d46",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "baec31fb-1bdd-41a5-95af-37861b5f8f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0a0e5b-3653-4534-b05a-dc521ead6ac5",
        "cursor": {
          "ref": "7fe2f98f-4544-4bb3-b7aa-60390f12345a",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1bba3ca8-27d5-47d9-8c60-0aa4476cb713"
        },
        "item": {
          "id": "ce0a0e5b-3653-4534-b05a-dc521ead6ac5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "51657898-fce2-4ad8-9652-2ca1491d5d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4dd9a7-9bfb-491f-8199-c077aad49e79",
        "cursor": {
          "ref": "386d7ad4-2703-45d1-8e38-15ab7c1a4a15",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5f7e7122-2258-44cf-a493-be4db2bcfb29"
        },
        "item": {
          "id": "dd4dd9a7-9bfb-491f-8199-c077aad49e79",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "efa08ac7-b5bb-49db-bd95-67e33672adf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9488eec3-ef2b-40f3-b035-5a969c4ce4e4",
        "cursor": {
          "ref": "5b236230-9577-47ae-9902-2d1797eaf741",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "964fc6ce-68ed-44a2-a11b-a07d02920b49"
        },
        "item": {
          "id": "9488eec3-ef2b-40f3-b035-5a969c4ce4e4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c7c25ba2-bccd-4adf-a22b-f9f43da56fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc430a8b-eced-4b2b-9bda-2b7dcc8a539e",
        "cursor": {
          "ref": "369314c9-0106-493b-bbbb-f134ebc5b10b",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4888057b-24e2-413c-9dbe-27dac93a3651"
        },
        "item": {
          "id": "bc430a8b-eced-4b2b-9bda-2b7dcc8a539e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "134e34de-4a39-4f85-97a9-a941abc8c76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4c2c23-35f9-449d-9e48-5deee719876b",
        "cursor": {
          "ref": "72e8f258-e2f1-4bf6-92ed-9f33c8fed558",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "330b12ae-7107-445a-8211-5f89c1c6977b"
        },
        "item": {
          "id": "7c4c2c23-35f9-449d-9e48-5deee719876b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0f0ed194-7cd8-419c-9b00-ba68e283494c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f194fab-bd66-4cbb-aa82-49eb40c288e7",
        "cursor": {
          "ref": "fc6e4349-627f-4cdf-b724-cdf8f67d5ca7",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "363b24b8-7f1a-4be2-99fd-272defcfba25"
        },
        "item": {
          "id": "0f194fab-bd66-4cbb-aa82-49eb40c288e7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7dbe0515-c7e8-4550-b8a6-c8fa963b6c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7eb1773-b3c2-4ba8-b30a-ea5a0911e290",
        "cursor": {
          "ref": "b3c6c028-43b6-4a70-9e6e-c7cecf3b1932",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9093a1b2-a4c3-4e21-8a75-12816d8cfa76"
        },
        "item": {
          "id": "e7eb1773-b3c2-4ba8-b30a-ea5a0911e290",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1c64bdc2-4a47-4118-bbcd-34f59569d4b3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 28,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d57d11b-1968-4b1b-89e5-28427bec36d5",
        "cursor": {
          "ref": "a1af1827-ca81-4ed0-9f7b-70602af2481c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "55d8bad0-e3df-457c-ad86-c5c1732f4b26"
        },
        "item": {
          "id": "4d57d11b-1968-4b1b-89e5-28427bec36d5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "adf6eb4a-8841-4e2d-bc3a-7533e92d9451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501ae918-f7ce-40eb-abe2-1db7730ac2b4",
        "cursor": {
          "ref": "14bedfdc-0b8d-4a55-8ee8-c3cd969c9c62",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "811441a8-0c08-48bb-8b57-d208c919bff7"
        },
        "item": {
          "id": "501ae918-f7ce-40eb-abe2-1db7730ac2b4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "21139fd8-9415-4117-bd48-c00963a4a26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa4b2e4-91c9-455f-90a9-e24e6d3ae914",
        "cursor": {
          "ref": "5b974d7b-c151-4689-85c3-0f08c7302624",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "37bdc30e-3171-42af-987e-8af488753e4d"
        },
        "item": {
          "id": "aaa4b2e4-91c9-455f-90a9-e24e6d3ae914",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7716a8a8-36d2-4535-84e5-1d4a45e566a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c831a0-3729-4402-89bd-d970eaa9e8e0",
        "cursor": {
          "ref": "ec2f73e6-6dc7-43e6-843a-8fe37359c1d8",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4cfbb823-529b-4681-be01-bc96a6a252ef"
        },
        "item": {
          "id": "98c831a0-3729-4402-89bd-d970eaa9e8e0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2596d591-ab3d-4646-aa7d-10115a71faca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666eaf20-1b01-418f-b9e7-30ee1d91242e",
        "cursor": {
          "ref": "83ce6178-207f-42fb-831c-ab586e6ed5dd",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "acb501b1-a782-44f7-970e-7ad343c5deeb"
        },
        "item": {
          "id": "666eaf20-1b01-418f-b9e7-30ee1d91242e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "886d219d-30ec-43a7-bd4b-0ad6fd6451d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88376f41-c546-4f47-972a-8ebc0f2d0ecd",
        "cursor": {
          "ref": "27ca5abe-f1cb-482c-a900-0193fb019f02",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "40df451a-f288-4394-bf7d-8832fd329363"
        },
        "item": {
          "id": "88376f41-c546-4f47-972a-8ebc0f2d0ecd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3c72d4af-8ef2-4c46-9b30-1226063fe9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f582e49-7d5e-4953-988b-395a0e01870e",
        "cursor": {
          "ref": "dd4eb450-6755-42ce-a2c4-68ea4182fdcc",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "940573e5-ae23-4233-bdb0-ba1e81a509bf"
        },
        "item": {
          "id": "6f582e49-7d5e-4953-988b-395a0e01870e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "24d0a17c-f692-4520-aca1-b0d09e782395",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 16,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be6cdcc-2d07-4db2-9b2d-98b10c96b40b",
        "cursor": {
          "ref": "fe8705f1-6b2b-4da8-bc46-82a571264e84",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9d88318d-383c-4256-b2a4-4340d831c8c0"
        },
        "item": {
          "id": "2be6cdcc-2d07-4db2-9b2d-98b10c96b40b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f6a44b3e-f1b5-4420-9bc9-c9b63d1476e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e87ed04-02a7-4797-9404-38407c518468",
        "cursor": {
          "ref": "5d951cdc-30bf-4b40-bfcf-1f123168a7fd",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5d35cb73-54d1-49bf-b29c-c33fd77c1d07"
        },
        "item": {
          "id": "7e87ed04-02a7-4797-9404-38407c518468",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0814a3b3-ac9f-46e0-aba4-e5e8b480b9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0a724c-2c47-464b-b9f7-b91be1c5193d",
        "cursor": {
          "ref": "6cbe8593-8b94-4a89-82cf-503cc0873f5f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3b8f4b3d-31ef-4f5b-90ac-5073b00e2dba"
        },
        "item": {
          "id": "0f0a724c-2c47-464b-b9f7-b91be1c5193d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e5b0cf6e-df79-4e1b-a748-cc3d3d30ac16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec1b084-ee82-4d03-a8b1-78e05abc4999",
        "cursor": {
          "ref": "3bdf5c95-aa70-410e-999b-9f58f5785a7a",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "593e01bf-c9af-4cf5-aa3a-b19652efe741"
        },
        "item": {
          "id": "1ec1b084-ee82-4d03-a8b1-78e05abc4999",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8a6bdf36-2457-4aa7-b0dd-a828d7546373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fda683-0cae-44df-8f6c-25b740f62b99",
        "cursor": {
          "ref": "c623987a-2b73-427e-8746-014bc3f45e0e",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "000db704-2035-49e2-adb8-cf036252204d"
        },
        "item": {
          "id": "18fda683-0cae-44df-8f6c-25b740f62b99",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fcdc2d4c-2c83-4633-b5a6-0ebb62b4c1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbe97a8-3ef3-48c4-978b-3b21e7c8d3ed",
        "cursor": {
          "ref": "3476604d-7acd-4a17-abed-f9de2c34b431",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "837f4994-fad1-47e0-9e94-75ed6a5b7c6a"
        },
        "item": {
          "id": "dbbe97a8-3ef3-48c4-978b-3b21e7c8d3ed",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "360e7d62-07b6-429f-bf99-b7541fc695b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53828240-f1c4-482d-b3f3-d12a0ef90d96",
        "cursor": {
          "ref": "ab1621fa-480d-427a-8692-ef5773f7c32f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1c5d38f0-7ae4-4b63-9520-d04370c5370d"
        },
        "item": {
          "id": "53828240-f1c4-482d-b3f3-d12a0ef90d96",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "df0303ce-dc35-427d-8e8b-e6c035834e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6b32b7-1abf-42ed-bc47-30b54814950a",
        "cursor": {
          "ref": "9fc13a99-3cea-4afe-80ee-8e9c150d3ce4",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f522c6c7-f4f9-4ae8-9bc0-50e71322fe8b"
        },
        "item": {
          "id": "4b6b32b7-1abf-42ed-bc47-30b54814950a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "606cd8af-22a2-4aec-b5f8-563fee8da63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef94be30-19f6-45b8-a893-e3fc945bc730",
        "cursor": {
          "ref": "803793cf-2418-455e-a1d7-ec674b50de51",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2ce9a886-b339-49b3-8ee7-2b0fa9e1f16e"
        },
        "item": {
          "id": "ef94be30-19f6-45b8-a893-e3fc945bc730",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3d0e9589-aedb-4509-a568-b3f413af038f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968ca317-e424-4656-a1e2-517962c4ac8b",
        "cursor": {
          "ref": "a3a1c57a-f747-49a3-9b11-6b8cf5aa73b0",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4402f0ac-7d8e-45d3-be56-5824fd747c1b"
        },
        "item": {
          "id": "968ca317-e424-4656-a1e2-517962c4ac8b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c4c2e0d3-34ce-4354-9833-6215f08782de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b829d3ce-2517-4b37-89e5-5bfdef6172b8",
        "cursor": {
          "ref": "193ac2ff-e5f5-4d75-85d8-c2bb95411d4b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4e477507-28aa-4aed-bde0-f93dbaa49911"
        },
        "item": {
          "id": "b829d3ce-2517-4b37-89e5-5bfdef6172b8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "66ef4725-d4cd-4275-ba79-e9d7323decf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dab037-1006-41da-b618-90811f990a2e",
        "cursor": {
          "ref": "cd7b1abe-7cfe-49a9-af1a-a8c1f0c71fe0",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "812a1b9b-cac3-4c93-8500-2012305ca50c"
        },
        "item": {
          "id": "24dab037-1006-41da-b618-90811f990a2e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "84fef361-af20-4af2-9d37-9a77ceb4b6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec48d9cb-c2dc-4a6a-996f-d6b81cd37a68",
        "cursor": {
          "ref": "49351423-bb8e-4f27-97bb-b0d430dd1868",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1513fdb4-cea3-4772-b035-cba0e509d74a"
        },
        "item": {
          "id": "ec48d9cb-c2dc-4a6a-996f-d6b81cd37a68",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ca268e84-bdff-4022-b72c-bfcc60142db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf0dea1-bc20-48a3-be1b-4921b623e9aa",
        "cursor": {
          "ref": "58b5e849-e95c-4db8-9bd3-80e3d678c8f6",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f51d4996-0c1b-4dda-ae17-6ae621a9d8a3"
        },
        "item": {
          "id": "caf0dea1-bc20-48a3-be1b-4921b623e9aa",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "878216ff-367e-4cfd-be39-97b87c8422e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48e32dc-ea49-4721-90dd-17c6cb0469e0",
        "cursor": {
          "ref": "b57354e0-0524-48f8-af3c-fd614c5a4fc7",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e7a3a770-f944-46e0-b259-9d0aa97efe95"
        },
        "item": {
          "id": "a48e32dc-ea49-4721-90dd-17c6cb0469e0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6145e709-7955-4514-9634-b8d1acca69b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b5f036-fd87-413b-ab6b-e53f9894c583",
        "cursor": {
          "ref": "3f33cc96-3c55-4959-97c8-5d9af8bed508",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1102725b-f58b-4bba-8ae7-9fd172747182"
        },
        "item": {
          "id": "a2b5f036-fd87-413b-ab6b-e53f9894c583",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0d73130b-b91c-4dd1-9b26-cbfc8394838d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbff38fa-608e-423a-9411-5a11078fafa2",
        "cursor": {
          "ref": "41ebfc9c-73a9-44e3-90f0-0f49974a2296",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "09f2361a-7337-4160-b8b4-05ef6ed52093"
        },
        "item": {
          "id": "fbff38fa-608e-423a-9411-5a11078fafa2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7dfbd4e1-22cd-4cb6-af19-f1ef3287a972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43595f52-b8f8-4e81-b9a1-d3696be4f8d4",
        "cursor": {
          "ref": "4c5f3067-c636-468b-8f6d-eba20f581fb5",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a6a43456-674e-4875-8059-02baca2d84c8"
        },
        "item": {
          "id": "43595f52-b8f8-4e81-b9a1-d3696be4f8d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "468b2c20-086d-45f1-b36d-37d2bec9501b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9190d6-68f8-4a6f-9da4-8cbc9e62c07f",
        "cursor": {
          "ref": "1d7cdbc9-1eba-41bf-841f-e8e649dcccaa",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0f8a7ef8-a6be-4082-88d1-3d1c08c7d577"
        },
        "item": {
          "id": "0b9190d6-68f8-4a6f-9da4-8cbc9e62c07f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "964df7be-2924-4b48-af17-e09f33f919e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c08ad5d-741e-4610-b4f7-bb789d4bdaf8",
        "cursor": {
          "ref": "671ddee7-125a-48dc-9340-137165050f0f",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8cedd015-fda2-4878-8e7d-799fdf76d625"
        },
        "item": {
          "id": "7c08ad5d-741e-4610-b4f7-bb789d4bdaf8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0a76869f-8a52-4b78-a505-17a14c84d69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ef2cbe-1ef5-4b60-b00f-94c699d236a4",
        "cursor": {
          "ref": "52b49d62-05e4-430a-9b1f-3111dd1fc5d1",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "68e6625a-af2e-4399-ad18-0ddef12157ed"
        },
        "item": {
          "id": "89ef2cbe-1ef5-4b60-b00f-94c699d236a4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8c97ee82-380b-465d-aedc-08bedadf4a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6a8398-9d06-40fa-abe0-d34f4a71d37c",
        "cursor": {
          "ref": "e1b1fdd9-46af-45d4-b38b-82fc5d5fe0bc",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "410615be-73eb-4b92-983c-66a19881e05a"
        },
        "item": {
          "id": "8b6a8398-9d06-40fa-abe0-d34f4a71d37c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "dbc34ca1-aa33-4dc5-a793-166c62a5b964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a1583e-c7c4-437c-aa11-df03cb44a0ce",
        "cursor": {
          "ref": "2bd180c8-a3a2-480d-8241-414392ab934a",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5f5a6bb7-3d43-4a24-8218-4155fde30fbc"
        },
        "item": {
          "id": "e1a1583e-c7c4-437c-aa11-df03cb44a0ce",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "52d957b2-d52a-4b8f-8aa4-196ba744a96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49510f62-7c8d-4fc6-ab43-e5d7deb41b7f",
        "cursor": {
          "ref": "b492d8cc-f4df-4a92-b9fc-171651e0891f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "43762532-df69-414e-900d-67a608652bad"
        },
        "item": {
          "id": "49510f62-7c8d-4fc6-ab43-e5d7deb41b7f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "162defc9-1dbe-47d8-987a-0e10dfe201a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6592bbd-94dc-4ce7-b0ae-e52e4929075d",
        "cursor": {
          "ref": "f72c8529-e963-456f-8e52-7d03a33fe204",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ff554781-e8eb-42f5-b562-1c993573abc3"
        },
        "item": {
          "id": "e6592bbd-94dc-4ce7-b0ae-e52e4929075d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "63e3b068-e547-4a58-b00e-3b389f12bdeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52254da5-f63a-46e0-973e-d04d9a171ce1",
        "cursor": {
          "ref": "ca7214d1-2b77-4d37-9001-eb359a3b1e99",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d554b739-6b67-486c-b22e-554b98fefada"
        },
        "item": {
          "id": "52254da5-f63a-46e0-973e-d04d9a171ce1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "56e4feb6-4f14-4e09-a7ee-0d523e8830bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac49c0a-ad40-47ae-a791-5193a560b549",
        "cursor": {
          "ref": "c6276af5-2b8e-4792-a133-bf31b2421371",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6b11dc18-dbe7-41e5-ac17-50f1151d07a5"
        },
        "item": {
          "id": "5ac49c0a-ad40-47ae-a791-5193a560b549",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "28815b08-04ff-4734-a964-00b55bd00e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc44aeda-2250-49a2-860c-3aabcbf74f2f",
        "cursor": {
          "ref": "da99db80-c3a0-4e20-b68e-59fa462bbcca",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bae2515d-d35b-435f-942e-a7e61fecaad4"
        },
        "item": {
          "id": "dc44aeda-2250-49a2-860c-3aabcbf74f2f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5a6eb18a-1be1-45db-be72-b16aa981e861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47340913-ea80-482b-8ed3-7de5338a30f5",
        "cursor": {
          "ref": "95d10a18-e909-4a01-91f9-a84495276620",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d322b430-3733-4607-b640-6573725dc34d"
        },
        "item": {
          "id": "47340913-ea80-482b-8ed3-7de5338a30f5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ebe4cc85-b7ea-49fe-831a-de006637bb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc43800-6a16-44ac-9d65-0e4e1aacef83",
        "cursor": {
          "ref": "637d71f8-f1c1-4411-912e-0a569b62e2db",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4b40cc28-8d59-4fc7-a564-d1199a6b1749"
        },
        "item": {
          "id": "5dc43800-6a16-44ac-9d65-0e4e1aacef83",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "95a4b566-17ce-460a-875b-ea2f441d05da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2922c8-9498-40d6-ac4e-97ddcc581df7",
        "cursor": {
          "ref": "0e84ee8d-f8b6-4937-bace-a063435105e5",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0952cc81-70e4-4ea0-8e5d-ce7122df436e"
        },
        "item": {
          "id": "3b2922c8-9498-40d6-ac4e-97ddcc581df7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a94d1ee5-c94d-490d-9774-11b15b92bc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cae1136-6c6b-4b28-918c-b6c5b258d202",
        "cursor": {
          "ref": "34096495-4676-4cb8-9bea-c3154a0a73e5",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6f513df6-3117-4534-9d9d-96de1888a43f"
        },
        "item": {
          "id": "5cae1136-6c6b-4b28-918c-b6c5b258d202",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e6e9a748-557a-4a14-a765-111aecbd1df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdf09f0-058d-488d-baf6-e0d941ce6470",
        "cursor": {
          "ref": "84ad5cf3-20c7-4c0d-a5b8-bbd8f5dcb7b4",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "25acd812-cbc0-431a-a535-f66084629114"
        },
        "item": {
          "id": "3fdf09f0-058d-488d-baf6-e0d941ce6470",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cd4dd4e5-8d48-4fb6-99f2-2cece1fbbd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9304d1-69cb-4033-9c54-872464450b65",
        "cursor": {
          "ref": "d8c43d07-241d-4201-b129-7e580863514d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ad8a1bbb-0900-4ce7-b54b-5a4af49f87e1"
        },
        "item": {
          "id": "9d9304d1-69cb-4033-9c54-872464450b65",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1946d255-43f5-4ae5-b82d-43a610fdab77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d7c2b2-2843-43bd-b07e-c2a7fd24402b",
        "cursor": {
          "ref": "2ab8ad50-8cf2-4ca4-8813-dbf1e736f37d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "51fe1039-c35d-48e7-85ab-ca80da4161e0"
        },
        "item": {
          "id": "57d7c2b2-2843-43bd-b07e-c2a7fd24402b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6221b366-635b-465a-97d3-8385a93a042a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3731aab4-ca3d-413e-959b-7fc63959b4b1",
        "cursor": {
          "ref": "d1987329-a2d9-4e71-9a27-024790b66e0f",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "44a259d5-82f3-4e4a-9bda-3343e1a1d342"
        },
        "item": {
          "id": "3731aab4-ca3d-413e-959b-7fc63959b4b1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6a7d65ab-8705-4ce2-873d-655371790485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486a2463-464e-4900-8192-d48c2e6057a2",
        "cursor": {
          "ref": "6f37536f-668a-4325-9b73-604abaf6285a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3acd8d84-7dde-464f-924e-d24454b92262"
        },
        "item": {
          "id": "486a2463-464e-4900-8192-d48c2e6057a2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4c97736a-13d5-4ec5-ac13-78d45b19a94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a04ca7-01ed-482b-918c-290584842ee7",
        "cursor": {
          "ref": "c714e8a0-fcf8-4be7-a474-945ebb8e60ac",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c473df31-bb97-4a07-9c1f-6017d16b21f4"
        },
        "item": {
          "id": "17a04ca7-01ed-482b-918c-290584842ee7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4a9cb727-a6a4-451b-b787-541de7b9bb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee80aae2-6e32-4a76-82a1-0a947d9b981e",
        "cursor": {
          "ref": "57dac29c-d883-4f6e-be56-e74a61802783",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "33552b53-e259-4585-871a-cbad74b10ea9"
        },
        "item": {
          "id": "ee80aae2-6e32-4a76-82a1-0a947d9b981e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0fc177e0-faae-4cd4-bdfc-a246fc31572e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a00f81-1318-47fa-89c5-703290b5c8e2",
        "cursor": {
          "ref": "9abeb7aa-4e6c-457f-a0ff-2292ada547f5",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "14566a04-2fe2-48e3-bff2-6cd30d312f55"
        },
        "item": {
          "id": "a1a00f81-1318-47fa-89c5-703290b5c8e2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5bcec04e-2725-458f-8b91-1e38adce9eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452b6642-b423-491f-afd4-df48e9ed8510",
        "cursor": {
          "ref": "33dc470b-6ad3-4809-bc5d-0ff1755b7a3b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2887b2e7-c892-4d3e-9535-280be0d4c39d"
        },
        "item": {
          "id": "452b6642-b423-491f-afd4-df48e9ed8510",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "79b8cc15-52c1-45db-b17f-4c0ccad2e047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36e5769-7582-4043-ba32-9a1592f31249",
        "cursor": {
          "ref": "2de6cd19-e3e7-4846-b08e-36948599df6c",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1cc4ec33-4580-4049-8ed7-b538db9c003c"
        },
        "item": {
          "id": "e36e5769-7582-4043-ba32-9a1592f31249",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8b7aae9f-c70a-4814-a065-f022fbd19bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436cedea-385b-4b5f-9e86-d88c092bb2ad",
        "cursor": {
          "ref": "1bb17e39-a62a-4788-8279-e52bbb94140a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c19ba675-b9ee-48ae-8188-9eecfcaba463"
        },
        "item": {
          "id": "436cedea-385b-4b5f-9e86-d88c092bb2ad",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0b99e226-f8d1-451d-8dc2-63dd369a78fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4bbb0d-55d0-4ac0-ae9e-2ab6e824733f",
        "cursor": {
          "ref": "10af6e55-bea4-4c07-b00d-463c8c4c7ad6",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d5aef7ce-316d-4ae8-82a5-17fe794fbc6c"
        },
        "item": {
          "id": "7c4bbb0d-55d0-4ac0-ae9e-2ab6e824733f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "97738abc-9c62-414b-a4d4-0886e99ead4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a215d17-82bb-4c95-9173-cad68134dab7",
        "cursor": {
          "ref": "22883fb7-0a7d-49c9-b581-4a73f3048752",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "de8cf0cc-4a75-4986-926e-e10021fe75e0"
        },
        "item": {
          "id": "0a215d17-82bb-4c95-9173-cad68134dab7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f54fe6cd-d16f-4553-952f-915bc2930534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfa10d0-197d-43e6-a34c-4c31fa79aa83",
        "cursor": {
          "ref": "b406c215-27d8-417f-83c6-070af1ed3906",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b9417644-1a8e-4294-9629-bd406ac534ce"
        },
        "item": {
          "id": "5bfa10d0-197d-43e6-a34c-4c31fa79aa83",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bd56de8f-3ae8-4358-a0f4-483cc5c03e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5388368d-c509-4880-9bb6-9897dd4af37e",
        "cursor": {
          "ref": "e77b4d3f-22b3-4dea-9bcf-9d6e01a85b50",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "948b5f75-6a82-4b54-8998-9948eec27d47"
        },
        "item": {
          "id": "5388368d-c509-4880-9bb6-9897dd4af37e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4cfe6634-c31a-4dc9-b3d8-5055768f67ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c395e6-1e1e-43d3-838f-df0f537e0da1",
        "cursor": {
          "ref": "da63f196-600c-4c12-b48f-531a70562a6f",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a6136eca-ea6a-41cb-b6d0-140f6844d20f"
        },
        "item": {
          "id": "75c395e6-1e1e-43d3-838f-df0f537e0da1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "be1ddffd-e480-40fb-b6a2-d32077161823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35369855-4f45-47ac-ac5d-61d056711df8",
        "cursor": {
          "ref": "1ec2cd40-350c-4e00-8f9b-4de27bbe9cf1",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "587163d1-e00f-4555-b0cd-b35ad8e2f655"
        },
        "item": {
          "id": "35369855-4f45-47ac-ac5d-61d056711df8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4889e34c-cf74-4f5f-8f29-8ec613280e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872c8688-8d04-45c0-99a2-3248b850c087",
        "cursor": {
          "ref": "c8153924-d1c0-408a-b024-ab8d451c92b6",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "33b8a4e3-716a-4346-b400-797ccec03e6c"
        },
        "item": {
          "id": "872c8688-8d04-45c0-99a2-3248b850c087",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "54a6dd3b-0214-4c25-bf33-4aa56d8f6259",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2991f5-edf4-41c6-b491-374658d63b11",
        "cursor": {
          "ref": "5af3b250-2ede-4af5-98b9-a4b16da9f3e1",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "52625ae5-94db-49e4-aa9e-298ddc2d78a7"
        },
        "item": {
          "id": "aa2991f5-edf4-41c6-b491-374658d63b11",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e9e89558-c6c3-4fcd-b2c5-c5c725a62c5e",
          "status": "Created",
          "code": 201,
          "responseTime": 38,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55a5826-a275-4b48-8c8f-fbe6456abd4d",
        "cursor": {
          "ref": "7c9c9f01-e346-4008-9360-bc0aeeebc981",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8224b9a2-6218-43f1-b8c7-03e46c1b9d5a"
        },
        "item": {
          "id": "d55a5826-a275-4b48-8c8f-fbe6456abd4d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0bced14e-1dfa-493d-90d0-12cf57571f84",
          "status": "Created",
          "code": 201,
          "responseTime": 153,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdc3e4a-1c2f-4fe5-8de3-5ca5fafae80a",
        "cursor": {
          "ref": "895b446d-0053-4197-ac48-a4db5a4d7866",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4360b396-0b9f-4034-9a4c-926fa9e5d211"
        },
        "item": {
          "id": "ecdc3e4a-1c2f-4fe5-8de3-5ca5fafae80a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dfedfda9-7c4f-4d4f-ad20-39e62a45554e",
          "status": "Created",
          "code": 201,
          "responseTime": 41,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2b9735-516f-4228-8c9a-a11b98bad1ba",
        "cursor": {
          "ref": "6570edc0-b83c-4293-8b8e-afbc8136bced",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8721dd3c-0aa2-4a48-9c36-6a54ccaab3b8"
        },
        "item": {
          "id": "7e2b9735-516f-4228-8c9a-a11b98bad1ba",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ba1cd904-594a-4bfa-851b-ffbd0beb9f91",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "211bfd77-91c8-4adc-a705-6d3d48e4c8b0",
        "cursor": {
          "ref": "bd172f55-fa2c-450d-9f2f-4e89e420e05b",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c8a87d4e-69b7-48cc-9a34-a4411d3ff69e"
        },
        "item": {
          "id": "211bfd77-91c8-4adc-a705-6d3d48e4c8b0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b46edfc1-aef7-42c7-b03b-f6423e226484",
          "status": "Created",
          "code": 201,
          "responseTime": 40,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e2aab1-ca04-4faf-8ec8-71a1b78141d8",
        "cursor": {
          "ref": "16a4b7f2-d654-49ac-ae5e-898bae80f887",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0e711467-f75e-44ae-a4e0-4464da131f0d"
        },
        "item": {
          "id": "a0e2aab1-ca04-4faf-8ec8-71a1b78141d8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "85014caa-208a-4afd-bf8f-0ea5bc92568e",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4f5e63-f854-4913-93f7-079743495cf0",
        "cursor": {
          "ref": "650dadbe-d87c-4abd-b380-2520205bf27c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5193d70d-4903-4920-8d7f-cc69eb5241ef"
        },
        "item": {
          "id": "3c4f5e63-f854-4913-93f7-079743495cf0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "664f1627-5702-4f8a-bc1c-8208b99a904c",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a946dcbf-32f3-4a37-914f-7fa8152f36b7",
        "cursor": {
          "ref": "7f88bd02-0167-4c8e-a445-1bb02a357790",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2d4c356d-4a36-4af9-bb7d-4194d04626a3"
        },
        "item": {
          "id": "a946dcbf-32f3-4a37-914f-7fa8152f36b7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ebd8777d-0986-4acb-a4eb-c1e04e1a5c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32ca7bd-f966-4d26-9d37-defa688f7fc1",
        "cursor": {
          "ref": "b6018813-4285-43d6-b2e2-d8cac9ba0f36",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9e3514d5-e6d7-42fe-98b1-2c9b5dff866e"
        },
        "item": {
          "id": "f32ca7bd-f966-4d26-9d37-defa688f7fc1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "70dd5f43-cf3f-40e0-9ced-14e8599b3a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ff5db3-77f4-4c6b-ab02-72282d54f6d7",
        "cursor": {
          "ref": "e67b1e5c-21ca-4bc0-bcdb-66ac9f2b5eef",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5febf19a-5439-4c05-be9d-d87964c31977"
        },
        "item": {
          "id": "44ff5db3-77f4-4c6b-ab02-72282d54f6d7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2be7ce91-6274-486b-b52c-c512301cc885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27337456-a2d4-4dff-977c-b158f9332301",
        "cursor": {
          "ref": "b90eddb4-35e2-43d3-b69f-3b3b52c37f6b",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1a1b5c72-5128-4ba5-9755-00cd80d5ca54"
        },
        "item": {
          "id": "27337456-a2d4-4dff-977c-b158f9332301",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b71fd3f6-2fb8-4ea7-9623-f9e4f135d7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a06bb5-944c-485d-8872-f3f99667d86b",
        "cursor": {
          "ref": "c8dafd2d-5254-4924-b5b2-68de129aef9d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cfa265cb-8449-4299-a28f-fb66edb43b0e"
        },
        "item": {
          "id": "b3a06bb5-944c-485d-8872-f3f99667d86b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "de730431-1986-4294-8a9b-3bfef606777d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88673133-0b60-4f67-a0ea-91f95f48a54d",
        "cursor": {
          "ref": "b3ffc1ee-5b8a-41e4-bd69-de917e43fd07",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e835d586-36c6-4c58-af43-64898d3bed49"
        },
        "item": {
          "id": "88673133-0b60-4f67-a0ea-91f95f48a54d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6325c845-becf-41b3-9856-bb6a4d78c932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7f5504-a4af-4af6-a3b8-d2ddcaa29075",
        "cursor": {
          "ref": "18748635-8827-4fdd-bb75-c812ab6fb8ba",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f496842a-fe83-4930-b016-5ee4c33d965e"
        },
        "item": {
          "id": "1c7f5504-a4af-4af6-a3b8-d2ddcaa29075",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9f12c03e-6884-42a5-a0c7-cd8d25e21331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4977ef30-64aa-40a4-99b8-9813afb44c4e",
        "cursor": {
          "ref": "5776e709-5f8a-451f-89c2-f1b6d8cb188c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cb9f598e-6997-4ab6-af53-d433de24da94"
        },
        "item": {
          "id": "4977ef30-64aa-40a4-99b8-9813afb44c4e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "393ba468-82b3-48d1-928f-4cdf51f61bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4b1eb2-e979-49e0-8c83-d749a9c8e110",
        "cursor": {
          "ref": "5697ce29-80e4-4947-86af-bfe8977decad",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "39d9d1a8-2d2b-479d-bdb1-6cb0322f3067"
        },
        "item": {
          "id": "1b4b1eb2-e979-49e0-8c83-d749a9c8e110",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6536b75d-5590-4388-92fd-9b995be31cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fb71e6-7683-4df9-a11c-f42647074dcb",
        "cursor": {
          "ref": "f1a10530-b9cc-4afa-8e4b-8442b2a9cc84",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c6862f7c-57e7-427d-b1b4-43995bee2c20"
        },
        "item": {
          "id": "a2fb71e6-7683-4df9-a11c-f42647074dcb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "802ef127-8e70-47f5-a635-3730d21411c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf6b64d-ad73-423e-ae85-368791a0a991",
        "cursor": {
          "ref": "f3a02cff-f3b7-4f10-83e9-d1fdcc47f0e0",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8ec77172-70c7-4b08-9e00-d122e6cdefd7"
        },
        "item": {
          "id": "bcf6b64d-ad73-423e-ae85-368791a0a991",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "db2f23f9-af80-4a3c-9b89-a65af6237470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44547cda-00d6-43de-9784-be5cbb448720",
        "cursor": {
          "ref": "9a1df204-fe6c-427a-8af3-3e9a03bd8ba2",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d91483d6-16f4-448d-b154-5c0b0d6baf80"
        },
        "item": {
          "id": "44547cda-00d6-43de-9784-be5cbb448720",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0bf24f5e-7b35-4945-b260-f9798e17a6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87124337-6b84-42a4-a999-6a8bdab14549",
        "cursor": {
          "ref": "a383793e-ae89-41e1-9c69-62156c37d0fa",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "028c5839-c16a-48b4-b22c-bf0c0eb703a7"
        },
        "item": {
          "id": "87124337-6b84-42a4-a999-6a8bdab14549",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3137c57d-1cbf-45ac-bd23-eecde384441d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9ee4fe-1a55-408c-8d3d-1fd465fd94d8",
        "cursor": {
          "ref": "f3cd0e06-c715-460e-b3ae-0cf72578201c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e6b2c336-1fbe-456c-b622-bcc9f5033956"
        },
        "item": {
          "id": "2b9ee4fe-1a55-408c-8d3d-1fd465fd94d8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "60b01f9f-e603-49e3-989e-8771990f4c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9697d64-b8fb-4db5-b3f4-8a0e240b07e9",
        "cursor": {
          "ref": "33ab8312-22fe-4dd6-a39c-9dbf65b186fe",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4f68a233-4931-4ddf-b18d-badc63578c65"
        },
        "item": {
          "id": "e9697d64-b8fb-4db5-b3f4-8a0e240b07e9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2c72cd02-66b9-4a00-90ad-687eb6a4c7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f98874-5220-4bdc-83cb-943b11d4d55d",
        "cursor": {
          "ref": "71cd9fa8-f7be-4469-8634-e7c7bf7b7790",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b6c4d219-11ea-4d81-bc46-ebac2539e4e0"
        },
        "item": {
          "id": "94f98874-5220-4bdc-83cb-943b11d4d55d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "993c0ee7-88df-4617-90e4-6fbdac5a5d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561bc8ee-da60-432e-8c6e-5abd0ec2154a",
        "cursor": {
          "ref": "5d98562e-16a2-4c1a-828d-ca9bde5f9610",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6d68e6ff-645c-4a9d-bb11-b019bcab33f5"
        },
        "item": {
          "id": "561bc8ee-da60-432e-8c6e-5abd0ec2154a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "84d4fad1-377b-4dd9-92df-0aa7fb66895f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c280f1c1-4b20-45fa-b3c5-d6662894e08d",
        "cursor": {
          "ref": "e93d453b-5e8e-4d82-a3d9-05865e9fb160",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "99676bbc-d47f-4f6f-b238-6498981eb878"
        },
        "item": {
          "id": "c280f1c1-4b20-45fa-b3c5-d6662894e08d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "17d376d6-141e-44b1-8533-c0e5556e1c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b62ec34-269e-4868-a9f1-ea02216194ef",
        "cursor": {
          "ref": "e31f791f-ad31-40f1-b292-61ec9262ee32",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b6b1d46c-906c-4723-9366-61299020cbd6"
        },
        "item": {
          "id": "0b62ec34-269e-4868-a9f1-ea02216194ef",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1727f1fe-a47d-4c2e-82c8-7e14762bb676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93695efe-fa93-48f7-a128-8c6ba191f569",
        "cursor": {
          "ref": "9a6293de-2754-4e6d-a4ca-ab281a44f179",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7a86bc70-c57c-443a-b797-485d8fbe842d"
        },
        "item": {
          "id": "93695efe-fa93-48f7-a128-8c6ba191f569",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bc11a1bd-0135-416f-96c1-b8f579c6be9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ee767d-8716-454c-87ca-498f1d55ece4",
        "cursor": {
          "ref": "1cc1ba23-5038-4aa0-95de-60bd2fe573f7",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "65c6b0df-3dec-4c78-923f-f54fff535a45"
        },
        "item": {
          "id": "f6ee767d-8716-454c-87ca-498f1d55ece4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3f282b99-e871-49ce-b1a5-38239ea26a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a57dc1f-4376-46bd-a5cb-ac805097c577",
        "cursor": {
          "ref": "22f4beb5-a21b-42d4-889b-87dce4b84fda",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "61f46a77-f612-4fd5-98ec-be8328ef220a"
        },
        "item": {
          "id": "5a57dc1f-4376-46bd-a5cb-ac805097c577",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6c668de3-a543-4f2d-80a9-8e4bb0696e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863a1f62-954f-4165-b5e4-0f307e87cb71",
        "cursor": {
          "ref": "51eadc49-62fa-4774-917d-dedd4bd29b25",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "52ddb921-3c27-4336-a570-05b39bc677f4"
        },
        "item": {
          "id": "863a1f62-954f-4165-b5e4-0f307e87cb71",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fc66e6b6-3511-42e2-9bbb-fab6e9161779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ae5efa-510e-4f1e-984b-6105899dc06e",
        "cursor": {
          "ref": "65192c52-193a-4fe1-8822-6882909b6c45",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "63b72a64-59d8-4baf-8158-6d524e694c79"
        },
        "item": {
          "id": "82ae5efa-510e-4f1e-984b-6105899dc06e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f6aa89bf-244f-46b0-b5bb-0c9b1277d7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd699742-48e4-45e4-9906-b63283ba10d7",
        "cursor": {
          "ref": "3f17511f-de1a-4e91-ab5d-247f434828aa",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "df7929ff-982f-45f0-a685-49cf72120eaf"
        },
        "item": {
          "id": "dd699742-48e4-45e4-9906-b63283ba10d7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3434db99-eff5-40bd-a8fa-5572fcdcba14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2655891c-52f0-4ef8-ac41-14052336c1b5",
        "cursor": {
          "ref": "d5dbc574-736c-4cee-9fcd-c71f40ec9e27",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0a9dbc76-c2f1-4671-b4de-69583b827fc1"
        },
        "item": {
          "id": "2655891c-52f0-4ef8-ac41-14052336c1b5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ce1bceaf-5981-4aa9-99d4-750edd5c0c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003cea36-1575-4d7b-b3a0-c49e85dcfc62",
        "cursor": {
          "ref": "abff4b98-0bac-4843-adac-dd07a58c5c8d",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "13395aaa-6043-4d51-88ce-b0f22ee8aa4a"
        },
        "item": {
          "id": "003cea36-1575-4d7b-b3a0-c49e85dcfc62",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c377edd1-6a65-45a3-b34b-3247bc20fa56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d7f105-8119-43db-9857-de7c1733c1b1",
        "cursor": {
          "ref": "e9404db3-6baf-4b54-90b5-bd5d3494af0b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5fae412e-1a59-48be-b915-e1fb1a335b7b"
        },
        "item": {
          "id": "f8d7f105-8119-43db-9857-de7c1733c1b1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3e08b493-74a8-4b58-92d0-bfaea5fc752d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6256573e-d881-4efc-89d2-132a73c3307b",
        "cursor": {
          "ref": "f0e78e00-becf-4504-afab-21da54c5c5d6",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9448a539-f8f5-4f91-be3c-8b3eddde29f1"
        },
        "item": {
          "id": "6256573e-d881-4efc-89d2-132a73c3307b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b4cb6391-5cf8-4b9b-a12a-69fb47d148cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0d6996-5547-45c6-9a0e-0da78b9c1ac3",
        "cursor": {
          "ref": "d75f4efc-550a-4419-b458-3f0df22dd2c0",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8a7e0ea7-a736-477a-9777-6ab87001ad18"
        },
        "item": {
          "id": "6b0d6996-5547-45c6-9a0e-0da78b9c1ac3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "574ad61e-e575-4b0f-80f2-4ce47c612cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20194f29-bbd0-4ae9-8be0-7809bd6c09c3",
        "cursor": {
          "ref": "8f66c0ab-cfc4-4ee1-9183-282ba1f89403",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "018b68d2-3d73-4a20-a55a-04d2062df80e"
        },
        "item": {
          "id": "20194f29-bbd0-4ae9-8be0-7809bd6c09c3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "133eb951-cd68-4d23-ad47-a01ffb270947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940c7158-f960-4816-9a18-b3c67a31bfc3",
        "cursor": {
          "ref": "1d3ec21d-d997-4079-920c-402c584fdd68",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2e766474-a762-43a3-8a7a-b56547af4037"
        },
        "item": {
          "id": "940c7158-f960-4816-9a18-b3c67a31bfc3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "890774c2-27a1-4029-83c1-fac9e808a69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b11d018-71a6-4b0c-a136-0b0f33b9406b",
        "cursor": {
          "ref": "155241ed-babe-4382-b64d-7a03c86f9e62",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3a3c32d0-532f-457a-8834-668a37f5d1b8"
        },
        "item": {
          "id": "9b11d018-71a6-4b0c-a136-0b0f33b9406b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8531c4f8-49de-4ad4-95bf-1d67f7e1ca95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b63aa24-777d-4d2f-9bfb-79eb93751694",
        "cursor": {
          "ref": "0e83292a-adc5-4b6c-a6fd-b850d2bc0a4e",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "af1d5380-b686-47f8-b2d1-33d1a55e2b3b"
        },
        "item": {
          "id": "6b63aa24-777d-4d2f-9bfb-79eb93751694",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6ae6b3f9-ed44-4435-8563-abeecd0a8cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25203d7f-ee28-4d9d-8747-a0b870f13c5b",
        "cursor": {
          "ref": "02e7c03e-8159-43fe-94c7-903e1bb8f214",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "275597ff-9712-4861-8fc3-f1db68794ee7"
        },
        "item": {
          "id": "25203d7f-ee28-4d9d-8747-a0b870f13c5b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9ddf2ae2-c06d-41d3-8ca7-62492702793b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27abe132-77f5-4374-b5ce-d79156fccf56",
        "cursor": {
          "ref": "7ad718c1-9d44-493a-821c-cb7a5b97fea5",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "30915f2e-0d31-4b22-b1da-09d021dbc4d2"
        },
        "item": {
          "id": "27abe132-77f5-4374-b5ce-d79156fccf56",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "77df64d5-a4c6-49d1-b59b-0d902c33a1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9d6f41-b22c-43c0-8a32-6328ffd2e560",
        "cursor": {
          "ref": "1377f9c0-097e-4a14-975e-40dc8410db8b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "61bcee03-a67b-4753-9c44-9b5a24922716"
        },
        "item": {
          "id": "fb9d6f41-b22c-43c0-8a32-6328ffd2e560",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f3a155d6-0094-4d47-8c71-38ba9eb53e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5afc32-4937-4ef0-a103-c27c9f6c077e",
        "cursor": {
          "ref": "e634cb22-6eac-4ec9-9e21-e6fcfa185f94",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c889bb17-da63-4d8c-8b65-215028dc404b"
        },
        "item": {
          "id": "1f5afc32-4937-4ef0-a103-c27c9f6c077e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9c84dbe5-cf66-46e9-853e-e167d3f98697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971c0c7b-9833-43c6-872c-6056e952b06e",
        "cursor": {
          "ref": "02f62624-8d45-45bd-a404-75ddaf8cba85",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4fdf859c-4920-4ea3-95f8-9e61ec7e127b"
        },
        "item": {
          "id": "971c0c7b-9833-43c6-872c-6056e952b06e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8e7bcbe0-89bc-4c06-a559-05f8dca53d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9beb50ad-e852-47f2-873b-9a1037233b4b",
        "cursor": {
          "ref": "19f48f2b-49fb-4425-adc6-6cba3165f976",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5fba77b8-4acb-4cde-b13b-7cc22830f0dd"
        },
        "item": {
          "id": "9beb50ad-e852-47f2-873b-9a1037233b4b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a9948dc0-96db-4f21-8ae4-598d26fce02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88039a9-c22b-4ccf-9ac5-e19a36cf3595",
        "cursor": {
          "ref": "0822f924-baf4-46e1-83de-cb3eca0cc1b7",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "05e258a4-589b-4d92-a791-82d152d9acac"
        },
        "item": {
          "id": "f88039a9-c22b-4ccf-9ac5-e19a36cf3595",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "54ad4f4c-7db1-43f1-8da6-96515690fc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015e4b00-f05c-4195-9c6c-b0278eeba9e8",
        "cursor": {
          "ref": "9646a152-fb04-4c5e-9a99-763bbefba03d",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0ff9663b-336c-4206-b577-ffb1acb1e9cd"
        },
        "item": {
          "id": "015e4b00-f05c-4195-9c6c-b0278eeba9e8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d27b2316-e230-45e3-82ab-9e3cbc6ed54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38272eb9-1c25-4019-b266-8d3f8dcf67eb",
        "cursor": {
          "ref": "42a3a991-270c-44fa-9f17-859381c15351",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b0123102-ee81-4a75-8eee-3284c054c4ea"
        },
        "item": {
          "id": "38272eb9-1c25-4019-b266-8d3f8dcf67eb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9adedbad-9ab7-4a71-8ee5-88ed07cebaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a946370-8c44-4612-9aef-5403c940c3af",
        "cursor": {
          "ref": "762f1307-f919-41eb-ac35-153c3c945165",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "658bac84-35e8-48b6-8787-ed1cab98ae30"
        },
        "item": {
          "id": "2a946370-8c44-4612-9aef-5403c940c3af",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6ba4438e-8e51-45e3-9287-64a4451381a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35fe13c-6c50-4237-9365-aed516a84e7a",
        "cursor": {
          "ref": "f88f5667-5894-4358-9fb8-d3042517e6ab",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "21827568-e890-4dd0-bb2c-13fd90ce87f0"
        },
        "item": {
          "id": "b35fe13c-6c50-4237-9365-aed516a84e7a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "895ba89e-f8d9-4c03-91aa-38e3dc49c7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1eb746-c018-4230-8c58-dc6b814faa43",
        "cursor": {
          "ref": "183cd65a-9c3f-49de-93b4-5b5cfbe49489",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7612d3ca-213a-4fea-9ba7-b22c05c5a837"
        },
        "item": {
          "id": "ba1eb746-c018-4230-8c58-dc6b814faa43",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cffe10a7-b250-4aed-a1b7-09ea7f648d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6dba12-893a-4da9-b2e7-0de8c1a038b4",
        "cursor": {
          "ref": "d645c1a7-c84c-42e3-ba51-1dda2815bd83",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ecea9ce8-7167-4706-ab7f-57f1ea255722"
        },
        "item": {
          "id": "9d6dba12-893a-4da9-b2e7-0de8c1a038b4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4c19e98d-4eea-42f6-92ed-74f112606f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73b7d0e-219e-41d9-8792-50523572fff2",
        "cursor": {
          "ref": "1f76b35b-3e54-4486-8fb4-3bfe85b25610",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f3156815-0f54-4ef0-82aa-60fcbbef5043"
        },
        "item": {
          "id": "e73b7d0e-219e-41d9-8792-50523572fff2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cef211df-4f44-49ad-8c9a-8cfb86780f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6fa01a-0628-45d0-9422-8dc197afa7d4",
        "cursor": {
          "ref": "faa89787-3272-4e99-922b-5af81c568307",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "afabb4b7-5a8f-4aed-8c65-0f542171df7f"
        },
        "item": {
          "id": "5c6fa01a-0628-45d0-9422-8dc197afa7d4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "085ef0ae-cc40-4155-8118-411ac20a92d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20646ae-1107-43d1-8897-e47b90f053c0",
        "cursor": {
          "ref": "1adf1f6f-6c53-468d-9013-abf519f84a3c",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fa081da9-f79f-47eb-9ec2-1449efbff1e7"
        },
        "item": {
          "id": "f20646ae-1107-43d1-8897-e47b90f053c0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2e18c783-c75e-4bad-8c5c-e574362b1025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb78c237-e187-4926-8852-3aea8512f974",
        "cursor": {
          "ref": "ac7c2ab1-0977-4a95-a433-b9c191539b61",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1609772f-d762-4de9-b10e-750ec709d5a9"
        },
        "item": {
          "id": "cb78c237-e187-4926-8852-3aea8512f974",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c1530d4f-6050-464d-8ca5-354014104e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f82b3f2-b882-4bf2-aeff-677e6084e900",
        "cursor": {
          "ref": "95807a1a-3aaa-4647-b714-ad58630dc522",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f408718f-e0b1-4c5d-bc7b-c1e2d7f65f48"
        },
        "item": {
          "id": "2f82b3f2-b882-4bf2-aeff-677e6084e900",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "30f1b1fd-9b60-45d0-b497-df4118f33cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c1adf1-d8aa-4bd1-aba9-ee5e458027bf",
        "cursor": {
          "ref": "b9b0a89b-8807-4bf8-9f77-bd4aefecabc9",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6a975cbf-932a-43dd-b67d-2e2137cff969"
        },
        "item": {
          "id": "f5c1adf1-d8aa-4bd1-aba9-ee5e458027bf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a7015faa-7cba-43cb-a418-8b677554d118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31455278-2c70-46f7-bd75-f9fecb05ddf2",
        "cursor": {
          "ref": "5a71cff3-0575-4d60-8933-5b0c9d2c8e01",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "df0c7b1e-c453-495c-87ec-3f74910fe75b"
        },
        "item": {
          "id": "31455278-2c70-46f7-bd75-f9fecb05ddf2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ba8da226-40b3-4810-807e-0cd33b68ebae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e30c287-d441-48af-a11f-50d4d4d36904",
        "cursor": {
          "ref": "03b461ab-5a3c-402b-9cf5-04df6a2ddbfc",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "613d6a8b-1c06-4b83-8c84-099640672019"
        },
        "item": {
          "id": "5e30c287-d441-48af-a11f-50d4d4d36904",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "438f2b26-e35b-42eb-a17d-2d6db0062ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35952fde-fd34-4334-a644-f5793390354a",
        "cursor": {
          "ref": "ad726411-6135-4334-ac16-430a3f49a548",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "62e84ac6-5cc3-4f6f-bc0b-043a0f121fec"
        },
        "item": {
          "id": "35952fde-fd34-4334-a644-f5793390354a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d490d3eb-89dc-4c3e-a681-c23f46939e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d95d037-d960-49e5-ad8b-aed3c16282d9",
        "cursor": {
          "ref": "8b7dd9d2-b797-48f9-9245-566f9614a15b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bb0b7598-b3ce-4808-b2e1-287081d0dde4"
        },
        "item": {
          "id": "8d95d037-d960-49e5-ad8b-aed3c16282d9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "67d54a88-4cd8-4aa8-beb2-ddcc3b98a433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872f24f1-805e-4df0-b392-312b4d81eb3c",
        "cursor": {
          "ref": "0dba42f9-b3ff-4980-a6c9-47d7ff747cfc",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4dde5578-00d2-4f62-989a-b730787d4dfc"
        },
        "item": {
          "id": "872f24f1-805e-4df0-b392-312b4d81eb3c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5d7f3f56-483f-4b14-88b0-6563fc9b9997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d3105e-f7f2-4030-adf2-3f598a7d1416",
        "cursor": {
          "ref": "d71d9fa9-880c-4ab1-bba9-bdc9d7692a25",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5b08df7c-c3c5-4efa-80d0-4ced99ab5fc0"
        },
        "item": {
          "id": "75d3105e-f7f2-4030-adf2-3f598a7d1416",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d656979d-5317-44b5-b4b1-3ae2455d2af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212c3547-ab66-428c-bb93-3fc0c61f9daf",
        "cursor": {
          "ref": "8cc7e0da-b5c5-45be-aeeb-97f2add6d4bc",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f06259ac-c502-4bd0-9d2f-aae5d758314c"
        },
        "item": {
          "id": "212c3547-ab66-428c-bb93-3fc0c61f9daf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "25c88e69-b2b1-4fa5-9577-ecb569846fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d02944-fac0-4fa9-a69e-325ce0f18380",
        "cursor": {
          "ref": "9e8bebe8-da2a-4fed-820c-a1b247edcde1",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "08b4b9b9-8113-4763-a13a-1fc57f7922eb"
        },
        "item": {
          "id": "08d02944-fac0-4fa9-a69e-325ce0f18380",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8139c326-bb95-4851-8655-da76132f90f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bd244b-2b8c-48ef-8c37-17aaa7ebe518",
        "cursor": {
          "ref": "a466863b-6529-4078-bb95-254964fc9448",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5094c947-ff4a-4cd4-98ee-b9553c827ed3"
        },
        "item": {
          "id": "23bd244b-2b8c-48ef-8c37-17aaa7ebe518",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "832d86a5-78fc-4621-a5b1-be5b8da3ec30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229d0453-bcc6-4c1d-ab4e-103f7c9f892f",
        "cursor": {
          "ref": "8994f72d-19af-4784-afe6-ae6b769de8d6",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6bd26781-c041-44ea-9d6a-5c5a2ff8a66d"
        },
        "item": {
          "id": "229d0453-bcc6-4c1d-ab4e-103f7c9f892f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6ae01e19-3ed8-4f3a-94ac-ccf9c0a87df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa2be8e-ba63-485e-8651-f9a481e1e227",
        "cursor": {
          "ref": "6bedb0fd-38ed-4662-987a-bac74ac2efcb",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c34e7979-51d5-4b54-83ac-add9035161be"
        },
        "item": {
          "id": "faa2be8e-ba63-485e-8651-f9a481e1e227",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fad9e024-7e4d-4a34-b6e3-62f2beadaf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddf5cd2-9df0-4f09-b05d-ba5cc430a552",
        "cursor": {
          "ref": "5ba2d0ba-d0ad-4999-a574-5e391091841e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0ba95452-2139-4f3e-92c8-649fb0cc541c"
        },
        "item": {
          "id": "7ddf5cd2-9df0-4f09-b05d-ba5cc430a552",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4a2977b8-6c23-4ec0-8a03-bf3ec68e3282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8b337d-fa51-4774-8ddd-d7a42338c4ae",
        "cursor": {
          "ref": "207e88f4-2590-47f5-ba14-e56421072e1b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5d90a3b0-5fe4-44b6-b184-cf3c271a30a8"
        },
        "item": {
          "id": "ef8b337d-fa51-4774-8ddd-d7a42338c4ae",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2bbc842e-f1a5-46c5-a6a4-8456eb86004b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93eb9581-d9b3-406c-8d22-3b08b53fd809",
        "cursor": {
          "ref": "5313b4ac-b515-43a9-80dc-c0d4e0ae28aa",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "67aae4d7-188e-41f1-acb3-79161b4ee436"
        },
        "item": {
          "id": "93eb9581-d9b3-406c-8d22-3b08b53fd809",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "617ca82e-f4d2-4967-9c20-53e6d9b51767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9131eea-72cc-4f0d-80be-d7f88f8f449d",
        "cursor": {
          "ref": "f766ecc2-3d2f-474a-95bf-beaef44118f6",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "55eda8b4-e6a5-4c48-85cd-0609355ba584"
        },
        "item": {
          "id": "e9131eea-72cc-4f0d-80be-d7f88f8f449d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "61db7660-539c-46c8-8f61-a7182687c665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523521de-36f8-4c99-bb38-f1aa009cd553",
        "cursor": {
          "ref": "9d8dfcea-3cee-4363-adb7-edad3cd1a912",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2a8a8cc1-c876-41cb-93d8-4eb4f26dec4a"
        },
        "item": {
          "id": "523521de-36f8-4c99-bb38-f1aa009cd553",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5a33e4d3-6311-4ce7-8e36-d7200604aa62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab5d292-b335-4657-aa54-bce89b6c4a3f",
        "cursor": {
          "ref": "4c25fddb-a6b9-4468-a43b-efdf69c88469",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e098ab22-23b6-433c-9b50-4bd6c0a3a726"
        },
        "item": {
          "id": "8ab5d292-b335-4657-aa54-bce89b6c4a3f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a72c158d-b797-4467-978a-d302e37b8649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59a237d-c6be-428d-8532-7a956dad66d9",
        "cursor": {
          "ref": "aa5fc2d6-6f22-45e8-9b55-df6d4b5c2e97",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3a003384-1f53-4e10-a219-85decd52922e"
        },
        "item": {
          "id": "c59a237d-c6be-428d-8532-7a956dad66d9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ed660dcd-df51-4796-bafc-43c6dcd988bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ac048c-3ca7-40cf-b528-58d2d01c1013",
        "cursor": {
          "ref": "3236f0ac-6c38-495b-9940-52fbfe5c4095",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "da001b0f-787b-440d-b9dd-edcbd683a0c9"
        },
        "item": {
          "id": "88ac048c-3ca7-40cf-b528-58d2d01c1013",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8d7a0342-50ee-42ac-be7f-7839fdaeab97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a40ac9-a18c-4203-a724-5b89e540d912",
        "cursor": {
          "ref": "69c48ec4-c529-470d-9c60-d419f399554f",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9fa7737e-15bb-4d6f-82c5-1aec51332d3c"
        },
        "item": {
          "id": "61a40ac9-a18c-4203-a724-5b89e540d912",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cb1fa02b-d854-4060-9eab-2dd2482bca7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f2ca3f-b0ae-4694-859e-8712738f16e0",
        "cursor": {
          "ref": "a1642b2a-9ae0-448b-b5de-dda00b04944a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d9bd2ba2-cb9a-41dc-822f-cb0289a462c0"
        },
        "item": {
          "id": "88f2ca3f-b0ae-4694-859e-8712738f16e0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7c2889ff-58aa-42c3-aabd-dd0a1620eccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b892799-0d4d-4e02-9013-db4b3fc0b9ab",
        "cursor": {
          "ref": "dfb44db6-1d03-48e0-93c3-1856a9b5502f",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7abd3c4d-9567-499e-b459-bae491f24186"
        },
        "item": {
          "id": "4b892799-0d4d-4e02-9013-db4b3fc0b9ab",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6cc0077a-188f-42a0-af59-093aa38995bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9aa8c33-b8ee-4748-aec1-7b2fb56711f0",
        "cursor": {
          "ref": "d0b65591-b2ba-4be6-a189-82cd830b70ea",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "88e8521d-fef4-42da-aa17-779c8e5e37b4"
        },
        "item": {
          "id": "f9aa8c33-b8ee-4748-aec1-7b2fb56711f0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "187de3e5-1cbd-4fb2-b0f1-18e1f2b3903b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf74b75-11ee-4cc7-bf4d-1d9d34a0979d",
        "cursor": {
          "ref": "36ca5eac-3672-439e-9943-6a8a6a1dc13b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "661d2873-84a5-4134-9d3c-a00530368374"
        },
        "item": {
          "id": "fcf74b75-11ee-4cc7-bf4d-1d9d34a0979d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "df7e9730-434e-49da-aede-d481da2f7090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782c462f-ccf3-464e-91b3-7f24c173df50",
        "cursor": {
          "ref": "ad147bd9-4472-4a7a-9e63-1112f7307260",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4e007430-7cd1-4ed8-ad12-b151e17835e8"
        },
        "item": {
          "id": "782c462f-ccf3-464e-91b3-7f24c173df50",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c3680751-b37f-4c46-9773-47860dfd25ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09622c65-2fc0-49da-b20f-b7dc6f84ad36",
        "cursor": {
          "ref": "afc699e8-5393-43c4-ad77-1fd841721965",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6032084c-bddb-41ef-9d72-996f863964da"
        },
        "item": {
          "id": "09622c65-2fc0-49da-b20f-b7dc6f84ad36",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2981a884-613f-4af5-95aa-a5cd6f096c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569351e8-a417-473f-ba55-8e95af7a44fd",
        "cursor": {
          "ref": "a79b5da9-bdbc-4d05-9c95-e81e3ee2bb82",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3fc8f4cd-e026-4c25-8f1d-8370ff3a2540"
        },
        "item": {
          "id": "569351e8-a417-473f-ba55-8e95af7a44fd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "55a05714-c5db-41cb-9918-0f63f970929b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5626430d-b69b-46e1-ac25-70558cf3efbc",
        "cursor": {
          "ref": "4d773b39-b63d-45d6-b97f-6fd76e42d41e",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0ff280ea-9a2f-44dc-a997-71efeb154b00"
        },
        "item": {
          "id": "5626430d-b69b-46e1-ac25-70558cf3efbc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1a2ea1fd-9f5d-4b41-a6e6-22037b2edacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d95d52-4ba5-48f6-8413-4660ac3b236e",
        "cursor": {
          "ref": "aba89258-55d5-4281-a3c9-09c755ee7aed",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2fa87733-7bdf-43ec-8187-dfb84b407925"
        },
        "item": {
          "id": "91d95d52-4ba5-48f6-8413-4660ac3b236e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "33c59e6f-0368-4619-85c8-d50df60c50bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afac1e3c-ad62-4561-b65b-a2e9ccdf7b1c",
        "cursor": {
          "ref": "d6d69668-8fb2-4100-9ce6-fb161f0549c6",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "01fd5b57-83b9-4246-8926-cbe06be01c09"
        },
        "item": {
          "id": "afac1e3c-ad62-4561-b65b-a2e9ccdf7b1c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b0bafd93-dde3-4841-9450-fb46526b2a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a698e3-bea1-4740-8e8a-3153f8028ed2",
        "cursor": {
          "ref": "7fc7adf2-2aee-4b6d-ab44-7552da3cf2a2",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "56b77417-eaf3-4b7c-81f4-12c0f28e4bff"
        },
        "item": {
          "id": "48a698e3-bea1-4740-8e8a-3153f8028ed2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e485136e-cef2-440c-ad71-c3d6485760bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c15ffa-6968-4891-aa88-7d14fe6755fe",
        "cursor": {
          "ref": "ea7bb714-bbaf-4f05-8102-d065e4bd07de",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1992efed-5684-48c6-940e-4dc83342a5ae"
        },
        "item": {
          "id": "64c15ffa-6968-4891-aa88-7d14fe6755fe",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "afbd40eb-4c74-4e22-94c7-5f18584e9dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d36d57-6bae-4bf3-b655-9b2a4e4b4aed",
        "cursor": {
          "ref": "008d03d0-8645-4322-8346-19e5042d4577",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "021f5da4-ba01-4c5c-b6ac-b642d6346621"
        },
        "item": {
          "id": "22d36d57-6bae-4bf3-b655-9b2a4e4b4aed",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e4f70161-43b1-44b8-be80-b83c3fcd7aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77400da7-1cbb-4c4f-b01a-9cdfce57ab76",
        "cursor": {
          "ref": "533ca49d-38af-4a0e-a81d-63b1a511f068",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0a1295d9-09c5-4c96-bd21-8fcd468994e7"
        },
        "item": {
          "id": "77400da7-1cbb-4c4f-b01a-9cdfce57ab76",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "28620d79-157c-47ec-bec9-b9deabdb0bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41359373-2284-460c-bfaf-76f5f97ff5a2",
        "cursor": {
          "ref": "f99935c9-b366-4117-9d73-77c726bb4644",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d2137b63-ebd5-457a-a737-b7dcc8d917db"
        },
        "item": {
          "id": "41359373-2284-460c-bfaf-76f5f97ff5a2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1ce6c179-fa85-4642-b65d-6a9e66f532e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1c04a9-1d06-4d15-b452-9510e03df332",
        "cursor": {
          "ref": "6544180c-7a7d-412c-b83f-af5eee6654fa",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "98770f27-21be-432c-9050-85579c5ec404"
        },
        "item": {
          "id": "9d1c04a9-1d06-4d15-b452-9510e03df332",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8fee8ced-7b3d-4ac1-b556-3d7b07dd293e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b4e68d-6147-429a-8cf0-d73005841576",
        "cursor": {
          "ref": "da607a3f-5d43-4a55-8038-aa8b95b2073b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e40cf286-3dcf-4a0c-a7de-cb7eaf2a91bb"
        },
        "item": {
          "id": "c2b4e68d-6147-429a-8cf0-d73005841576",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3d4c88bc-2dcd-4483-95d4-f3385aa91d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c057bb-703b-444a-bb08-64638733f4ea",
        "cursor": {
          "ref": "5809c005-e0f3-46b1-a23b-b376e67b3be3",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "af9f932d-4dda-4915-83ca-7c08ff0995be"
        },
        "item": {
          "id": "45c057bb-703b-444a-bb08-64638733f4ea",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2476f157-07c7-474d-8a20-70b93614f419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45864146-8245-4cce-b606-bb1fc8cf8347",
        "cursor": {
          "ref": "3d91b2ce-4807-440d-9fba-90bcaf73f064",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "570e099f-5db7-42d3-a439-d6da9225ea20"
        },
        "item": {
          "id": "45864146-8245-4cce-b606-bb1fc8cf8347",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "27c24e1f-ce0b-4d13-8f2c-60b01cc5ab6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a7ebf8-8932-45df-910d-02b6d746ea6f",
        "cursor": {
          "ref": "aacbdc43-6eff-44d0-946c-b00d0a96fdd3",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1ba62cd9-3a9d-4e15-9d34-8a92c41ada3d"
        },
        "item": {
          "id": "f1a7ebf8-8932-45df-910d-02b6d746ea6f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "337f7d5e-4dcb-4568-adbb-c94ffb6cdd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e382be-bb5e-422d-9ddf-7116940c97ed",
        "cursor": {
          "ref": "fe89ebbd-945f-4983-83d2-c4a23bf37350",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ea92bfa2-710d-4077-bf5b-fedbdc63a849"
        },
        "item": {
          "id": "30e382be-bb5e-422d-9ddf-7116940c97ed",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "af15b2d0-dd40-40e0-aa12-db70c0bd1665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5309a6-daa4-45ca-bd0c-d3213d7ccb5f",
        "cursor": {
          "ref": "3b4cc1c7-484f-4741-b98f-5b2fbce4d7c1",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "66bb0259-90af-472a-b32d-7168fb2d1481"
        },
        "item": {
          "id": "9d5309a6-daa4-45ca-bd0c-d3213d7ccb5f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "694b5b70-e0df-4b49-bc95-42e9b57885ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364d9587-8fa0-4058-a9b0-ef488faad158",
        "cursor": {
          "ref": "15bf5195-41a5-4844-97b6-5d31a5b01b1d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "704c34c0-fbfc-483e-8bda-ccdef82e4635"
        },
        "item": {
          "id": "364d9587-8fa0-4058-a9b0-ef488faad158",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "165f2a51-2e0d-4a0c-af5d-e021150073af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17991db-250a-44bf-83b5-bd6e7f95528f",
        "cursor": {
          "ref": "63c556ea-10ca-4139-99d6-17df8965ae04",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "62dd0c43-33a4-468c-a2b2-f1cdaf7a6f96"
        },
        "item": {
          "id": "a17991db-250a-44bf-83b5-bd6e7f95528f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1c9986df-7824-48ac-9373-e51774e7aa35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8022e5ae-8b03-4568-9f1e-9ed74d17a877",
        "cursor": {
          "ref": "04d81f97-3531-46c5-9686-b05e01059d3a",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "68ea0a8d-3bad-4e24-96bc-efe57158ae67"
        },
        "item": {
          "id": "8022e5ae-8b03-4568-9f1e-9ed74d17a877",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f1af9563-870f-4b0f-9d17-d2c84ffdf60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3387f4fa-0110-4f51-b227-1f9a26815309",
        "cursor": {
          "ref": "5a7215b6-b407-4493-9103-6425215f9b63",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c493374f-5cf3-4546-9c07-a79bcbbbfc72"
        },
        "item": {
          "id": "3387f4fa-0110-4f51-b227-1f9a26815309",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b2e50852-e283-45ab-9288-bbd7d6c36125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8dce23-c585-4288-b6da-359e56f450de",
        "cursor": {
          "ref": "a8a0b6f1-6670-4163-9f0c-7b0c7b9d6abd",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "77bacfcd-65c9-463d-84a4-d6c144a13b67"
        },
        "item": {
          "id": "ba8dce23-c585-4288-b6da-359e56f450de",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "620e646a-e721-4345-92ea-84e2388a6f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55eb993d-f492-4898-8d53-3a777bbc20fc",
        "cursor": {
          "ref": "c946ed54-022d-4cdf-8802-fc84ff73ef80",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "55a4ad4c-fa83-4cdc-9c3f-366c36f1d9d4"
        },
        "item": {
          "id": "55eb993d-f492-4898-8d53-3a777bbc20fc",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3f8b1fe7-882a-44fd-aba8-0492cf5fb1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1bb8ce-b4fa-453a-929e-02e33715c209",
        "cursor": {
          "ref": "6b249a65-688c-4855-b949-de51db755267",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c6061fe1-b472-48eb-ba8c-071e2a71c2f7"
        },
        "item": {
          "id": "3e1bb8ce-b4fa-453a-929e-02e33715c209",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "005639ee-16af-4c6f-b1c0-3816fa23ae59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36908e9-494d-4f02-b8f4-efcf5f1620bd",
        "cursor": {
          "ref": "157dbcf1-d3d4-4305-a573-e2c55573956e",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2a42922a-f6e5-415e-97ca-9c0c90857b14"
        },
        "item": {
          "id": "e36908e9-494d-4f02-b8f4-efcf5f1620bd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "75c41b7f-4ad3-4930-8b9d-ddabc7c517b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44dce811-4fe1-48b7-b7f6-b8a8e6dd9c28",
        "cursor": {
          "ref": "586f3ad6-83f4-43b6-b20a-dd65ac351623",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a835f30e-9fc5-4ed5-a636-4c417a2ed853"
        },
        "item": {
          "id": "44dce811-4fe1-48b7-b7f6-b8a8e6dd9c28",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ff2d7174-69fa-415f-87de-fb06b025a3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ece0e4-1472-43d9-956a-c7b3822f3492",
        "cursor": {
          "ref": "d1127eec-6d7e-4085-b297-9835b42989bf",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "67c63b02-bafd-42dd-a2aa-56624a038fbe"
        },
        "item": {
          "id": "c1ece0e4-1472-43d9-956a-c7b3822f3492",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d2f1059d-211b-4ab8-a15c-9112db4441b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46725a38-ce58-4532-a1af-0fa6c155677e",
        "cursor": {
          "ref": "d63d9838-7a5f-4af9-8fdf-5a3ac9a11fef",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b2e83a9e-d852-4e36-b2f7-ee00758f344e"
        },
        "item": {
          "id": "46725a38-ce58-4532-a1af-0fa6c155677e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "803513db-fe69-45c7-a213-69d424906074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fded8e28-b2a1-41bb-b747-673554f7a628",
        "cursor": {
          "ref": "993dd0b4-3514-42f8-a529-00bb52469cfa",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1c8b7a01-36e3-4593-b228-b80adb9e0f2e"
        },
        "item": {
          "id": "fded8e28-b2a1-41bb-b747-673554f7a628",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "98f2cb95-06ff-4d2a-ae65-ad815ac5baa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ebe02d-d777-48e8-85a8-4e3e2e80638a",
        "cursor": {
          "ref": "639955d1-cf1d-4552-aeb9-528cec431c60",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "02fdfbfe-2e36-427b-9aa2-021c36ad77fb"
        },
        "item": {
          "id": "41ebe02d-d777-48e8-85a8-4e3e2e80638a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a104f411-984c-471a-b2bc-da0d7e5ca0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7c5083-8861-48f9-a89a-8b1e0707d306",
        "cursor": {
          "ref": "d5c5c597-833e-4614-93d6-9fbd6a9982df",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0f358162-854e-4787-9b36-a78a6fe8ed2b"
        },
        "item": {
          "id": "4f7c5083-8861-48f9-a89a-8b1e0707d306",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c600824c-277e-454e-b14e-7578b15532bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c536c1-2ef3-429b-a01e-ee98a2a146c9",
        "cursor": {
          "ref": "76dc7ed8-9a3a-4ef7-9bd9-6f9fd288065d",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "15f9c73a-077d-4cbb-b923-9bc2c7697394"
        },
        "item": {
          "id": "52c536c1-2ef3-429b-a01e-ee98a2a146c9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b0d01ead-c523-4487-bad0-e52ff1304407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5aa0084-52a2-4442-bb1b-0f41203b257e",
        "cursor": {
          "ref": "3eef96d2-9695-4b8f-b7b7-7530b6a64cf9",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b05253b4-4e67-4c78-90a4-f94a2a0c688f"
        },
        "item": {
          "id": "d5aa0084-52a2-4442-bb1b-0f41203b257e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "262a0c4c-fb2f-42bd-8823-78a30e0efc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82878fe9-6ae0-4d80-86db-f416c5079736",
        "cursor": {
          "ref": "20932311-1795-46ba-92e2-3df2d0381877",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3d260aab-1749-4c8d-a564-40109a37dff9"
        },
        "item": {
          "id": "82878fe9-6ae0-4d80-86db-f416c5079736",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "af1514df-2c41-4d76-b99d-97c5eab0da59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b000607d-59e1-4ce5-8787-182e985d82b7",
        "cursor": {
          "ref": "f8a51402-77f7-4487-9f42-783e1ba4c2c3",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "07738057-b3d8-4d0a-827c-c3621a05d1c9"
        },
        "item": {
          "id": "b000607d-59e1-4ce5-8787-182e985d82b7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a2b6368c-5f2e-40de-aab7-5ede802f9911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aeabf45-e978-4f8e-91b4-54d0cf0f2117",
        "cursor": {
          "ref": "0ddc6b08-35d7-4c60-81da-1816953223e0",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9ce3948d-2c1b-4beb-be58-7943a96ad42c"
        },
        "item": {
          "id": "7aeabf45-e978-4f8e-91b4-54d0cf0f2117",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c29be3c1-2773-4b4a-9205-52b45edfd8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9b3629-348c-4249-8cd9-128527921587",
        "cursor": {
          "ref": "dd318f5e-c090-4454-ae20-4c54890beb45",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b303fe17-e2cc-4571-9b61-b427472a3048"
        },
        "item": {
          "id": "9b9b3629-348c-4249-8cd9-128527921587",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "191baca1-aa46-402a-89af-d03178019ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a09508-fd59-4e30-85c0-1f9347e6d6c7",
        "cursor": {
          "ref": "02047c99-9876-4e0d-8455-399905043e2d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a9aef42c-b4fe-4d97-a596-df1afb045c16"
        },
        "item": {
          "id": "c8a09508-fd59-4e30-85c0-1f9347e6d6c7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "de9444be-06ce-4a37-8d39-af317a7e347d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb269462-e94c-4491-8ef5-3916d76a441b",
        "cursor": {
          "ref": "df22b38b-007e-4bf8-90e6-fcb444dc4a2f",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b9ceb065-2a85-49b3-a6c9-2a845b09d4e6"
        },
        "item": {
          "id": "cb269462-e94c-4491-8ef5-3916d76a441b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "27aed222-10a2-4ee9-b074-24e8e021ff88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1d0057-cccc-4ee3-a977-157877efc9d7",
        "cursor": {
          "ref": "38492c97-714e-475f-bfe9-32359e1fcb3d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3a821710-2b45-422e-9f07-ade58dcf964e"
        },
        "item": {
          "id": "cc1d0057-cccc-4ee3-a977-157877efc9d7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7f906aec-7ca3-4813-96f5-7428be93d1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5c7068-bf15-4490-bbaf-f5a433aa3297",
        "cursor": {
          "ref": "d0a07adf-33ad-46c9-a86c-c1367353313a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f96241b0-00b4-43ae-91ed-a1d182d7c46c"
        },
        "item": {
          "id": "5f5c7068-bf15-4490-bbaf-f5a433aa3297",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "71c5d1d2-4d4e-4252-8bd8-51bed8feb20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e94b9d2-64c3-4565-82c4-0d81868e1b22",
        "cursor": {
          "ref": "659b0109-873b-4840-8f87-70d447ef9cbb",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7e40ec4e-f8f2-4352-9b74-d888356d5cdd"
        },
        "item": {
          "id": "1e94b9d2-64c3-4565-82c4-0d81868e1b22",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "992e2e5f-05e9-44ad-afca-ef36fa7934cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab144038-55c5-40fb-be08-5c4c77269754",
        "cursor": {
          "ref": "c97d05de-ae10-4485-ac74-d132423e7258",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "00404300-c1da-40e5-ac75-675e6a97dd1b"
        },
        "item": {
          "id": "ab144038-55c5-40fb-be08-5c4c77269754",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "64cd4fcd-e6c3-4fbd-81fc-a246f8e06375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61cde48-65f7-42f7-89d8-53c734dfe965",
        "cursor": {
          "ref": "d9be1c2e-2479-45b2-b298-c7967724f9a8",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dcbebff6-4406-4db9-8704-d1468cadec7b"
        },
        "item": {
          "id": "c61cde48-65f7-42f7-89d8-53c734dfe965",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "37d85c64-875b-4ae3-a399-6f215a0867e6",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "487d4963-8f7d-4378-9efb-d2fe8995a992",
        "cursor": {
          "ref": "f8669d57-bcc5-42d1-830a-67882c276d13",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "66a7cd28-d9dd-4c47-99ad-1d9537838ce1"
        },
        "item": {
          "id": "487d4963-8f7d-4378-9efb-d2fe8995a992",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4c11e613-50e1-4f7c-9b99-aebf6d7bce9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ad8590-984d-4c34-b1b8-54cd7c26735e",
        "cursor": {
          "ref": "8dc7b79e-47c7-4042-a899-2993859cb92a",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a6298e09-01ad-4711-b353-92ec7eee0f9e"
        },
        "item": {
          "id": "68ad8590-984d-4c34-b1b8-54cd7c26735e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9764124e-8d52-4ce1-994a-6abf613244f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f2ff62-4ca7-4e3a-9a4e-1beea964cc26",
        "cursor": {
          "ref": "7457ce02-d981-46d8-b3a5-a54be9c9c4bd",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c049531b-763f-464c-82b7-229f9fc5d0a4"
        },
        "item": {
          "id": "74f2ff62-4ca7-4e3a-9a4e-1beea964cc26",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b2dc8a82-4846-448a-a790-044d2a489e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6181ab1d-93e3-4053-8375-a65473e82fb5",
        "cursor": {
          "ref": "7a7bf049-a068-4a87-b4df-3badd0bece27",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f404feea-3656-4d8b-b303-14d32be5c9eb"
        },
        "item": {
          "id": "6181ab1d-93e3-4053-8375-a65473e82fb5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cf7222ae-7966-4c12-8dac-cc2c2ea98643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7755b5-9571-42a0-8cdc-0c6dacc49f10",
        "cursor": {
          "ref": "30aeb4b8-03d3-4c14-a465-98a14c973c43",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "00335cca-abd1-4d77-8159-9d6c20d0bfe2"
        },
        "item": {
          "id": "bb7755b5-9571-42a0-8cdc-0c6dacc49f10",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fdc2b7c5-1419-493f-b229-a9d2583cc5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbcd0ab-32bd-4a61-a4ff-590637165658",
        "cursor": {
          "ref": "20d855a5-6792-4cd7-b330-1bed7801a90a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "eef0069c-d688-409d-9421-6ce387f7d6ee"
        },
        "item": {
          "id": "6bbcd0ab-32bd-4a61-a4ff-590637165658",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9833980f-c3a3-4a6a-87bf-a75a327f70f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a82b631-a9a9-4029-b45a-6ed6d6104276",
        "cursor": {
          "ref": "2d72315d-f71b-4f81-af21-399c08312707",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e90e9031-8b3a-44cf-9e16-4fe4bea1a84f"
        },
        "item": {
          "id": "2a82b631-a9a9-4029-b45a-6ed6d6104276",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e8ee8e35-65d7-4046-ae6b-9f4e37fa8abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2584b011-908e-47b4-a1ad-65567fd46c33",
        "cursor": {
          "ref": "b1f9c0f5-d178-4771-ab21-88fc56e2a656",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9fc53571-e917-436a-826d-87813698afa3"
        },
        "item": {
          "id": "2584b011-908e-47b4-a1ad-65567fd46c33",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2550aa64-095d-4897-b21b-d972d3645454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12dd05e-c797-482f-9fce-181b774d2310",
        "cursor": {
          "ref": "2cacd01e-eba7-4259-a3b1-76c1dd680f72",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d7282c2c-4d31-4b84-9565-165130581744"
        },
        "item": {
          "id": "d12dd05e-c797-482f-9fce-181b774d2310",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1dfc02cc-6399-47e3-99be-15b8c57e6c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938f6aca-a034-4943-af2a-44d93be6f3fa",
        "cursor": {
          "ref": "e939a480-4e84-4384-865d-43420362b74e",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ff8d4bc4-6a52-41a0-8d8a-ac9581e4054b"
        },
        "item": {
          "id": "938f6aca-a034-4943-af2a-44d93be6f3fa",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "74285a93-6037-47d1-8e07-2fc6649b2b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a1a276-8a91-4aa0-b0e4-605e11e5631f",
        "cursor": {
          "ref": "f9fc55f8-58c9-4b0b-b769-e9871b207626",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "550d81c4-55c2-4401-90b8-de24d707895e"
        },
        "item": {
          "id": "89a1a276-8a91-4aa0-b0e4-605e11e5631f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "27637f71-789e-4244-a735-22bf8dc59d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99b803d-1ee0-41bc-907b-66480f849bae",
        "cursor": {
          "ref": "bc7773e8-0d64-4ea6-9b2c-e4f365b377a5",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b8770284-bb76-445d-ad4e-2ef1c88b6dfc"
        },
        "item": {
          "id": "b99b803d-1ee0-41bc-907b-66480f849bae",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3b56603f-b482-4ee8-90e9-b70d0b1e8bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bcdabf-ce5e-4d18-b16e-8126fd07e5b4",
        "cursor": {
          "ref": "e81551ec-96bb-43d0-b0d0-df8d640e7bc1",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4d69c593-7940-43b1-9d20-4121e45fba2a"
        },
        "item": {
          "id": "e9bcdabf-ce5e-4d18-b16e-8126fd07e5b4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "926c1f9a-987f-44ee-98ef-81838b66680e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b0a6c5-45ff-42f1-9f98-65138688a7f8",
        "cursor": {
          "ref": "7a40d97e-a401-4826-b7a7-b22cf3b13d0a",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b6afc8c9-148e-4330-9c5b-4f35f8a5239d"
        },
        "item": {
          "id": "e8b0a6c5-45ff-42f1-9f98-65138688a7f8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3cacd306-156b-4f4b-89b3-87094121253b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88975d7a-ef0f-4ff8-9280-33f35e94f6b2",
        "cursor": {
          "ref": "9ee66f02-73ed-4255-b564-d87ace23d5b3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ef2ea6c9-63d0-4529-adc4-e51678e7e888"
        },
        "item": {
          "id": "88975d7a-ef0f-4ff8-9280-33f35e94f6b2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "892e08d2-4ce4-4f49-85e2-4b9daa42e724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab81dc68-d053-4cf4-b51c-c3bf9aa5c91c",
        "cursor": {
          "ref": "c310d408-0094-42e4-a80b-cd9977fbad93",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "40567967-1772-492e-bae5-be675748e77c"
        },
        "item": {
          "id": "ab81dc68-d053-4cf4-b51c-c3bf9aa5c91c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "346bdf66-72b5-499e-9874-2aec903505f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc7864d-ebd5-4c3f-8ecf-f19ff56e6196",
        "cursor": {
          "ref": "e2cd2765-7866-4baf-9915-23145cb0263a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "17da2c32-e36f-4fbe-8b22-f142ba561df5"
        },
        "item": {
          "id": "1fc7864d-ebd5-4c3f-8ecf-f19ff56e6196",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ecc8acbd-288c-4a41-9cdd-ac85b84168ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099558f4-f352-4509-b859-2d2cf512d3f2",
        "cursor": {
          "ref": "1f60ff56-fa3a-4874-940d-9d5df5e9fe85",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cf2f2a34-eeea-4bf7-ab63-f9af42b0f6cf"
        },
        "item": {
          "id": "099558f4-f352-4509-b859-2d2cf512d3f2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7f2f6030-4eda-45f2-973b-4bb885a2aef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da83346-3800-42e1-b16c-e40d4217d2b5",
        "cursor": {
          "ref": "0ff1eac2-8270-4bbc-bfba-6104ee88d7ee",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bc9e3d6f-8903-43df-aef8-14b36ebf928b"
        },
        "item": {
          "id": "3da83346-3800-42e1-b16c-e40d4217d2b5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "317583f7-56ff-4583-8c69-6e3414bb26ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3c97d9-89e6-4162-9fd4-c1946a747722",
        "cursor": {
          "ref": "3059f165-5c9b-45e7-8387-5fc246ccf6a7",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3a2a0f4f-692d-41a6-b81d-630ed80b5184"
        },
        "item": {
          "id": "4a3c97d9-89e6-4162-9fd4-c1946a747722",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "19a4fb10-c993-4b23-914d-f2af5ab01b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e1f392-75d3-45a6-a165-25500a576212",
        "cursor": {
          "ref": "ab7d599c-5714-470c-8666-66b0c8dc9184",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c0351914-afcd-4374-a91c-8ebb698aecb4"
        },
        "item": {
          "id": "27e1f392-75d3-45a6-a165-25500a576212",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "99df1a76-6ed5-4348-b92d-c5454028ff17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fad9613-e22a-43b2-93da-92e97b3bc4a0",
        "cursor": {
          "ref": "dc1892f9-a9e0-4e6d-b511-82049f4182ca",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "83e99fa5-4537-4246-8835-5eb6820f778f"
        },
        "item": {
          "id": "2fad9613-e22a-43b2-93da-92e97b3bc4a0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "12d240b0-67b5-4bb7-a844-bc9ee064516e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6c6b36-e835-4721-be18-d1b7cb46e87b",
        "cursor": {
          "ref": "3a9e74fa-7099-434c-897f-c66ec5a04645",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "dd0c6e6d-f780-4e83-975c-440f4b35aa10"
        },
        "item": {
          "id": "2c6c6b36-e835-4721-be18-d1b7cb46e87b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "80a574c5-ba3f-46ed-a190-75134d50c31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022a123c-8a8c-4cf6-85c1-799529f22f3e",
        "cursor": {
          "ref": "fcc177f3-fda2-49cd-9ca9-e00507edb5d7",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "70121c5f-4b2e-4f6a-9563-cab4b69f7609"
        },
        "item": {
          "id": "022a123c-8a8c-4cf6-85c1-799529f22f3e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fa0244b2-44fa-4cce-9fbf-5f5e19645328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704e08c9-e0e7-43db-a971-9a84f76c5fc2",
        "cursor": {
          "ref": "e8cfd4ff-1d09-4333-8aec-a7126280eafd",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1385b756-4674-475e-a36b-e4e1aa207fc8"
        },
        "item": {
          "id": "704e08c9-e0e7-43db-a971-9a84f76c5fc2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "623bf88c-f642-4d37-af69-2fbbd526ccb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d98f735-3165-42ae-945d-8739aafec5e1",
        "cursor": {
          "ref": "7fd1e853-9a23-4f56-953c-d1a3673892e9",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "41e1fd98-12f7-4e38-9d80-a3d2f26d060a"
        },
        "item": {
          "id": "3d98f735-3165-42ae-945d-8739aafec5e1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bfe2cb48-e0eb-467b-a240-4bc13e403069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ba7493-6c62-4120-8494-473a4bb6f895",
        "cursor": {
          "ref": "8551d9c3-311d-4ca3-b0c7-a1bdaa75ce6d",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "57c7f01a-38ff-4c41-8a27-667ea696461a"
        },
        "item": {
          "id": "10ba7493-6c62-4120-8494-473a4bb6f895",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dd2bd203-4641-40fa-b748-bd4f19bfa204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24789906-045b-4f0c-a8bf-db87aeaba665",
        "cursor": {
          "ref": "0a585b47-a8d4-43ac-9bac-8b1032783884",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "46687ba5-a3f1-4972-9ae2-3da0433e021e"
        },
        "item": {
          "id": "24789906-045b-4f0c-a8bf-db87aeaba665",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "16f4eaea-d0ac-4772-bca0-edc1a9cc4d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129ef378-be86-445d-844e-f1c2ff78d6ca",
        "cursor": {
          "ref": "90294846-4c61-40f6-a213-f9b42272e6b5",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "028ac30c-0f26-426c-b218-1f26e987b82e"
        },
        "item": {
          "id": "129ef378-be86-445d-844e-f1c2ff78d6ca",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cef352cb-17bc-45ce-a26a-9fb2fb91ce1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2858da-a986-46e2-9dfa-f21832528329",
        "cursor": {
          "ref": "fb7b6f3a-921f-4f7b-a655-4a86e471eb13",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "045ee306-1bac-4aa7-a9e5-b48a7afd250a"
        },
        "item": {
          "id": "cd2858da-a986-46e2-9dfa-f21832528329",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "aed8a88f-60da-4d0a-8781-c0cb9856d1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78cb522-cba8-4928-9682-a1bcad128b3d",
        "cursor": {
          "ref": "4524849c-b893-4f2d-8859-6c99079da869",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4c14f7af-b108-42f1-b2ba-bccbfc744615"
        },
        "item": {
          "id": "b78cb522-cba8-4928-9682-a1bcad128b3d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "aae30235-0ac0-4513-b719-6c2215bdb246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca4a7e7-955f-4585-835d-8ac7731b9060",
        "cursor": {
          "ref": "2f81b5c9-e259-44d0-a9bb-8482c5775c73",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "eaee098c-cf2a-428f-aea1-dded386ba803"
        },
        "item": {
          "id": "0ca4a7e7-955f-4585-835d-8ac7731b9060",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f8c5cc8b-d19b-45b1-92ed-b686db274286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cbc7a6-b1fc-4aa9-9079-3cfce82506ca",
        "cursor": {
          "ref": "53140280-f5ba-4c51-b5ab-22fae1bc824f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6fcdb0e0-28b3-44c6-b34c-a080abb58466"
        },
        "item": {
          "id": "f0cbc7a6-b1fc-4aa9-9079-3cfce82506ca",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "36c6ebc7-e77b-4abd-b00a-a73ec0518c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a88907-e3d9-4b62-a4d5-36deead98569",
        "cursor": {
          "ref": "1aa0baa9-8b48-4907-8bbf-e484fdebb1f4",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ceca4dca-f5c4-42e0-8fab-399ab8b08423"
        },
        "item": {
          "id": "e1a88907-e3d9-4b62-a4d5-36deead98569",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "78d00d69-4835-49e4-8de5-d79db766e953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e72428-917d-4ff9-a56c-9eebb6ed4aa5",
        "cursor": {
          "ref": "58691409-104c-4ce7-975c-7a585b15c800",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "469ff9ba-3b39-497a-a4ae-5562d262e9ea"
        },
        "item": {
          "id": "e3e72428-917d-4ff9-a56c-9eebb6ed4aa5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7b498eb2-2c14-4a32-b9ba-921bc6d14f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b34758-a0a3-4b0e-b5fd-af99577a98de",
        "cursor": {
          "ref": "fb6106fb-d214-43cc-8ba6-0185943ef23f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "285a71e5-1c6c-4cae-9089-11a49e139dd0"
        },
        "item": {
          "id": "86b34758-a0a3-4b0e-b5fd-af99577a98de",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4f692b45-f99d-4ae8-8570-65b391725a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b180acb-ffe7-4109-961a-2b4dca05877e",
        "cursor": {
          "ref": "e868c245-dfe0-42b2-8626-7593049426f4",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e4736c70-659c-4816-8591-735c007041a0"
        },
        "item": {
          "id": "5b180acb-ffe7-4109-961a-2b4dca05877e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "475518a8-d564-478f-8ceb-13413c3f87f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a301715-8fb0-44e5-90ea-b70b0fded20b",
        "cursor": {
          "ref": "1d2924e1-d8b0-4a62-98a1-e0f5b5cea8ab",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "89aee407-66ca-4a8c-884e-c4ffc3a3d813"
        },
        "item": {
          "id": "8a301715-8fb0-44e5-90ea-b70b0fded20b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "46ef0db2-ace6-4742-b2e1-e08b22d8b427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcbaff5-5962-46ee-90a0-264037350436",
        "cursor": {
          "ref": "8b8b3e2d-ac2b-44ff-9a9d-0219d57e752d",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3b3c5cc9-2cdc-42c7-9f8c-98df6f45484b"
        },
        "item": {
          "id": "2dcbaff5-5962-46ee-90a0-264037350436",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1df62942-38fc-4d27-81dc-10248d3ed992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a54f861-eb11-4d5b-bad3-97030e2717e2",
        "cursor": {
          "ref": "ec4f1f14-4f47-43fb-a233-27ddd7c2bacd",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "eac53d58-2953-4e25-8402-36ebf571049e"
        },
        "item": {
          "id": "6a54f861-eb11-4d5b-bad3-97030e2717e2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f81d2f72-0475-49cf-9041-2f9e63082d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6108c0-940e-4158-bbec-5921fe567435",
        "cursor": {
          "ref": "4fd44e81-958a-4293-8d2f-31c62ca09522",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d1ed8b10-40bd-4909-9c8e-9f2311f46847"
        },
        "item": {
          "id": "4e6108c0-940e-4158-bbec-5921fe567435",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5a81159a-4280-4ee7-835f-de69cce340e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cc9b14-3519-44d5-aeec-50c82176daad",
        "cursor": {
          "ref": "a9844ed4-e6e5-4677-86b4-d7a31ee8e8fd",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "be0c54e9-fe7d-426f-8078-eee3f276dd9d"
        },
        "item": {
          "id": "20cc9b14-3519-44d5-aeec-50c82176daad",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a0eab82a-2e7b-4169-923e-780b9e2ab4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e08952-eed1-4389-81a5-ae925733944a",
        "cursor": {
          "ref": "cb56f24b-4a18-46d5-b6cf-206bfa749296",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8629d31e-8106-42db-99d1-a8e93539529f"
        },
        "item": {
          "id": "03e08952-eed1-4389-81a5-ae925733944a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "59c35732-d8b7-4959-b939-a308b342de60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39eedac6-b31f-4e21-8d99-4cd33ce77f64",
        "cursor": {
          "ref": "b2e9c4bc-fd86-4e9c-a73b-2f1068bdf203",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e334e02f-c40f-400f-845d-99b06689e6a8"
        },
        "item": {
          "id": "39eedac6-b31f-4e21-8d99-4cd33ce77f64",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e293318c-a65f-412c-936e-9f92d9412e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8829b2-215b-49de-81eb-34f92aa447a0",
        "cursor": {
          "ref": "c5c528da-a55d-456b-b7e9-ff752f4fdb57",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "93839a4e-0e12-47ae-a746-7baaea7b244b"
        },
        "item": {
          "id": "4e8829b2-215b-49de-81eb-34f92aa447a0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2323f0f1-5f46-44f6-bff7-662f490dc3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8741fdec-b3d0-4757-94b1-88f36776f80c",
        "cursor": {
          "ref": "6fd486fa-d485-48a7-b856-bd22beeebbe8",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "aaf6b1bf-fae7-4d78-bceb-a81b3a4470c6"
        },
        "item": {
          "id": "8741fdec-b3d0-4757-94b1-88f36776f80c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e56675af-a14c-4f8a-a2c0-467a0d400cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac23643-b0bb-4894-a0ad-696b2fb18cbf",
        "cursor": {
          "ref": "320130ae-b92d-45c4-ac28-26ddca43e8b8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "710f9592-6018-46e8-9542-463d07e9c011"
        },
        "item": {
          "id": "aac23643-b0bb-4894-a0ad-696b2fb18cbf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1dc76a28-ebd8-4ae9-a4da-07b8816a844d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0c1119-24c2-4db1-bedf-433a7837efa7",
        "cursor": {
          "ref": "30f7f858-6e5e-4631-afe1-ce534caa07a9",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4c8c0a8f-3f01-4a3b-b38c-8b8839505630"
        },
        "item": {
          "id": "0b0c1119-24c2-4db1-bedf-433a7837efa7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e99f7be0-5098-463c-8af6-1101f25ce920",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4f729f-1993-4534-87bc-74ce88fb1c3f",
        "cursor": {
          "ref": "e148b7cb-4439-4785-9d81-9299b8d69ea6",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4dc9c60e-93a8-42ae-9f01-7b3862533aa9"
        },
        "item": {
          "id": "bd4f729f-1993-4534-87bc-74ce88fb1c3f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6ca2864f-e18d-4f11-9d9e-7b3bf34367e4",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c847a180-f7c7-48a1-ad9a-d65971422d2d",
        "cursor": {
          "ref": "3af327d0-f71c-4e32-bf8b-36447bd50e0b",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "dec62b94-c458-452b-9dea-753d935b6c10"
        },
        "item": {
          "id": "c847a180-f7c7-48a1-ad9a-d65971422d2d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cbeba1ea-cf38-4c44-937a-405a5fdf55ae",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e89091-4654-41e4-8a27-2586560a8141",
        "cursor": {
          "ref": "a62b6216-fe18-4f97-9f86-f074a963f26d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9c4451d4-8c75-4c9c-9933-e91d119f68f7"
        },
        "item": {
          "id": "05e89091-4654-41e4-8a27-2586560a8141",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75f4d6c1-7c1d-45af-9cf8-0e2eee1c5ba0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e89091-4654-41e4-8a27-2586560a8141",
        "cursor": {
          "ref": "a62b6216-fe18-4f97-9f86-f074a963f26d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9c4451d4-8c75-4c9c-9933-e91d119f68f7"
        },
        "item": {
          "id": "05e89091-4654-41e4-8a27-2586560a8141",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75f4d6c1-7c1d-45af-9cf8-0e2eee1c5ba0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145bdc05-d72a-40a8-bda3-10732e544e50",
        "cursor": {
          "ref": "588cb2f7-7493-4a75-8b3a-0fa2faaf2a97",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8baacb8f-952e-4a3d-940e-a383aeb4144c"
        },
        "item": {
          "id": "145bdc05-d72a-40a8-bda3-10732e544e50",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a6e1d312-67db-4031-bea1-29a6669725f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5119dd55-6559-4e95-9533-038b6a8172e9",
        "cursor": {
          "ref": "404ebd7e-359a-40f9-bcc9-a48037d4588d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "c8c6c9a9-597a-48c0-a9fc-8844cc2c8fce"
        },
        "item": {
          "id": "5119dd55-6559-4e95-9533-038b6a8172e9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e2c3edee-a4ff-4163-b01f-5a5c3bf3e7ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}